


IDENTIFICATION DIVISION.

PROGRAM-ID.   US.































































































































































































































































































































































































































































































































































































































































ENVIRONMENT DIVISION.


CONFIGURATION SECTION.

SOURCE-COMPUTER. IBM-4300.
OBJECT-COMPUTER. IBM-4300.


DATA DIVISION.


WORKING-STORAGE SECTION.

01  WS-TIMESTAMP.
05 WS-CURRENT-TIMESTAMP       PIC X(26).
05 WS-TIMESTAMP-GMT           PIC X(26).
05 WS-GMT-HOURS               PIC S999       COMP-3.
05 WS-TIMESTAMP-NP            PIC X(26).

05 WS-TS-WORK.
10 WS-TS-DATE.
15 WS-TS-CEN                  PIC  9(02).
15 WS-TS-YEAR                 PIC  9(02).
15                            PIC  X(01) VALUE '-'.
15 WS-TS-MON                  PIC  9(02).
15                            PIC  X(01) VALUE '-'.
15 WS-TS-DAY                  PIC  9(02).
10                               PIC  X(01) VALUE '-'.
10 WS-TS-TIME.
15 WS-TS-HOUR                 PIC  9(02).
15                            PIC  X(01) VALUE '.'.
15 WS-TS-MIN                  PIC  9(02).
15                            PIC  X(01) VALUE '.'.
15 WS-TS-SEC                  PIC  9(02).
05 WS-TS-DATE-IN               PIC  9(04).
05 WS-TS-TIME-IN               PIC  9(06).

01  WS-PRD-ALLOW                PIC S9(05)V99  VALUE ZEROS.
01  WS-PRD-CUR-DAY              PIC S9(05)V99  VALUE ZEROS.
01  WS-CASH-GALLONS             PIC S9(5)V99         VALUE +0.
01  WS-PRC-POS-VARIANCE         PIC S9V9(5) COMP-3 VALUE +0.
01  WS-DUP-COUNTER-MAX          PIC S9(05) COMP-3 VALUE 10000.
01  WS-NUM-7                    PIC  9(07) VALUE ZEROES.
01  WS-NUM-9                    PIC  9(09) VALUE ZEROES.
01  WS-NUM-15                   PIC  9(15) VALUE ZEROES.






EXEC SQL INCLUDE SQLCA    END-EXEC.
COPY DDRVRGRP.
COPY DCUSDRVR.
COPY DMCAUTH.
COPY DCLUSKEY.
COPY ONLNDFC.
COPY DSBPRDXL.
COPY DSBPRDDS.
COPY DCRDTYUP.

COPY TSXCW280.

COPY DHIERACH.

COPY DHINODE.

COPY DUNITNOD.

COPY DHDRVNOD.

COPY DHDRV.

COPY DPRPPAUT.

COPY DPFIDCSX.

COPY DPFIDMNT.

COPY DNETPHDR.


COPY DNETPRC1.

COPY DXTNHIST.

COPY DRFIDXRF.

COPY DCRDTKNX.

COPY DCURRR.

COPY DCUSUNT.

COPY DCUUGRP.

COPY SPRDLMTN.

COPY CXXCW0TE.

COPY DTAXEXEA IN CPYREL.


EXEC SQL DECLARE CUR_HIER_DRV_NODE CURSOR FOR
SELECT  NODE_ID,
DRV_GRP_ID
FROM  DBO.HIER_DRV_GRP_NODE
WHERE HIER_ID         = :DHDRVNOD.HIER-ID  AND
NODE_ID         = :DHDRVNOD.NODE-ID
FOR READ ONLY WITH UR
END-EXEC.

EXEC SQL DECLARE CUR_HIER_DRV CURSOR FOR
SELECT  B.DRV_ID,
B.DRV_GRP_ID,
B.DRV_LST_NM,
B.DRV_FST_NM,
B.DRV_LIC_NBR,
B.DRV_LIC_ST
FROM  DBO.HIER_DRV_GRP_NODE  A,
DBO.HIER_DRV_GRP_DRV   B
WHERE A.HIER_ID         = :DHDRVNOD.HIER-ID  AND
A.NODE_ID         = :DHDRVNOD.NODE-ID  AND
B.DRV_ID          = :DHDRV.DRV-ID      AND
A.HIER_ID         = B.HIER_ID          AND
A.DRV_GRP_ID      = B.DRV_GRP_ID
FOR READ ONLY WITH UR
END-EXEC.

EXEC SQL DECLARE CUR_PRE_AUTH CURSOR FOR
SELECT  PRE_AUTH_TS
FROM  DBO.PRP_PRE_AUTH
WHERE CRD_NBR         = :DPRPPAUT.CRD-NBR  AND
MRCH_NBR        = :DPRPPAUT.MRCH-NBR AND
PRE_AUTH_DT    >= :DPRPPAUT.PRE-AUTH-DT
ORDER BY PRE_AUTH_TS DESC
FOR READ ONLY WITH UR
END-EXEC.

EXEC SQL DECLARE CUR_PRE_AUTH_UPDT CURSOR FOR
SELECT  PRE_AUTH_DT,
PRE_AUTH_TS,
D1_AMT_LIM,
D2_AMT_LIM,
RFR_AMT_LIM,
OTH_AMT_LIM,
OIL_AMT_LIM,
CASH_AMT_LIM
FROM  DBO.PRP_PRE_AUTH
WHERE CRD_NBR      = :DPRPPAUT.CRD-NBR     AND
MRCH_NBR     = :DPRPPAUT.MRCH-NBR    AND
PRE_AUTH_DT >= :DPRPPAUT.PRE-AUTH-DT AND
POST_FLG     < 'P'
ORDER BY PRE_AUTH_TS DESC
FOR READ ONLY WITH UR
END-EXEC.




01  MQM-GET-MESSAGE-OPTIONS.
COPY CMQGMOV.
01  MQM-CONSTANTS.
COPY CMQV.
01  MQM-PUT-MESSAGE-OPTIONS.
COPY CMQPMOV.
01  W03-PUT-BUFFER.
05 W03-CSQ4BQRM.
COPY CSQ4VB4.

01  W00-MESSAGE-BUFFER.
03  MQM-OBJECT-DESCRIPTOR.
COPY CMQODV.
03  MQM-MESSAGE-DESCRIPTOR.
COPY CMQMDV.
03  W00-MSGBUFFER.
05 W00-MSGBUFFER-ARRAY  PIC X(1) OCCURS 9950 TIMES.

01  WS-MQSERIES-WORK-FIELDS.
05 WS-QNAME-OUTBOUND        PIC X(48) VALUE SPACES.
05 WS-QLENGTH-OUTBOUND      PIC S9(9) BINARY VALUE 0.

01  W03-BUFFLEN                 PIC S9(9) BINARY VALUE 0.
01  W03-HCONN                   PIC S9(9) BINARY VALUE 0.
01  W03-HOBJ                    PIC S9(9) BINARY VALUE 0.
01  W03-OPENOPTIONS             PIC S9(9) BINARY.
01  W03-OPTIONS                 PIC S9(9) BINARY.
01  W03-COMPCODE                PIC S9(9) BINARY.
01  W03-COMPCODE-CHAR           PIC X(9)    VALUE SPACES.
01  W03-REASON                  PIC S9(9) BINARY.
01  W03-REASON-CHAR             PIC X(9)    VALUE SPACES.

01  WS-PGM-MQ-WORKFIELDS.
05 WS-BATCH-QUEUE-NAME      PIC X(48)
VALUE 'TSFM.FPLG.BATCH'.
05 WS-ONLINE-QUEUE-NAME     PIC X(48)
VALUE 'TSFM.FPLG.ONLINE'.
05 WS-QLENGTH-FPLG          PIC S9(9)  VALUE +2260.
05 WS-BTCHSET-QUEUE         PIC X(48)
VALUE 'TSMM.MMBS'.
05 WS-QLENGTH-BTCHSET       PIC S9(9)  VALUE +462.




01  WS-FMCD-COMMAREA-CHG.



05 WS-COST-PLUS-USED         PIC  X(01)           VALUE 'N'.
05 WS-SETTLE-DIRECT-BILL-FLAG  PIC  X(01).
05 WS-PRD-CALC-TYPE          PIC  X(04).
05 WS-MANUAL-FEE             PIC S9(5)V999 COMP-3 VALUE +0.
05 WS-AMOUNT-OF-DISC-CPG     PIC S99V9999  COMP-3 VALUE ZERO.
05 SAVE-FMDL-SC-INVOICE-AMT  PIC S9(5)V99  COMP-3 VALUE +0.
05 WS-TOTAL-GALLONS          PIC S9(5)V99         VALUE +0.
05 WS-TOTAL-FACE             PIC S9(6)V99         VALUE +0.
05 WS-TOTAL-FACE-SC          PIC S9(6)V99         VALUE +0.
05 WS-SC-AUTO-CASH-ADD-ON    PIC S9(6)V99         VALUE +0.
05 WS-SC-MAN-CASH-ADD-ON     PIC S9(6)V99         VALUE +0.
05 WS-BASE-FUEL-RATE         PIC S9(5)V99  COMP-3 VALUE ZERO.
05 WS-MIXED-FUEL-RATE        PIC S9(5)V99  COMP-3 VALUE ZERO.

05 WS-PRD-FEE-WORK-AREA.
10 FILLER OCCURS 3 TIMES.
15 WS-PRD-FEE-TYPE           PIC X(01).
15 WS-PRD-FUNDED-RATE        PIC S9(5)V99 COMP-3.
15 WS-PRD-DB-RATE            PIC S9(5)V99 COMP-3.
15 WS-PRD-FUNDED-RATE-ALTCUR PIC S9(5)V99 COMP-3.
15 WS-PRD-DB-RATE-ALTCUR     PIC S9(5)V99 COMP-3.
15 WS-PRD-SC-RATE            PIC S9(5)V99 COMP-3.
15 WS-PRD-SCM-AUTO-RATE      PIC S9(5)V99 COMP-3.
15 WS-PRD-SCM-MANUAL-RATE    PIC S9(5)V99 COMP-3.
15 WS-PRD-SCM-FLAT-OR-POF    PIC X(1).
05 WS-PRD-FEE-SC-WORK-AREA.
10 FILLER OCCURS 3 TIMES.
15 WS-PRD-PROD-FEE           PIC S9(5)V99 COMP-3.
05 WS-FMDL-PRODUCT-FEE-INFO.
10 WS-FMDL-PRODUCT-FEES OCCURS 3 TIMES.
15 WS-FMDL-PF-SC-FEE               PIC S9(05)V99  COMP-3.
15 WS-FMDL-PF-SC-FEE-SOURCE        PIC X(01).
15 WS-FMDL-PF-SC-FEE-LOC-TYPE      PIC X(02).
15 WS-FMDL-PF-SC-FEE-TYPE          PIC X(01).
15 WS-FMDL-PF-CUST-FEE             PIC S9(05)V99  COMP-3.
15 WS-FMDL-PF-CUST-FEE-SOURCE      PIC X(01).
15 WS-FMDL-PF-CUST-FEE-CUST-TYPE   PIC X(02).
15 WS-FMDL-PF-CUST-FEE-TYPE        PIC X(01).
05 WS-DISCOUNT-AND-FEE-AREA.
10 WS-DC-DISCOUNT-AMT        PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-SC-DISCOUNT-AMT     PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-SC-REBATE-AMT       PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-FEE-AMT             PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-FEE-AMT-FUEL        PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-FEE-AMT-CUSTOM      PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-FEE-AMT-RETAIN      PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-FEE-AMT-MANUAL      PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DC-DISCOUNT-FOCUS-SELECT PIC X(1)          VALUE ' '.
10 WS-DC-DISCOUNT-METHOD     PIC X(1)            VALUE ' '.
10 WS-DC-REBATE-AMT          PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-DISCOUNT-TYPE-FLAG     PIC X(1)            VALUE ' '.
88 WS-DISCOUNT-TYPE-IS-CPG                      VALUE 'G'.
88 WS-DISCOUNT-TYPE-IS-POF                      VALUE 'F'.
88 WS-DISCOUNT-TYPE-IS-FLT                      VALUE '1'.
88 WS-DISCOUNT-TYPE-IS-COST-PLUS                VALUE 'C'.
88 WS-DISCOUNT-TYPE-IS-NATS                     VALUE 'U'.
88 WS-DISCOUNT-TYPE-IS-CPG-POF                  VALUE 'B'.
88 WS-DISCOUNT-TYPE-IS-CPG-FLT                  VALUE '2'.
88 WS-DISCOUNT-TYPE-IS-POF-FLT                  VALUE '3'.
88 WS-DISCOUNT-TYPE-IS-ALL                      VALUE '4'.
10 WS-SC-CORP-REB-AMT        PIC S9(5)V99 COMP-3 VALUE +0.
10 WS-ADJ-FOR-CORP-REB       PIC X               VALUE ' '.
01  WS-FMCD-MISC-AREA.
05  WS-MERCH-SURCHRG-FLAG      PIC X(01)           VALUE ' '.
88 APPLY-MERCH-SURCHRG     VALUE 'Y'.
05  WS-MERCH-SURCHRG-TOTAL     PIC S9(7)V99 COMP-3 VALUE +0.
05  WS-MINIMUM-FEE-FLAG        PIC X(1)            VALUE ' '.
88 APPLY-SC-MIN-FEE        VALUE 'Y'.
05  WS-MIN-FUEL-FEE-DIFF       PIC S9(3)V99 COMP-3 VALUE +0.
05  WS-GALUP-FEE-FLAG          PIC X(1)            VALUE ' '.
88 APPLY-SC-GALUP-FEE      VALUE 'Y'.
05  WS-GALUP-FUEL-FEE          PIC S9(3)V99 COMP-3 VALUE +0.
05  WS-DC-DISCOUNT-SMFL        PIC S9(5)V99 COMP-3 VALUE +0.


01  WS-HOLD-DISC-AND-FEE-AREA      PIC X(044).

01  WS-TOTAL-AMOUNT-FLDS.
05 WS-BILLABLE            PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS2-BILLABLE           PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS3-BILLABLE           PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS-NON-BILLABLE        PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS2-NON-BILLABLE       PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS3-NON-BILLABLE       PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS-CAN-BILLABLE        PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS-US-BILLABLE         PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS-CURXMN              PIC S9(6)V99    VALUE ZERO.
05 WS2-CURXMN             PIC S9(6)V99    VALUE ZERO.
05 WS3-CURXMN             PIC S9(6)V99    VALUE ZERO.
05 WS-TOTAL-REQUEST       PIC S9(6)V99    VALUE ZERO COMP-3.
05 WS2-TOTAL-REQUEST      PIC S9(6)V99    VALUE ZERO COMP-3.
05 WS3-TOTAL-REQUEST      PIC S9(6)V99    VALUE ZERO COMP-3.
05 WS2-BILLABLE-FUEL      PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS2-NON-BILLABLE-FUEL  PIC S9(5)V99    VALUE ZERO COMP-3.
01  WS-HOLD-TOTAL-AMOUNT-FLDS PIC X(100).

01  SETTLEMENT-WORK-FIELDS.
05 WS-BALANCE-GROUP-ID               PIC S9(9) COMP-3.
05 WS-CLOSING-GROUP-ID               PIC S9(9) COMP-3.
05 WS-PAYMENT-GROUP-ID               PIC S9(9) COMP-3.
05 WS-BALANCE-ITEM-NUMBER            PIC S9(7) COMP-3.
05 WS-CLOSING-ITEM-NUMBER            PIC S9(7) COMP-3.
05 WS-PAYMENT-ITEM-NUMBER            PIC S9(7) COMP-3.
05 WS-CREATE-BALANCE-GROUP           PIC X(1).
05 WS-CREATE-CLOSING-GROUP           PIC X(1).
05 WS-CREATE-PAYMENT-GROUP           PIC X(1).
05 WS-SETTLE-TS-CODE                 PIC X(10).
05 WS-SETTLE-ORIG-TS                 PIC X(10).
05 WS-SPLIT-SETTLE-FLAG              PIC X(1).
05 WS-SPLIT-SETTLE-COUNT             PIC 9(1).

01  WS-PRODUCT-DISCOUNT-AREA.
05  WS-PD-OTH-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-RFR-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-NR1-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-NR2-FUEL-GAL        PIC 9(3)V99.
05  WS-PD-NR2-FUEL-PPG        PIC 99V9(3).
05  WS-PD-NR2-FUEL-COST       PIC 9(3)V99.
05  WS-PD-NR2-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-DEF-FUEL-GAL        PIC 9(3)V99.
05  WS-PD-DEF-FUEL-PPG        PIC 99V9(3).
05  WS-PD-DEF-FUEL-COST       PIC 9(3)V99.
05  WS-PD-DEF-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-CNG-FUEL-GAL        PIC 9(3)V99.
05  WS-PD-CNG-FUEL-PPG        PIC 99V9(3).
05  WS-PD-CNG-FUEL-COST       PIC 9(3)V99.
05  WS-PD-CNG-FUEL-DISC       PIC 9(3)V99.
05  WS-PD-GAS-FUEL-GAL        PIC 9(3)V99.
05  WS-PD-GAS-FUEL-PPG        PIC 99V9(3).
05  WS-PD-GAS-FUEL-COST       PIC 9(3)V99.
05  WS-PD-GAS-FUEL-DISC       PIC 9(3)V99.




COPY ATMSTANC.
COPY TSXCW030.
COPY TSXCW008.

01  ATM-WORK-AREA.
05 WS-TSXCO0AT-COMM-AREA.
10 FILLER                PIC X(4).
10 WS-TSXCO0AT-COMMAREA  PIC X(2452).
01  WS-SAVE-ATM.
05 WS-SAVE-ATM-ERROR-NUMBER  PIC S9(5) COMP-3 VALUE +0.
05 WS-SAVE-ATM-ERROR-MESSAGE PIC X(80)        VALUE SPACES.
01  POS-OUTPUT-AREA.
05 POS-ERROR-NUMBER        PIC S9(5) COMP-3 VALUE +0.
05 POS-MESSAGE             PIC X(413) VALUE SPACES.

01  WS-MASTER-CUST                PIC X(2040).
01  WS-MASTER-UNIT                PIC X(700).

01  FILLER.
05 WS-DISC-AMTP               PIC 9(3)V99 COMP-3.
05 WS-TSFMU020-PROG           PIC X(08) VALUE 'TSFMU020'.
05 WS-CXUTS400                PIC X(08) VALUE 'CXUTS400'.
05 WS-CALC-AUTH-NR            PIC 9(09) VALUE ZEROS.
05 WS-LINK-TO-I-SW            PIC X(01) VALUE 'N'.
05 WRK-EIBRESP                PIC 9(03) VALUE ZEROS.
05 FILL-CHAR                  PIC X(01) VALUE SPACES.
05 WS-CXUTSJON-OPTIONS        PIC X(03) VALUE 'YNN'.
05 WS-CNL-6-SW                PIC X(01) VALUE 'N'.
05 WS-CTRL-LOOP-SW            PIC X(01) VALUE 'N'.
05 WS-CTRL-MULT-SW            PIC X(01) VALUE 'N'.
05 WS-CTRL-MATCH-SW           PIC X(01) VALUE 'N'.
05 WS-PRE-AUTH-SW             PIC X(01) VALUE 'N'.
88 WS-PRE-AUTH-FOUND                 VALUE 'Y'.
05 WS-SP14-ELAPSED-TIME-MINS  PIC S9(8) USAGE COMP.
05 WS-CTRL-LOOP-CTR           PIC 9(02) VALUE ZEROS.
05 WS-LOOPS                   PIC 9(02) VALUE ZEROS.
05 WS-RELOCATE-UNIT-ADJUST    PIC X(01) VALUE 'N'.
05 WS-DRAFT-WAS-CANCELLED     PIC X(01) VALUE SPACES.
05 WS-FUEL-PROD-PURCHASED     PIC X(03) VALUE SPACES.
05 WS-RFID-XREF-READ          PIC X(01) VALUE SPACES.
05 WS-USE-RFID-XREF           PIC X(01) VALUE SPACES.
05 WS-RECOMP-SW               PIC X(01) VALUE SPACES.
05 WS-1TIME-OFF-CSTAND-FLG    PIC X(01) VALUE SPACES.
88 ONE-TIME-OFF-CSTAND-TRAN VALUE 'Y'.
05 WS-TIME-CURR               PIC S9(15) COMP-3 VALUE ZERO.
05 WS-TIME-START              PIC S9(15) COMP-3 VALUE ZERO.
05 WS-TIME-END                PIC S9(15) COMP-3 VALUE ZERO.
05 WS-DI-TRANSACTION-NUMBER   PIC S9(07) COMP-3 VALUE ZERO.
05 WS-SUB1                    PIC 9(03) VALUE 1.
05 WS-PRD-SUB                 PIC 9(03) VALUE 0.
05 WS-EXPDATE-MMYY            PIC 9(04) VALUE ZERO.
05 WS-EXPDATE-YYMM            PIC 9(04) VALUE ZERO.
05 WS-EXP-DATE-YYYYMM         PIC 9(6)  VALUE ZERO.
05 WS-DRVR-ID-HOLD-REL-DT     PIC 9(8)  VALUE ZEROS.
05 WS-CURR-DRVR-ID-HOLD-REL-TM
PIC 9(7)  VALUE ZEROS.
05 FILLER REDEFINES WS-CURR-DRVR-ID-HOLD-REL-TM.
10 FILLER                  PIC X(1).
10 WS-CURR-DRVR-ID-HOLD-REL-HR-MI
PIC 9(4).
10 FILLER                  PIC X(2).
05 WS-PROC-ACCT-NBR           PIC X(14) VALUE SPACES.
05 WS-UPDATE-EXP-DATE         PIC X(1)  VALUE 'Y'.
05 WS-UNIT-NR.
10 WS-UNIT-NR-10.
15 FILLER               PIC X(04) VALUE SPACES.
15 WS-UNIT-NR-06        PIC X(06) VALUE SPACES.
05 WS-ADJUST-UNIT-NR.
10 FILLER                  PIC X(04) VALUE SPACES.
10 WS-ADJUST-UNIT-NR-06    PIC X(06) VALUE SPACES.
05 WS-ZERO                    PIC X(1) VALUE '0'.
05 WS-FLEET-LIMIT-AVAIL       PIC S9(7)V99 COMP-3 VALUE ZERO.
05 WS-EXP-DATE                PIC 9(4).
05 WS-SQLCODE                 PIC S9(3).
88 WS-SQLCODE-WAIT                VALUE -904, -911.
05 WS-BALANCE-BASED-FLAG       PIC X(1) VALUE 'N'.
88 WS-BALANCE-BASED                  VALUE 'Y'.
88 WS-LIMIT-BASED                    VALUE 'N'.
05 WS-CDN-CUST-NUMBER          PIC X(10) VALUE SPACES.
05 WS-OFF-HOURS-FLAG           PIC X(1).
05 WS-OFF-HOURS-WARNING-FLAG   PIC X(1) VALUE 'N'.
05 WS-CARD-BLOCKED-FLAG        PIC X(1) VALUE 'N'.
05 WS-FLEET-PROD               PIC 9(5) VALUE ZERO.
05 WS-PETRO-CANADA-CHAIN       PIC X(10) VALUE 'PC002'.
05 WS-PETRO-CANADA-RESP.
07 FILLER                   PIC X(6) VALUE ' DATE:'.
07 WS-PETRO-CANADA-DATE     PIC X(10) VALUE SPACES.
05 WS-ATM-REVERSAL-FLAG        PIC X     VALUE 'N'.
88 THIS-IS-AN-ATM-REVERSAL            VALUE 'Y'.
05  WS-STANDIN-REVERSE-FL      PIC X(01) VALUE 'N'.
88 WS-STANDIN-REVERSE                VALUE 'Y'.
05 WS-TAX-PARM                 PIC X(1) VALUE 'A'.
05 WS-TAX-COMPUTED-FLAG        PIC X(1) VALUE 'N'.
05 WS-CXXCO0CS-ABEND.
10 FILLER                   PIC X(2) VALUE 'CS'.
10 WS-CXXCO0CS-ABEND-CODE   PIC X(2) VALUE SPACES.
05 WS-TSFMO0LP-ABEND.
10 FILLER                   PIC X(2) VALUE 'LP'.
10 WS-TSFMO0LP-ABEND-CODE   PIC X(2) VALUE SPACES.
05 WS-CXXCO0PU-ABEND.
10 FILLER                   PIC X(2) VALUE 'PU'.
10 WS-CXXCO0PU-ABEND-CODE   PIC X(2) VALUE SPACES.
05 WS-RETAIL-PPG-NR2           PIC S9(2)V999 COMP-3 VALUE +0.
05 WS-RETAIL-PPG-NR1           PIC S9(2)V999 COMP-3 VALUE +0.
05 WS-RETAIL-PPG-TRAILER       PIC S9(2)V999 COMP-3 VALUE +0.
05 WS2-RETAIL-PPG-NR2          PIC S9(2)V999 COMP-3 VALUE +0.
05 WS2-RETAIL-PPG-NR1          PIC S9(2)V999 COMP-3 VALUE +0.
05 WS2-RETAIL-PPG-TRAILER      PIC S9(2)V999 COMP-3 VALUE +0.
05 WS3-RETAIL-PPG-NR2          PIC S9(2)V999 COMP-3 VALUE +0.
05 WS3-RETAIL-PPG-NR1          PIC S9(2)V999 COMP-3 VALUE +0.
05 WS3-RETAIL-PPG-TRAILER      PIC S9(2)V999 COMP-3 VALUE +0.
05 WS-SCPM-LEVEL-1-VARIANCE     PIC S9(2)V999 COMP-3.
05 WS-HOLD-COM-SPECIAL-SETTLE    PIC X(1).
05 WS-HOLD-CUSTOMER-ID           PIC X(10).
05 WS-TABLE-CODE                 PIC S9(3) COMP-3 VALUE +1.
05 WS-HOLD-SIR-KEY               PIC X(23).
05 WS-EXIT-PROGRAM-FLAG          PIC X(1)          VALUE 'N'.
05 WS-CASH-AVAILABLE-FLAG        PIC X(1).
05 WS-WORK-CURR-DATE             PIC 9(8).
05 FILLER REDEFINES WS-WORK-CURR-DATE.
10 WS-WORK-CURR-DATE-YYYY     PIC 9(4).
10 FILLER REDEFINES WS-WORK-CURR-DATE-YYYY.
15 WS-WORK-CURR-DATE-CEN   PIC 9(2).
15 WS-WORK-CURR-DATE-YY    PIC 9(2).
10 WS-WORK-CURR-DATE-MM       PIC 9(2).
10 WS-WORK-CURR-DATE-DD       PIC 9(2).
05 WS-WORK-PEND-DATE             PIC 9(8).
05 WS-EXP-BAL-NEG-AMT      PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-MERCH-SURCHRG-AMT-SC PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-MERCH-SURCHRG-AMT-ADJ PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR2-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR1-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-REF-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-OTH-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-OIL-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-PR1-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-PR2-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-PR3-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-TOT-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-PROD-COST-RATIO      PIC S9(3)V9(9) COMP-3 VALUE +0.
05 WS-PROD-SPLIT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR1-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR2-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-REF-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-OTH-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR2-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR1-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-REF-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-OTH-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-NR2-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
05 WS-NR1-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
05 WS-REF-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
05 WS-OTH-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
05 WS-WORK-TOTAL-AR        PIC S9(5)V99 COMP-3 VALUE +0.
05 WS-WORK-NR-OF-GALLONS   PIC S9(7)V99 COMP-3 VALUE +0.
05 WS-WORK-PRICE-PER-GLLN  PIC S99V999  COMP-3 VALUE +0.
05 WS-WORK-TOTAL-COST      PIC S9(5)V99 COMP-3 VALUE +0.
05 WS-WORK-TRANS-NR        PIC S9(7)    COMP-3 VALUE +0.
05 WS-WORK-NW-DATE         PIC 9(6)     COMP-3 VALUE  0.
05 WS-WORK-LESS-CHARGE     PIC X(1)            VALUE SPACES.
88 TRANS-LESS-CHARGES                       VALUE 'Y'.
05 WS-TRENDAR-EQUIP-FOUND  PIC X(1).
05 WS-EXPAND-DISCOUNT-MSG  PIC X    VALUE 'N'.
05 WS-EXPAND-FEE-MSG       PIC X    VALUE 'N'.
05 WS-EXPAND-BOTH-MSG      PIC X    VALUE 'N'.
05 WS-AUTO-GAS-PUMP-NRX.
10 WS-AUTO-GAS-PUMP-NR  PIC 9(2).
05 WS-ACCT-CODE            PIC X(5).
88 WS-ACCT-CODE-PRNT-FLAG-U       VALUES 'WA050' 'WA084'
'WA146' 'WA154'
'WA155' 'WA159'.
88 WS-ACCT-CODE-LANDSTAR          VALUES 'RA401' 'PT001'
'IN305' 'LI982'.
05 WS-PRM-VRU-PIN-ATTEMPTS PIC 9(1).
05 WS-CANADIAN-AREA-CODE   PIC X(1)      VALUE 'N'.
05 WS-CONVERT-CURR-TYPE    PIC X(1).
05 WS-CONVERT-AMOUNT       PIC S9(7)V99 COMP-3.
05 WS-CONVERT-AMOUNT1      PIC S9(7)V99 COMP-3.
05 WS-CONVERT-AMOUNT2      PIC S9(7)V99 COMP-3.
05 WS-CONVERT-AMOUNT3      PIC S9(7)V99 COMP-3.

05 WS-CONTROL-NR           PIC 9(9)      VALUE ZEROES.
05 WS-CONTROL-NR-SETTLE    PIC 9(9)      VALUE ZEROES.
05 FILLER                  PIC X(1)      VALUE 'N'.
88 WS-BILLABLE-IS-ALL-CASH            VALUE 'Y'.
88 WS-BILLABLE-IS-NOT-ALL-CASH        VALUE 'N'.
05 WS-VRU-COUNTRY-FLAG     PIC X(1).
05 WS-PROD-AMOUNT          PIC S9(5)V99  VALUE ZEROS.
05 WS-WHICH-PROD           PIC 9(1)      VALUE ZEROES.
05 WS-UNITMST-UNIT         PIC X(1)      VALUE SPACE.
05 WS-PRMINFO-READ-SW      PIC X(1)      VALUE SPACE.
05 WS-HIER-SW              PIC X(1)      VALUE SPACE.
88 ON-HIERARCHY                       VALUE 'Y'.
05 DONE                    PIC S9(4) COMP VALUE +0.
05 REPEAT                  PIC S9(4) COMP VALUE +1.
05 WS-LOOP-STATUS          PIC S9(4) COMP VALUE +0.
05 51028-LOOP-STATUS       PIC S9(4) COMP VALUE +0.


05 WS-COUNTRY-CODE         PIC X(02).
05 WS-ONE-TIME-LIMIT       PIC X(01).
88  WS-ONE-TIME-CASH-LIMIT-AVAIL        VALUES 'C' 'B'.
88  WS-ONE-TIME-PURC-LIMIT-AVAIL        VALUES 'P' 'B'.
05 WS-PRODUCT-STANDARD     PIC X(01).
88  WS-CHANGE-LIMITS-BY-UNIT            VALUE  'Y'.
05 WS-TRIP-ALLOWANCE       PIC X(01).
05 WS-CASH-ADVANCE-FLAG    PIC X(01).
05 WS-CO-DRVR-NAME-ENTERED PIC X(01).
05 WS-DIRECT-BILLING-PROD  PIC 9          VALUE 0.

05 WS-NATS-PRE-AUTH-FLAG   PIC X(1).


05 WS-NATS-PROD-TABLE-DATA.
10 FILLER               PIC X(3)  VALUE '080'.
10 FILLER               PIC X(3)  VALUE '105'.
10 FILLER               PIC X(3)  VALUE '129'.
10 FILLER               PIC X(3)  VALUE '121'.
10 FILLER               PIC X(3)  VALUE '085'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '130'.
10 FILLER               PIC X(3)  VALUE '100'.
10 FILLER               PIC X(3)  VALUE '125'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '122'.
10 FILLER               PIC X(3)  VALUE '124'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '118'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '115'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '116'.
10 FILLER               PIC X(3)  VALUE '082'.
10 FILLER               PIC X(3)  VALUE '140'.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE SPACES.
10 FILLER               PIC X(3)  VALUE '591'.
10 FILLER               PIC X(3)  VALUE '592'.
05 FILLER REDEFINES WS-NATS-PROD-TABLE-DATA.
10 WS-NATS-PROD-TABLE   PIC X(3) OCCURS 36 TIMES.
05 WS-WORK-IOL-MAX-LITERS  PIC 9(9)V99 COMP-3.
05 WS-WORK-FIELD           PIC X(2500).
05 WS-CDN-MONEY-INVOICE PIC X(2).
88 WS-CDN-MONEY-INVOICE-EXP-CASH    VALUES 'F ', 'EF',
'PF', 'FP',
'A '.
05 WS-COST-PLUS-CPG-FEE1 PIC S9(5)V9(5) COMP-3 VALUE ZERO.
05 WS-COST-PLUS-CPG-FEE2 PIC S9(5)V9(5) COMP-3 VALUE ZERO.
05 WS-CUSTOM-FEE-TOTAL   PIC S9(5)V99   COMP-3.
05 WS-LAST-SCMM-READ     PIC X(10)   VALUE SPACES.
05 WS-CC-PIN-CHECK       PIC S9(8)   COMP.
05 WS-PIN-NR             PIC S9(15)  VALUE ZEROS.
05 WS-BINARY-PIN         PIC S9(8)   COMP.
05 WS-VALIDATE-CKDIGIT   PIC X(1)    VALUE 'Y'.

05 WS-INVOICE.
10 WS-INVOICE-DD      PIC 9(2).
10 WS-INVOICE-TIME   PIC 9(6).
05 WS-ADD-ON            PIC S9(5)V99    VALUE ZERO COMP-3.
05 WS-AVAIL             PIC S9(9)V99    VALUE ZERO COMP-3.
05 WS-HOLD-ODR-AMT      PIC S9(6)V99    VALUE ZERO COMP-3.
05 WS-HOLD-ODR-NAME     PIC X(20)       VALUE SPACES.
05 WS-HOLD-POS-ERROR-NUMBER PIC S9(5)   VALUE ZEROES.
05 WS-HOLD-POS-ERROR-MSG    PIC X(80)   VALUE SPACES.
05 WS-CC-AVAIL          PIC S9(6)V99    VALUE ZERO COMP-3.
05 WS-CC-CUT-OFF1       PIC X(01)       VALUE 'N'.
05 WS-DBF-MSG           PIC X(03)       VALUE 'DBF'.
05 WS-DB-MSG            PIC X(03)       VALUE 'DB '.
05 WS-CC-CONTROL-NR-DISP.
10 WS-CC-CONTROL-DD  PIC 9(2).
10 WS-CC-CONTROL-NR  PIC 9(6).
05 WS-CC-EMPLOYEE-CHECK PIC X(5).
05 WS-TALLY             PIC 9(5) COMP-3.
05 WS-YCODE-ST-KEY.
10 WS-YCODE-ST       PIC X(02).
10 FILLER            PIC X(03)   VALUE '999'.
05 WS-CANADIAN-CONVERSION.
10 WS-CANADIAN-FIRST-TEN    PIC X(10) VALUE SPACES.
10 WS-UNPACK-CANADIAN       PIC 9(2)V9(8) VALUE ZEROES.
05 WS-CANADIAN-CHK-FLAG PIC X(1)    VALUE 'N'.
05 WS-SCM-CNTRY-LOC-SW    PIC X(02) VALUE SPACES.
88  WS-SCM-IS-IN-US              VALUE 'US'.
88  WS-SCM-IS-IN-CANADA          VALUE 'CA'.
05 WS-DSMSTR-RRN          PIC S9(09)    COMP SYNC.
05 WS-ORIG-DATE           PIC 9(7).
05 WS-FMT-ORIG-DATE       PIC 9(7).
05 WS-FMT-ORIG-CNTRL-NR   PIC 9(8).
05 WS-ORIG-CNTRL-NR       PIC X(6).
05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
10 WS-ORIG-CNTRL-6     PIC 9(6).
05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
10 WS-ORIG-CNTRL-5     PIC 9(5).
10 FILLER              PIC X.
05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
10 WS-ORIG-CNTRL-4     PIC 9(4).
10 FILLER              PIC XX.
05 WS-NV-EXIT-FLAG        PIC X(01) VALUE 'N'.
88 WS-NV-EXIT-YES                VALUE 'Y'.
05 WS-NV-ERROR-NR         PIC 9(05) VALUE ZERO.
88 WS-NV-ERROR-IGNORE               VALUE 30, 31, 32, 47, 51,
65, 83, 434, 435,
436, 437, 445, 589,
590.

05 WS-FMRM-05-POF             PIC X(01)    VALUE SPACES.
05 WS-TOTAL-FACE-SC-POF       PIC S9(6)V99 VALUE +0.

05 WS-DRIVER-NR-KEYED-INFO.
10 WS-DRIVER-NR-KEYED                OCCURS 20 TIMES.
15 WS-DRIVER-NR-KEYED-N  PIC 9(1).
05 WS-DRIVER-NR-CARD-INFO.
10 WS-DRIVER-NR-CARD        PIC X(1) OCCURS 20 TIMES.
05 WS-DRIVER-NR-VALIDATE-TABLE.
15 FILLER                   PIC X(03) VALUE 'QZ '.
15 FILLER                   PIC X(03) VALUE 'ABC'.
15 FILLER                   PIC X(03) VALUE 'DEF'.
15 FILLER                   PIC X(03) VALUE 'GHI'.
15 FILLER                   PIC X(03) VALUE 'JKL'.
15 FILLER                   PIC X(03) VALUE 'MNO'.
15 FILLER                   PIC X(03) VALUE 'PRS'.
15 FILLER                   PIC X(03) VALUE 'TUV'.
15 FILLER                   PIC X(03) VALUE 'WXY'.
05 FILLER REDEFINES WS-DRIVER-NR-VALIDATE-TABLE.
15 WS-DRIVER-NR-VALIDATE    PIC X(03) OCCURS 9 TIMES.
05 WS-AREA-STATE-TABLE-DTA.
15 FILLER                   PIC X(05) VALUE '403AB'.
15 FILLER                   PIC X(05) VALUE '604BC'.
15 FILLER                   PIC X(05) VALUE '204MB'.
15 FILLER                   PIC X(05) VALUE '506NB'.
15 FILLER                   PIC X(05) VALUE '709NF'.
15 FILLER                   PIC X(05) VALUE '902NS'.
15 FILLER                   PIC X(05) VALUE '807ON'.
15 FILLER                   PIC X(05) VALUE '519ON'.
15 FILLER                   PIC X(05) VALUE '705ON'.
15 FILLER                   PIC X(05) VALUE '613ON'.
15 FILLER                   PIC X(05) VALUE '416ON'.
15 FILLER                   PIC X(05) VALUE '905ON'.
15 FILLER                   PIC X(05) VALUE '902PE'.
15 FILLER                   PIC X(05) VALUE '514PQ'.
15 FILLER                   PIC X(05) VALUE '418PQ'.
15 FILLER                   PIC X(05) VALUE '819PQ'.
15 FILLER                   PIC X(05) VALUE '306SK'.
15 FILLER                   PIC X(03) VALUE HIGH-VALUES.
15 FILLER                   PIC X(02) VALUE SPACES.
05 FILLER REDEFINES WS-AREA-STATE-TABLE-DTA.
15 WS-AREA-STATE-TABLE OCCURS 18 TIMES.
20 WS-AREA-STATE-AREA    PIC X(03).
20 WS-AREA-STATE-ST      PIC X(02).

05 WS-PRODUCT-CODE-LIMITS.
10 WS-PRODUCT-LIMITS-TABLE OCCURS 36 TIMES.
15 WS-PRD-MAX-DAILY      PIC S9(005) COMP-3.
15 WS-PRD-ALLOW-ORIG     PIC S9(005) COMP-3.

05 WS-PRODUCT-TRANSLATION-DATA.
10 FILLER                   PIC X(04) VALUE '0000'.
10 FILLER                   PIC X(04) VALUE '0101'.
10 FILLER                   PIC X(04) VALUE '0202'.
10 FILLER                   PIC X(04) VALUE '0303'.
10 FILLER                   PIC X(04) VALUE '0404'.
10 FILLER                   PIC X(04) VALUE '0505'.
10 FILLER                   PIC X(04) VALUE '0606'.
10 FILLER                   PIC X(04) VALUE '0707'.
10 FILLER                   PIC X(04) VALUE '0808'.
10 FILLER                   PIC X(04) VALUE '0909'.
10 FILLER                   PIC X(04) VALUE '0A10'.
10 FILLER                   PIC X(04) VALUE '0B11'.
10 FILLER                   PIC X(04) VALUE '0C12'.
10 FILLER                   PIC X(04) VALUE '0D13'.
10 FILLER                   PIC X(04) VALUE '0E14'.
10 FILLER                   PIC X(04) VALUE '0F15'.
10 FILLER                   PIC X(04) VALUE '0G16'.
10 FILLER                   PIC X(04) VALUE '0H17'.
10 FILLER                   PIC X(04) VALUE '0I18'.
10 FILLER                   PIC X(04) VALUE '0J19'.
10 FILLER                   PIC X(04) VALUE '0K20'.
10 FILLER                   PIC X(04) VALUE '0L21'.
10 FILLER                   PIC X(04) VALUE '0M22'.
10 FILLER                   PIC X(04) VALUE '0N23'.
10 FILLER                   PIC X(04) VALUE '0O24'.
10 FILLER                   PIC X(04) VALUE '0P25'.
10 FILLER                   PIC X(04) VALUE '0Q26'.
10 FILLER                   PIC X(04) VALUE '0R27'.
10 FILLER                   PIC X(04) VALUE '0S28'.
10 FILLER                   PIC X(04) VALUE '0T29'.
10 FILLER                   PIC X(04) VALUE '0U30'.
10 FILLER                   PIC X(04) VALUE '0V31'.
10 FILLER                   PIC X(04) VALUE '0W32'.
10 FILLER                   PIC X(04) VALUE '0X33'.
10 FILLER                   PIC X(04) VALUE '0Y34'.
10 FILLER                   PIC X(04) VALUE '0Z35'.
05 FILLER REDEFINES WS-PRODUCT-TRANSLATION-DATA.
15 WS-PRODUCT-TRANSLATION-TABLE OCCURS 36 TIMES
INDEXED BY PTT-INDX.
20 WS-PTT-ALPHA          PIC X(02).
20 WS-PTT-NUM            PIC X(02).



05 QUEUE-ID-AREA.
10 FILLER                PIC X(4) VALUE 'FP  '.
10 QID-TRMID             PIC X(4).
05 WS-ITEM                  PIC 9(4) COMP VALUE 1.
05 WS-Q-AREA.
10 WS-Q-COMMAREA         PIC X(1800).
10 WS-Q-UNFORMATTED      PIC X(1197).
10 WS-Q-MAPLEN           PIC 9(5) COMP-3.

05 WS-STANDARD-ITEM-PURCHASED   PIC X(01).
05 WS-ADD-ON-APPLIES            PIC X(01).
05 WS-CHECK-PRODUCT-FEE         PIC X(01).
05 WS-HOLD-MIXED-FUEL-RATE            PIC S9(5)V99 COMP-3.
05 WS-HOLD-BASE-FUEL-RATE             PIC S9(5)V99 COMP-3.
05 WS-HOLD-DC-FEE-AMT-FUEL            PIC S9(5)V99 COMP-3.
05 WS-PRDCUST-HAS-BEEN-READ           PIC X(1) VALUE 'N'.
05 WS-PRDSCMM-HAS-BEEN-READ           PIC X(1) VALUE 'N'.
05 WS-PRODUCT-FEE-FOUND               PIC X(1).


05 WS-NO-TRANS-SPLIT-FLAG    PIC  X(01)    VALUE SPACE.
05 WS-LTI-SW                 PIC  X(01)    VALUE SPACE.
88 WS-LARGE-TRANS-SPLITS                 VALUE 'Y'.
05 WS-LTI-WITH-TAX-SW        PIC  X(01)    VALUE SPACE.
88 WS-LARGE-TRANS-WITH-TAX               VALUE 'Y'.
05 WS-LTI-TAX-SW             PIC  X(01)    VALUE SPACE.
88 WS-LARGE-TRANS-SPLITS-TAX             VALUE 'Y'.
05 WS-LTI-SW2                PIC  X(01)    VALUE SPACE.
88 WS-LTI-SC-CURRENCY                    VALUE 'S'.
05 WS-LTI-SUB1               PIC S9(03)    VALUE ZERO.
88 LTI-FIRST-PASS                        VALUE 1.
88 LTI-SECOND-PASS                       VALUE 2.
05 WS-LTI-LAST-FLAG          PIC  X(01)    VALUE SPACE.
88 LTI-LAST-PASS                         VALUE 'Y'.
05 WS-LTI-SUB2               PIC S9(01)    VALUE ZERO.
05 WS-LTI-SPLIT-COUNT        PIC S9(03)    VALUE ZERO.
05 WS-LTI-AMT-TO-ADD         PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-AMT-TO-SUBTRACT    PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-QTY-TO-ADD         PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-QTY-TO-SUBTRACT    PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TAX-RATE           PIC S9(1)V9(3) COMP-3 VALUE +0.
05 WS-LTI-TRANS-AMT          PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-INIT-SPLIT-VALUE   PIC S9(05)    VALUE ZERO.
05 WS-LTI-INIT-SPLIT-NBR1    PIC S9(05)    VALUE ZERO.
05 WS-LTI-INIT-SPLIT-NBR2    PIC S9(05)    VALUE ZERO.
05 WS-LTI-INIT-SPLIT-REFER   PIC S9(05)    VALUE ZERO.
05 WS-LTI-INIT-SPLIT-OTHER   PIC S9(05)    VALUE ZERO.
05 WS-LTI-PCT-XTN-NBR1       PIC 9V999     VALUE ZERO.
05 WS-LTI-PCT-XTN-NBR2       PIC 9V999     VALUE ZERO.
05 WS-LTI-PCT-XTN-REFER      PIC 9V999     VALUE ZERO.
05 WS-LTI-PCT-XTN-OTHER      PIC 9V999     VALUE ZERO.
05 WS-LTI-WORK-AMT           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-WORK-AMT2          PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT          PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-NBR1     PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-NBR2     PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-NBR2-HLD PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-REFER    PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-OTHER    PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-SPLIT-AMT-OTHER-HLD
PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-OVER-AMT-HLD       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-OVER-QTY           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-OVER-AMT           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-MOVE-QTY           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-NR1      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-NR2      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-REF      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-OTH      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-NR1       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-NR2       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-REF       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-OTH       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-NR1-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-NR2-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-REF-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-QTY-OTH-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-NR1-OTH   PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-NR2-OTH   PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-REF-OTH   PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-QTY-OTH-OTH   PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-MOVE-AMT           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-TAX      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-NR1      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-NR2      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-REF      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-OTH      PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-NR1       PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-NR2       PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-REF       PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-OTH       PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-TAX-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-NR1-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-NR2-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-REF-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-TOTAL-AMT-OTH-OTH  PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-NR1-OTH   PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-NR2-OTH   PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-REF-OTH   PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-OTH-OTH   PIC S9(07)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-TAX-OTH   PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-HOLD-AMT-TAX       PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-MOVE-TAX           PIC S9(05)V99 VALUE ZERO.
05 WS-LTI-PERCENT            PIC S9V9(06)  VALUE ZERO.
05 WS-PERFORM-SW             PIC  X(01)    VALUE SPACE.
05 WS-TRANS-GALLONS          PIC S9(05)V99 VALUE ZERO.
05 WS-HOLD-TRANS-GALLONS     PIC S9(05)V99 VALUE ZERO.
05 WS-COMSITE-OLD-FORMAT     PIC  X(01)    VALUE SPACE.
05 FP-0175A-FIRST-PASS-SW    PIC  X(01)    VALUE SPACE.
88 FP-0175A-FIRST-PASS                     VALUE 'Y'.
05 WS-BYPASS-LOG-DISCOUNT    PIC  X(01)    VALUE 'N'.

05 WS-LTI-FMLOG-FOUND        PIC  X(01)    VALUE SPACE.
05 WS-LTI-HOLD-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.
05 WS-LTI-SKIP-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.
05 WS-LTI-LAST-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.

05 WS-LTI-HOLD-AREAS.
10 WS-LTIH-FMLOG           PIC  X(2040)  VALUE SPACE.
10 WS-LTIH-CASH-AMT        PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-TAX-AMT-SC      PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-BILLABLE        PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-NON-BILLABLE    PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-CURXMN2         PIC S9(06)V99        VALUE ZERO.
10 WS-LTIH-CURXMN          PIC S9(06)V99        VALUE ZERO.
10 WS-LTIH-CONTROL-NR      PIC  9(07)           VALUE ZERO.
10 WS-LTIH-DRAFT-AMT       PIC  9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-FP-TRANS-AMT    PIC  9(05)V99        VALUE ZERO.
10 WS-LTIH-TOTAL-REQUEST   PIC S9(06)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-TRANS-GALLONS   PIC S9(05)V99 VALUE ZERO.
10 WS-LTIH-TRANS-GALLONS2  PIC S9(05)V99 VALUE ZERO.
10 WS-LTIH-HUB             PIC S9(06)V9  VALUE ZERO.
10 WS-LTIH-SELECT-DISC     PIC S9(03)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-TOTAL-TAX-SC    PIC S9(05)V99 COMP-3 VALUE ZERO.
05 WS-LTI-PROD-HOLD-AREAS.
10 WS-LTIH-PROD-BILLABLE   PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-PROD-BILLABLE2  PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-PROD-NON-BILLABLE
PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-PROD-NON-BILLABLE2
PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-PROD-BILLABLE-FUEL
PIC S9(05)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-PROD-NON-BILLABLE-FUEL
PIC S9(05)V99 COMP-3 VALUE ZERO.
05 WS-LTI-UIWA-AREAS.
10                         PIC  X(01)           VALUE 'N'.
10 WS-LTIH-UIWA-NR1-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-UIWA-NR1-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
10                         PIC  X(01)           VALUE 'N'.
10 WS-LTIH-UIWA-NR2-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-UIWA-NR2-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
10                         PIC  X(01)           VALUE 'N'.
10 WS-LTIH-UIWA-REF-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-UIWA-REF-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
10                         PIC  X(01)           VALUE 'N'.
10 WS-LTIH-UIWA-OTH-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
10 WS-LTIH-UIWA-OTH-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
05 FILLER REDEFINES WS-LTI-UIWA-AREAS  OCCURS 4 TIMES.
10 WS-LTI-ZERO-FLAG        PIC  X(01).
10 WS-LTIH-UIWA-QTY        PIC S9(07)V99 COMP-3.
10 WS-LTIH-UIWA-AMT        PIC S9(07)V99 COMP-3.
05 WS-LTIH-UIWA-AMT-TAX      PIC S9(07)V99 COMP-3 VALUE ZERO.



05 WS-LTI-FILE-DATA-AREA.
10 WS-CDN-GUAR-YN                PIC  X(01).
10 WS-CDN-ALL-HANDLING-ADD-ON    PIC S9(3)V99  COMP-3.
10 WS-CDN-ALL-HANDLING-ADD-ON-AC PIC S9(3)V99  COMP-3.
10 WS-CDN-MANUAL-ADD-ON          PIC S9V99     COMP-3.
10 WS-CDN-COST-PLUS-ADD-ON       PIC S9V99     COMP-3.
10 WS-CDN-COST-PLUS-ADD-ON-AC    PIC S9V99     COMP-3.
10 WS-SCM-CORP-REBATE-LOCATION   PIC  X(10).
10 WS-SCM-CORP-REBATE-FLAG       PIC  X(01).
10 WS-SCPM-PP-PAC-MARKUP         PIC S9(2)V999 COMP-3.

05 WS-NOTIFY-IRIS-FL          PIC  X(01)  VALUE 'Y'.
05 WS-CIX-RESP-REQUESTED      PIC  X(01)  VALUE 'N'.
05 WS-CIX-MESSAGE-TYPE        PIC  X(04)  VALUE SPACE.
05 WS-CIX-CARD-NR             PIC  9(16)  VALUE ZERO.
05 WS-COMPANY-STANDARD-ID     PIC  9(05)  VALUE ZERO.
05 WS-POS-ERROR-NUMBER        PIC  9(05)  VALUE ZERO.
05 WS-AMOUNT-NO-DECIMAL-06    PIC  9(06)  VALUE ZERO.
05 WS-AMOUNT-NO-DECIMAL-09    PIC  9(09)  VALUE ZERO.
05 WS-AMOUNT-NO-DECIMAL-12    PIC  9(12)  VALUE ZERO.
05 WS-CODES-AMOUNT.
10 WS-CODES-AMT            PIC 9(7)V99 VALUE ZERO.
05 WS-TAX-ADDED               PIC  X(01)  VALUE 'N'.
05 WS-SAVE-UIWA-NR1-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
05 WS-SAVE-UIWA-NR2-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
05 WS-SAVE-UIWA-REF-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
05 WS-SAVE-UIWA-OTH-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
05 WS-SAVE-UIWA-OIL-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.

05 WS-FUELUP-WORK-AREA.
10 WS-FUELUP-SW             PIC X(01) VALUE ' '.
88 FUELUP-YES                      VALUE 'Y'.
88 FUELUP-NO                       VALUE 'N'.
10 FUELUP-PRICE-DIFF        PIC S9(5)V99  COMP-3 VALUE +0.
10 FUELUP-CASH-PRICE        PIC S9(2)V999 COMP-3 VALUE +0.
10 FUELUP-RETAIN-FEE        PIC S9(5)V99  COMP-3 VALUE +0.
10 FUELUP-SC-TR-TRACTOR-COST
PIC S9(7)V99  COMP-3 VALUE +0.
10 FUELUP-NEW-TRACTOR-COST  PIC S9(7)V99  COMP-3 VALUE +0.

05 WS-CVC3-PASSED-FLAG           PIC X     VALUE 'N'.
88 CVC3-WAS-PASSED                      VALUE 'Y'.
05 WS-SAVE-SRVC-CODE             PIC 9(03) VALUE ZEROES.
05 WS-ATMW-DE48-71-ON-BEHALF     PIC X(40).
05 FILLER REDEFINES WS-ATMW-DE48-71-ON-BEHALF.
10 WS-ATMW-DE48-71 OCCURS 10 TIMES
INDEXED BY WS-DE48-71-INDX.
15  WS-ATMW-DE48-71-SF1    PIC X(02).
15  WS-ATMW-DE48-71-SF2    PIC X(01).
15  WS-ATMW-DE48-71-SF3    PIC X(01).
05 WS-SWIPED-DATA.
10 WS-SWIPED-CARD             PIC 9(16).
10 WS-SWIPED-OR-KEYED         PIC X.
88 SWIPED-TRANSACTION   VALUE '='.
10 WS-SWIPED-EXP-DT-YYMM      PIC X(04).
10 WS-SWIPED-SRVC-CD          PIC X(03).
10 WS-PROP-SWIPED-AREA.
15                         PIC X.
15 WS-PROP-SWIPED-CVC1     PIC X(03).
15                         PIC X(12).
10 WS-MC-SWIPED-AREA
REDEFINES WS-PROP-SWIPED-AREA.
15 WS-MC-SWIPED-CVC1       PIC X(03).
15                         PIC X(13).
05 WS-ATMW-TRACK2-DATA.
10 WS-ATM-TRACK2-CARD         PIC 9(16).
10                            PIC X.
10 WS-ATM-TRACK2-EXP-DT-YYMM  PIC X(04).
10 WS-ATM-TRACK2-SERVICE-CODE PIC X(03).
10 WS-PROP-ATM-TRACK2-AREA.
15                         PIC X.
15 WS-PROP-ATM-TRACK2-CVC1 PIC X(03).
15                         PIC X(11).
10 WS-MC-ATM-TRACK2-AREA
REDEFINES WS-PROP-ATM-TRACK2-AREA.
15 WS-MC-ATM-TRACK2-CVC1   PIC X(03).
15                         PIC X(12).
05 WS-SWIPED-CARD-20             PIC X(20).
05 WS-CVC1-FLAG                  PIC X(1) VALUE 'N'.
88 CVC1-NOT-FOUND VALUE 'Y'.
05 WS-CODES-CVC-DECLINE-FLG           PIC X(1) VALUE 'N'.
88 CODES-CVC-DECLINE VALUE 'Y'.
05 WS-CODES-CVC-TIME-LIMIT      PIC 9(09).

01  WS-OTHER-WORK-AREA.
03 WS-CREDITL-READ-SW        PIC  X(01)    VALUE SPACE.
03 WS-CREDITL-AMOUNTS.
10  WS-CREDIT-LIMIT          PIC S9(12)     VALUE ZERO.
10  WS-UPDATE-OR-AR-BAL      PIC S9(09)V99  VALUE ZERO.
10  WS-CASH-RECEIVED         PIC S9(09)V99  VALUE ZERO.
10  WS-CURRENT-DAY           PIC S9(09)V99  VALUE ZERO.
03 WS-CL-CO-CD              PIC  X(05)     VALUE SPACES.
03 WS-USE-FLEET-LIMITS      PIC  X(01)     VALUE 'N'.
03 WS-XCPL-PROD             PIC  X(05)     VALUE '00000'.
03 WS-XCPL-PROD-R REDEFINES WS-XCPL-PROD.
05 FILLER                PIC XX.
05 WS-XCLP-PROD-NUM      PIC 99.
05 FILLER                PIC X.
03 WS-PRE-AUTH-CODES        PIC  X(01)     VALUE 'N'.
03 WS-SUB-PROD-FIND         PIC  X(01)     VALUE 'N'.
03 WS-PAC-SUB               PIC  9(02)     VALUE ZERO.
03 WS-DFLT-NR2-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
03 WS-DFLT-NR1-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
03 WS-DFLT-REF-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
03 WS-DFLT-OTH-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
03 WS-CHK-HUB               PIC  X(01)     VALUE SPACE.
03 WS-CURR-MIN              PIC S9(04)     VALUE ZERO.
03 WS-CURR-MIN-WORK         PIC S9(04)     VALUE ZERO.
03 WS-SETUP-XCPRODC-DONE    PIC  X(01)     VALUE SPACE.
03 WS-PURC-TIME-UNPACK      PIC  9(05)     VALUE ZERO.
03 WS-COMP-MIN              PIC S9(04)     VALUE ZERO.
03 WS-ELAP-MIN              PIC S9(04)     VALUE ZERO.
03 WS-DSCARD-DT             PIC  9(07)     VALUE ZERO.
03 WS-DSCARD-TM             PIC  9(07)     VALUE ZERO.
03 WS-DSCARD-CMPR-X         PIC  X(04).
03 WS-DSCARD-CMPR REDEFINES WS-DSCARD-CMPR-X
PIC S9(07) COMP-3.
03 WS-DSCARD-END            PIC  X(01)     VALUE SPACE.

03 WS-NBC-KEY               PIC  X(35)     VALUE SPACES.
03 WS-MULTI-PART-PURCHASE   PIC  X(01)     VALUE SPACE.
03 WS-BYPASS-CARD-NETW-UPDT PIC  X(01)     VALUE SPACE.
03 WS-FLEET-LIMIT-CSH-AVAIL PIC  X(01)     VALUE SPACE.
03 WS-FLEET-LIMIT-CSH-AMT   PIC S9(07)V99  VALUE ZERO.
03 WS-AVAIL-AMT-OIL         PIC S9(03)V99  VALUE ZERO.
03 WS-NO-FUEL-FEE-FLAG      PIC X(01)      VALUE SPACE.
88 WS-NO-FUEL-FEE                       VALUE 'Y'.
03 WS-FORCE-POST-FROM-PRE-AUTH  PIC X(01)  VALUE SPACE.
88 FORCE-POST-FROM-PRE-AUTH             VALUE 'Y'.
03 WS-POPULATED-SW.
10 WS-MAX-NR2-POPULATED     PIC  X(01)   VALUE SPACE.
10 WS-MAX-NR1-POPULATED     PIC  X(01)   VALUE SPACE.
10 WS-MAX-REF-POPULATED     PIC  X(01)   VALUE SPACE.
10 WS-MAX-OTH-POPULATED     PIC  X(01)   VALUE SPACE.
03 WS-RESET-LAST-QTY-RFID   PIC  X(01)     VALUE 'N'.
03 WS-PROPRIETARY-CARD      PIC  X         VALUE 'N'.
03 WS-EXP-DATE-ERR          PIC  X         VALUE 'N'.
03 WS-THIS-BE-A-RESTORE     PIC  X(01)     VALUE 'N'.
03 WS-COMDATA-COMPLETE-READ PIC  X(01)     VALUE 'N'.
03 WS-NR1-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
03 WS-NR2-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
03 WS-REF-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
03 WS-REF-RACK-PPG          PIC 99V9(07) COMP-3 VALUE ZERO.



03 WS-NR1-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
03 WS-NR1-COST-HOLD           PIC S9(07)V99      COMP-3.
03 WS-NR2-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
03 WS-NR2-COST-HOLD           PIC S9(07)V99      COMP-3.
03 WS-REF-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
03 WS-REF-COST-HOLD           PIC S9(07)V99      COMP-3.
03 WS-OTH-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
03 WS-OTH-COST-HOLD           PIC S9(07)V99      COMP-3.

03 WS-WEEKDAY               PIC 9(2) VALUE ZERO.
03 WS-WEEKDAY-FOUND         PIC X(1).
03 WS-CCPP-INDEX            PIC 9(2) VALUE ZERO.
03 WS-CPC-CALC-DAYS         PIC 9(6) VALUE ZERO.
03 X-WEEK                   PIC S9(4)    COMP.
03 X-WEEK2                  PIC S9(4)    COMP.
03 X-DAY                    PIC S9(4)    COMP.
03 WS-WEEKS                 PIC S9(4)    COMP.
03 WS-WEEK-FOUND            PIC X    VALUE 'N'.
03 WS-FMRACKH-FOUND         PIC X    VALUE 'N'.
03 WS-FOUND-ON-FMRACK       PIC X    VALUE 'N'.
03 WS-WEEK-REMAINDER        PIC 99   VALUE ZERO.
03 WS-WHICH-DAY             PIC 99   VALUE ZERO.
03 WS-WORK-RPDT             PIC X(6).
03 WS-WORK-FPDT             PIC X(6).
03 WS-INDEX                 PIC 9(2).
03 WS-INDEX2                PIC 9(2).
03 WS-INDEX3                PIC 9(2).
03 WS-WORK-DATE             PIC 9(7).
03 WS-DAYS-TABLE            PIC 9(5) OCCURS 7 TIMES.
03 WS-RACK-FLAG             PIC X(1).
03 WS-CHECK-NR              PIC 9(9).
03 FILLER REDEFINES WS-CHECK-NR.
05 WS-CHECK-NR-1         PIC X(1).
05 FILLER                PIC X(8).
03 WS-REQUEST-SETTLE-FEES PIC X(1)          VALUE 'N'.
03 WS-HOLD-CHECK-NR     PIC 9(10)           VALUE ZERO.
03 WS-HOLD-PPG          PIC S99V999 COMP-3  VALUE +0.
03 INDX                 PIC S9999 COMP SYNC VALUE +0.
03 FILLER               REDEFINES INDX.
05 FILLER             PIC X.
05 INDX-LO            PIC X.
03 INDX-1               PIC S9999 COMP SYNC VALUE +0.
03 INDX-2               PIC S9999 COMP SYNC VALUE +0.
03 INDX-3               PIC S9999 COMP SYNC VALUE +0.
03 MOD10-SL             PIC S999 COMP-3 VALUE +0.
03 WS-DISC              PIC S9(5)V99.
03 WS-DISC-R1           REDEFINES WS-DISC PIC S999V9999.
03 FILLER               REDEFINES WS-DISC.
05 FILLER             PIC X(5).
05 WS-DISC-DECIMAL    PIC S99.
03 WS-CDN-DISC          PIC S9(5)V99.
03 WS-CDN-DISC-DEC      PIC S99.
03 WS-DISC-AMT          PIC S9(5)V99.
03 FILLER               REDEFINES WS-DISC-AMT.
05                     PIC XX.
05 WS-DISC-AMT-R       PIC S9(05).
03 WS-DISC-AMT-SAVE     PIC S9(5)V99.
03 WS-EXTRA-AMT         PIC S9(7)V99 COMP-3 VALUE +0.
03 WS-TSN-PRICE-CHANGE  PIC X VALUE 'P'.
88 THIS-BE-A-TS-PRICE-CHANGE VALUE 'P'.
03 SAVE-BY-GRACE-FLAG   PIC X VALUE SPACES.

03 SAVE-ZON-VER-FLAG    PIC X VALUE SPACES.
03 WS-ID-NR.
05 WS-ID-NR-NUM       PIC  9(7).
05 WS-ID-NR-NUM-R     REDEFINES WS-ID-NR-NUM.
07 WS-ID-CHAR       PIC  9
OCCURS 7 TIMES
INDEXED BY ID-INDX.
05 WS-ID-NR-CK-DIG    PIC  9.
03 FILLER.
05 WS-CKD-TOTAL       PIC  999.
05 FILLER             REDEFINES WS-CKD-TOTAL.
07 FILLER           PIC XX.
07 WS-CKD-TOTAL-LO  PIC  9.
05 WS-CKD-CALCULATED  PIC  9.
05 WS-CKD-MULT-BY-2   PIC  99.
05 FILLER             REDEFINES WS-CKD-MULT-BY-2.
07 WS-CKD-HI-ORDER  PIC  9.
07 WS-CKD-LO-ORDER  PIC  9.
03 WS-PRM-CARD.
05 WS-PRM-CARD-PREFIX PIC X(6)  VALUE ZEROES.
05 WS-PRM-CARD-BASE-A.
07 FILLER           PIC X(9) VALUE ZEROES.
07 WS-PRM-CARD-CKD  PIC X    VALUE ZEROES.
05 FILLER REDEFINES WS-PRM-CARD-BASE-A.
07 WS-PRM-CARD-NUM  PIC 9(10).
03 FILLER               REDEFINES WS-PRM-CARD.
05 WS-PRM-CARD-NR     PIC 9(15).
05 FILLER             PIC X.
03 WS-PRM-CARD-N REDEFINES WS-PRM-CARD PIC 9(16).
03 WS-ENQ-CARD-NR       PIC 9(15)        VALUE ZEROES.
03 WS-DATE-MDY          PIC 9(6).
03 FILLER        REDEFINES WS-DATE-MDY.
05 WS-DATE-MM        PIC 99.
05 WS-DATE-DD        PIC 99.
05 WS-DATE-YY        PIC 99.
03 WS-CALC-DATE         PIC 9(5).
03 FILLER REDEFINES WS-CALC-DATE.
05 WS-CALC-YEAR      PIC 9(2).
05 WS-CALC-DDD       PIC 9(3).
03 WS-CALC-DAYS         PIC 9(6) VALUE ZEROES.
03 WS-RESET-DAILY       PIC X(7) VALUE '1111111'.
03 WS-PPG-VAR           PIC S9(3)V999 COMP-3.
03 WS-TAX-TRIED-VAR     PIC S9(3)V999 COMP-3.
03 WS-TAX-TRIED         PIC X(1) VALUE 'N'.
03 WS-TAX-PPG-HOLD      PIC 9V999 VALUE ZEROES.
03 HOLD-INP-PRICE-GALLON PIC S9(3)V999 COMP-3 VALUE +0.

03 LEASEWAY-TRAN-FLAG   PIC X   VALUE 'N'.

03 LEASEWAY-CARD.
05 FILLER.
07 LC-ACCT-NR     PIC X(9).
07 FILLER         PIC X.
05 LC-CARD-NR        PIC X(6).
03 LS-DLXF-KEY.
05 FILLER               PIC XX    VALUE 'LS'.
05 FILLER.
07 LDK-ACCT-NR       PIC X(9).
07 LDK-CARD-NR       PIC X(6).
05 FILLER               PIC X(5)   VALUE SPACES.
03 WS-PRM-LAST-DATE-USED   PIC S9(5)  VALUE +0.
03 WS-PRM-USED             PIC S9(5)V99  VALUE +0.
03 WS-PRM-INITIAL          PIC S9(5)V99  VALUE +0.
03 WS-CHARGE-RATE          PIC S9(5)V99  VALUE +0.
03 WS-SUBTRACT-DISCOUNT    PIC S9(5)V99  VALUE +0.
03 SAVE-REBATE-DISCOUNT-AMT    PIC S9(5)V99  VALUE +0.
03 WS-HOLD-RATE            PIC S9(5)V99  VALUE +0.
03 HLD-PURC-ONE-TIME       PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-PURC-ONE-TIME-PRI   PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-PURC-ONE-TIME-SEC   PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-CASH-ONE-TIME       PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-CASH-ONE-TIME-PRI   PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-CASH-ONE-TIME-SEC   PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-CASH-1TIME          PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-PRM-PURC-INITIAL    PIC S9(5)V99 COMP-3 VALUE +0.
03 HLD-PRM-CASH-INITIAL    PIC S9(5)V99 COMP-3 VALUE +0.
03 WS-TOTAL-PURC-AMOUNT    PIC S9(5)V99 COMP-3 VALUE +0.
03 WS-TOTAL-CASH-AMOUNT    PIC S9(5)V99 COMP-3 VALUE +0.
03 HOLD-FP-LAST-TRANSACTION-NR   PIC S9(9) COMP-3.
03 HOLD-FP-DATE-LAST-TRANS     PIC S9(5) COMP-3.
03 HOLD-FP-TIME-LAST-TRANS     PIC S9(6) COMP-3.
03 HOLD-BALLIM-FLAG        PIC X         VALUE SPACE.
03 HOLD-EIBTRNID           PIC X(4).
03 WS-PACKED-CHECK         PIC S9(9) COMP-3 VALUE +0.
03 WS-DRAFT-RECD           PIC X(159).
03 WS-EXPRESS-AVAILABLE    PIC S9(6)V99.
03 WS-PICKUP-RATE          PIC S9(3)V99.
03 VR-VALIDATE-CHECK       PIC 9(10).
03 FILLER REDEFINES VR-VALIDATE-CHECK.
05 VR-FIRST-DIGIT       PIC 9.
05 FILLER               PIC 9(9).
03 FILLER REDEFINES VR-VALIDATE-CHECK.
05 VR-FIRST-NINE        PIC 9(9).
05 VR-CHECK-DIGIT       PIC 9.
03 FILLER REDEFINES VR-VALIDATE-CHECK.
05 VR-FIRST-FOUR        PIC 9(4).
05 FILLER               PIC 9(6).
03 WS-CHECK-DIGIT          PIC 9.
03 WS-CHECK-RESULT         PIC 9(9).
03 WS-FMDL-CUST-ID-FIXED   PIC X(10).
03 RETURN-CDE              PIC X.
03 DATA-LEN                PIC S99  COMP   VALUE +2.
03 WS-REFERENCE-NR      PIC 9(9).
03 FILLER            REDEFINES WS-REFERENCE-NR.
05 WS-REFERENCE-DD   PIC 99.
05 WS-REFERENCE-CTL  PIC 9(7).
03 WS-REF-NINE-NR.
05 WS-REF-NINE-DD    PIC 99.
05 WS-REF-NINE-CTL   PIC 9(7).
03 WS-REF-NINE-NR-R REDEFINES WS-REF-NINE-NR   PIC 9(9).
03 OLD-TRANS-NR.
05 OLD-TRANS-DD       PIC 99.
05 OLD-TRANS-CTL-NR   PIC 9(5).
03 WS-PHONE-WORK.
05  WS-PHONE-AREA-CODE  PIC 9(3).
05  WS-PHONE-PREFIX     PIC 9(3).
05  WS-PHONE-NUMBER     PIC 9(4).
03  WS-BINARY-FIELD         PIC S9(4)   COMP SYNC VALUE +0.
03  FILLER  REDEFINES       WS-BINARY-FIELD.
05  FILLER              PIC X.
05  WS-BINARY-LOW       PIC X.
03 WS-TSCODE.
05 WS-TS-ALP         PIC XX.
05 WS-TS-NUM         PIC 999.
03 WS-TSCODE-COMP       PIC X(10).
03 WS-PRM-RESET-FLAGS   PIC 9(7).
03 WS-RESET-FLAG REDEFINES WS-PRM-RESET-FLAGS
PIC X
OCCURS 7 TIMES.
03 WS-TOTAL-PRICE       PIC S9(5)V99.
03 WS-DEVIATION         PIC S9(5)V999.
03 WS-PERCENTAGES       PIC S9(9) VALUE +0.
03 FILLER               REDEFINES WS-PERCENTAGES.
05 WS-TOTAL-PRCNTAGE  PIC S999V99.
05 WS-CDN-PRCNTAGE    PIC S99V99.
03 WS-DRVNM.
05 WS-DRVN PIC X OCCURS 8 TIMES INDEXED BY DRV-INDX.
03 WS-CURR-DAY-TOTAL    PIC S9(6)V99 VALUE +0 COMP-3.
03 WS-CSTTL             PIC S9(6)V99 VALUE +0.
03 WS-CTR1              PIC S9(7) VALUE +0.
03 SAVE-PCTUP           PIC SV99 VALUE ZERO.
03 WRK-VARIANCE         PIC 99V999 COMP-3 VALUE 0.
03 WRK-VARIANCE2        PIC 99V999 COMP-3 VALUE 0.
03 WS-PPG-TAX-VAR       PIC SV9(5) COMP-3 VALUE ZEROES.
03 OCR-FLAG             PIC S9 VALUE +0.
03 WS-PHONENRX.
05 WS-PHONENR        PIC 9(10).
03 FILLER REDEFINES WS-PHONENRX.
05 WS-PHONENR-AREA   PIC X(03).
05 FILLER            PIC X(07).
03 LTR-VALUE            PIC S9(5) VALUE +0.
03 CURRENT-TIME-IN-SECONDS PIC S9(9) COMP-3.
03 NON-PROD-FLAG        PIC X VALUE ' '.
88 NON-PRODUCTION-REQUEST VALUE 'N'.
03 PGRM-FUNCTION        PIC 9999 VALUE 0.
88 PGRM-FUNCTION-CASH-ONLY    VALUE 0000.
88 PGRM-FUNCTION-OIL-ONLY     VALUE 0001.
88 PGRM-FUNCTION-PRODUCT-ONLY VALUE 1000.
03 FILLER               REDEFINES PGRM-FUNCTION.
05 PRODUCT-PURCHASE    PIC 9.
05 TRAILER-PURCHASE    PIC 9.
05 TRACTOR-PURCHASE    PIC 9.
05 OIL-PURCHASE        PIC 9.
03 GROCERY-PURCHASE    PIC 9(01) VALUE ZERO.
03 GOLD-OK-FLAG        PIC X VALUE SPACES.
88 GOLD-OK  VALUE 'G'.
03 ERROR-FLAG          PIC X VALUE SPACE.
88 THERE-WAS-AN-ERROR VALUE '*'.
03 CP-ERROR-FLAG       PIC X VALUE SPACE.
03 ERROR-TYPE          PIC X(39) VALUE SPACES.
03 SAVE-XTN-FEE        PIC S9(5)V99 COMP-3 VALUE +0.
03 SAVE-XCS-SETTLE-FEE PIC S9(5)V99 COMP-3 VALUE +0.
03 SAVE-EQUIP-FEE      PIC S9(5)V99 COMP-3 VALUE +0.
03 SAVE-SC-FEE         PIC S9(5)V99 COMP-3 VALUE +0.
03 SAVE-HEADER-FLAG    PIC X               VALUE 'N'.
88 THIS-IS-A-SDR-HEADER-2 VALUE 'Y'.
03 SAVE-COUNT          PIC S9(3) COMP-3 VALUE +0.
03 SAVE-AMOUNT         PIC S9(7)V99 COMP-3 VALUE +0.
03 XCS-SETTLE-MSG.
05 FILLER           PIC X(5) VALUE 'STL #'.
05 XCS-SETTLE-COUNT PIC ZZ9.
03 AMOUNT-TO-SETTLE    PIC S9(7)V99 COMP-3 VALUE +0.
03 PRODUCT-TOTAL       PIC S9(7)V99 COMP-3 VALUE +0.
03 PRODUCT-TOTAL2      PIC S9(7)V99 COMP-3 VALUE +0.
03 WS-PO-PRODUCT-TOTAL PIC S9(7)V99 COMP-3 VALUE +0.
03 PRODUCT-AMOUNT      PIC S9(7)V99 COMP-3 VALUE +0.
03 CURRENT-DAY-PROD-TOTAL PIC S9(7)V99 COMP-3 VALUE +0.
03 WS-DAY              PIC 9.
03 PD-YYDDD            PIC 9(5).
03 CHK-DAY             PIC 9.
03 PRMLOG-LENGTH       PIC S999 COMP VALUE +352.
03 CURRENT-DAY         PIC 9.
03 ELAPSED-DAYS        PIC  9(5) COMP-3.
03 REL-CUR-DAY         PIC S9(3) COMP-3.
03 REL-LAST-DAY        PIC S9(3) COMP-3.
03 WS-YTD-GALLONS       PIC S9(9)V99 COMP-3.
03 WS-YTD-FUEL-TOTAL    PIC S9(7)V99 COMP-3.
03 READ-ACCT-FLAG      PIC X   VALUE 'Y'.
88 I-NEED-TO-READ-ACCT      VALUE 'Y'.
03 READ-CUST-FLAG      PIC X   VALUE 'Y'.
88 I-NEED-TO-READ-CUST      VALUE 'Y'.
03 WS-RESET-ONE-TIME-PURC-FLAG PIC X(1) VALUE 'Y'.
88 WS-RESET-ONE-TIME-PURC            VALUE 'Y'.
03 WS-RESET-ONE-TIME-CASH-FLAG PIC X(1) VALUE 'Y'.
88 WS-RESET-ONE-TIME-CASH            VALUE 'Y'.
03 WS-PRMINFO-WRITE-SW         PIC X    VALUE ' '.
88 PRMINFO-WRITE                     VALUE 'Y'.
03 WS-PRMINFO-REWRITE-SW       PIC X    VALUE ' '.
88 PRMINFO-REWRITE                   VALUE 'Y'.
03 WS-SAVE-DIESEL-LIMIT        PIC S9(5) COMP-3.
03 WS-SAVE-REEFER-LIMIT        PIC S9(5) COMP-3.
03 HOLD-TRIP-NUMBER    PIC X(10).
03 HOLD-TRIP-NUMBER-2  PIC X(10).
03 HOLD-TRIP-NUMBER-3  PIC X(10).
03 HOLD-TRIP-NUMBER-I  PIC X(10).
03 WORK-TRIP-EDIT.
05 TRIP-EDIT-CHAR PIC X OCCURS 10 TIMES.
03 WORK-EDIT-EDIT.
05 EDIT-EDIT-CHAR PIC X OCCURS 10 TIMES.
03 WORK-INDEX         PIC 99    VALUE ZEROES.
03 CANCEL-FLAG        PIC X     VALUE 'N'.
03 WS-CONTINUE-CANCEL PIC X     VALUE SPACE.
03 WS-NETW-OK         PIC X     VALUE 'N'.
03 WS-TOTAL-OTHER     PIC S9(7)V99  VALUE +0.
03 SC-HOLD-AREA       PIC X(1021).
03 SCFUELP-STATUS-BYTE PIC S999 COMP-3 VALUE +0.
88 SCFUELP-NOT-FOUND VALUE +1.
03 WRK-PO-PRODUCT-CODE PIC XX.
03 FILLER                REDEFINES WRK-PO-PRODUCT-CODE.
05 WRK-PO-PROD-CODE-1 PIC X.
05 WRK-PO-PROD-CODE-2 PIC X.
03 FILLER                REDEFINES WRK-PO-PRODUCT-CODE.
05 WRK-PO-PROD-N    PIC 99.
03 READY-TO-UPDATE-UNITMST   PIC X VALUE 'N'.

03 FILLER.

05 WS-CANADIAN-DOLLARS    PIC S9(9)V9(5) VALUE ZEROS.
05 WS-US-DOLLARS          PIC S9(9)V9(5) VALUE ZEROS.
05 WS-GALLONS             PIC S9(5)V999 VALUE ZEROS.
05 WS-AMOUNT              PIC S9(5)V999 VALUE ZEROS.
05 WS-LITERS              PIC S9(5)V999 VALUE ZEROS.
05 WS-QTS                 PIC  9(2)     VALUE ZEROS.
05 WS-PPG                 PIC 9(3)V999  VALUE ZEROES.
05 WS-PPL                 PIC 9(3)V999  VALUE ZEROES.
05 HLD-EXPECTED-AMOUNT    PIC S9(7)V99  VALUE ZEROS.
05 QUART-TO-LITER-RATE    PIC 9V9(6) VALUE 0.946332.
05 LITER-TO-QUART-RATE    PIC 9V9(6) VALUE 1.056712.
05 GALLON-TO-LITER-RATE   PIC 9V9(6) VALUE 3.785329.
05 LITER-TO-GALLON-RATE   PIC 9V9(6) VALUE 0.264177.
05 LIMITS-ALTERED-FOR-PO  PIC X      VALUE SPACES.
05 US-TO-CAN-RATE         PIC S9999V9(08) VALUE ZERO.
05 CAN-TO-US-RATE         PIC S9999V9(08) VALUE ZERO.
03 WS-DRIVER-NR.
05 WS-DRIVER-NR-1-TO-5    PIC X(5).
05 WS-DRIVER-NR-6-TO-7    PIC X(2).
05 FILLER                 PIC X(9).
03 FMT-DRIVER-NR.
05 FMT-DRIVER-NR-1-TO-5   PIC X(5).
05 FILLER                 PIC X    VALUE '$'.
05 FMT-DRIVER-NR-7-TO-8   PIC X(2).
03 WRK-HUB-READING           PIC 9(6)V9.
03 FILLER            REDEFINES WRK-HUB-READING.
05 WRK-HUB-1ST-6          PIC X(6).
05 FILLER                 PIC X.
03 WS-SEL-DISC               PIC S9(3)V99 COMP-3.
03 WS-SC-REV                 PIC S9(3)V99 COMP-3.
03 WS-TRANS-NR               PIC 9(8).
03 FILLER REDEFINES WS-TRANS-NR.
05 WS-TRANS-ROLL          PIC 9(1).
05 WS-TRANS-DD            PIC 9(2).
05 WS-TRANS-SEQ           PIC 9(5).
03 WS-TRANS-NR-WORK          PIC 9(9).
03 FILLER REDEFINES WS-TRANS-NR-WORK.
05 FILLER                 PIC 9(3).
05 WS-TRANS-NR-WORK-ROLL  PIC 9(1).
05 WS-TRANS-NR-WORK-SEQ   PIC 9(5).
03 WRK-HHMMSS                PIC 9(6).
03 FILLER       REDEFINES WRK-HHMMSS.
05 WRK-HH                 PIC 99.
05 WRK-MM                 PIC 99.
05 FILLER                 PIC 99.
03 FILLER       REDEFINES WRK-HHMMSS.
05 WRK-HHMM               PIC 9(4).
05 FILLER                 PIC 99.
03 HLD-DELIV-TIME            PIC 9(4).
03 DELIV-TIME-CTR            PIC 9(3).
03 ITLG-RECORD.
05 FILLER                 PIC X(5)  VALUE 'ITRC '.
05 ITLG-DATA-STREAM2      PIC X(800).
03 WS-ITDQ-LENGTH            PIC S9(4) COMP VALUE +805.
03 WS-LOOP-FLAG              PIC X          VALUE 'N'.
03 WS-EXIT-FLAG              PIC X          VALUE 'N'.
03 WS-LOOP-FP-0100           PIC X          VALUE 'N'.
03 WS-EXIT-PPG-CHECK         PIC X          VALUE 'N'.
03 WS-ADD-TO-BILLABLE-FLAG   PIC X          VALUE 'N'.
03 WS-WORK-AMOUNT            PIC S9(7)V99 COMP-3.
03                           PIC X.
88 WS-TRI-STATE-ACCT                     VALUE 'Y'.
88 WS-TRI-STATE-ACCT-NOT                 VALUE 'N'.
03 HLD-CRR-KEY.
05 HLD-CRR-CUSTOMER-TYPE      PIC XX    VALUE 'CU'.
05 HLD-CRR-CUSTOMER-ID        PIC X(10).
05 HLD-CRR-SYSTEM-ID          PIC X(4)  VALUE 'FM  '.
05 HLD-CRR-REPORT-CODE        PIC S9(5) COMP-3 VALUE +12.
05 HLD-CRR-REPORT-FREQUENCY   PIC X     VALUE 'D'.
05 HLD-CRR-RECV-CUSTOMER-TYPE PIC XX    VALUE 'AC'.
05 HLD-CRR-RECV-CUSTOMER-ID   PIC X(10).
05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
03 MA-CRR-KEY.
05 MA-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
05 MA-CRR-CUSTOMER-ID         PIC X(10).
05 MA-CRR-SYSTEM-ID           PIC X(4)  VALUE 'FM  '.
05 MA-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +85.
05 MA-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
05 MA-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
05 MA-CRR-RECV-CUSTOMER-ID    PIC X(10).
05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
03 BF-CRR-KEY.
05 BF-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
05 BF-CRR-CUSTOMER-ID         PIC X(10).
05 BF-CRR-SYSTEM-ID           PIC X(4)  VALUE 'BF  '.
05 BF-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +3.
05 BF-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
05 BF-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
05 BF-CRR-RECV-CUSTOMER-ID    PIC X(10).
05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
03 SUB-PROD-CRR-KEY.
05 SP-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
05 SP-CRR-CUSTOMER-ID         PIC X(10).
05 SP-CRR-SYSTEM-ID           PIC X(4)  VALUE 'FM  '.
05 SP-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +93.
05 SP-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
05 SP-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
05 SP-CRR-RECV-CUSTOMER-ID    PIC X(10).
05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
03 CALC-DISCOUNT-ONLY            PIC X     VALUE SPACES.
03 WS-CASH-AMT-AVAIL             PIC S9(7)V99 VALUE ZEROES.
03 WS-TOTAL-TRACTOR-GALLONS      PIC S9(9)  VALUE ZEROES.
03 WS-READ-FMRELAT-SC-FLAG       PIC X      VALUE 'N'.
03 WS-FMRELAT-SC-REC             PIC X(750).
03 WS-READ-FMRELAT-CH-FLAG       PIC X      VALUE 'N'.
03 WS-FMRELAT-CH-REC             PIC X(750).
03 WS-READ-FMRELAT-CO-FLAG       PIC X      VALUE 'N'.
03 WS-FMRELAT-CO-REC             PIC X(750).
03 WS-RMR-SC-FOUND-SW            PIC 9.
03 WS-RMR-CH-FOUND-SW            PIC 9.
03 WS-RMR-CO-FOUND-SW            PIC 9.
03 NBC-READ-STATUS               PIC X      VALUE ' '.
03 HLD-NBC-KEY.
05 HLD-NBC-CARD-LOCATION.

10 HLD-NBC-CARD-NUMBER     PIC X(16).
10 HLD-NBC-LOCATION-CODE   PIC X(10).
05 HLD-NBC-DATE-ADD           PIC 9(7) COMP-3.
05 HLD-NBC-TIME-ADD           PIC 9(9) COMP-3.
03 TRAILER-HOUR-WORK-FIELDS.
05 WS-PREV-HOURS        PIC S9(6)V9 COMP-3 VALUE ZEROS.
05 WS-CURRENT-HOURS     PIC S9(6)V9 COMP-3 VALUE ZEROS.
05 WS-REEFER-HPG        PIC S9(6)V9 COMP-3 VALUE ZEROS.
03 WS-RCP-WORK-FIELDS.
05 WS-CHECK-RCP-INP     PIC 9(1)V9(4).
05 WS-CHECK-RCP-SCM     PIC 9(1)V9(4).
05 WS-RCP-WORK-FLD      PIC 9(1)V9(5).
05 WS-RCP-WORK-TAX1     PIC 9(3)V99.
05 WS-RCP-WORK-TAX2     PIC 9(3)V99.
05 WS-RCP-QST-RATE      PIC 9(1)V9(5) VALUE ZERO.
05 WS-RCP-GST-RATE      PIC 9(1)V9(5) VALUE ZERO.
05 WS-RCP-PPL           PIC 9(1)V9(5).
03 WS-TAX-WORK-FIELDS.
05 WS-TAX-QUANTITY      PIC 9(7)V99.
05 WS-TAX-PPL           PIC 9(3)V9(5).
05 WS-TAX-COST          PIC 9(7)V99.
05 WS-TAX-COST-HOLD     PIC 9(7)V99.
05 WS-TAX-AMOUNT        PIC 9(7)V99.
05 WS-TAX-PPL-WORK      PIC 9(3)V9(5).
05 WS-TAX-PST-RATE      PIC 9(3)V9(5) VALUE ZERO.
05 WS-TAX-GST-RATE      PIC 9(3)V9(5) VALUE ZERO.

03 WS-CXML-UNPACK               PIC 9(09)  VALUE ZERO.
03 WS-CXML-DATA.
05 FILLER                    PIC X(03) VALUE 'US '.
05 WS-CXML-DATE              PIC 9(05).
05 FILLER                    PIC X(01) VALUE ' '.
05 WS-CXML-TIME              PIC 99B99B99.
05 FILLER                    PIC X(01) VALUE ' '.
05 WS-CXML-WORK              PIC X(114).
03 WS-SUB-PROD-WORK-FIELDS-X.
05 WS-CP-FOR-SUBPROD        PIC X(1) VALUE 'N'.
05 WS-READ-SCSTATE-XY-SW    PIC X(1) VALUE 'N'.
05 WS-READ-SCSTATE-SW       PIC X(1) VALUE 'N'.
05 WS-NR2-CP-SET            PIC X(01) VALUE 'N'.
05 WS-NR1-CP-SET            PIC X(01) VALUE 'N'.
05 WS-REF-CP-SET            PIC X(01) VALUE 'N'.
03 WS-SUB-PROD-WORK-FIELDS.
05 WS-SUB-PROD-IN           PIC X(15).
05 WS-SUB-PROD-OUT          PIC X(3).
05 WS-SUB-PROD-CODE         PIC X(3).
05 WS-SUB-PROD-CODE-TYPE    PIC X(1).
05 WS-SUB-PROD-FUEL-TYPE    PIC X(2).
05 WS-SUB-PROD-FOUND        PIC X(1).
05 WS-NATS-PROD-IN          PIC X(3).
05 WS-NATS-PROD-OUT         PIC X(15).
05 WS-TAX-CALC-AMT          PIC 9V9(5) VALUE ZEROS.
05 WS-HOLD-NR2-SUB-PROD-IN  PIC X(15).
05 WS-HOLD-NR1-SUB-PROD-IN  PIC X(15).
05 WS-HOLD-REF-SUB-PROD-IN  PIC X(15).
05 WS-HOLD-OTH-SUB-PROD-IN  PIC X(15).
05 WS-HOLD-NR2-CP-SUFFIX    PIC X(02) VALUE SPACES.
05 WS-HOLD-NR1-CP-SUFFIX    PIC X(02) VALUE SPACES.
05 WS-HOLD-REF-CP-SUFFIX    PIC X(02) VALUE SPACES.
05 WS-CP-SUFFIX             PIC X(02) VALUE SPACES.
05 CP-IDX                   PIC 9(01).
05 WS-NR2-RP-PRICE-TABLE.
10 WS-NR2-RP-PRICE-INFO OCCURS 7 TIMES.
15 WS-NR2-RP-DATE       PIC S9(7)      COMP-3.
15 WS-NR2-RP-NR1-PPG    PIC S9V9999    COMP-3.
15 WS-NR2-RP-NR2-PPG    PIC S9V9999    COMP-3.
05 WS-NR1-RP-PRICE-TABLE.
10 WS-NR1-RP-PRICE-INFO OCCURS 7 TIMES.
15 WS-NR1-RP-DATE       PIC S9(7)      COMP-3.
15 WS-NR1-RP-NR1-PPG    PIC S9V9999    COMP-3.
15 WS-NR1-RP-NR2-PPG    PIC S9V9999    COMP-3.
05 WS-REF-RP-PRICE-TABLE.
10 WS-REF-RP-PRICE-INFO OCCURS 7 TIMES.
15 WS-REF-RP-DATE       PIC S9(7)      COMP-3.
15 WS-REF-RP-NR1-PPG    PIC S9V9999    COMP-3.
15 WS-REF-RP-NR2-PPG    PIC S9V9999    COMP-3.
03 WS-ONL-CROSS-BORDER-FIELDS.
05 WS-ONL-CRD-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
05 WS-ONL-ATM-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
05 WS-ONL-POS-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
03 WS-XBORDER-FIELDS.
05 WS-XBORDER-DEFAULT-PCT     PIC SV9(5)  COMP-3
VALUE +.00800.
05 WS-XBORDER-ASSMT-PCT       PIC SV9(5)  COMP-3 VALUE +0.
05 WS-XBORDER-ASSMT-AMT       PIC S9(7)V99
COMP-3 VALUE +0.
03 WS-HLD-CAR-TAX-ID             PIC X(10)   VALUE SPACES.
03 WS-HOLD-UIWA-TAX-FIELDS.
05 WS-HOLD-UIWA-NR2-COST-SC  PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR2-PPU-SC   PIC S9(02)V9(3)    COMP-3.
05 WS-HOLD-UIWA-NR2-SUB-PROD PIC X(03).
05 WS-HOLD-UIWA-NR2-QTY      PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR2-QTY-SC   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR2-QTY-US   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR1-COST-SC  PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR1-PPU-SC   PIC S9(02)V9(3)    COMP-3.
05 WS-HOLD-UIWA-NR1-SUB-PROD PIC X(03).
05 WS-HOLD-UIWA-NR1-QTY      PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR1-QTY-SC   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-NR1-QTY-US   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-REF-PPU-SC   PIC S9(02)V9(3)    COMP-3.
05 WS-HOLD-UIWA-REF-COST-SC  PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-REF-SUB-PROD PIC X(03).
05 WS-HOLD-UIWA-REF-QTY      PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-REF-QTY-SC   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-REF-QTY-US   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OTH-PPU-SC   PIC S9(02)V9(3)    COMP-3.
05 WS-HOLD-UIWA-OTH-COST-SC  PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OTH-SUB-PROD PIC X(03).
05 WS-HOLD-UIWA-OTH-QTY      PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OTH-QTY-SC   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OTH-QTY-US   PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OIL-COST-SC  PIC S9(07)V99      COMP-3.
05 WS-HOLD-UIWA-OIL-QTY      PIC S9(07)         COMP-3.
05 WS-HOLD-UIWA-PR1-COST     PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR1-COST-SC  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR1-COST-US  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR2-COST     PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR2-COST-SC  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR2-COST-US  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR3-COST     PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR3-COST-SC  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-PR3-COST-US  PIC S9(7)V99       COMP-3.
05 WS-HOLD-UIWA-TAX-AMT-SC   PIC S9(7)V99 VALUE +0 COMP-3.
05 WS-ORIG-UIWA-TAX-AMT-SC   PIC S9(7)V99 VALUE +0 COMP-3.
03 WS-HOLD-BILL-FIELDS.
05 WS-HOLD-BILLABLE          PIC S9(5)V99 VALUE +0 COMP-3.
05 WS-HOLD-NON-BILLABLE      PIC S9(5)V99 VALUE +0 COMP-3.
03 WS-RET-PROD-PRICE            PIC S9(5)V99 VALUE +0 COMP-3.
03 WS-INTERVAL-CONTROL-X         PIC X(06).
03 WS-INTERVAL-CONTROL
REDEFINES
WS-INTERVAL-CONTROL-X     PIC 9(06).
03 WS-INTERVAL-CONTROL-PACKED    PIC S9(07) COMP-3.




01 WS-FMTB-COMMAREA.
05 WS-FMTB-CRD-NBR               PIC X(20).
05 WS-FMTB-MRCH-NBR              PIC X(10).
05 WS-FMTB-PRE-AUTH-DT           PIC X(10).
05 WS-FMTB-PRE-AUTH-TS           PIC X(26).
05 WS-FMTB-POST-FLG              PIC X(01).



01  WS-FLAGS-AND-LIMITS.
05 WS-FP-ACCT-CODE            PIC X(10).
05 WS-UNITMST-RECD-SW         PIC X(01)  VALUE 'Y'.
05 WS-FL-HUBOMETER-FLAG       PIC X(01).
88 HUB-READING-REQUIRED        VALUE 'Y','P','R'.
05 WS-FL-DRIVER-NAME-FLAG     PIC X(01).
88 CO-INPUTS-DRIVER-NAME       VALUE 'D'.
05 WS-FL-TRIP-ALLOWANCE-FLAG  PIC X.
88 TRIP-ALLOWANCE-SET          VALUE 'T'.
05 WS-FL-TRIP-FLAG            PIC X.
88 TRIP-NR-REQ-THIS-UNIT       VALUES 'T' 'B' 'D' 'C'.
88 TRIP-NR-ENTERED             VALUE 'E'.
05 WS-FL-CASH-ADV-STATUS      PIC X.
05 WS-FL-CASH-ADV-USED-DLY    PIC S9(9)V99     VALUE ZEROS.
05 WS-FL-CASH-ADV-FLAG        PIC X.
05 WS-FL-CASH-ADV-RATE        PIC S9V99 COMP-3 VALUE ZEROS.
05 WS-FL-OIL-BLOCK            PIC X.
88 NO-OIL-PURCHASE-ALLOWED-THIS-U VALUE 'Y'.
05 WS-FL-MAX-OIL-QTS          PIC S999 COMP-3 VALUE ZEROS.
05 WS-FL-SERVICE-RESTRICTION  PIC X.
88 SELF-SERVICE-ONLY       VALUE 'S'.
88 SELF-MINI-SERVICE       VALUE 'M'.
05 WS-FL-REFER-BLOCK          PIC X.
88 REFER-IS-BLOCKED        VALUE 'Y'.



01  WS-REUSED-FLAGS-AND-LIMITS.
05 WS-RFL-CASH-ADV-INIT       PIC S9(9)V99    VALUE ZEROS.
05 WS-RFL-CASH-ADV-USED       PIC S9(9)V99    VALUE ZEROS.
05 WS-RFL-CASH-ADV-INIT-DLY   PIC S9(9)V99    VALUE ZEROS.
05 WS-RFL-CASH-ADV-DAILY-FLAG PIC X.
88 CASH-ADV-DAILY-SET          VALUE '*'.
05 WS-RFL-MAX-PURC-VARIANCE   PIC S999V99     VALUE ZEROS.
05 WS-RFL-MAX-PURC-VARIANCE-R REDEFINES
WS-RFL-MAX-PURC-VARIANCE   PIC S9V9999.
05 WS-RFL-MAX-PURC-DLY-FUEL   PIC S9(9)V99    VALUE ZEROS.




01  WS-BUSINESS-DATE-WORK-FIELDS.
05 WS-BUSINESS-DATE-YYYYMMDD.
10 WS-BUSINESS-DATE-YYYYMMDD-N    PIC 9(8).
05 WS-BUSINESS-DATE-CYYMMDD          PIC 9(7).
05 FILLER REDEFINES WS-BUSINESS-DATE-CYYMMDD.
10 WS-BUSINESS-DATE-CENT          PIC 9(1).
10 WS-BUSINESS-DATE-YYMMDD        PIC 9(6).
05 WS-BUSINESS-DATE-YYYYMMDD-FMT     PIC XXXXBXXBXX.
05 WS-BUSINESS-TIME-FMT              PIC 99B99B99.
05 WS-BUSINESS-DATE-YYYYMM           PIC 9(6).




01  WS-CURRENT-DATE-WORK-FIELDS.
05 WS-CURRENT-DATE-CYYDDD           PIC 9(6).
05 FILLER REDEFINES WS-CURRENT-DATE-CYYDDD.
10 FILLER                        PIC 9(1).
10 WS-CURRENT-DATE-YYDDD         PIC 9(5).

05 WS-CURRENT-DATE-YYYYDDD          PIC 9(7).

05 WS-CURRENT-DATE-CMMDDYY          PIC 9(7).
05 FILLER REDEFINES WS-CURRENT-DATE-CMMDDYY.
10 FILLER                        PIC 9(1).
10 WS-CURRENT-DATE-MMDDYY        PIC 9(6).

05 WS-CURRENT-YYYYMMDD-FMT          PIC 9999B99B99.
05 WS-CURRENT-DATE-YYYYMMDD         PIC 9(8).
05 FILLER REDEFINES WS-CURRENT-DATE-YYYYMMDD.
10 WS-CURRENT-DATE-YYYYMMDD-CENT PIC 9(2).
10 WS-CURRENT-DATE-YYYYMMDD-YY   PIC 9(2).
10 WS-CURRENT-DATE-YYYYMMDD-MM   PIC 9(2).
10 WS-CURRENT-DATE-YYYYMMDD-DD   PIC 9(2).
05 FILLER REDEFINES WS-CURRENT-DATE-YYYYMMDD.
10 FILLER                        PIC 9(2).
10 WS-CURRENT-DATE-YYMMDD        PIC 9(6).


05 WS-CURRENT-DATE-WEEKDAY-SS       PIC 9(1).
05 WS-CURRENT-DATE-WEEKDAY-MS       PIC 9(1).
05 WS-CURRENT-TS.
10 WS-CURRENT-TS-DATE            PIC X(10).
10 FILLER                        PIC X(01).
10 WS-CURRENT-TS-TIME            PIC X(08).
10 FILLER                        PIC X(07).
05  WS-CURRENT-GMT.
10  WS-GMT-DATE                 PIC X(10).
10  FILLER                      PIC X(01).
10  WS-GMT-TIME                 PIC X(08).
10  FILLER                      PIC X(07).
05 WS-POSTING-TIME                  PIC 99B99B99.


COPY TSFMW250 IN CPYREL.

01  SETTLEMENT-COMMAREA.
05 FILLER                   PIC X(4)  VALUE 'FP -'.
05 SETL-LOC-O               PIC X(6).
05 SETL-CHK-NR-O.
10 SETL-CHK-NR-NUM       PIC 9(10).
05 SETL-PRINTER-FLAG        PIC X     VALUE SPACE.
05 SETL-SUB-ID              PIC X.
05 SETL-BALANCE-PARAM-FLAG  PIC X(01).
05 SETL-CLOSING-PARAM-FLAG  PIC X(01).
05 SETL-PAYMENT-PARAM-FLAG  PIC X(01).
05 SETL-BALANCE-REQ-FLAG    PIC X(01).
05 SETL-CLOSING-REQ-FLAG    PIC X(01).
05 SETL-PAYMENT-REQ-FLAG    PIC X(01).
05 FILLER                   PIC X(195) VALUE SPACES.
01  SETTLEMENT-COMMAREA-RETURN REDEFINES SETTLEMENT-COMMAREA.
05 SETL-RETURN-ERROR-NUMBER PIC S9(5) COMP-3.
05 SETL-RETURN-MESSAGE.
10 FILLER                PIC X(08).
10 SETL-RETURN-CNTL-NR   PIC 9(7).
10 FILLER                PIC X(205).

01  SETTLEMENT-DISPLAY-MSG.
05 FILLER                   PIC X(07)  VALUE '| STL: '.
05 SETL-DISPLAY-MESSAGE     PIC X(31).


01  WS-FPLG-COMMAREA.
05 WS-FPLG-CA-USILOG     PIC X(0220).
05 WS-FPLG-CA-FMLOG      PIC X(2040).




01  WS-TSFMO0TX-COMM-AREA.
05 WS-TSFMO0TX-COMM-PGM          PIC X(08).
05 WS-TSFMO0TX-COMM-PROCESS-TYPE PIC X(01).
05 WS-TSFMO0TX-COMM-FMLOG        PIC X(2040).
05 FILLER                        PIC X(452).

01  FILLER.

03 FND-RRN            PIC S9(7) VALUE +0 COMP SYNC.
03 ORDRFIL-RRN        PIC S9(7) VALUE +0 COMP SYNC.
03 ORDRPTR-RRN        PIC S9(7) VALUE +0 COMP SYNC.
03 SVC-RRN            PIC S9(7) VALUE +0 COMP SYNC.
03 FMLOG-RRN          PIC S9(7) VALUE +0 COMP SYNC.
03 DRFTLG1-RRN        PIC S9(7) VALUE +0 COMP SYNC.
03 PRMLOG-RRN         PIC S9(8) VALUE +0 COMP SYNC.
03 SAVE-RRN  COMP-3   PIC  9(7) VALUE 0.
03 SCMSTR-KEY         PIC X(10)   VALUE SPACES.
03 FILLER       REDEFINES SCMSTR-KEY.
05 SCM-KEY-ST      PIC XX.
05 SCM-KEY-NUM     PIC XXX.
05 FILLER          PIC X(5).
03 SCMSTR-KEY-TEMP    PIC X(10)   VALUE SPACES.
03 CDEQUIP-KEY        PIC X(15) VALUE SPACES.
03 SCFUELP-KEY        PIC X(15) VALUE SPACES.
03 RATE-KEY-RATE      PIC X VALUE SPACE.
03 WS-RRN-MATCHED     PIC 9(7) VALUE ZEROS.
03 WRK-RRN            PIC 9(7) VALUE ZEROS.
03 FILLER REDEFINES WRK-RRN.
05 WRK-RRN-1ST     PIC 9(1).
05 FILLER          PIC 9(6).

01 WS-FF-LOG-RECD         PIC X(341) VALUE SPACES.
01 FILLER                 REDEFINES WS-FF-LOG-RECD.
03 FF-LOG-RECD-ID       PIC XX.
03 FF-LOG-OP-ID         PIC XXXX.
03 FF-LOG-TERM-ID       PIC XXXX.
03 FF-LOG-DATE          PIC S9(5) COMP-3.
03 FF-LOG-TIME          PIC S9(6) COMP-3.
03 FF-LOG-CHNG-TYPE     PIC XX.
03 FF-LOG-SC-CODE       PIC X(5).
03 FILLER.
05 FF-LOG-DATA-1-FLAG PIC X.
05 FF-LOG-DATA-1-OLD.
07 FILLER           PIC 99V999 COMP-3.
07 FILLER           PIC 99V999 COMP-3.
07 FILLER           PIC 99V999 COMP-3.
03 FILLER.
05 FF-LOG-DATA-2-FLAG PIC X.
05 FF-LOG-DATA-2-NEW.
07 FF-LOG-DATA-2-1  PIC 99V999 COMP-3.
07 FF-LOG-DATA-2-2  PIC 99V999 COMP-3.
07 FF-LOG-DATA-2-3  PIC 99V999 COMP-3.
01  FILLER REDEFINES WS-FF-LOG-RECD.

03 FF-SETTLE-CANCEL-ID  PIC XX.
03 FF-SETTLE-RECD       PIC X(130).
03 FF-SETTLE-CANCEL-DATE PIC S9(7) COMP-3.
03 FF-SETTLE-CANCEL-TIME PIC S9(7) COMP-3.
03 FF-SETTLE-CANCEL-TERMID PIC XXXX.

01  FILLER.
05  TST-KEY.
10  TST-PHONE-NUMBER   PIC 9(10)     VALUE ZERO.
05 FILLER                  REDEFINES TST-KEY.
10 TST-KEY-AREA-CODE.
15 FILLER             PIC X.
15 TST-KEY-AREA-MID   PIC X.
15 FILLER             PIC X.
10 TST-KEY-PREFIX        PIC XXX.
10 FILLER                PIC X(4).

COPY SETINFOC IN CPYREL.
COPY BTCHSETC IN CPYREL.
COPY CSITELGC IN CPYREL.
COPY CSTANDC  IN CPYREL.
COPY CXXCW0CS IN CPYREL.
COPY TSXCW020 IN CPYREL.
COPY TSFMW667 IN CPYREL.
COPY TSFMW030 IN CPYREL.
COPY TSFMW040 IN CPYREL.
COPY CXISW001 IN CPYREL.
COPY DRAFTSC  IN CPYREL.
COPY DRFTLGC  IN CPYREL.
COPY CDXLATEC IN CPYREL.
COPY ZIPXREFC IN CPYREL.
COPY UNITMSTC IN CPYREL.
COPY SCMSTRC  IN CPYREL.
COPY SCLOCATC IN CPYREL.
COPY CXUTW123 IN CPYREL.

COPY CXUTW200 IN CPYREL.
COPY PROCCTLC IN CPYREL.
COPY USISET   IN CPYREL.
COPY BMSATTR  IN CPYREL.
COPY TIMDAT   IN CPYREL.
COPY CXXCW013 IN CPYREL.
COPY CXACW040 IN CPYREL.

COPY CXACW031 IN CPYREL.
COPY TSXCW110 IN CPYREL.
COPY CXXCW330 IN CPYREL.
COPY PRMPINC  IN CPYREL.
COPY CXPSW230 IN CPYREL.


COPY PRDLMITC IN CPYREL.
COPY PRDUSEDC IN CPYREL.

COPY PRODCODC IN CPYREL.
COPY TSFMW230 IN CPYREL.
COPY CXXCW052 IN CPYREL.

COPY XCPRODCC IN CPYREL.

01  WS-HOLD-SC-RECORD.
05 WS-HOLD-SC-RECORD-KEY       PIC X(010).
05 FILLER                      PIC X(281).
05 WS-HOLD-SC-COST-PLUS-FLAG   PIC X(001).
05 FILLER                      PIC X(142).
05 WS-HOLD-SC-SETTLE-PMT-CYC   PIC X(001).
05 FILLER                      PIC X(015).
05 WS-HOLD-SC-SETTLE-PMT-METH  PIC X(002).
05 FILLER                      PIC X(569).
COPY CDADDRC.
COPY CDEQUIPC.
COPY SCFUELPC.

COPY DCREDITL.

COPY DCRDLMTS.

COPY CXXCW002.
COPY CXXCW003.
COPY ORDRFILC.
COPY CDCORDFL.
COPY ORDRPTRC.
COPY CDCORDPT.
COPY CXUTW400.
COPY FPDLGC.
COPY CXORW002.
COPY CDCORDFL.
COPY CXORW003.
COPY OPACDATA.
COPY OPACSF1C.
COPY PRMCARDC IN CPYUAT.
01  WS-HOLD-PRM-CARD-RECORD     PIC X(590).
COPY PRMINFOC.
COPY PRMXREFC.
COPY CDNCUSTC.
COPY CODESC.
COPY DSMSTRC.

COPY DSCARDC.
COPY DSTRANC.
COPY TSDSW010.
COPY CARDNETC IN CPYREL.
COPY CXXCW001.
COPY PRMDLXFC.
COPY TSFMW001.
COPY PRMRLOGC IN CPYREL.
COPY POMSTRC.
COPY FMLOG2C IN CPYREL.

COPY PRDDISC IN CPYREL.

01  WS-HOLD-FMLOG                       PIC X(2040).

COPY FMPOMSTC.
COPY FMPOOLC.
COPY CXXCW0CL.
COPY CXITW001.
COPY CDREPRTC.
COPY CXORW001.
COPY SCSTATEC.
COPY OTHFUELC.
COPY TSFMW0SO.
COPY FMRELATC.
COPY PRDFMRMC.
COPY PRDCUSTC
REPLACING ==:PRDCUST:==     BY ==PRDCUST==
==:PRDCST:==      BY ==PRDCST==.
COPY PRDSCMMC
REPLACING ==:PRDSCMM:==     BY ==PRDSCMM==
==:PRDSCM:==      BY ==PRDSCM==.
COPY TSMMW003.
COPY TSXCW005.
COPY TSXCW007 REPLACING ==:PREF:==
BY ==S007-==.

COPY TSXCW050.

COPY CXXCW170.

COPY CXPSW080.

COPY CNTRY2C.

COPY TSFMW0LP.

COPY TSFMWNPR.

COPY TSFMW270 IN CPYREL.

COPY TSFMW285 IN CPYREL.

COPY TSFMW290.


01  INTRA-DAY-ERROR-LAYOUT.
05 FILLER                           PIC X(02) VALUE '1E'.
05 IDEL-ACCOUNT-CODE                PIC X(05).
05 IDEL-UNIT-NUMBER                 PIC X(06).
05 IDEL-LOCATION-CODE               PIC X(05).
05 IDEL-LOCATION-NAME               PIC X(15).
05 IDEL-LOCATION-CITY               PIC X(12).
05 IDEL-LOCATION-STATE              PIC X(02).
05 IDEL-TRANSACTION-TIME            PIC 9(04).
05 IDEL-TRIP-NUMBER                 PIC X(10).
05 IDEL-HUB-READING                 PIC 9(06).
05 IDEL-CARD-NUMBER                 PIC 9(10).
05 IDEL-EMPLOYEE-NUMBER             PIC X(16).
05 IDEL-DL-STATE                    PIC X(02).
05 IDEL-DL-NR                       PIC X(20).
05 FILLER                           PIC X(08) VALUE SPACES.
05 FILLER                           PIC X(02) VALUE '2E'.
05 IDEL-PO-NUMBER                   PIC X(10).
05 IDEL-TRAILER-NUMBER              PIC X(10).
05 IDEL-CUSTOMER-ID                 PIC X(10).
05 IDEL-TRAILER-HUBX.
10 IDEL-TRAILER-HUB              PIC 9(6)V9.
05 IDEL-TRANSACTION-DATE            PIC 9(6).
05 FILLER                           PIC X(83) VALUE SPACES.
05 FILLER                           PIC X(02) VALUE '3E'.
05 IDEL-RETURN-CODE                 PIC 9(05).
05 IDEL-ERROR-MESSAGE               PIC X(121).

COPY FMRACKC.
COPY FMRACKHC.
COPY SCRACKC.
COPY SILIMITC.
COPY TSSIW010.
COPY CDAUDITC.
COPY CXZZW460.

COPY CXXCW110.
COPY CXXCW130.
COPY CXXCW0PL.
COPY CXXCW0PU.

01 FILLER.
03 DUP-CONTROL-NR       PIC S9(7) COMP-3 VALUE +0.

COPY CXXCW038.

01  FILLER.

05 WS-CANCEL-AREA.
10 WS-CANCEL-SC-CODE   PIC X(5).
10 WS-CANCEL-CARD-NR   PIC X(10).
10 WS-CANCEL-TRANS-NR  PIC X(07).
10 FILLER REDEFINES WS-CANCEL-TRANS-NR.
15 WS-CNL-TRANS-NR-N PIC 9(07).
10 FILLER REDEFINES WS-CANCEL-TRANS-NR.
15 WS-CNL-TRANS-NR-6 PIC X(06).
15 FILLER            PIC X(01).
10 WS-PC-CANCEL-FLAG   PIC X(01)  VALUE 'N'.
88 THIS-IS-A-PC-CANCEL         VALUE 'Y', 'A'.
88 THIS-IS-A-ATM-CANCEL        VALUE 'A'.
05 WS-NW-TS-CODE.
10 WS-NW-TS-ALP        PIC X(02).
10 WS-NW-TS-NUM        PIC 9(03).
01 VCWS-ERROR-IND         PIC X    VALUE 'N'.
88 VCWS-ERROR                    VALUE 'Y'.
01 SAVE-OPERATOR-INFO.
03 FILLER              PIC X    VALUE SPACE.
03 FILLER              PIC 9(3) VALUE ZEROS.
01 HUB-ERROR-IND          PIC X   VALUE 'N'.
88 HUB-ERROR-FOUND              VALUE 'Y'.

01 FILLER.
03 WS-DEEDIT-QTYX.
05 WS-DEEDIT-QTY        PIC 9(7)V99.
03 WS-DEEDIT-QTY-NO-DECX.
05 WS-DEEDIT-QTY-NO-DEC PIC 9(7).
03 WS-DEEDIT-COSTX.
05 WS-DEEDIT-COST       PIC 9(7)V99.
03 WS-DEEDIT-PPUX.
05 WS-DEEDIT-PPU        PIC 9(2)V9(3).
03 WS-DEEDIT-HUBX.
05 WS-DEEDIT-HUB        PIC 9(7)V9.

03 INP-CO-SMLNAME           PIC X(7).
03 INP-AUTH-NR              PIC XXXX.
03 WS-WORK-PHONE-NR.
05 DPH-AREA              PIC XXX.
05 DPH-EXCH              PIC XXX.
05 DPH-NR                PIC XXXX.
03 WS-WORK-PROD-AMT         PIC S9(7)V99   VALUE +0.
03 WS-WORK-PROD-AMT-SC      PIC S9(7)V99   VALUE +0 COMP-3.
03 WS-WORK-PROD-AMT-US      PIC S9(7)V99   VALUE +0 COMP-3.
03 INP-NR-GALLONS           PIC 9(7)V99    VALUE 0.
03 INP-PRICE-GALLON         PIC 9(2)V9(3)  VALUE 0.
03 INP-TOTAL-COST           PIC 9(7)V99    VALUE 0.
03 INP2-NR-GALLONS          PIC 9(7)V99    VALUE 0 COMP-3.
03 INP2-PRICE-GALLON        PIC 9(2)V9(3)  VALUE 0 COMP-3.
03 INP2-TOTAL-COST          PIC 9(7)V99    VALUE 0 COMP-3.
03 INP3-NR-GALLONS          PIC 9(7)V99    VALUE 0 COMP-3.
03 INP3-PRICE-GALLON        PIC 9(2)V9(3)  VALUE 0 COMP-3.
03 INP3-TOTAL-COST          PIC 9(7)V99    VALUE 0 COMP-3.
03 WS-PROD-BILL-FLAG        PIC X(1)     VALUE SPACE.
03 INP-PROD-BILL-1          PIC X(1)     VALUE SPACE.
03 INP-PROD-BILL-2          PIC X(1)     VALUE SPACE.
03 INP-PROD-BILL-3          PIC X(1)     VALUE SPACE.
03 WORK-PROD-CODE.
05 WORK-PROD-CODE-CHAR OCCURS 2 TIMES PIC X.
03 WORK-PROD-CODE-NUM REDEFINES WORK-PROD-CODE PIC 9(2).
03 WORK-PROD-DESC           PIC X(14).
03 HOLD-WORK-PROD-CODE      PIC X(02).
03 WS-PUR-CATEGORY          PIC X(05).
03 WS-DEFAULT-MAX-QTY       PIC 9(5) COMP-3 VALUE 99999.
03 WS-UNITGRP-NR-10.
05 FILLER                   PIC X(04).
05 WS-UNITGRP-NR-5-10       PIC X(06).




03 WS-ADVANCE-RATE           PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-ADVANCE-RATE2          PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-ADVANCE-RATE3          PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-TOTAL-RATE             PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-TOTAL-RATE2            PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-TOTAL-RATE3            PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-FUEL-RATE              PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-FUEL-RATE2             PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-FUEL-RATE3             PIC S9(5)V99  COMP-3 VALUE +0.
03 WS-PPRIDE-TRANSFER-PPG    PIC S9(2)V999 COMP-3 VALUE ZERO.
03 WS-PPRIDE-MARKUP-SC       PIC S9(2)V999 COMP-3 VALUE ZERO.
03 WS-CO-FUEL-RATE-REDUCTION PIC S9(5)V99  COMP-3 VALUE ZERO.
03 WS-BASE-ADVANCE-RATE      PIC S9(5)V99  COMP-3 VALUE ZERO.
03 WS-MIXED-ADVANCE-RATE     PIC S9(5)V99  COMP-3 VALUE ZERO.
03 CHECK-WORK                PIC 9(10) VALUE 0.
03 FILLER               REDEFINES CHECK-WORK.
05 HI-CHECK-DIGITS         PIC 9(9).
05 LOW-CHECK-DIGIT         PIC 9.
03 WS-CHECK-WORK             PIC 9(9).
03 WS-CHECK-HOLD             PIC 9(10).
03 WS-CALC-CHECK-DIGIT       PIC 9.

03 INP-DISC.
05 INP-F-SRVC-DISC    PIC  9(5)V99.
05 INP-S-SRVC-DISC    PIC  9(5)V99.
03 PC-NAME-CONSTRUCT.
05 FILLER             PIC X(5) VALUE 'UNIT '.
05 PC-NAME-UNIT       PIC X(10) VALUE SPACES.
05 FILLER             PIC X VALUE SPACES.
05 PC-NAME-MESSAGE    PIC X VALUE SPACES.
05 FILLER             PIC X(12) VALUE SPACES.

03 INP-COMMON-AREAS.
05 INP-CO-CODE        PIC  X(05).
05 INP-COMMON-DATA.
07 FILLER           PIC X(8).
07 FILLER.
09 FILLER         PIC XX.
09 FILLER         PIC 999.
07 FILLER           PIC X.
07 FILLER           PIC X(10).

COPY CXPSW351 IN CPYREL.

COPY CXXCW0LE IN CPYUAT.
COPY TSFMW210.
COPY CXPSW352.
COPY TSFMW673.

COPY TSFMW181.


COPY TSFMW280.

01 WS-ORIG-UIWA-AREA     PIC X(1500).

01 WS-ORIG-FMLOG-AREA    PIC X(2040).

01  UNFORMATTED-AREA-DEF   PIC X(15)  VALUE '**UNFORMATTED**'.


01  UNFORMATTED-LENG       PIC S9999   VALUE +2466  COMP.
01  UNFORMATTED-AREA       PIC X(2452).

01  FILLER                 REDEFINES UNFORMATTED-AREA.
03 FILLER                PIC XXXX.
03 INP-PC-ZON-OVERLAY.
05 INP-PC-ZON-VER-FLAG PIC X.
05 INP-PC-ZON-TRAILER  PIC X(2447).

01  FILLER REDEFINES UNFORMATTED-AREA.
03 UNF-PGRM-NAME        PIC XX.
03 FILLER               PIC X.
03 INP-NP-DATA          PIC X(2449).




01  WS-INP-FP-CANCEL.
05 FILLER                PIC X(3).
05 FP-CANCEL-REQ         PIC X(7) VALUE 'CANCEL '.
05 FPCR-CTLNR-CARD.
10 FPCR-CTL-6         PIC 9(6).
10 FILLER REDEFINES FPCR-CTL-6.
15 FPCR-CTL-6X     PIC X(6).
10 FILLER             PIC X.
10 FPCR-CTL6-CARD     PIC X(16).
10 FILLER             PIC X.
05 FILLER REDEFINES FPCR-CTLNR-CARD.
10 FPCR-CTL-7         PIC 9(7).
10 FILLER             PIC X.
10 FPCR-CTL7-CARD     PIC X(16).

01  WS-FP-CANCEL-CTL            PIC 9(7).
01  FILLER REDEFINES WS-FP-CANCEL-CTL.
05 WS-FP-CANCEL-CTL1        PIC X.
05 WS-FP-CANCEL-CTLX        PIC X(6).

01  WS-INP-FP-CANCEL-CARD.
05 FP-CANCEL-CARD         PIC X(16).
05 FP-CANCEL-COMMON REDEFINES FP-CANCEL-CARD.
07 FP-CANCEL-CO-CODE.
09 FP-CANCEL-CO-CODE-N PIC 9(4).
07 FP-CANCEL-ID-NR.
09 FILLER              PIC X(7).
09 FP-CANCEL-4-CHECK   PIC X.
07 FILLER                 PIC X(4).
05 FILLER REDEFINES FP-CANCEL-COMMON.
07 FP-CANCEL-CO-CODE-5.
09 FP-CANCEL-CO-CODE-5-N PIC 9(5).
07 FP-CANCEL-ID-NR-5.
09 FILLER                PIC X(7).
09 FP-CANCEL-5-CHECK     PIC X.
07 FILLER                 PIC X(3).



01  WS-XTN-REQUEST-AREA.
03 WS-XTN-REQUEST-FLAG  PIC X VALUE SPACES.











































03 WS-XTN-TYPE-FLAG       PIC X(01) VALUE SPACES.
88 WS-XTN-TYPE-LARGE-AMT         VALUE 'L'.

01  WS-AUTOMATED-INPUT-AREA.
05 INP-PC-XTN-REQUEST   PIC X(01).
05 INP-PC-CARD-NR       PIC X(16).
05 INP-PC-UNIT          PIC X(6).
05 INP-PC-TS-CODE       PIC X(5).
05 INP-PC-GALLONS       PIC 999V99.
05 INP-PC-TOTAL         PIC 999V99.
05 INP-PC-INVOICE       PIC X(8).
05 INP-PC-TRIP-NR       PIC X(10).
05 INP-PC-TR-GALS       PIC 999V99.
05 INP-PC-TR-PPG        PIC 99V999.
05 INP-PC-TR-COST       PIC 999V99.
05 INP-PC-OIL-QTS       PIC 99.
05 INP-PC-OIL-COST      PIC 999V99.
05 INP-PC-HUB-READING   PIC 9(6)V9.
05 INP-PC-HUB-REQ-FLG   PIC X.

05 INP-PC-SPCL-UNIT-NR PIC X(6).
05 INP-PC-ADV-AMT      PIC 9999V99.
05 INP-PC-MSG-QUERY    PIC X.
05 INP-PC-PRINT-REQ    PIC X.
05 INP-PC-CHECK-NRX.
10 INP-PC-CHECK-NR  PIC 9(10).
05 INP-PC-OGALS        PIC 999V99.
05 INP-PC-OTTL         PIC 999V99.
05 FILLER              OCCURS 3 TIMES.
07 INP-PC-PROD-CODE PIC XX.
07 INP-PC-PROD-AMT  PIC XXXXXX.
07 INP-PC-PROD-AMTN REDEFINES INP-PC-PROD-AMT
PIC 9(4)V99.
05 INP-PC-DL-NR        PIC X(20).
05 INP-PC-DL-ST        PIC XX.
05 INP-PC-ITTL         PIC 9999V99.
05 INP-PC-CARD-EXP-DATE PIC X(4).
05 FILLER              PIC X(26).

05 INP-PC-SRVC-TYPE    PIC X.
05 FILLER                     PIC X.
88 PC-HAS-ATTACHED-PRINT   VALUE '2'.
05 INP-PC-TRAILER-NR   PIC X(10).
05 INP-PC-TRAILER-HUB  PIC 9(06)V9.
05 INP-PC-PURCHASE-ORDER-NR  PIC X(10).
05 INP-PC-DRIVER-NR          PIC X(10).
05 INP-PC-NR1-GALS           PIC 9(3)V99.
05 INP-PC-NR1-COST           PIC 9(3)V99.
05 INP-PC-SWIPED-KEYED       PIC X(1).
05 INP-PC-SC-SECU-CARD-INFO.
10 FILLER                 PIC X(06).
10 INP-PC-SC-SECU-CARD    PIC X(10).
05 INP-PC-SC-SECU-PIN        PIC 9(4).
05 INP-PC-CANADIAN-TAX       PIC 9(3)V99.
05 INP-PC-BATCH-PROCESS-DATE PIC 9(6).
05 INP-PC-NATS-INFO.
10 INP-PC-NATS-PRICES OCCURS 6 TIMES.
15 INP-PC-NATS-PROD-CODE  PIC X(3).
15 INP-PC-NATS-PUMP-FEE   PIC 9(4)V99.
15 INP-PC-NATS-PUMP-SIGN  PIC X(1).
15 INP-PC-NATS-DISC-PG    PIC 9(4)V999.
15 INP-PC-NATS-DISC-SIGN  PIC X(1).
15 INP-PC-NATS-DISC-EXT   PIC 9(5)V99.
15 INP-PC-NATS-DISC-E-SIGN PIC X(1).
10 INP-PC-NATS-POS-FLAG   PIC X(1).
10 INP-PC-NATS-CTL-NR     PIC 9(7).
10 INP-PC-NATS-FEE        PIC 9(2)V99.
10 INP-PC-NATS-PRE-AUTH-DATE PIC 9(5).
10 INP-PC-NATS-PRE-AUTH-SEQ  PIC 9(7).
10 INP-PC-NATS-AUTH-NR    PIC 9(10).
05 INP-PC-TRAILER-HRS        PIC 9(5)V9.
05 INP-PC-IOL-RCP            PIC 9V9(05).
05 INP-PC-DEVICE-TYPE        PIC X(4).
05 INP-PC-MASTER-CARD.
10 INP-PC-FLEET-PROD      PIC 9(5).
10 INP-PC-FLEET-DATE-ORIG PIC X(10).
10 INP-PC-FLEET-NAME      PIC X(30).
10 INP-PC-FLEET-ADDR      PIC X(30).
10 INP-PC-FLEET-CITY      PIC X(13).
10 INP-PC-FLEET-STATE     PIC X(02).
10 INP-PC-FLEET-ZIP       PIC X(10).
10 INP-PC-FLEET-AMT-ORIG  PIC 9(05)V99.
10 INP-PC-FLEET-KEY       PIC X(32).
10 INP-PC-FLEET-XTN-DATE  PIC 9(06).
10 INP-PC-FLEET-XTN-TIME  PIC 9(06).
05 INP-PC-UNIT-EXPANDED      PIC X(10).
05 INP-PC-SC-CITY              PIC X(20).
05 INP-PC-SC-STATE             PIC X(02).
05 INP-PC-SC-ZIP               PIC X(10).
05 INP-PC-FUELING-DATE         PIC 9(06).
05 INP-PC-FUELING-TIME         PIC 9(06).
05 INP-PC-OTHER-FUEL-TYPE      PIC X(03).
05 INP-PC-USFLEET-MISC-NR      PIC X(09).
05 INP-PC-PROD-9-TYPE-1        PIC X(03).
05 INP-PC-PROD-9-TYPE-2        PIC X(03).
05 INP-PC-PROD-9-TYPE-3        PIC X(03).
05 INP-PC-BASE-PPG             PIC 9(02)V999.
05 INP-PC-DELIVERY-FEE-PPG     PIC 9(02)V999.
05 INP-PC-TOTAL-TAX-PPG        PIC 9(02)V999.
05 INP-PC-SYSTEM-ID            PIC 9(04).
05 INP-PC-RECV-DATE            PIC X(10).
05 INP-PC-TASK-NR              PIC 9(09).
05 INP-PC-NR2-SUB-PROD         PIC X(15).
05 INP-PC-RFR-SUB-PROD         PIC X(15).
05 INP-PC-OTH-SUB-PROD         PIC X(15).
05 INP-PC-NR1-SUB-PROD         PIC X(15).
05 INP-PC-PR1-SUB-PROD-CODE    PIC X(15).
05 INP-PC-PR2-SUB-PROD-CODE    PIC X(15).
05 INP-PC-PR3-SUB-PROD-CODE    PIC X(15).
05 INP-AUTH-1-PROD-CODE        PIC X(02).
05 INP-AUTH-2-PROD-CODE        PIC X(02).
05 INP-AUTH-3-PROD-CODE        PIC X(02).


01  WS-SETTLEMENT-INPUT-AREA.
03 FILLER              PIC X(4).
03 INP-SETTLE-TS-CODE  PIC X(6).
03 INP-SET-CHECK       PIC 9(10).
03 INP-INVOICE         PIC X(8).
03 FILLER REDEFINES INP-INVOICE.
05 INP-SETTLE-PRINTER-FLAG  PIC X(1).
05 FILLER           PIC X(7).
03 INP-AMOUNT          PIC 9(7)V99.
03 FILLER              PIC X(1024).

01  WS-INP-CANCEL-AREA.

03 FILLER              PIC X(4).
03 FILLER              PIC X(1).
03 INP-CANCEL-AREA.
05 FILLER              PIC X(5).
05 FILLER              PIC X(10).
05 FILLER              PIC 9(06).
03 FILLER              PIC X(1035).

01  WS-OL-PT-AREA.
03 OL-PT-AMOUNT         PIC 9(4)V99.
03 OL-PT-CHECK-NR       PIC 9(10).
03 OL-PT-MESSAGE-FLAG   PIC X.




01  WS-IOL-PRE-AUTH-AREA.
03 FILLER                  PIC X(4).
03 WS-IOL-PRE-AUTH-DATA.
05 WS-IOL-SC-CODE       PIC X(05).
05 WS-IOL-CARD-NR       PIC X(16).
05 WS-IOL-FUEL-TYPE     PIC X(01).
88 WS-IOL-FUEL-TYPE-IS-TRACTOR    VALUE 'T'.
88 WS-IOL-FUEL-TYPE-IS-TRAILER    VALUE 'R'.
05 WS-IOL-PRODUCT-CODE  PIC 9(08).
05 WS-IOL-MAX-LITERS-IN PIC 9(03)V99.
05 WS-IOL-PPL           PIC 9(01)V999.
05 WS-IOL-DRIVER-NUMBER PIC X(16).
05 WS-IOL-UNIT-NUMBER   PIC X(12).
05 WS-IOL-HUB-READING   PIC 9(07).
05 WS-IOL-TRIP-NUMBER   PIC X(12).
05 WS-IOL-PIN-NUMBER    PIC X(04).
05 WS-IOL-PO-NUMBER     PIC X(10).
05 WS-IOL-LANGUAGE-IND  PIC X(01).
05 WS-IOL-RCP           PIC 9V9(05).

01  WS-IOL-PRE-AUTH-RESP.
05 WS-IOL-RETURN-CODE      PIC 9(05).
05 WS-IOL-RETURN-MESSAGE   PIC X(80).
05 WS-IOL-ACCOUNT-CODE     PIC X(05).
05 WS-IOL-MAX-LITERS       PIC 9(03)V99.
05 WS-IOL-FUNDED-FLAG      PIC X(01).
05 WS-IOL-AUTH-NUMBER-01   PIC 9(06).
05 WS-IOL-AUTH-NUMBER-02   PIC 9(06).

01 TERMINAL-OUTPUT-AREA.
03 3270-CTRL.
05 FILLER             PIC S9(8) COMP VALUE +12738833.
05 FILLER             PIC X(208) VALUE SPACES.
03 FILLER               REDEFINES 3270-CTRL.
05 3270-SBA           PIC X.
05 FILLER             PIC XX.
05 3270-SBA-1         PIC X.
05 FILLER             PIC X(208).
03 FILLER               REDEFINES 3270-CTRL.
05 FILLER             PIC X(3).
05 3270-OUTPUT-DATA   PIC X(209).


01  BATCH-RECORD-OUTPUT-AREA.
05 BR-CONTROL-NR        PIC S9(7) COMP-3.
05 BR-MESSAGE           PIC X(277).

01  AUTO-GAS-OUTPUT-AREA.
05 AG-ERROR-NUMBER     PIC S9(5) COMP-3.
05 AG-ERROR-NUMBER-2   PIC 9(5)   VALUE 99999.
05 AG-RESPONSE-FLAGS   PIC 9(16)  VALUE ZEROES.
05 AG-MESSAGE.
10 FILLER           PIC X(40)  VALUE SPACES.
10 FILLER           PIC X(40)  VALUE SPACES.

01  FILLER.








05 WS-AUTO-GAS-AVAILX.
10 WS-AUTO-GAS-AVAIL   PIC 9(5)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL2     PIC 9(5)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL3     PIC 9(5)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL4     PIC S9(6)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL-OIL  PIC 9(5)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL-PURC PIC 9(5)V99 VALUE ZERO.



05 WS-AUTO-GAS-AVAIL-QTYX.
10 WS-AUTO-GAS-AVAIL-QTY     PIC 9(5)V99 VALUE ZERO.


05 WS-AUTO-GAS-AVAIL-ALL.
10 WS-AUTO-GAS-AVAIL-QTY-NR2 PIC 9(5)V99 VALUE ZERO.
10 WS-AUTO-GAS-AVAIL-QTY-NR1 PIC 9(5)V99 VALUE ZERO.
10 WS-AUTO-GAS-AVAIL-QTY-REF PIC 9(5)V99 VALUE ZERO.
10 WS-AUTO-GAS-AVAIL-QTY-OTH PIC 9(5)V99 VALUE ZERO.
10 WS-AUTO-GAS-AVAIL-QTY-OIL PIC 9(5)V99 VALUE ZERO.
10 WS-AUTO-GAS-AVAIL-AMT-CSH PIC 9(5)V99 VALUE ZERO.
05 WS-AUTO-GAS-AVAIL-QTY-WRK    PIC 9(5)V99 VALUE ZERO.
05 WS-SP14-REPLY.
10  WS-SP14-MAX-PUR-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-PUR-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-CASH-AVAIL   PIC  9(05)V99.
10  WS-SP14-MAX-OIL-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-OIL-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-NR2-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-NR2-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-NR1-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-NR1-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-REF-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-REF-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-OTH-AMT      PIC  9(05)V99.
10  WS-SP14-MAX-OTH-QTY      PIC  9(05)V99.
10  WS-SP14-MAX-PRD-AMT      PIC  9(05)V99.
10  WS-SP14-PRODUCTS OCCURS 10 TIMES.
15  WS-SP14-PUR-CATEGORY     PIC  X(05).
15  WS-SP14-SUB-PROD-CD      PIC  X(03).
15  WS-SP14-MAX-PROD-AMT     PIC  9(05)V99.
15  WS-SP14-MAX-PROD-QTY     PIC  9(05)V99.

01  WS-AUTO-GAS-PRODUCT-INFO.
05 FILLER                    PIC X(1)  VALUE '~'.
05 WS-AUTO-GAS-AVAIL-PROD1   PIC X(2)    VALUE SPACES.
05 WS-AUTO-GAS-AVAIL-AMT1    PIC 9(5)V99 VALUE ZEROS.
05 WS-AUTO-GAS-AVAIL-PROD2   PIC X(2)    VALUE SPACES.
05 WS-AUTO-GAS-AVAIL-AMT2    PIC 9(5)V99 VALUE ZEROS.
05 WS-AUTO-GAS-AVAIL-PROD3   PIC X(2)    VALUE SPACES.
05 WS-AUTO-GAS-AVAIL-AMT3    PIC 9(5)V99 VALUE ZEROS.

01  FILLER.

03 WS-POS-FLAG          PIC X(01) VALUE 'N'.
88 THIS-IS-A-POS-TRANS         VALUE 'Y'.
88 THIS-IS-NOT-A-POS-TRANS     VALUE 'N'.
03 POS-DRIVER-MESSAGE-AREA.
10 FILLER            PIC X(18) VALUE
'OK: DRV. MSG...>  '.
10 POS-DRV-MESSAGE   PIC X(80)  VALUE SPACES.
10 POS-NRM-MESSAGE   PIC X(120) VALUE SPACES.
03 FILLER.

10 POS-CUSTOMER-NRM-MSG  PIC X(413).
10 POS-CUSTOMER-INFO.
15 FILLER             PIC X(6)  VALUE '~CUST:'.
15 POS-CUSTOMER-NAME  PIC X(25).
15 POS-CUSTOMER-CITY  PIC X(15).
15 POS-CUSTOMER-STATE PIC X(02).
15 POS-CUSTOMER-ID-X  PIC X(10).
03 WS-SAVE-PRINTER-FLAG PIC X(1)     VALUE SPACES.
03 WS-SAVE-POS-SUB-ID   PIC X(1)     VALUE SPACES.
03 WS-SAVE-COM-SITE-ACCT PIC X(5)    VALUE SPACES.
03 WS-SAVE-NAME.
05 WS-SAVE-NAME-11.
10 FILLER         PIC X(5)   VALUE 'UNIT '.
10 WS-SAVE-NAME-6 PIC X(10)  VALUE SPACES.
05 FILLER            PIC X(5)   VALUE ' AND '.
05 WS-SAVE-NAME-44   PIC X(44)  VALUE SPACES.
03 FILLER.

05 WS-FIELD-LEN-1    PIC S9(4)    COMP SYNC.
05 WS-FIELD-LEN-2    PIC S9(4)    COMP SYNC.
05 WS-FIELD-LEN-3    PIC S9(4)    COMP SYNC.
05 WS-FIELD-3        PIC X(3)     VALUE SPACES.
05 WS-FIELD-20       PIC X(20)    VALUE SPACES.
05 WS-FIELD-63       PIC X(63)    VALUE SPACES.
05 WS-FIELD-60       PIC X(60)    VALUE SPACES.
05 WS-FIELD-83       PIC X(83)    VALUE SPACES.
05 WS-FIELD-86       PIC X(86)    VALUE SPACES.
05 WS-FIELD-39       PIC X(39)    VALUE
'(FP) CARD & DRIVER LISC MUST BE PRESENT'.
05 WS-FIELD-125      PIC X(125)   VALUE SPACES.
05 WS-CHAR-3         PIC X(3)     VALUE '`1C'.
05 WS-FIELD-50       PIC X(50)    VALUE SPACES.
05 WS-FIELD-53       PIC X(53)    VALUE SPACES.
05 WS-FIELD-72       PIC X(72)    VALUE SPACES.
05 WS-TRY-PO-MSG     PIC X(25)    VALUE
'/*(DID YOU ASK FOR PO #)*'.
03 WS-PO-PROD-CODE.
05 WS-PO-PROD-CODE-N PIC 9(2).
03 WS-DATE-1.
05 WS-MONTH-1        PIC 9(2).
05 WS-DAY-1          PIC 9(2).
05 WS-YEAR-1         PIC 9(2).
03 FILLER REDEFINES WS-DATE-1.
05 WS-GREG-DATE      PIC 9(6).
05 FILLER REDEFINES WS-GREG-DATE.
10 WS-GREG-MM     PIC 99.
10 WS-GREG-DD     PIC 99.
10 WS-GREG-YY     PIC 99.
03 WS-YYMMDD-DATE       PIC 9(6).
03 FILLER REDEFINES WS-YYMMDD-DATE.
05 WS-YYMMDD-YY      PIC 99.
05 WS-YYMMDD-MM      PIC 99.
05 WS-YYMMDD-DD      PIC 99.
03 WS-DATE-3.
05 WS-MONTH-3        PIC Z9.
05 FILLER            PIC X(1)   VALUE '/'.
05 WS-DAY-3          PIC 9(2).
05 FILLER            PIC X(1)   VALUE '/'.
05 WS-YEAR-3         PIC 9(2).
01  WS-DATE-S-AREA.
05 WS-DATE-S                     PIC 9(8).
05 FILLER                        REDEFINES WS-DATE-S.
10 WS-DATE-S-CC               PIC 9(2).
10 WS-DATE-S-YY               PIC 9(2).
10 WS-DATE-S-MM               PIC 9(2).
10 WS-DATE-S-DD               PIC 9(2).
05 WS-UPDT-FLAG                  PIC X(01) VALUE 'N'.
03 WS-TIME-1            PIC 9(7).
03 FILLER REDEFINES WS-TIME-1.
05 FILLER            PIC X.
05 WS-HOURS-1        PIC 9(2).
05 WS-MINUTES-1      PIC 9(2).
05 WS-SECONDS-1      PIC 9(2).
03 FILLER REDEFINES WS-TIME-1.
05 FILLER            PIC X(1).
05 WS-TIME-4         PIC 9(4).
05 FILLER            PIC X(2).
03 WS-TIME-3.
05 WS-HOURS-3        PIC Z9.
05 FILLER            PIC X(1)   VALUE ':'.
05 WS-MINUTES-3      PIC 9(2).
05 FILLER            PIC X(1)   VALUE ':'.
05 WS-SECONDS-3      PIC 9(2).
03 FILLER.

05 WS-PT-AMOUNT         PIC 9(4)V99.
05 WS-PT-CHECK-NR       PIC 9(10).
05 WS-PT-MESSAGE-FLAG   PIC X.

01  WORK-DATE              PIC 9(7).
01  FILLER REDEFINES WORK-DATE.
05  FILLER             PIC 9(2).
05  WORK-DATE-X        PIC 9(5).
01  WORK-TIME              PIC 9(7).
01  FILLER REDEFINES WORK-TIME.
05  FILLER             PIC 9(1).
05  WORK-TIME-X        PIC 9(5).
05  FILLER             PIC 9(1).

01  ATTACHED-PRINT-RESPONSE.
05  FILLER              PIC X(3)     VALUE '>C<'.
05  ATT-AUTH-NUMBER     PIC 9(5)     VALUE ZEROES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-CTL-NUMBER      PIC 9(9)     VALUE ZEROES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-TOTAL-ORDER-AMT PIC 9(5)V99  VALUE ZEROES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-INCREMENT-AMT   PIC 9(5)V99  VALUE ZEROES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-DATE            PIC X(8)     VALUE SPACES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-TIME            PIC X(8)     VALUE SPACES.
05  FILLER              PIC X(3)     VALUE '`1C'.
05  ATT-REMAINDER       PIC X(125)   VALUE SPACES.



01 CHECK-ENTRY-COMMON-AREA.
03 CHECK-ENTRY-CONTROL  PIC XX VALUE SPACES.
03 CHECK-NR-AREA.
05 1ST-10-BYTES.
07 1ST-10-BYTES-N   PIC 9(10).
05 2ND-10-BYTES.
07 2ND-10-BYTES-N   PIC 9(10).
03 FILLER               REDEFINES CHECK-NR-AREA.
05 1ST-9-BYTES.
07 1ST-9-BYTES-N    PIC 9(9).
05 2ND-9-BYTES        PIC X(9).
05 FILLER             PIC X(2).
03 FILLER               REDEFINES CHECK-NR-AREA.
05 1ST-8-BYTES.
07 1ST-8-BYTES-N    PIC 9(8).
05 2ND-8-BYTES        PIC X(8).
05 FILLER             PIC X(4).
03 FILLER               REDEFINES CHECK-NR-AREA.
05 1ST-7-BYTES.
07 1ST-7-BYTES-N    PIC 9(7).
05 2ND-7-BYTES        PIC X(7).
05 FILLER             PIC X(6).
03 CHECK-AMOUNT         PIC 9(5)V99 VALUE 0.
03 FILLER               PIC XX VALUE SPACES.
03 CHECK-ENTRY-DATA     PIC X(18) VALUE SPACES.
03 FILLER               PIC X VALUE SPACES.
03 FILLER               PIC X(20) VALUE SPACES.
03 CHECK-ENTRY-CANADIAN-AMT PIC 9(5)V99.
03 FILLER               PIC X(7) VALUE SPACES.
03 CHECK-ENTRY-TRAN-ID  PIC X(2).
03 FILLER               PIC X(4) VALUE SPACES.
03 CHECK-ENTRY-ONLRCD   PIC X(256) VALUE SPACES.
03 CHECK-ENTRY-ORDRFIL  PIC X(212) VALUE SPACES.
03 FILLER               PIC X(4) VALUE SPACES.

01 FILLER                 REDEFINES CHECK-ENTRY-COMMON-AREA.
03 FILLER               PIC XXX.
03 CHECK-ENTRY-MESSAGE-1 PIC X(39).
03 FILLER               PIC XXX.
03 CHECK-ENTRY-MESSAGE-2 PIC X(39).


EJECT



01  FILLER.
03 OUT-COMENT.
05 OUT-COMENT-1       PIC X(40).
05 OUT-COMENT-2.
06 FILLER          PIC X(60)     VALUE SPACES.
06 OUT-COMENT-2-E.
07 FILLER       PIC X(20).
05 FILLER             PIC X.
05 OUT-GOLD-MESSAGE   PIC X(79).
05 FILLER             REDEFINES OUT-GOLD-MESSAGE.
06 OUT-NR-GOLD      PIC ZZZ9.
06 FILLER           PIC X.
06 OUT-GOLD-GROSS   PIC ZZ,ZZZ.99-.
06 FILLER           PIC X(64).
03 OUT-NR-GALLONS       PIC Z(5).99.
03 OUT-PRICE-GALLON     PIC 9.999.
03 OUT-TOTAL-COST       PIC ZZZZZ.99.

01 VOICE-RESPONSE-OUTPUT-AREA.
03 VR-TRANS-ID                  PIC XX.
03 FILLER                       PIC X.
03 VR-REQUEST-ID                PIC X.
03 VR-REQUEST-VERSION           PIC X.
03 FILLER.
05 FILLER                    PIC X(6)     VALUE SPACES.
05 VR-CARD-NUMBER-10         PIC X(10).
03 VR-TRANS-FLAG                PIC X        VALUE SPACE.
03 FILLER                       PIC X(7)     VALUE SPACES.
03 FILLER                       PIC X(7)     VALUE SPACES.
03 VR-PHONE-LIMIT-FLAG          PIC X        VALUE 'N'.
03 FILLER                       PIC X(7)     VALUE SPACES.
03 FILLER                       PIC X(7)     VALUE SPACES.
03 VR-VRU-CAN-DRAFT             PIC X        VALUE SPACES.
03 VR-EXPRESS-BALANCE           PIC 9(6)V99  VALUE ZEROES.
03 VR-EXPRESS-BALANCE-AVAIL     PIC 9(6)V99  VALUE ZEROES.
03 VR-EXPRESS-BALANCE-CAN       PIC 9(6)V99  VALUE ZEROES.
03 VR-EXPRESS-BALANCE-AVAIL-CAN PIC 9(6)V99  VALUE ZEROES.
03 VR-CASH-LIMIT-US             PIC 9(6)V99  VALUE ZEROES.
03 VR-CASH-LIMIT-CN             PIC 9(6)V99  VALUE ZEROES.
03 FILLER                       PIC X(59)    VALUE SPACES.
03 USUAL-FP-MESSAGE             PIC X(80).





01  ALPHA-TABLE.
05  ALPHA-CONSTANTS.
10  FILLER           PIC X(07)  VALUE
'YAYB000'.
10  FILLER           PIC X(07)  VALUE
'YBYC000'.
10  FILLER           PIC X(07)  VALUE
'YCYD000'.
10  FILLER           PIC X(07)  VALUE
'YDYE000'.
10  FILLER           PIC X(07)  VALUE
'YEYF000'.
10  FILLER           PIC X(07)  VALUE
'YFYG000'.
10  FILLER           PIC X(07)  VALUE
'YGYH000'.
10  FILLER           PIC X(07)  VALUE
'YHYI000'.
10  FILLER           PIC X(07)  VALUE
'YIYJ000'.
10  FILLER           PIC X(07)  VALUE
'YJYK000'.
10  FILLER           PIC X(07)  VALUE
'YKYL000'.
10  FILLER           PIC X(07)  VALUE
'YLYM000'.
10  FILLER           PIC X(07)  VALUE
'YMYN000'.
10  FILLER           PIC X(07)  VALUE
'YNYO000'.
10  FILLER           PIC X(07)  VALUE
'YOYP000'.
10  FILLER           PIC X(07)  VALUE
'YPYQ000'.
10  FILLER           PIC X(07)  VALUE
'YQYR000'.
10  FILLER           PIC X(07)  VALUE
'YRYS000'.
10  FILLER           PIC X(07)  VALUE
'YSYT000'.
10  FILLER           PIC X(07)  VALUE
'YTYU000'.
10  FILLER           PIC X(07)  VALUE
'YUYV000'.
10  FILLER           PIC X(07)  VALUE
'YVYW000'.
10  FILLER           PIC X(07)  VALUE
'YWYX000'.
10  FILLER           PIC X(07)  VALUE
'YXYY000'.
10  FILLER           PIC X(07)  VALUE
'YYYZ000'.
10  FILLER           PIC X(07)  VALUE
'YZZA000'.
10  FILLER           PIC X(07)  VALUE
'YZZA000'.
10  FILLER           PIC X(07)  VALUE
'ZAZB000'.
10  FILLER           PIC X(07)  VALUE
'ZBZC000'.
10  FILLER           PIC X(07)  VALUE
'ZCZD000'.
10  FILLER           PIC X(07)  VALUE
'ZDZE000'.
10  FILLER           PIC X(07)  VALUE
'ZEZF000'.
10  FILLER           PIC X(07)  VALUE
'ZFZG000'.
10  FILLER           PIC X(07)  VALUE
'ZGZH000'.
10  FILLER           PIC X(07)  VALUE
'ZHZI000'.
10  FILLER           PIC X(07)  VALUE
'ZIZJ000'.
10  FILLER           PIC X(07)  VALUE
'ZJZK000'.
10  FILLER           PIC X(07)  VALUE
'ZKZL000'.
10  FILLER           PIC X(07)  VALUE
'ZLZM000'.
10  FILLER           PIC X(07)  VALUE
'ZMZN000'.
10  FILLER           PIC X(07)  VALUE
'ZNZO000'.
10  FILLER           PIC X(07)  VALUE
'ZOZP000'.
10  FILLER           PIC X(07)  VALUE
'ZPZQ000'.
10  FILLER           PIC X(07)  VALUE
'ZQZR000'.
10  FILLER           PIC X(07)  VALUE
'ZRZS000'.
10  FILLER           PIC X(07)  VALUE
'ZSZT000'.
10  FILLER           PIC X(07)  VALUE
'ZTZU000'.
10  FILLER           PIC X(07)  VALUE
'ZUZV000'.
10  FILLER           PIC X(07)  VALUE
'ZVZW000'.
10  FILLER           PIC X(07)  VALUE
'ZWZX000'.
10  FILLER           PIC X(07)  VALUE
'ZXZY000'.
10  FILLER           PIC X(07)  VALUE
'ZYZZ000'.
10  FILLER           PIC X(07)  VALUE
'ZZYA000'.
05  ALPHA-CONSTANTS-TABLE REDEFINES ALPHA-CONSTANTS
OCCURS 53 TIMES
ASCENDING KEY IS
ISBN-TABLE
INDEXED BY ALPHA-IND.
15  ISBN-TABLE         PIC XX.
15  ALPHA-TITLE-TABLE.
20  TABLE-ST       PIC XX.
20  TABLE-NR       PIC 999.

COPY TSFMW003.

03 WRK-TRIP-I-NUMERIC  PIC 9(09).

01 DCOMP-WORK-AREA.
03 FILLER               PIC S9999 COMP.
03 FILLER               PIC S9999 COMP.
03 FILLER              PIC X(60).
01 FILLER.

03 DCOMP-LENGTH        PIC S9999 COMP.
03 DCOMP-TRIP-NR       PIC X(20).
03 FILLER              REDEFINES DCOMP-TRIP-NR.
05 DCOMP-TRIP-CHAR  PIC X
OCCURS 20 TIMES
INDEXED BY DTC-INDEX.
01 FILLER.

03 DCOMP-EDIT-NR       PIC X(10).
03 FILLER              REDEFINES DCOMP-EDIT-NR.
05 DCOMP-EDIT-CHAR  PIC X
OCCURS 10 TIMES
INDEXED BY DEC-INDEX.

01 DEEDIT-AREA.
03 NR-OF-BYTES          PIC S99 VALUE +0.
03 NR-OF-DECIMALS       PIC S9 VALUE +0.
03 DEEDIT-FIELD         PIC X(10).
03 FILLER REDEFINES DEEDIT-FIELD.
05 DEEDIT-FIELD-X    PIC ZZZZZ.ZZ.
05 FILLER            PIC X(02).
01  PLAY-DEEDIT-FLD-N       PIC 9(7)V99.
01  FILLER REDEFINES PLAY-DEEDIT-FLD-N.
05 PLAY-DEEDIT-FLD-C    PIC X(9).

EJECT




01  FILLER.

03 NORMAL-MESSAGE.
05 FILLER             PIC X(40) VALUE
'*OK..  HAVE T/S ATTENDANT GIVE DRIVER A '.
05 FILLER             PIC X(15) VALUE
'USI DIRECTORY  '.
05 US-CODE-NR         PIC Z(5).
05 FILLER             PIC X(20) VALUE SPACES.

03 I-PRMPT-WORK.
05 FILLER             PIC XX VALUE 'I '.
05 FILLER             PIC X(29) VALUE SPACES.
05 I-CTL-NR           PIC 9(7) VALUE 0.
05 I-AMT              PIC 9(5)V99 VALUE 0.
05 I-TIMIN            PIC 9(4) VALUE 0.
05 FILLER             PIC X VALUE SPACES.

03 OUTPUT-DATA-OK.
05 FILER              PIC X(08) VALUE 'OK XMIT-'.
05 OUT-NETXMN         PIC ZZ,ZZZ.99-.
05 FILLER             PIC X(02) VALUE '#-'.
05 OUT-CTL-NR         PIC 9(07) VALUE 0.
05 FILLER             PIC X(01) VALUE SPACES.
05 FILLER             PIC X(06) VALUE 'AUTH#-'.
05 OUT-CK-AUTH-NR     PIC 9(04) VALUE 0.

03 OUTPUT-2ND-LINE.
05 FILLER             PIC X(39) VALUE
'CHK MUST BE MADE OUT TO DRIVER AND T/S.'.
05 FILLER             PIC XXX VALUE SPACES.
05 OUT-TAX-HEAD-A.
10 OUT-TAX-HEAD    PIC X(06) VALUE SPACES.
10 OUT-TAX         PIC Z(5).ZZ.
05 OUT-SURCH-HEAD-B REDEFINES OUT-TAX-HEAD-A.
10 OUT-SURCH-HEAD  PIC X(06).
10 OUT-SURCH       PIC ZZ9.99.
10 FILLER          PIC X(02).

03 OUTPUT-CAN-DATA-OK.
05 FILLER             PIC X(4) VALUE 'OK- '.
05 OUT-CAN-NETXMN     PIC ZZ,ZZZ.99-.
05 FILLER             PIC X(5)
VALUE 'CAN$ '.
05 FILLER             PIC XX   VALUE '#-'.
05 OUT-CAN-CTL-NR     PIC 9(6) VALUE 0.
05 OUT-CAN-BRIDGE     PIC X(3) VALUE SPACES.
05 FILLER             PIC X    VALUE SPACES.
05 FILLER             PIC X(5) VALUE 'AUTH-'.
05 OUT-CAN-CK-AUTH-NR PIC 9(4).

03 OUTPUT-CAN-2ND-LINE.
05 FILLER             PIC X(39) VALUE
'CHK MUST BE MADE OUT TO DRIVER AND T/S.'.
05 FILLER             PIC XXX VALUE SPACES.
05 OUTPUT-CAN-2ND-LINE-COUNTRY   PIC X(2)   VALUE 'US'.
05 FILLER             PIC X(13)
VALUE ' EQUIVALENT: '.
05 OUT-US-NETXMN     PIC ZZ,ZZZ.99-.
05 OUT-CAN-TAX-HEAD-A.
10 OUT-CAN-TAX-HEAD    PIC X(06) VALUE SPACES.
10 OUT-CAN-TAX         PIC Z(4).ZZ.
05 OUT-CAN-SURCH-HEAD-B REDEFINES OUT-CAN-TAX-HEAD-A.
10 OUT-CAN-SURCH-HEAD  PIC X(07).
10 OUT-CAN-SURCH       PIC ZZ9.99.

03 AUTO-DIAL-MESSAGE.
05 FILLER             PIC X(39) VALUE
'CHECK IS ON THE WAY                    '.

03 TRI-STATE-MESSAGE-1.
05 FILLER             PIC X(6) VALUE 'DRIVER'.
05 FILLER             PIC X VALUE QUOTE.
05 FILLER             PIC X(20) VALUE
'S CONTROL NUMBER IS '.

03 TRI-STATE-MESSAGE-2  PIC X(47) VALUE
'ENTER THE UNIT NUMBER OF THE TRACTOR..........-'.

03 OUTPUT-GOLD-OK-1.
05 FILLER               PIC XXX VALUE 'OK-'.
05 OUT-GOLD-AMT         PIC ZZ,ZZZ.99-.
05 FILLER               PIC X(6) VALUE 'REF#- '.
05 OUT-GOLD-DAY         PIC 99.
05 OUT-GOLD-CTL         PIC 9(7).
05 OUT-GOLD-BRIDGE      PIC X(3).
05 OUTPUT-GOLD-HD-1     PIC X(09) VALUE '         '.
05 OUT-GOLD-TAX-HD-A.
10 OUT-GOLD-TAX-HEAD    PIC X(06) VALUE SPACES.
10 OUT-GOLD-TAX         PIC Z(5).ZZ.
05 OUT-GOLD-SURCH-HD-B REDEFINES OUT-GOLD-TAX-HD-A.
10 OUT-GOLD-SURCH-HEAD  PIC X(06).
10 OUT-GOLD-SURCH       PIC ZZ9.99.
10 FILLER               PIC X(02).

03 OUTPUT-GOLD-OK-2.
05 FILLER           PIC X(26) VALUE
'*===DO NOT WRITE A CHECK!!'.
05 OUTPUT-GOLD-HD-2 PIC X(29) VALUE
' DRIVER MUST SIGN INVOICE===*'.
03 NEW-OUTPUT-GOLD-OK-2.
05 FILLER           PIC X(50) VALUE
'PLEASE HAVE DRIVER SIGN INVOICE, YOUR TRANSACTION '.
05 FILLER           PIC X(10) VALUE
'NUMBER IS '.
05 NEW-OUTPUT-DAY   PIC 99    VALUE ZEROS.
05 NEW-OUTPUT-TRAN  PIC 9(7)  VALUE ZEROS.
05 FILLER           PIC X(10) VALUE SPACES.

03 OK-G                             PIC X(40) VALUE
'OK...G'.
03 OK-MSG1                          PIC X(40) VALUE
'*OK..'.
03 OK-MSG2                          PIC X(40) VALUE
'OK...'.
03 OK-S                             PIC X(40) VALUE
'OK...S'.
03 SEE-PRINTER                      PIC X(40) VALUE
'SEE PRINTER'.
03 WS-CANCEL-GALLONS                PIC 9(5)V99.
03 WS-CANCEL-COST                   PIC 9(5)V99.
03 TRANS-CANCELLED-2.
05 FILLER.
10 FILLER                     PIC X(01) VALUE ' '.
10 FILLER                     PIC X(17) VALUE
'TRANS. CANCELLED '.
05 FILLER.
10 FILLER                     PIC X(01) VALUE ' '.
10 CANCEL-GAL-LIT             PIC X(09) VALUE
'GALLONS: '.
10 CANCEL-GALLONS             PIC 9(5).99.
05 FILLER.
10 FILLER                     PIC X(01) VALUE ' '.
10 FILLER                     PIC X(09) VALUE
' AMOUNT: '.
10 CANCEL-COST                PIC 9(5).99.
03 TRANSACTION-RECORDED             PIC X(40) VALUE
'TRANSACTION RECORDED'.
03 THANK-YOU                        PIC X(40) VALUE
'THANK YOU'.
03 WS-FLEET-RESPONSE.
10 WS-FR-CODE                    PIC 9(05).
10 WS-FR-ACCT                    PIC X(05).
10 WS-FR-CUST                    PIC X(10).
10 WS-FR-AMT                     PIC 9(05)V99.
10 WS-FR-CONTROL-NR              PIC 9(06).
10 WS-FR-EXP-DATE                PIC 9(04).
10 WS-FR-CARD-BLOCKED            PIC X(01).
10 WS-FR-MESSAGE                 PIC X(80).

03 WS-BATCH-FUEL-RESPONSE.
10 WS-BF-MESSAGE                 PIC X(80).
10 WS-BF-CONTROL-NR              PIC 9(09).
10 WS-BF-FMLOG-RK-DATE           PIC 9(07).

03 POS-OKG-LARGE.
05 FILLER                     PIC X(04) VALUE 'CTL#'.
05 POS-OKGL-CTL               PIC 9(06).
05 POS-OKGL-BRIDGE            PIC X(03).
05 FILLER                     PIC X(02) VALUE ' $'.
05 POS-OKGL-AMT               PIC ZZZZZ9.99.
05 POS-OKGL-TAX-HEAD          PIC X(06) VALUE SPACES.
05 POS-OKGL-TAX               PIC ZZZZZ.ZZ.
03 POS-OK-TERMINAL.
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(06) VALUE 'CNTL#:'.
10 FILLER.
15 POS-OKT-CTL-DD       PIC 9(02).
15 POS-OKT-CTL          PIC 9(06).
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(09) VALUE 'GALLONS: '.
10 POS-OKT-GALLONS         PIC 9(5).99.
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(09) VALUE 'AMOUNT: '.
10 POS-OKT-AMOUNT          PIC 9(5).99.
05 FILLER.
10 FILLER                  PIC X(07) VALUE ' DATE: '.
10 POS-OKT-DATE            PIC X(8).
10 FILLER                  PIC X(07) VALUE ' TIME: '.
10 POS-OKT-TIME            PIC X(8).

03 POS-OK.
05 FILLER                     PIC X(06) VALUE 'AMOUNT'.
05 POS-OK-AMT                 PIC ZZ,ZZZ.99-.
05 FILLER                     PIC X(10) VALUE ' CTL#-'.
05 POS-OK-CTL                 PIC 9(6).
05 FILLER                     PIC X(7) VALUE ' AUTH#-'.
05 POS-OK-AUTH                PIC 9(4).
05 POS-OK-TAX-HEAD            PIC X(06).
05 POS-OK-TAX                 PIC Z(5).ZZ.
03 POS-OK-EXPANDED.
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(04) VALUE 'CTL#'.
10 FILLER.
15 POS-OKX-CTL          PIC 9(06).
15 POS-OKX-XTN-TYPE     PIC X(03) VALUE SPACES.
05 FILLER.
10 FILLER                  PIC X(11)
VALUE ' NET AMOUNT'.
10 POS-OKX-NET             PIC $$$$$9.99.
05 FILLER.
10 FILLER                  PIC X(18)
VALUE ' - FEE REDUCED BY '.
10 POS-OKX-FEE-DEDUCT      PIC 9(5).99.
05 FILLER.
10 POS-OKX-TAX-HEAD        PIC X(06) VALUE SPACES.
10 POS-OKX-TAX             PIC Z(5).ZZ.
03 POS-OK-DISCOUNT.
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(04) VALUE 'CTL#'.
10 FILLER.
15 POS-OKD-CTL          PIC 9(06).
15 POS-OKD-XTN-TYPE     PIC X(03) VALUE SPACES.
05 FILLER.
10 FILLER                  PIC X(11)
VALUE ' NET AMOUNT'.
10 POS-OKD-NET             PIC $$$$$9.99.
05 FILLER.
10 POS-OKD-TAX-HEAD        PIC X(06) VALUE SPACES.
10 POS-OKD-TAX             PIC Z(5).ZZ.
03 POS-OK-FEE.
05 FILLER.
10 FILLER                  PIC X(01) VALUE ' '.
10 FILLER                  PIC X(04) VALUE 'CTL#'.
10 FILLER.
15 POS-OKF-CTL          PIC 9(06).
15 POS-OKF-XTN-TYPE     PIC X(03) VALUE SPACES.
05 FILLER.
10 FILLER                  PIC X(18)
VALUE ' - FEE REDUCED BY '.
10 POS-OKF-FEE-DEDUCT      PIC 9(5).99.
05 FILLER.
10 POS-OKF-TAX-HEAD        PIC X(06) VALUE SPACES.
10 POS-OKF-TAX             PIC Z(5).ZZ.
03 POS-SETTLE-OK.
05 FILLER                     PIC X(07) VALUE 'CHK AMT'.
05 POS-SETTLE-AMT             PIC $$$$$9.99.
05 FILLER                     PIC X(8) VALUE ' AUTH# '.
05 POS-SETTLE-AUTH            PIC 9(4).
05 FILLER                     PIC X(4) VALUE SPACES.
05 FILLER                     PIC X(11) VALUE
' XTN CNT -'.
05 POS-SETTLE-CNT             PIC ZZZZ9.
05 FILLER                     PIC X(11) VALUE
'  XTN TOT '.
05 POS-SETTLE-TOT             PIC $$,$$9.99-.
03 EMAIL-OK-RESP.
05  EOR-ACCT-CODE             PIC X(10).
05  EOR-CUST-ID               PIC X(10).
05  EOR-CTL-NR                PIC 9(6).





01  FILLER.

05 CALL-COMPANY-MSG.
10  FILLER                    PIC X(21) VALUE
'CALL COMPANY - ERROR '.
10  CALL-COMPANY-NBR          PIC 9(3)  VALUE ZEROS.

05 NEW-OUT-MESSAGE.
10  NEW-OUT-MSG1              PIC X(40) VALUE SPACES.
10  NEW-OUT-MSG2              PIC X(79) VALUE SPACES.

05 NO-MSG-NBR                    PIC 9(3)  VALUE 002.
05 INVALID-UNIT-NR-NBR           PIC 9(3)  VALUE 030.
05 CUST-NOT-ACTIVE-NBR           PIC 9(3)  VALUE 088.
05 INACTIVE-CARD-NBR             PIC 9(3)  VALUE 054.
05 INVALID-DL-NBR                PIC 9(3)  VALUE 056.
05 INVALID-RATE-NBR              PIC 9(3)  VALUE 084.
05 INVALID-TRIP-NR-NBR           PIC 9(3)  VALUE 022.
05 FUEL-NOT-ALLOWED-NBR          PIC 9(3)  VALUE 052.
05 ID-MISSING-NBR                PIC 9(3)  VALUE 086.
05 PURCHASE-NOT-ALLOWED-NBR      PIC 9(3)  VALUE 042.
05 ALLOWANCE-EXCEEDED-NBR        PIC 9(3)  VALUE 044.
05 MAX-DAILY-NBR                 PIC 9(3)  VALUE 046.
05 CARD-BLOCKED-NBR              PIC 9(3)  VALUE 048.
05 LIMIT-EXCEEDED-NBR            PIC 9(3)  VALUE 058.
05 HUB-READING-NBR               PIC 9(3)  VALUE 060.
05 TRIP-ALLOW-EXCEEDED-NBR       PIC 9(3)  VALUE 050.

05 SETTLE-NOT-POSSIBLE-N         PIC S9(5) COMP-3 VALUE +01.
05 SETTLE-NOT-POSSIBLE           PIC X(40) VALUE
'001 SETTLEMENT NOT POSSIBLE'.

05 DRIVER-MAY-NOT-FUEL-NO-PROD-N PIC S9(5) COMP-3 VALUE +02.
05 DRIVER-MAY-NOT-FUEL-NO-PROD.
10 FILLER                     PIC X(40) VALUE
'DRIVER MAY NOT FUEL HERE'.
10 FILLER                     PIC X(80) VALUE
'NO PRODUCTS ARE AVAILABLE'.

05 DRIVER-MAY-NOT-PURC-PROD-N    PIC S9(5) COMP-3 VALUE +03.
05 DRIVER-MAY-NOT-PURC-PROD.
10 FILLER                     PIC X(40) VALUE
'THIS DRIVER MAY NOT PURCHASE'.
10 FILLER                     PIC X(80) VALUE
'THIS PRODUCT'.

05 MUST-ANSWER-Y-N-N             PIC S9(5) COMP-3 VALUE +04.
05 MUST-ANSWER-Y-N               PIC X(40) VALUE
'YOU MUST ANSWER Y OR N'.

05 MUST-ENTER-CHECK-N            PIC S9(5) COMP-3 VALUE +05.
05 MUST-ENTER-CHECK              PIC X(40) VALUE
'YOU MUST ENTER A CHECK NR'.

05 INVALID-CHECK-NR-N            PIC S9(5) COMP-3 VALUE +06.
05 INVALID-CHECK-NR              PIC X(40) VALUE
'INVALID CHECK NUMBER'.
05 INVALID-CAN-CHECK-NR          PIC X(40) VALUE
'INVALID CANADIAN CHECK NUMBER'.
05 INVALID-US-CHECK-NR           PIC X(40) VALUE
'INVALID US CHECK NUMBER'.

05 VERIFY-PRODUCTS-N             PIC S9(5) COMP-3 VALUE +07.
05 VERIFY-PRODUCTS               PIC X(40) VALUE
'VERIFY PRODUCTS..'.

05 VERIFY-PRODUCTS-DUP-N         PIC S9(5) COMP-3 VALUE +07.
05 VERIFY-PRODUCTS-DUP           PIC X(40) VALUE
'DUPLICATE PRODUCT ENTERED'.

05 INVALID-AMOUNT-ENTERED-N      PIC S9(5) COMP-3 VALUE +08.
05 INVALID-AMOUNT-ENTERED        PIC X(40) VALUE
'INVALID AMOUNT ENTERED.'.

05 INVALID-NUM-VALUE-N           PIC S9(5) COMP-3 VALUE +08.
05 INVALID-NUM-VALUE             PIC X(40) VALUE
'INVALID NUMERIC VALUE ENTERED'.
05 INVALID-NUM-VALUE2            PIC X(40) VALUE
'MAX QTY/AMOUNT EXCEEDED      '.

05 INVALID-PRODUCT-CODE-N        PIC S9(5) COMP-3 VALUE +09.
05 INVALID-PRODUCT-CODE          PIC X(40) VALUE
'INVALID PRODUCT CODE'.

05 PRODUCT-ALLOWANCE-EXCEEDED-N  PIC S9(5) COMP-3 VALUE +10.
05 PRODUCT-ALLOWANCE-EXCEEDED    PIC X(40) VALUE
'PRODUCT ALLOWANCE EXCEEDED'.

05 MAX-DAILY-PROD-PURC-N         PIC S9(5) COMP-3 VALUE +11.
05 MAX-DAILY-PROD-PURC.
10 FILLER                     PIC X(40) VALUE
'MAXIMUM DAILY PRODUCT PURCHASE'.
10 FILLER                     PIC X(40) VALUE
'EXCEEDED'.

05 INVALID-CARD-NR-N             PIC S9(5) COMP-3 VALUE +12.
05 INVALID-CARD-NR               PIC X(40) VALUE
'INVALID CARD NR'.

05 INVALID-CVC1-N                PIC S9(5) COMP-3
VALUE +1557.
05 INVALID-CVC1                  PIC X(40) VALUE
'INVALID CVC1 ON CARD'.

05 INVALID-RESP-QUERY-N          PIC S9(5) COMP-3 VALUE +13.
05 INVALID-RESP-QUERY            PIC X(40) VALUE
'INVALID RESPONSE TO QUERY'.

05 CHECK-ENTRY-ERROR-N           PIC S9(5) COMP-3 VALUE +14.
05 CHECK-ENTRY-ERROR             PIC X(40) VALUE
'CHECK ENTRY ERROR'.

05 SYSTEM-UNDER-INQUIRY-N        PIC S9(5) COMP-3 VALUE +15.
05 SYSTEM-UNDER-INQUIRY          PIC X(40) VALUE
'SYSTEM UNDER INQUIRY'.
05 NEW-SYSTEM-UNDER-INQUIRY      PIC X(40) VALUE
'SYSTEM UNDER INQUIRY, USE FORMS SCREEN  '.

05 ID-NR-MISSING-N               PIC S9(5) COMP-3 VALUE +16.
05 ID-NR-MISSING                 PIC X(40) VALUE
'ID NR IS MISSING OR INVALID'.

05 TS-IS-INVALID-N               PIC S9(5) COMP-3 VALUE +17.
05 TS-IS-INVALID                 PIC X(40) VALUE
'T/S IS INVALID'.
05  IN-NETW-TS-INVALID-N         PIC S9(5) VALUE +17 COMP-3.
05  IN-NETW-TS-INVALID           PIC X(40)
VALUE 'BUSSINESS TYPE IS INVALID'.
05 YCODE-IS-INVALID              PIC X(40) VALUE
'YCODE NOT ALLOWED'.

05 DO-NOT-HONOR-N                PIC S9(5) COMP-3 VALUE +18.
05 DO-NOT-HONOR                  PIC X(40) VALUE
'DO NOT HONOR'.

05 NEW-DO-NOT-HONOR1             PIC X(40) VALUE
'FUEL SCREEN BLOCKED                     '.
05 NEW-DO-NOT-HONOR2.
10 FILLER                     PIC X(21) VALUE
'CALL COMPANY - ERROR '.
10 NEW-DO-NOT-HONOR-NBR       PIC 9(3)  VALUE ZEROS.
10 FILLER                     PIC X(55) VALUE SPACES.


05 VIRTUAL-CARD-NOT-ALLOWED-N    PIC S9(5) COMP-3 VALUE +19.
05 VIRTUAL-CARD-NOT-ALLOWED      PIC X(40) VALUE
'VIRTUAL CARD NOT ALLOWED'.

05 TERMINAL-FUEL-NOT-ALLOWED-N   PIC S9(5) COMP-3 VALUE +449.
05 TERMINAL-FUEL-NOT-ALLOWED     PIC X(40) VALUE
'TERMINAL FUEL NOT ALLOWED'.

05 TRIP-ALLOW-EXCEEDED-N         PIC S9(5) COMP-3 VALUE +20.
05 TRIP-ALLOW-EXCEEDED.
10 FILLER                     PIC X(40) VALUE
'CONTACT SUPERVISOR:'.
10 FILLER                     PIC X(80) VALUE
'TRIP ALLOWANCE HAS BEEN EXCEEDED'.

05 DRIVER-MAY-NOT-FUEL-HERE-N    PIC S9(5) COMP-3 VALUE +21.
05 DRIVER-MAY-NOT-FUEL-HERE      PIC X(40) VALUE
'DRIVER MAY NOT FUEL HERE'.

05 DRIVER-MAY-NOT-FUEL-CNET.
10 FILLER                     PIC X(40) VALUE
'DRIVER MAY NOT FUEL HERE'.
10 FILLER                     PIC X(80) VALUE
'USING LIMITED NETWORK BY CARD'.

05 CHECK-NR-BIGGER-N             PIC S9(5) COMP-3 VALUE +22.
05 CHECK-NR-BIGGER.
10 FILLER                     PIC X(40) VALUE
'BEFORE YOU MAY MOVE ON TO "BIGGER AND'.
10 FILLER                     PIC X(80) VALUE
'BETTER" THINGS, YOU MUST ENTER THE CHECK'.

05 YOU-ARE-RELEASED-N            PIC S9(5) COMP-3 VALUE +23.
05 YOU-ARE-RELEASED              PIC X(40) VALUE
'YOU ARE RELEASED'.

05 INVALID-RESP-MSG-QUERY-N      PIC S9(5) COMP-3 VALUE +24.
05 INVALID-RESP-MSG-QUERY.
10 FILLER                     PIC X(40) VALUE
'INVALID RESPONSE TO MESSAGE QUERY'.
10 FILLER                     PIC X(80) VALUE
'CORRECT AND RETRY'.

05 INVOICE-NR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +25.
05 INVOICE-NR-REQUIRED           PIC X(40) VALUE
'INVOICE NR REQUIRED'.

05 INVOICE-NR-INVALID-N          PIC S9(5) COMP-3 VALUE +25.
05 INVOICE-NR-INVALID            PIC X(40) VALUE
'INVOICE NR MUST BE NUMERIC'.

05 CC-INVOICE-NR-INVALID-N       PIC S9(5) COMP-3 VALUE +25.
05 CC-INVOICE-NR-INVALID         PIC X(40) VALUE
'INVOICE NR IS DUPLICATE OF LAST TRANS.'.
05 FILLER                        PIC X(20) VALUE
'REFER TO CONTROL #: '.
05 CC-INVOICE-NR-CTL             PIC 9(7).

05 FUEL-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +26.
05 FUEL-NOT-ALLOWED              PIC X(40) VALUE
'FUEL NOT ALLOWED AT THIS LOCATION'.
05 FUEL-NOT-ALLOWED2             PIC X(40) VALUE
'FUEL NOT ALLOWED'.

05 OIL-NOT-ALLOWED-N             PIC S9(5) COMP-3 VALUE +27.
05 OIL-NOT-ALLOWED               PIC X(40) VALUE
'OIL NOT ALLOWED AT THIS LOCATION'.
05 OIL-NOT-ALLOWED2              PIC X(40) VALUE
'OIL NOT ALLOWED'.

05 CASH-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +28.
05 CASH-NOT-ALLOWED              PIC X(40) VALUE
'CASH NOT ALLOWED AT THIS LOCATION'.
05 CASH-NOT-ALLOWED2             PIC X(40) VALUE
'CASH NOT ALLOWED'.

05 PROD-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +29.
05 PROD-NOT-ALLOWED              PIC X(40) VALUE
'PRODUCTS NOT ALLOWED AT THIS LOCATION'.
05 PROD-NOT-ALLOWED2             PIC X(40) VALUE
'PRODUCTS NOT ALLOWED'.

05 TRIP-NR-REQUIRED-N            PIC S9(5) COMP-3 VALUE +30.
05 TRIP-NR-REQUIRED              PIC X(40) VALUE
'TRIP NR IS REQUIRED TO PROCEED'.

05 TRIP-NR-INVALID-N             PIC S9(5) COMP-3 VALUE +31.
05 TRIP-NR-INVALID               PIC X(40) VALUE
'TRIP NR IS INVALID'.

05 INVALID-CHAR-IN-NAME-N        PIC S9(5) COMP-3 VALUE +32.
05 INVALID-CHAR-IN-NAME          PIC X(40) VALUE
'INVALID CHARACTER IN DRIVER NAME'.

05 MAX-PURC-MNX-DRIVER-N         PIC S9(5) COMP-3 VALUE +33.
05 MAX-PURC-MNX-DRIVER.
10 FILLER                     PIC X(40) VALUE
'CONTACT SUPERVISOR: MAXIMUM PURCHASE'.
10 FILLER                     PIC X(80) VALUE
'AMOUUNT FOR MNX DRIVER EXCEEDED'.

05 NEW-MAX-PURC-MNX-DRIVER       PIC X(40) VALUE
'MNX DRIVER MAY ONLY HAVE A $60 PURCHASE '.

05 INVOICE-TOTAL-ERROR-N         PIC S9(5) COMP-3 VALUE +34.
05 INVOICE-TOTAL-ERROR.
10 FILLER                     PIC X(40) VALUE
'INVOICE DETAIL AMOUNTS DOES NOT'.
10 FILLER                     PIC X(80) VALUE
'MATCH EXPECTED TOTAL'.

05 INVALID-RATE-CODE-N           PIC S9(5) COMP-3 VALUE +35.
05 INVALID-RATE-CODE             PIC X(40) VALUE
'INVALID RATE CODE'.

05 CTL-NR-MAX-N                  PIC S9(5) COMP-3 VALUE +36.
05 CTL-NR-MAX                    PIC X(40) VALUE
'CTL # EXCEEDES MAXIMUM'.

05 INVALID-CANCEL-REQ-N          PIC S9(5) COMP-3 VALUE +37.
05 INVALID-CANCEL-REQ            PIC X(40) VALUE
'INVALID CANCEL REQUEST'.

05 INVALID-ID-NR-N               PIC S9(5) COMP-3 VALUE +38.
05 INVALID-ID-NR                 PIC X(40) VALUE
'INVALID ID NR'.

05 CALL-TO-CANCEL-N            PIC S9(5) COMP-3 VALUE +1165.
05 CALL-TO-CANCEL              PIC X(40) VALUE
'PLEASE CALL COMDATA FOR CANCELLATION'.

05 TRANS-ALREADY-CANCELLED-N     PIC S9(5) COMP-3 VALUE +39.
05 TRANS-ALREADY-CANCELLED       PIC X(40) VALUE
'THIS TRANS ALREADY CANCELLED'.

05 RECORD-MISMATCH-N             PIC S9(5) COMP-3 VALUE +40.
05 RECORD-MISMATCH               PIC X(40) VALUE
'RECORD MISMATCH: CANCEL NOT POSSIBLE'.

05 INVALID-TRANS-NR-N            PIC S9(5) COMP-3 VALUE +41.
05 INVALID-TRANS-NR              PIC X(40) VALUE
'INVALID TRANS NR'.

05 INVALID-TRANS-NR-TS-N         PIC S9(5) COMP-3 VALUE +42.
05 INVALID-TRANS-NR-TS           PIC X(40) VALUE
'INVALID TRANS NR / TSCODE'.

05 TRANSACTION-PURGED-N          PIC S9(5) COMP-3 VALUE +43.
05 TRANSACTION-PURGED            PIC X(40) VALUE
'TRANSACTION PURGED'.

05 FUNCTION-COMPLETE-N           PIC S9(5) COMP-3 VALUE +44.
05 FUNCTION-COMPLETE             PIC X(40) VALUE
'FUNCTION COMPLETE'.

05 INACTIVE-CARD-N               PIC S9(5) COMP-3 VALUE +45.
05 INACTIVE-CARD                 PIC X(40) VALUE
'INACTIVE CARD'.

05 MUST-USE-IN-STATION-N         PIC S9(5) COMP-3 VALUE +46.
05 MUST-USE-IN-STATION           PIC X(40) VALUE
'MUST USE IN-STATION CARD'.

05 INVALID-DL-N                  PIC S9(5) COMP-3 VALUE +47.
05 INVALID-DL                    PIC X(40) VALUE
'INVALID DL#'.

05 NOT-INSTATION-N               PIC S9(5) COMP-3 VALUE +48.
05 NOT-INSTATION                 PIC X(40) VALUE
'NOT IN-STATION CARD'.
05 NEW-NOT-INSTATION1            PIC X(40) VALUE
'CONTACT SUPERVISTOR                     '.
05 NEW-NOT-INSTATION2.
10  FILLER                    PIC X(40) VALUE
'IN-STATION CARD FLAGGED WRONG           '.
10  FILLER                    PIC X(39) VALUE SPACES.

05 IN-STATION-PURC-NOT-ALLOWED-N PIC S9(5) COMP-3 VALUE +49.
05 IN-STATION-PURC-NOT-ALLOWED   PIC X(40) VALUE
'IN STATION CARD - PURCHASE NOT ALLOWED'.

05 CUST-NOT-ACTIVE-N             PIC S9(5) COMP-3 VALUE +50.
05 CUST-NOT-ACTIVE               PIC X(40) VALUE
'CUSTOMER NOT ACTIVE'.

05 INVALID-UNIT-NR-N             PIC S9(5) COMP-3 VALUE +51.
05 INVALID-UNIT-NR               PIC X(40) VALUE
'INVALID UNIT NR'.

05 INVALID-UNIT-NR-LEN-N         PIC S9(5) COMP-3 VALUE +51.
05 INVALID-UNIT-NR-LEN           PIC X(40) VALUE
'INVALID UNIT NR - INVALID LENGTH'.

05 CUST-NOT-ON-FUEL-N            PIC S9(5) COMP-3 VALUE +52.
05 CUST-NOT-ON-FUEL              PIC X(40) VALUE
'CUSTOMER NOT SET UP FOR FUEL PROGRAM'.

05 CARD-NOT-ON-FUEL-N            PIC S9(5) COMP-3 VALUE +52.
05 CARD-NOT-ON-FUEL              PIC X(40) VALUE
'CARD IS NOT SET UP FOR FUEL PROGRAM'.

05 NEW-CUST-NOT-ON-FUEL1         PIC X(40) VALUE
'PLEASE CALL VOICE RESPONSE              '.
05 NEW-CUST-NOT-ON-FUEL2.
10 FILLER                     PIC X(23) VALUE
'- GIVE THE PHONE NUMBER'.
10 FILLER                     PIC X(56) VALUE SPACES.

05 NEW-CARD-NOT-ON-FUEL1         PIC X(40) VALUE
'PLEASE CALL VOICE RESPONSE              '.
05 NEW-CARD-NOT-ON-FUEL2.
10 FILLER                     PIC X(23) VALUE
'- GIVE THE PHONE NUMBER'.
10 FILLER                     PIC X(56) VALUE SPACES.

05 CUST-RECORD-NOT-FOUND-N       PIC S9(5) COMP-3 VALUE +53.
05 CUST-RECORD-NOT-FOUND         PIC X(40) VALUE
'CUSTOMER RECORD NOT FOUND'.

05 INACTIVE-DRIVER-N             PIC S9(5) COMP-3 VALUE +54.
05 INACTIVE-DRIVER               PIC X(40) VALUE
'INACTIVE DRIVER'.

05 ENTER-PROPER-TS-PHONE-N       PIC S9(5) COMP-3 VALUE +55.
05 ENTER-PROPER-TS-PHONE         PIC X(40) VALUE
'ENTER PROPER T/S PHONE NR'.

05 INACTIVE-LOCATION-N           PIC S9(5) COMP-3 VALUE +464.
05 INACTIVE-LOCATION             PIC X(40) VALUE
'THIS LOCATION IS NOT ACTIVE'.

05 UNAUTHORIZED-TERM-N           PIC S9(5) COMP-3 VALUE +56.
05 UNAUTHORIZED-TERM             PIC X(40) VALUE
'UNAUTHORIZED TERMINAL'.

05 THIS-CARD-MUST-CALL-N         PIC S9(5) COMP-3 VALUE +57.
05 THIS-CARD-MUST-CALL           PIC X(40) VALUE
'THIS CARD MUST CALL'.

05 CANCEL-MUST-CALL-N            PIC S9(5) COMP-3 VALUE +603.
05 CANCEL-MUST-CALL              PIC X(40) VALUE
'CAN NOT CANCEL XTN AFTER 2 HOURS'.

05 DAILY-LIMIT-EXCEEDED-N        PIC S9(5) COMP-3 VALUE +58.
05 DAILY-LIMIT-EXCEEDED          PIC X(40) VALUE
'DAILY LIMIT EXCEEDED'.

05 CASH-ADVANCE-NOT-AVAIL-N      PIC S9(5) COMP-3 VALUE +59.
05 CASH-ADVANCE-NOT-AVAIL        PIC X(40) VALUE
'CASH ADVANCE NOT AVAILABLE'.

05 NO-OIL-THIS-UNIT-N            PIC S9(5) COMP-3 VALUE +60.
05 NO-OIL-THIS-UNIT              PIC X(40) VALUE
'NO OIL THIS UNIT'.

05 PROD-CODES-NOT-ALLOWED-N      PIC S9(5) COMP-3 VALUE +61.
05 PROD-CODES-NOT-ALLOWED        PIC X(40) VALUE
'PRODUCT CODES NOT ALLOWED'.

05 AUTO-DIAL-DOWN-N              PIC S9(5) COMP-3 VALUE +62.
05 AUTO-DIAL-DOWN                PIC X(40) VALUE
'AUTO DIAL IS DOWN'.

05 FUEL-PRICE-ERR-N              PIC S9(5) COMP-3 VALUE +63.
05 FUEL-PRICE-ERR                PIC X(40) VALUE
'FUEL PRICE ERROR'.

05 FUEL-PRICE-ERR-CREDIT-N       PIC S9(5) COMP-3 VALUE +621.
05 FUEL-PRICE-ERR-CREDIT         PIC X(40) VALUE
'FUEL PRICE ERROR, USE CREDIT PRICE'.

05 NEW-FUEL-PRICE-ERR1           PIC X(17) VALUE
'FUEL PRICE ERROR '.
05 NEW-FUEL-PRICE-TYPE           PIC X(23) VALUE '(CASH)'.
05 NEW-FUEL-PRICE-ERR2.
10 FILLER                     PIC X(42) VALUE
'PRESS "F5" TO UPDATE T/S, RE-ENTER ORDER, '.
10 FILLER                     PIC X(22) VALUE
'PRESS "F7" TO OVERRIDE'.
10 FILLER                     PIC X(15) VALUE SPACES.

05 ZERO-OR-NEG-N                 PIC S9(5) COMP-3 VALUE +64.
05 ZERO-OR-NEG                   PIC X(40) VALUE
'ZERO OR NEGATIVE AMT ENTERED'.

05 UNIT-NR-REQ-N                 PIC S9(5) COMP-3 VALUE +65.
05 UNIT-NR-REQ                   PIC X(40) VALUE
'UNIT NR IS REQUIRED TO PROCEED'.

05 OTHER-FUEL-NOT-ALLOWED-N      PIC S9(5) COMP-3 VALUE +66.
05 OTHER-FUEL-NOT-ALLOWED        PIC X(40) VALUE
'OTHER FUEL NOT ALLOWED THIS COMP'.

05 NR1-FUEL-NOT-ALLOWED-N        PIC S9(5) COMP-3 VALUE +66.
05 NR1-FUEL-NOT-ALLOWED          PIC X(40) VALUE
'NR1 FUEL NOT ALLOWED THIS COMP'.

05 NO-REFER-PURC-N               PIC S9(5) COMP-3 VALUE +67.
05 NO-REFER-PURC                 PIC X(40) VALUE
'NO REFER PURCHASE ALLOWED THIS UNIT'.

05 PRICE-EXCEEDS-MAX-N           PIC S9(5) COMP-3 VALUE +68.
05 PRICE-EXCEEDS-MAX.
10 FILLER                     PIC X(40) VALUE
'FUEL PRICE OUT OF RANGE'.
10 FILLER                     PIC X(05) VALUE
'MAX: '.
10 PRICE-EXCEEDS-MAX-MAX      PIC Z.999.
10 FILLER                     PIC X(06) VALUE
' MIN: '.
10 PRICE-EXCEEDS-MAX-MIN      PIC Z.999.

05 EXCESSIVE-OIL-REQUEST-N       PIC S9(5) COMP-3 VALUE +69.
05 EXCESSIVE-OIL-REQUEST.
10 FILLER                     PIC X(40) VALUE
'OIL REQUEST EXCEEDS AVAILABLE. '.
10 FILLER                     PIC X(05) VALUE 'ONLY '.
10 XCS-OIL-REQ                PIC ZZ9.
10 XCS-OIL-REQ-MSG            PIC X(6).
10 FILLER                     PIC X(76) VALUE
' ARE ALLOWED PER TRANSACTION'.

05 OIL-EXCEEDS-MAX-N             PIC S9(5) COMP-3 VALUE +69.
05 OIL-EXCEEDS-MAX.
10 FILLER                     PIC X(40) VALUE
'OIL REQUEST EXCEEDS AVAILABLE. '.
10 OIL-EXCEEDS-MAX-QTY        PIC ---9.
10 FILLER                     PIC X(1) VALUE ' '.
10 OIL-EXCEEDS-MAX-QTY-MSG    PIC X(6).
10 FILLER                     PIC X(5) VALUE ' AND '.
10 OIL-EXCEEDS-MAX-DOL        PIC ---9.99.
10 FILLER                     PIC X(25) VALUE
' DOLLARS ARE AVAILABLE'.

05 EXCESSIVE-BALANCE-REQUEST-N   PIC S9(5) COMP-3 VALUE +70.
05 EXCESSIVE-BALANCE-REQUEST.
10 FILLER                     PIC X(40) VALUE
'EXPENSE BALANCE HAS BEEN EXCEEDED.'.
10 XCS-BAL-REQ-AMT            PIC ZZZ,ZZZ.99-.
10 FILLER                     PIC X(70) VALUE
'IS AVAILABLE.'.

05 NEW-EXCESSIVE-BALANCE-REQUEST PIC X(40) VALUE
'EXPENSE BALANCE HAS BEEN EXCEEDED       '.

05 CHECK-ADJUSTMENT-MSG.
10 FILLER                     PIC X(40) VALUE
'NOTIFY SERVICE CENTER OF PROCESSING FEE'.
10 FILLER                     PIC X(18) VALUE
'CHECK AMT WILL BE '.
10 CHECK-ADJUSTMENT-AMT       PIC ZZZZ.99.
10 FILLER                     PIC X(08) VALUE
' FP FEE '.
10 CHECK-ADJUSTMENT-FEE       PIC ZZ.99.
10 FILLER                     PIC X(12) VALUE
' OTHER FEES '.
10 CHECK-ADJUSTMENT-OT-FEE    PIC ZZZ.99.

05 MULTIPLY-ERROR-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'TOTAL PRICE DOES NOT EQUAL NR OF GLLNS'.
10 FILLER                     PIC X(80) VALUE
'TIMES PRICE PER GALLON'.

05 CHECK-DIGIT-ERROR-MESSAGE-N   PIC S9(5) COMP-3 VALUE +73.
05 CHECK-DIGIT-ERROR-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'ID NR IS MISSING OR INVALID..'.

05 SRVC-TYPE-ERROR-MESSAGE-N     PIC S9(5) COMP-3 VALUE +74.
05 SRVC-TYPE-ERROR-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'FULL/SELF SERVICE CODE INVALID, OR'.
10 FILLER                     PIC X(80) VALUE
'DRIVER MAY NOT USE THIS SERVICE.'.

05 NO-MSG-N                      PIC S9(5) COMP-3 VALUE +75.
05 NO-MSG.
10 FILLER                     PIC X(4) VALUE 'NO  '.
10 NO-TYPE                    PIC X(1) VALUE ' '.
10 ERR-AMT                    PIC ZZZ,ZZZ.99-.
10 FILLER                     PIC X(10) VALUE SPACES.
10 ERR-SML-NAM                PIC X(7).
05 CREDIT-HARD-HALT-MSG-N        PIC S9(5) COMP-3 VALUE +75.
05 CREDIT-HARD-HALT-MSG.
10 FILLER                     PIC X(40) VALUE
'PLEASE HAVE THE DRIVERS COMPANY CALL'.
10 FILLER                     PIC X(40) VALUE
'THE COMDATA CREDIT DEPARTMENT'.

05 MINIMUM-GALLON-MESSAGE-N      PIC S9(5) COMP-3 VALUE +76.
05 MINIMUM-GALLON-MESSAGE.
10 FILLER                     PIC X(21) VALUE
'DRIVER MUST PURCHASE'.
10 MINIMUM-GALLON-NR          PIC ZZZ.ZZ.
10 MINIMUM-GALLON-MSG         PIC X(16) VALUE
' GALLONS'.
10 FILLER                     PIC X(80) VALUE
'OF FUEL FOR CASH ADVANCE'.

05 MINIMUM-GALLON-MESSAGE2-N     PIC S9(5) COMP-3 VALUE +76.
05 MINIMUM-GALLON-MESSAGE2.
10 FILLER                     PIC X(21) VALUE
'DRIVER MUST PURCHASE'.
10 MINIMUM-GALLON-NR2         PIC ZZZ.ZZ.
10 MINIMUM-GALLON-MSG2        PIC X(16) VALUE
' GALLONS'.
10 FILLER                    PIC X(80) VALUE
'OF FUEL FOR OIL PURCHASE'.

05 MAXIMUM-GALLON-MESSAGE-N      PIC S9(5) COMP-3 VALUE +76.
05 MAXIMUM-GALLON-MESSAGE.
10 FILLER                     PIC X(25) VALUE
'DRIVER MAY ONLY PURCHASE '.
10 MAXIMUM-GALLON-NR          PIC ZZ9-.
10 MAXIMUM-GALLON-MSG         PIC X(11) VALUE
' GALLONS OF'.
10 FILLER                    PIC X(80) VALUE
'FUEL AT THIS LOCATION.  SEE FMRM 02.'.
05 MAXIMUM-GALLON-MESSAGE2.
10 FILLER                     PIC X(40) VALUE
'COMPANY MAY ONLY PURCHASE 263 GALLONS'.
10 FILLER                    PIC X(80) VALUE
'OF FUEL AT THIS LOCATION.  (CONVERSION PROBLEM)'.
05 MAXIMUM-GALLON-MESSAGE3.
10 FILLER                     PIC X(20) VALUE
'DRIVER MAY ONLY GET '.
10 MAXIMUM-GALLON-NR3         PIC ZZZZ9-.
10 MAXIMUM-GALLON-MSG3        PIC X(14) VALUE
' GALLONS OF   '.
10 MAXIMUM-GALLON-MSG3T       PIC X(08) VALUE
' DIESEL '.
10 FILLER                     PIC X(30) VALUE
'FUEL, DUE TO COMPANY LIMITS.'.

05 EXCESSIVE-ADVANCE-REQUEST-N   PIC S9(5) COMP-3 VALUE +77.
05 EXCESSIVE-ADVANCE-REQUEST.
10 FILLER                     PIC X(40) VALUE
'ADVANCE REQUEST AMT EXCEEDS AVAILABLE'.
10 FILLER                     PIC X(07) VALUE
'FUNDS. '.
10 XCS-ADV-REQ-AMT            PIC ZZ,ZZZ.99-.
10 FILLER                     PIC X(63) VALUE
'IS AVAILABLE.'.
05 EXCESSIVE-ADVANCE-REQUEST1    PIC X(40) VALUE
'ADVANCE AMOUNT CAN NOT EXCEED 999.99   '.
05 EXCESSIVE-ADVANCE-REQUEST2.
10 FILLER                     PIC X(40) VALUE
'DUE TO CONVERSION RATES THIS COMPANY MAY'.
10 FILLER                     PIC X(13) VALUE
'ONLY RECEIVE '.
10 XCS-ADV-REQ-AMT2           PIC ZZZ.99.
10 FILLER                     PIC X(61) VALUE
' DOLLARS IN CASH'.

05 NEW-EXCESSIVE-ADVANCE-REQUEST PIC X(40) VALUE
'ADV REQUEST AMT EXCEEDS AVAILABLE FUNDS '.

05 CARD-PURCHASE-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +78.
05 CARD-PURCHASE-EXCEEDED.
10 FILLER                     PIC X(40) VALUE
'PREMIER CARD PURCHASE LIMIT EXCEEDED'.
10 XCS-PURC-REQ               PIC ZZ,ZZZ.99-.
10 FILLER                     PIC X(70) VALUE
'IS AVAILABLE.'.

05 COMCHEK-MOB-LIMIT-EXCEEDED-N  PIC S9(5) COMP-3
VALUE +1443.
05 COMCHEK-MOB-LIMIT-EXCEEDED.
10 FILLER                     PIC X(46) VALUE
'COMCHEK MOBILE FUEL WITHDRAWAL LIMIT EXCEEDED '.
10 CMCKMOB-AVAIL-AMT          PIC ZZ,ZZZ.99-.
10 FILLER                     PIC X(70) VALUE
'IS AVAILABLE.'.

05 FUEL-PRICE-ERROR-N            PIC S9(5) COMP-3 VALUE +79.
05 FUEL-PRICE-ERROR.
10 FILLER                     PIC X(05) VALUE
'FUEL '.
10 PRICE-ERROR-TYPE           PIC X(07) VALUE 'CASH'.
10 FILLER                     PIC X(19) VALUE
'PRICE ERROR: AS OF '.
10 PRICE-ERROR-DATE           PIC X(8).
10 FILLER                     PIC X(1) VALUE SPACES.

10 FILLER                     PIC X(21) VALUE
'WE SHOW THE PRICE AS '.
10 PRICE-ERROR-AMT            PIC ZZ.999.
10 FILLER                     PIC X(1)  VALUE SPACES.
10 PRICE-ERROR-OVER-FLAG      PIC X(12) VALUE SPACES.
10 PRICE-ERROR-TAX-MSG        PIC X(40) VALUE SPACES.

05 FUEL-PRICE-ERROR-TAX-N        PIC S9(5) COMP-3 VALUE +79.
05 FUEL-PRICE-ERROR-TAX.
10 FILLER                     PIC X(05) VALUE
'FUEL '.
10 PRICE-ERROR-TYPE-TAX       PIC X(07) VALUE 'CASH'.
10 FILLER                     PIC X(19) VALUE
'PRICE ERROR: AS OF '.
10 PRICE-ERROR-DATE-TAX       PIC X(8).
10 FILLER                     PIC X(1) VALUE SPACES.

10 FILLER                     PIC X(22) VALUE
'WE SHOW PRICE W/TAX AS'.
10 PRICE-ERROR-AMT-TAX        PIC ZZ.999.
10 FILLER                     PIC X(1)  VALUE SPACES.
10 PRICE-ERROR-OVER-FLAG-TAX  PIC X(12) VALUE SPACES.
10 PRICE-ERROR-TAX-MSG-TAX    PIC X(39) VALUE SPACES.

05 FP-CALC-ERR-MESSAGE-N         PIC S9(5) COMP-3 VALUE +80.
05 FP-CALC-ERR-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'CALCULATION ERROR. VERIFY ALL FIGURES.'.
10 FILLER                     PIC X(80) VALUE
'VERIFY THAT ALL PRICES ARE CASH PRICES. '.

05 FP-CALC-ERR-MESSAGE2.
10 FILLER                     PIC X(40) VALUE
'CALCULATION ERROR. VERIFY ALL FIGURES.'.
10 FILLER                     PIC X(18) VALUE
'SUGGESTED COST IS '.
10 CALC-ERROR-SUGGESTED       PIC Z.ZZZ.
10 FILLER                     PIC X(16) VALUE
' PER GALLON.'.

05 FP-CALC-ERR-MESSAGE3.
10 FILLER                     PIC X(40) VALUE
'CALCULATION ERROR. VERIFY ALL FIGURES.'.
10 FILLER                     PIC X(18) VALUE
'SUGGESTED COST IS '.
10 CALC-ERROR-SUGGESTED-3     PIC Z.ZZZ.
10 FILLER                     PIC X(16) VALUE
' PER LITER.'.

05 DUPLICATE-MESSAGE-N           PIC S9(5) COMP-3 VALUE +82.
05 DUPLICATE-MESSAGE.
10 DUP-MESSAGE-LINE-1         PIC X(40) VALUE
'2ND TRANSACTION IN 2 HRS:'.
10 FILLER                     PIC X(14) VALUE
'REFER TO CTL#'.
10 DUPLICATE-TRANSACTION      PIC 9(07).

05 DUPLICATE-NATS-PRE-AUTH-N     PIC S9(5) COMP-3 VALUE +594.
05 DUPLICATE-NATS-PRE-AUTH       PIC X(40) VALUE
'DUPLICATE NATS PRE-AUTH REQUEST'.

05 NEW-DUPLICATE-MESSAGE1        PIC X(40) VALUE
'2ND TRANSACTION IN 1 HOUR               '.
05 NEW-DUPLICATE-MESSAGE2.
10 FILLER                     PIC X(17) VALUE
'TRANSACTION NBR: '.
10 NEW-DUPLICATE-TRANSACTION  PIC 9(7)  VALUE ZEROS.
10 FILLER                     PIC X(9)  VALUE
' AT T/S: '.
10 NEW-DUPLICATE-TS           PIC X(5)  VALUE SPACES.
10 FILLER                     PIC X(51) VALUE SPACES.

05 HUB-MESSAGE-N                 PIC S9(5) COMP-3 VALUE +83.
05 HUB-MESSAGE.
10 FILLER                     PIC X(12) VALUE
'HUB READING '.
10 HUB-ERROR                  PIC X(28).

05 PURC-MAX-MESSAGE-N            PIC S9(5) COMP-3 VALUE +84.
05 PURC-MAX-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'MAXIMUM DAILY PURCHASE LIMIT EXCEEDED'.
10 FILLER                     PIC X(04) VALUE 'MAX-'.
10 PURC-MAX-NR                PIC ZZZ9.99.
10 FILLER                     PIC X(05) VALUE ' VAR-'.
10 PURC-VAR-NR                PIC Z9.
10 FILLER                     PIC X(08) VALUE '% AVAIL-'.
10 PURC-TOTAL-NR              PIC ZZZ9.99.
10 FILLER                     PIC X(06) VALUE ' USED-'.
10 PURC-USED-NR               PIC ZZZ9.99.
10 PURC-DIFF-HD               PIC X(06) VALUE ' OVER-'.
10 PURC-DIFF-NR               PIC ZZZ9.99.

05 NEW-PURC-MAX-MESSAGE1         PIC X(40) VALUE
'MAXIMUM DAILY PURCHASE LIMIT EXCEEDED,  '.
05 NEW-PURC-MAX-MESSAGE2.
10 FILLER                     PIC X(06) VALUE ' OVER-'.
10 NEW-PURC-DIFF-NBR          PIC ZZZ9.99.
10 FILLER                     PIC X(66) VALUE SPACES.

05 INQUIRY-MESSAGE-N            PIC S9(5) COMP-3 VALUE +85.
05 INQUIRY-MESSAGE.
10 FILLER                     PIC X(40) VALUE
'*OK.. SYSTEM IS UNDER INQUIRY.'.
10 FILLER                     PIC X(80) VALUE
'WRITE THIS ORDER UP'.

05 INVALID-MONEY-SERVICE-N       PIC S9(5) COMP-3 VALUE +88.
05 INVALID-MONEY-SERVICE         PIC X(40) VALUE
'INVALID MONEY SERVICE FLAG'.

05 MUST-USE-MMVC-N               PIC S9(5) COMP-3 VALUE +522.
05 MUST-USE-MMVC                 PIC X(40) VALUE
'THIS CUSTOMER MUST USE "MMVC"'.

05 INVALID-IN-STATION-N          PIC S9(5) COMP-3 VALUE +89.
05 INVALID-IN-STATION            PIC X(40) VALUE
'INVALID IN-STATION FLAG'.

05 CARD-NOT-PRM-EXPENSE-ACCT-N   PIC S9(5) COMP-3 VALUE +91.
05 CARD-NOT-PRM-EXPENSE-ACCT     PIC X(40) VALUE
'CARD NOT PREMIER EXPENSE ACCOUNT'.

05 INVALID-PICKUP-RATE-N         PIC S9(5) COMP-3 VALUE +92.
05 INVALID-PICKUP-RATE           PIC X(40) VALUE
'INVALID PICKUP RATE (NOT NUMERIC)'.

05 INVALID-CASH-ON-CARD-N        PIC S9(5) COMP-3 VALUE +93.
05 INVALID-CASH-ON-CARD          PIC X(40) VALUE
'INVALID CASH ON CARD FLAG'.

05 TRAILER-NR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +434.
05 TRAILER-NR-REQUIRED           PIC X(40) VALUE
'TRAILER NUMBER REQUIRED'.

05 TRAILER-NR-INVALID-N          PIC S9(5) COMP-3 VALUE +435.
05 TRAILER-NR-INVALID            PIC X(40) VALUE
'TRAILER NUMBER INVALID'.

05 TRAILER-HUB-REQUIRED-N        PIC S9(5) COMP-3 VALUE +436.
05 TRAILER-HUB-REQUIRED          PIC X(40) VALUE
'TRAILER HUB READING REQUIRED'.

05 TRAILER-HUB-INVALID-N         PIC S9(5) COMP-3 VALUE +437.
05 TRAILER-HUB-INVALID           PIC X(40) VALUE
'TRAILER HUB READING INVALID'.

05 TRAILER-HR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +589.
05 TRAILER-HR-REQUIRED           PIC X(40) VALUE
'TRAILER HOURS REQUIRED'.

05 TRAILER-HR-INVALID-N          PIC S9(5) COMP-3 VALUE +590.
05 TRAILER-HR-INVALID            PIC X(40) VALUE
'TRAILER HOURS INVALID'.

05 CANADIAN-TAX-AMT-REQ-N        PIC S9(5) COMP-3 VALUE +677.
05 CANADIAN-TAX-AMT-REQ          PIC X(40) VALUE
'CANADIAN GOODS & SVCS TAX AMT IS REQ'.

05 CANADIAN-TAX-AMT-NOT-REQ-N    PIC S9(5) COMP-3 VALUE +678.
05 CANADIAN-TAX-AMT-NOT-REQ      PIC X(40) VALUE
'CANADIAN GOODS & SVCS TAX AMT NOT REQ'.

05 PURCHASE-ORDER-REQUIRED-N     PIC S9(5) COMP-3 VALUE +438.
05 PURCHASE-ORDER-REQUIRED       PIC X(40) VALUE
'PURCHASE ORDER NR REQUIRED'.

05 PURCHASE-ORDER-INVALID-N      PIC S9(5) COMP-3 VALUE +439.
05 PURCHASE-ORDER-INVALID        PIC X(40) VALUE
'PURCHASE ORDER NR INVALID'.

05 PO-NOT-VALID-HERE-N           PIC S9(5) COMP-3 VALUE +440.
05 PO-NOT-VALID-HERE             PIC X(40) VALUE
'P.O. MAY NOT BE USED AT THIS LOCATION'.

05 PO-NOT-VALID-FOR-CARD-N       PIC S9(5) COMP-3 VALUE +441.
05 PO-NOT-VALID-FOR-CARD         PIC X(40) VALUE
'P.O. MAY NOT BE USED BY THIS CARDHOLDER'.

05 PO-LIMIT-EXCEEDED-N           PIC S9(5) COMP-3 VALUE +442.
05 PO-LIMIT-EXCEEDED             PIC X(40) VALUE
'REQUEST EXCEEDS PURCHASE ORDER LIMITS'.

05 PO-REQUIRED-TO-FUEL-HERE-N    PIC S9(5) COMP-3 VALUE +443.
05 PO-REQUIRED-TO-FUEL-HERE      PIC X(40) VALUE
'P.O. NUMBER REQUIRED TO FUEL HERE'.

05 MUST-BE-AT-A-CREDIT-LOC-N     PIC S9(5) COMP-3 VALUE +772.
05 MUST-BE-AT-A-CREDIT-LOC.
10 FILLER                     PIC X(40) VALUE
'DRIVER MUST FUEL AT CREDIT LOCATION'.

05 ACCT-BR000-MUST-BE-BRIDGE-N   PIC S9(5) COMP-3 VALUE +999.
05 ACCT-BR000-MUST-BE-BRIDGE     PIC X(40) VALUE
'ACCT BR000 MUST BE BRIDGE TRANSACTION  '.

05 FUNDED-NOT-ALLOWED-N          PIC S9(5) COMP-3 VALUE +999.
05 FUNDED-NOT-ALLOWED            PIC X(40) VALUE
'ACCT BR000 NOT ALLOWED FUNDED PRODUCTS'.

05 BRIDGE-LIMIT-EXCEEDED-N       PIC S9(5) COMP-3 VALUE +999.
05 BRIDGE-LIMIT-EXCEEDED         PIC X(40) VALUE
'BRIDGE LIMIT EXCEEDED'.
05 BRIDGE-LIMIT-EXCEEDED-2       PIC X(40) VALUE
'PRESS F4 TO RETRY TRANSACTION AS FUNDED'.

05 DIRECT-LIMIT-EXCEEDED-N       PIC S9(5) COMP-3 VALUE +999.
05 DIRECT-LIMIT-EXCEEDED         PIC X(40) VALUE
'DIRECT BILL LIMIT EXCEEDED'.
05 DIRECT-LIMIT-EXCEEDED-2       PIC X(40) VALUE
'PRESS F4 TO RETRY TRANSACTION AS FUNDED'.

05 INVALID-DRIVER-NR-N        PIC S9(5) COMP-3 VALUE +445.
05 INVALID-DRIVER-NR             PIC X(40) VALUE
'INVALID EMPLOYEE NUMBER'.
05 INVALID-DRIVER-NR-VEHICLE     PIC X(40) VALUE
'INVALID EMPLOYEE NUMBER (VEHICLE CARD)'.

05 OIL-AMOUNT-TOO-LARGE-N     PIC S9(5) COMP-3 VALUE +999.
05 OIL-AMOUNT-TOO-LARGE          PIC X(40) VALUE
'OIL AMOUNT TOO LARGE. MAX IS 99.99'.

05 CARD-IN-USE-N                 PIC S9(5) COMP-3 VALUE +453.
05 CARD-IN-USE                   PIC X(40) VALUE
'CARD ALREADY IN USE, PLEASE RETRY'.

05 SC-IN-USE-N                   PIC S9(5) COMP-3 VALUE +453.
05 SC-IN-USE                     PIC X(40) VALUE
'SC ALREADY IN USE, PLEASE RETRY'.

05 WS-CC-FUNDED-CREDIT-ERR-N     PIC S9(5) COMP-3 VALUE +516.
05 WS-CC-FUNDED-CREDIT-ERR.
10 FILLER                     PIC X(33) VALUE
'CALL CREDIT, NO RECOURSE AVAIL - '.
10 WS-CC-FUNDED-CREDIT-ACCT   PIC X(07).
10 FILLER                     PIC X(79)  VALUE
'IF NO CREDIT IS AVAILABLE, T/S MUST CALL TRUCK COMPANY'.


05 WS-CC-RELATION-CREDIT-ERR-N   PIC S9(5) COMP-3 VALUE +517.
05 WS-CC-RELATION-CREDIT-ERR.
10 FILLER                     PIC X(40) VALUE
'THE T/S HAS SET A RELATIONSHIP LIMIT FOR'.
10 FILLER                     PIC X(70) VALUE
'THIS TRUCK COMPANY. THIS LIMIT HAS BEEN EXCEEDED. REFE
-          'R TO FMRM 09'.

05 WS-CC-RELATION-CREDIT-ERR2-N  PIC S9(5) COMP-3 VALUE +519.
05 WS-CC-RELATION-CREDIT-ERR2.
10 FILLER                     PIC X(40) VALUE
'THE T/S HAS SET A RELATIONSHIP LIMIT FOR'.
10 FILLER                     PIC X(70) VALUE
'THIS TRUCK COMPANY. THIS LIMIT HAS BEEN EXCEEDED. REFE
-          'R TO FMRM 09'.

05 WS-CC-SC-CREDIT-ERR-N         PIC S9(5) COMP-3 VALUE +518.
05 WS-CC-SC-CREDIT-ERR.
10 FILLER                     PIC X(40) VALUE
'THE T/S HAS REACHED ITS CREDIT LIMIT FOR'.
10 FILLER                     PIC X(30) VALUE
'RECOURSE XTNS.  CALL CREDIT - '.
10 WS-CC-SC-CREDIT-ACCT       PIC X(05).

05 WS-CC-RECOURSE-SECURITY-REQ-N PIC S9(5) COMP-3 VALUE +515.
05 WS-CC-RECOURSE-SECURITY-REQ   PIC X(100) VALUE
'INFORM THE ATTENDANT THAT THE CUSTOMERS CREDIT HAS BEEN E
-       'XCEEDED. RECOURSE SECURITY CARD IS REQUIRED'.

05 SECURITY-CARD-IS-INVALID      PIC X(40) VALUE
'SECURITY CARD IS INVALID'.
05 SECURITY-CARD-IS-INVALID-N    PIC S9(5) COMP-3 VALUE +508.
05 SECURITY-CARD-NOT-ACTIVE      PIC X(40) VALUE
'SECURITY CARD IS NOT ACTIVE'.
05 SECURITY-CARD-IS-REQUIRED     PIC X(40) VALUE
'SECURITY CARD IS REQUIRED'.
05 SECURITY-CARD-IS-REQUIRED-N   PIC S9(5) COMP-3 VALUE +508.

05 SECURITY-PIN-IS-INVALID       PIC X(40) VALUE
'SECURITY PIN IS INVALID'.
05 SECURITY-PIN-IS-INVALID-N     PIC S9(5) COMP-3 VALUE +508.
05 SECURITY-PIN-EXCESSIVE        PIC X(40) VALUE
'EXCESSIVE PIN TRIES    '.
05 SECURITY-PIN-EXCESSIVE-N      PIC S9(5) COMP-3 VALUE +591.
05 INVALID-ATM-NETWORK           PIC X(40) VALUE
'CARD USED ON WRONG NETWORK'.
05 INVALID-ATM-NETWORK-N         PIC S9(5) COMP-3 VALUE +665.

05 SETTLEMENT-DETAIL-NOT-FOUND-N PIC S9(5) COMP-3 VALUE +000.
05 SETTLEMENT-DETAIL-NOT-FOUND   PIC X(40) VALUE
'SETTLEMENT DETAIL NOT FOUND'.
05 SETTLEMENT-ALREADY-PAID-N     PIC S9(5) COMP-3 VALUE +613.
05 SETTLEMENT-ALREADY-PAID       PIC X(40) VALUE
'TRANSACTION ALREADY PAID - ADJ REQUIRED'.
05 UNATTENDED-CANCEL-MSG         PIC X(40) VALUE
'AN UNATTENDED XTN CAN NOT BE CANCELLED'.
05 CANCEL-SETTLE-MSG             PIC X(40) VALUE
'VERIFY SETTLEMENT IS ACTIVE & PRESS PF3.'.

05 TAX-NOT-ALLOWED-N             PIC S9(5) COMP-3 VALUE +678.
05 TAX-NOT-ALLOWED               PIC X(40) VALUE
'TAX AMT NOT ALLOWED.'.
05 CARD-IS-OFF-HOURS             PIC X(40) VALUE
'CARD IS BEING USED OFF HOURS'.
05 CARD-IS-OFF-HOURS-N           PIC S9(5) COMP-3 VALUE +783.
05 CARD-HAS-EXPIRED-N            PIC S9(5) COMP-3 VALUE +784.
05 CARD-HAS-EXPIRED              PIC X(40) VALUE
'CARD HAS EXPIRED'.




















05 INVALID-ATM-TRANS-N           PIC S9(5) COMP-3 VALUE +830.
05 INVALID-ATM-TRANS             PIC X(40) VALUE
'INVALID ATM TRANSACTION'.
05 PETRO-CANADA-RESTRICTED-N     PIC S9(5) COMP-3 VALUE +831.
05 PETRO-CANADA-RESTRICTED       PIC X(40) VALUE
'CUSTOMER MAY NOT FUEL AT PETRO CANADA'.
05 ATM-BLOCKED-CARD-N            PIC S9(5) COMP-3 VALUE +832.
05 ATM-BLOCKED-CARD              PIC X(40) VALUE
'ATM CARD BLOCKED'.

05 WS-E-EXP-DATE-N           PIC 9(05) VALUE 784.
05 WS-E-EXP-DATE             PIC X(80) VALUE
'INVALID EXPIRATION DATE (FORMAT MMYY)'.

05 WS-E-EXP-DATE1-N          PIC 9(05) VALUE 784.
05 WS-E-EXP-DATE1            PIC X(80) VALUE
'INVALID EXPIRATION DATE (EXPIRED)'.

05 WS-E-EXP-DATE2-N          PIC 9(05) VALUE 784.
05 WS-E-EXP-DATE2            PIC X(80) VALUE
'INVALID EXPIRATION DATE (MISMATCH)'.

05 WS-E-EXP-DATE3-N          PIC 9(05) VALUE 784.
05 WS-E-EXP-DATE3            PIC X(80) VALUE
'INVALID EXPIRATION DATE (RENEWAL)'.

05 INVALID-PROD-9-TYPE          PIC S9(5) COMP-3 VALUE +1086.
05 INVALID-PROD-9-TYPE-MSG       PIC X(40) VALUE
'INVALID PRODUCT 9 TYPE'.

05 INVALID-OTHER-FUEL-TYPE      PIC S9(5) COMP-3 VALUE +1087.
05 INVALID-OTHER-FUEL-TYPE-MSG   PIC X(40) VALUE
'INVALID OTHER FUEL TYPE'.

05 OTHER-FUEL-TYPE-REQUIRED     PIC S9(5) COMP-3 VALUE +1079.
05 OTHER-FUEL-TYPE-REQUIRED-MSG PIC X(40) VALUE
'OTHER FUEL PROD CODE REQUIRED'.

05 INVALID-REEFER-SUB-PROD      PIC S9(5) COMP-3 VALUE +1080.
05 INVALID-REEFER-SUB-PROD-MSG  PIC X(40) VALUE
'INVALID REEFER SUB PROD CODE'.

05 REEFER-SUB-PROD-REQUIRED     PIC S9(5) COMP-3 VALUE +1081.
05 REEFER-SUB-PROD-REQUIRED-MSG PIC X(40) VALUE
'REEFER SUB PROD CODE REQUIRED'.

05 INVALID-NR1-SUB-PROD         PIC S9(5) COMP-3 VALUE +1082.
05 INVALID-NR1-SUB-PROD-MSG     PIC X(40) VALUE
'INVALID NR1 DIESEL SUB PROD CODE'.

05 NR1-SUB-PROD-REQUIRED        PIC S9(5) COMP-3 VALUE +1083.
05 NR1-SUB-PROD-REQUIRED-MSG    PIC X(40) VALUE
'NR1 DIESEL SUB PROD CODE REQUIRED'.

05 INVALID-NR2-SUB-PROD         PIC S9(5) COMP-3 VALUE +1084.
05 INVALID-NR2-SUB-PROD-MSG     PIC X(40) VALUE
'INVALID NR2 DIESEL SUB PROD CODE'.

05 NR2-SUB-PROD-REQUIRED        PIC S9(5) COMP-3 VALUE +1085.
05 NR2-SUB-PROD-REQUIRED-MSG    PIC X(40) VALUE
'NR2 DIESEL SUB PROD CODE REQUIRED'.

05 NR2-FUEL-NOT-ALLOWED-N       PIC S9(5) COMP-3 VALUE +1078.
05 NR2-FUEL-NOT-ALLOWED         PIC X(40) VALUE
'NR2 FUEL NOT ALLOWED THIS COMPANY'.

05 WS-E-IRIS-DENIED-N           PIC S9(5) COMP-3 VALUE +1100.
05 WS-E-IRIS-DENIED             PIC X(80) VALUE
'TRANSACTION DENIED - PLEASE CALL YOUR COMPANY'.

05 INACTIVE-NODE-ID-N           PIC S9(5) COMP-3 VALUE +1103.
05 INACTIVE-NODE-ID             PIC X(40) VALUE
'INACTIVE NODE ID FOR THIS CARD   '.

05 NODE-ID-NOT-FOUND-N          PIC S9(5) COMP-3 VALUE +1104.
05 NODE-ID-NOT-FOUND            PIC X(40) VALUE
'NODE ID NOT FOUND FOR THIS CARD  '.

05 HIER-ID-NOT-FOUND-N          PIC S9(5) COMP-3 VALUE +1105.
05 HIER-ID-NOT-FOUND            PIC X(40) VALUE
'HIERARCHY ID NOT FOUND FOR THIS CARD  '.

05 INVALID-CARD-CNTRY-CD-N      PIC S9(5) COMP-3 VALUE +1161.
05 INVALID-CARD-CNTRY-CD        PIC X(40) VALUE
'INVALID CARD FOR COUNTRY CODE'.

05 INVALID-RFID-NBR-N           PIC S9(5) COMP-3 VALUE +1187.
05 INVALID-RFID-NBR             PIC X(40) VALUE
'RFID TAG NOT FOUND, PLEASE SWIPE CARD'.

05 SURCHARGE-LOCATION-ERR-N     PIC S9(5) COMP-3 VALUE +1298.
05 SURCHARGE-LOCATION-ERR       PIC X(40) VALUE
'TRANS EXCEEDS 2 PRODUCTS @ SURCHARGE LOC'.

02 FIELD-LENGTH         PIC S99 COMP SYNC VALUE +0.





01 TAB-LTR.

03 TAB-A                PIC X(3) VALUE 'A01'.
03 TAB-B                PIC X(3) VALUE 'B02'.
03 TAB-C                PIC X(3) VALUE 'C03'.
03 TAB-D                PIC X(3) VALUE 'D04'.
03 TAB-E                PIC X(3) VALUE 'E05'.
03 TAB-F                PIC X(3) VALUE 'F06'.
03 TAB-G                PIC X(3) VALUE 'G07'.
03 TAB-H                PIC X(3) VALUE 'H08'.
03 TAB-I                PIC X(3) VALUE 'I09'.
03 TAB-J                PIC X(3) VALUE 'J10'.
03 TAB-K                PIC X(3) VALUE 'K11'.
03 TAB-L                PIC X(3) VALUE 'L12'.
03 TAB-M                PIC X(3) VALUE 'M13'.
03 TAB-N                PIC X(3) VALUE 'N14'.
03 TAB-O                PIC X(3) VALUE 'O15'.
03 TAB-P                PIC X(3) VALUE 'P16'.
03 TAB-Q                PIC X(3) VALUE 'Q17'.
03 TAB-R                PIC X(3) VALUE 'R18'.
03 TAB-S                PIC X(3) VALUE 'S19'.
03 TAB-T                PIC X(3) VALUE 'T20'.
03 TAB-U                PIC X(3) VALUE 'U21'.
03 TAB-V                PIC X(3) VALUE 'V22'.
03 TAB-W                PIC X(3) VALUE 'W23'.
03 TAB-X                PIC X(3) VALUE 'X24'.
03 TAB-Y                PIC X(3) VALUE 'Y25'.
03 TAB-Z                PIC X(3) VALUE 'Z26'.

01 TAB-LTR-R REDEFINES TAB-LTR.
03 TABLTR               OCCURS 26 TIMES INDEXED BY LTR-INDX.
05 LTR-SRCH           PIC X.
05 TABNBR             PIC 99.

01 DATA-CAPTURE-TABLE.
03 FILLER               PIC X(10) VALUE '06155SPEC'.
03 FILLER               PIC X(10) VALUE '02077SPEC'.
03 FILLER               PIC X(10) VALUE HIGH-VALUES.
01 DATA-CAPTURE-TABLE-R   REDEFINES DATA-CAPTURE-TABLE.
03 DCT-ENTRY            OCCURS 3 TIMES
INDEXED BY DCT-INDX.
05 DCT-FUEL-CODE     PIC X(5).
05 DCT-FUEL-TYPE     PIC X(5).

01  FILLER.

02  WS-LIMITED-NETWORK-PRODUCTS.
03  WS-PUR-OPTIONS.
04  WS-PUR-OPT-AREA     PIC X OCCURS 3 TIMES.
03  WS-PROD-OPT-AREA        PIC X(36).
02  WS-DIRECT-BILL-PRODUCTS.
03  WS-DB-PRODUCTS          PIC X(36).
03  WS-DB-PURCHASE          PIC X OCCURS 3 TIMES.
02  RMR-FOUND-SW                PIC 9        VALUE 0.
88  RMR-RECORD-FOUND                     VALUE 1.
02  RMR-CREDIT-SW               PIC 9        VALUE 0.
02  RMR-MASTER-CODE-1           PIC 9(4).
02  RMR-MASTER-CODE-2           PIC 9(5).
02  CONTINUE-WORK-FIELDS.
05  CONTINUE-NETWORK-READ-SW    PIC 9        VALUE 0.
88  CONTINUE-NETWORK-READ                VALUE 0.
05  CONTINUE-DIRECT-BILLING-SW  PIC 9        VALUE 0.
88  CONTINUE-DIRECT-BILLING              VALUE 0.
05  CONTINUE-MAXIMUM-GALLONS-SW PIC 9        VALUE 0.
88  CONTINUE-MAXIMUM-GALLONS             VALUE 0.
05  CONTINUE-CUSTOM-FEE-SW PIC 9             VALUE 0.
88  CONTINUE-CUSTOM-FEE                  VALUE 0.
05  CONTINUE-BRIDGE-CUSTOMER-SW PIC 9        VALUE 0.
88  CONTINUE-BRIDGE-CUSTOMER             VALUE 0.
05  CONTINUE-COMDATA-COMPLETE-SW PIC 9       VALUE 0.
88  CONTINUE-COMDATA-COMPLETE            VALUE 0.
05  CONTINUE-NEG-PRICE-SW       PIC 9        VALUE 0.
88  CONTINUE-NEG-PRICE                   VALUE 0.
05  CONTINUE-BULK-FUEL-SW       PIC 9        VALUE 0.
88  CONTINUE-BULK-FUEL                   VALUE 0.
05  CONTINUE-COST-PLUS-SW       PIC 9        VALUE 0.
88  CONTINUE-COST-PLUS                   VALUE 0.
05  CONTINUE-TERM-FUEL-SW       PIC 9        VALUE 0.
88  CONTINUE-TERM-FUEL                   VALUE 0.
05  CONTINUE-SPECIAL-SETTLEMENT-SW PIC 9     VALUE 0.
88  CONTINUE-SPECIAL-SETTLEMENT          VALUE 0.
05  CONTINUE-KEYED-CARD-SW      PIC 9        VALUE 0.
88  CONTINUE-KEYED-CARD                  VALUE 0.
05  CONTINUE-COMFUEL-SW         PIC 9        VALUE 0.
88  CONTINUE-COMFUEL                     VALUE 0.
05  CONTINUE-NET-PRICING-SW     PIC 9        VALUE 0.
88  CONTINUE-NET-PRICING                 VALUE 0.
05  CONTINUE-MAX-GALLONS-RFR-SW PIC 9        VALUE 0.
88  CONTINUE-MAX-GALLONS-RFR             VALUE 0.
05  CONTINUE-MAX-GALLONS-OTH-SW PIC 9        VALUE 0.
88  CONTINUE-MAX-GALLONS-OTH             VALUE 0.


COPY TSFMW260 IN CPYREL.

COPY DFHAID.
COPY DFHBMSCA.




01  WS-DFHCOMMAREA.
05 FILLER                    PIC X(01) OCCURS 2500 TIMES
DEPENDING ON EIBCALEN.

LINKAGE SECTION.

01  DFHCOMMAREA.
05 FILLER                    PIC X(01) OCCURS 2500 TIMES
DEPENDING ON EIBCALEN.

PROCEDURE DIVISION.

PERFORM 00100-STARTUP
PERFORM 00200-CHECK-FOR-POS.


PERFORM 00300-GET-INFO-TO-PROCESS.
PERFORM 00310-CHECK-FOR-STORE-REQ.


MOVE DFHCOMMAREA    TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA TO FP-COMMON-AREA

PERFORM 00320-CHECK-ADJ-OVERRIDE.


IF EIBCALEN = ZEROES
PERFORM 01000-FIRST-TIME
END-IF






EVALUATE COM-STAGE
WHEN +1
PERFORM PROCESS-INITIAL-MAP
PERFORM FP-0000
WHEN +2
MOVE 'Y' TO WS-LOOP-FP-0100
PERFORM FP-0100
UNTIL WS-LOOP-FP-0100 = 'N'
WHEN +3
PERFORM TN999-UNKNOWN-STOP
PERFORM FP-0000
WHEN 500
MOVE SPACES TO UNFORMATTED-AREA
PERFORM 01000-FIRST-TIME
PERFORM FP-0000
END-EVALUATE.

PERFORM FP-PROGRAM-LOGIC-ERROR.


FP-PROGRAM-LOGIC-ERROR.

MOVE 'FP-PROGRAM-LOGIC-ERROR'    TO CXUTS0ML-PARAGRAPH.
MOVE 'PROGRAM LOGIC ERROR - 1A' TO UNFORMATTED-AREA
EXEC CICS SEND
FROM   (UNFORMATTED-AREA)
LENGTH (80)
ERASE
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN.


00100-STARTUP.

PERFORM CHECK-FOR-STANDIN.
PERFORM COPY-CXISP001.
PERFORM 90010-GET-SYSTEM-DATE.
PERFORM 90015-GET-CURRENT-DATE.
PERFORM ORDRFIL-RECD-INIT THRU ORINIT-9999
IF OPACSFL-SUFFIX NOT = SPACES
MOVE OPACSFL-SUFFIX TO OPACSFL-SFX
END-IF
MOVE FF-PERCENTAGES TO SAVE-PCTUP.


INITIALIZE FUEL-MANAGEMENT-DAILY-LOG-RECD.
INITIALIZE WS-USER-INPUT-WORK-AREA.
INITIALIZE WS-PRD-FEE-SC-WORK-AREA.
INITIALIZE WS-SUB-PROD-WORK-FIELDS.
INITIALIZE CANADIAN-TAX-LINK-AREA.
INITIALIZE WS-DNET-CP-COMPONENTS(1).
INITIALIZE WS-DNET-CP-COMPONENTS(2).
INITIALIZE WS-DNET-CP-COMPONENTS(3).
INITIALIZE WS-DNET-CP-COMPONENTS(4).
INITIALIZE WS-PD-PROD-DISC-INFO(1).
INITIALIZE WS-PD-PROD-DISC-INFO(2).
INITIALIZE WS-PD-PROD-DISC-INFO(3).
INITIALIZE WS-PD-PROD-DISC-INFO(4).


00200-CHECK-FOR-POS.


IF EIBTRNID = 'POS'  OR
'FMSS' OR
'FMST' OR
'PS32' OR
'PSNR' OR
'PSNC' OR
'XCAT' OR
'PS42' OR
'PS51' OR
'PS92' OR
'ITP2' OR
'XCMP' OR
'MCMP' OR
'FMED' OR
'FMBP' OR
'PSA1' OR
'FMMP' OR
'PSD1' OR
'ITTF' OR
EIBTRNID (1:2) = 'RS' OR
EIBTRNID (1:2) = 'WS'
MOVE 'Y'                    TO WS-POS-FLAG
MOVE DFHCOMMAREA            TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA         TO UNFORMATTED-AREA
PERFORM FORMAT-INPUT-AREA


MOVE INP-SETTLE-PRINTER-FLAG TO WS-SAVE-PRINTER-FLAG
PERFORM 01000-FIRST-TIME
MOVE 'Y' TO WS-LOOP-FP-0100
PERFORM FP-0100
UNTIL WS-LOOP-FP-0100 = 'N'
PERFORM FP-PROGRAM-LOGIC-ERROR
END-IF.


00300-GET-INFO-TO-PROCESS.

MOVE '00300-GET-INFO-TO-PROCESS' TO CXUTS0ML-PARAGRAPH.
MOVE SPACES TO UNFORMATTED-AREA
MOVE 3270-SBA-1 TO 3270-SBA
MOVE LOW-VALUES TO 3270-SBA-1
MOVE LOW-VALUES TO FP2MAPO, FPMAP1O, FPMAPBO.

IF INITIATED-VIA-START
EXEC CICS RETRIEVE
INTO   (UNFORMATTED-AREA)
LENGTH (LEN)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
IF WS-POS-FLAG NOT = 'Y'
EXEC CICS RECEIVE
INTO   (UNFORMATTED-AREA)
LENGTH (UNFORMATTED-LENG)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF
END-IF
IF EIBCALEN = ZEROES
IF UNFORMATTED-AREA (1:2) NOT = 'FP'
MOVE UNFORMATTED-AREA (4: ) TO WS-WORK-FIELD
MOVE WS-WORK-FIELD          TO UNFORMATTED-AREA
END-IF
PERFORM FORMAT-INPUT-AREA
END-IF.


00310-CHECK-FOR-STORE-REQ.

IF NOT THIS-BE-A-RESTORE-REQUEST
EXEC CICS DELETEQ TS
QUEUE (QUEUE-ID-AREA)
RESP  (EIBRESP)
END-EXEC.

IF EIBCALEN > ZEROES AND
EIBAID = DFHPF6
MOVE EIBTRMID TO QID-TRMID
EXEC CICS DELETEQ TS
QUEUE (QUEUE-ID-AREA)
RESP  (EIBRESP)
END-EXEC
MOVE DFHCOMMAREA      TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA   TO WS-Q-COMMAREA
MOVE UNFORMATTED-AREA TO WS-Q-UNFORMATTED
MOVE LEN              TO WS-Q-MAPLEN
EXEC CICS WRITEQ TS
FROM   (WS-Q-AREA)
QUEUE  (QUEUE-ID-AREA)
LENGTH (LENGTH OF WS-Q-AREA)
ITEM   (WS-ITEM)
END-EXEC
MOVE 'XTN SAVED, KEY "FP =" TO RESTORE' TO OUT-COMENT
EXEC CICS SEND
FROM (OUT-COMENT)
LENGTH (32)
ERASE
END-EXEC
PERFORM EXEC-CICS-RETURN.


00320-CHECK-ADJ-OVERRIDE.

IF EIBCALEN > ZEROES AND
EIBAID = DFHPF4   AND
COM-ADJ-OVERRIDE-FL = 'N'
MOVE 'Y' TO COM-ADJ-OVERRIDE-FL
PERFORM PROCESS-INITIAL-MAP
PERFORM FP-0000.


01000-FIRST-TIME.

INITIALIZE FP-COMMON-AREA.
MOVE WS-DEFAULT-MAX-QTY TO COM-MAXIMUM-GALLONS
COM-MAX-RFR-GALLONS
COM-MAX-OTH-GALLONS
COM-RMR-MAXIMUM-GALLONS
COM-RMR-MAX-RFR-GALLONS
COM-RMR-MAX-OTH-GALLONS
COM-MAX-NR2-GALLONS
COM-MAX-NR1-GALLONS.

MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO.
EVALUATE TRUE
WHEN FPM-REBUILD
MOVE 'N' TO NON-PROD-FLAG
PERFORM FP-7000
WHEN FPM-OPEN
MOVE 'N' TO NON-PROD-FLAG
PERFORM FP-7000
WHEN THIS-IS-A-CANCEL-REQ
MOVE 'N' TO NON-PROD-FLAG
PERFORM FP-5000
WHEN THIS-BE-A-CANCEL-REQUEST
MOVE 'N'                TO NON-PROD-FLAG
MOVE INP-CANCEL-AREA    TO WS-CANCEL-AREA
MOVE 'Y'                TO WS-PC-CANCEL-FLAG
MOVE SPACES             TO WS-INP-FP-CANCEL
MOVE 'CANCEL'           TO FP-CANCEL-REQ
IF WS-CANCEL-CARD-NR > SPACES AND
WS-CANCEL-CARD-NR NOT NUMERIC
MOVE WS-CANCEL-CARD-NR  TO WS-UIWA-CRD-TOKEN
PERFORM FIA-GET-CARD-NBR-FROM-TOKEN
IF WS-UIWA-CARD-NR NUMERIC
MOVE WS-UIWA-CARD-NR-10 TO FP-CANCEL-COMMON
ELSE
MOVE ZEROES             TO FP-CANCEL-COMMON
END-IF
ELSE
MOVE WS-CANCEL-CARD-NR  TO FP-CANCEL-COMMON
END-IF
IF WS-CNL-TRANS-NR-N NUMERIC
MOVE WS-CNL-TRANS-NR-N TO FPCR-CTL-7
MOVE FP-CANCEL-COMMON  TO FPCR-CTL7-CARD
ELSE
MOVE WS-CNL-TRANS-NR-6 TO FPCR-CTL-6X
MOVE FP-CANCEL-COMMON  TO FPCR-CTL6-CARD
END-IF
PERFORM FP-5000
WHEN THIS-BE-AN-ATM-CANCEL
PERFORM FP-ATM-CANCEL
WHEN THIS-BE-A-SETTLEMENT-REQUEST
MOVE 'N'                   TO NON-PROD-FLAG
MOVE INP-SETTLE-TS-CODE    TO WS-UIWA-SC-CODE
MOVE INP-SETTLE-TS-CODE    TO COM-FP-SC-CODE
PERFORM SETTLEMENT-REQUEST
MOVE SETTLE-NOT-POSSIBLE   TO OUT-COMENT-1
IF ERROR-FLAG = 'S'
MOVE 'USE FMST 01'      TO OUT-COMENT-1
END-IF
MOVE SETTLE-NOT-POSSIBLE-N TO POS-ERROR-NUMBER
MOVE 'N'                   TO WS-NOTIFY-IRIS-FL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
WHEN THIS-BE-A-RESTORE-REQUEST
PERFORM PROCESS-RESTORE-REQUEST
WHEN OTHER
PERFORM FP-0000
END-EVALUATE.


PROCESS-RESTORE-REQUEST.

MOVE EIBTRMID TO QID-TRMID
EXEC CICS READQ TS
QUEUE  (QUEUE-ID-AREA)
INTO   (WS-Q-AREA)
LENGTH (LENGTH OF WS-Q-AREA)
ITEM   (WS-ITEM)
RESP   (EIBRESP)
END-EXEC
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE 'NO SAVED DATA - RESTORE TERMINATED' TO OUT-COMENT
EXEC CICS SEND
FROM   (OUT-COMENT)
LENGTH (40)
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM EXEC-CICS-RETURN.

MOVE 'Y' TO WS-THIS-BE-A-RESTORE
MOVE 1090 TO EIBCALEN
EXEC CICS DELETEQ TS
QUEUE (QUEUE-ID-AREA)
RESP  (EIBRESP)
END-EXEC
MOVE WS-Q-COMMAREA    TO FP-COMMON-AREA
MOVE WS-Q-UNFORMATTED TO UNFORMATTED-AREA
MOVE +1200            TO UNFORMATTED-LENG
MOVE WS-Q-MAPLEN      TO LEN
IF COM-STAGE = 1
PERFORM PROCESS-INITIAL-MAP
PERFORM FP-0000
ELSE
MOVE 'Y' TO WS-LOOP-FP-0100
PERFORM FP-0100
UNTIL WS-LOOP-FP-0100 = 'N'.


FP-0000.

PERFORM 10100-CHECK-FOR-EXIT.
IF THIS-BE-A-PC-REQUEST
PERFORM SETUP-PC-REQUEST
ELSE
PERFORM FP-0000-PROCESS-ENTRY
END-IF.


FP-0000-PROCESS-ENTRY.



IF COM-STAGE      = +1 AND
ERROR-FLAG NOT = 'F'
CONTINUE
ELSE
PERFORM 10200-FORMAT-CARD-NUMBER
END-IF


MOVE '1' TO COM-PUR-OPTIONS-FUEL,
COM-PUR-OPTIONS-OIL,
COM-PUR-OPTIONS-CASH,
COM-PUR-OPTIONS-PROD.
MOVE '0' TO COM-PO-REQUIRED-FOR-FUEL
COM-PO-REQUIRED-FOR-OIL
COM-PO-REQUIRED-FOR-CASH
COM-PO-REQUIRED-FOR-PROD.
MOVE ALL 'I' TO COM-PROD-OPT-AREA.


MOVE WS-ID-NR    TO COM-FP-ID-NR.
MOVE INP-CO-CODE TO COM-FP-CO-CODE.
MOVE SPACES      TO COM-PRM-NETWORKING
MOVE ALL ZEROS   TO COM-DIRECT-BILL-CONTROL.


PERFORM 10300-SEE-IF-TEMP-SC-KEYED.
PERFORM 10310-CHECK-FOR-INVALID-SC.
PERFORM 10320-CHECK-FOR-CASH-ONLY-SC.
PERFORM 10330-CHECK-FOR-UNKNOWN-SC.
PERFORM 10340-READ-SCMSTR.


IF COM-STAGE = ZEROES
CONTINUE
ELSE
PERFORM READ-CDNCUST
PERFORM 10410-VALIDATE-UNIT-DATA
PERFORM 10420-VALIDATE-MAX-PURC
PERFORM 10430-VALIDATE-TRIP-ALLOW
PERFORM 10440-VALIDATE-EXP-BALANCE
PERFORM 10450-VALIDATE-CARD-PURC
PERFORM 10500-CHECK-FOR-MNX-XTN
PERFORM 10600-GET-NETWORK-BY-CARD-INFO
PERFORM 10610-GET-NETWORK-INFO
PERFORM 10620-CHECK-NETWORK-ERROR
PERFORM 10630-CHECK-CARD-OFFNET-USED



PERFORM 10700-CHECK-FOR-TERM-FUEL
PERFORM 10710-CHECK-FOR-CREDIT-LOC
PERFORM 10750-CHECK-CREDIT-HARD-HALT
PERFORM 10800-CHECK-CREDIT
PERFORM 10850-CHECK-FOR-FDIS-CARD
END-IF.
PERFORM 10900-SETUP-SEND-INITIAL-SCN.
PERFORM 11000-VALIDATE-PHONE-NR.
PERFORM 11100-CHECK-IF-OIL-AVAIL.
PERFORM 11200-CHECK-IF-CASH-AVAIL1.
PERFORM 11300-CHECK-IF-CASH-AVAIL2.
PERFORM 11400-CHECK-IF-CASH-ONLY-SC.
PERFORM 11500-CHECK-FOR-PO-OVERRIDE.
PERFORM 11550-CHECK-CARD-OFFNET.
PERFORM 11600-CHECK-IF-PURCH-AVAIL.

PERFORM 12000-SETUP-MAIN-SCRN-NAME.
PERFORM 12000-SETUP-MAIN-SCRN-OTHER.
PERFORM SETUP-SEND-MAIN-ENTRY-SCREEN.
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


10100-CHECK-FOR-EXIT.

IF EIBAID = DFHCLEAR OR DFHPA1 OR DFHPA2 OR DFHPA3
IF NOT INITIATED-VIA-START
PERFORM CLEAR-AND-EXIT-TO-CICS
END-IF
END-IF.


10200-FORMAT-CARD-NUMBER.



MOVE WS-UIWA-SC-CODE                TO FP1TSCDI.
MOVE WS-UIWA-SC-PHONE               TO FP1PHNI.

IF WS-UIWA-CARD-NR-16 NOT NUMERIC
MOVE ZEROS                       TO WS-UIWA-CARD-NR-16
END-IF.

MOVE WS-UIWA-CARD-NR-16             TO WS-PRM-CARD


MOVE WS-UIWA-CARD-NR-16             TO FP1CARDI
COM-PREVIOUS-CARD.
PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999.


10300-SEE-IF-TEMP-SC-KEYED.


IF COM-STAGE = ZERO AND
FP1TSCDI  > 'XT999'
MOVE TS-IS-INVALID-N  TO POS-ERROR-NUMBER
MOVE YCODE-IS-INVALID TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


IF COM-STAGE = 999
MOVE COM-FP-SC-CODE TO WS-UIWA-SC-CODE,  FP1TSCDI
MOVE COM-PHONE-1    TO WS-UIWA-SC-PHONE, FP1PHNI
MOVE 0 TO COM-STAGE
END-IF.


10310-CHECK-FOR-INVALID-SC.

IF WS-UIWA-SC-CODE = SPACES  OR
WS-UIWA-SC-CODE = 'TN000' OR
WS-UIWA-SC-CODE = 'TN225'
MOVE TS-IS-INVALID   TO OUT-COMENT
MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


10320-CHECK-FOR-CASH-ONLY-SC.

MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY,
COM-FP-SC-CODE.


IF SCM-KEY-NUM = '000' OR
SCMSTR-KEY  = 'TN333'
MOVE '0' TO COM-PUR-OPTIONS-FUEL,
COM-PUR-OPTIONS-OIL
END-IF.


IF CDN-RESTRICT-CASH-LOCATIONS = 'Y'
IF SCM-KEY-NUM = '000'   OR
SCM-KEY-NUM = '999'   OR
SCMSTR-KEY  = 'TN333' OR
SCMSTR-KEY  = 'CN225' OR
SCMSTR-KEY  = 'US225' OR
SCMSTR-KEY  > 'XT999'
MOVE '0' TO COM-PUR-OPTIONS-CASH.


10330-CHECK-FOR-UNKNOWN-SC.


IF SCM-KEY-NUM = '999'   OR
SCMSTR-KEY  = 'CN225' OR
SCMSTR-KEY  = 'US225'
PERFORM TN999-SETUP-INITIAL-MAP
END-IF.


10340-READ-SCMSTR.

MOVE '10340-READ-SCMSTR'         TO CXUTS0ML-PARAGRAPH.

EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE TS-IS-INVALID   TO OUT-COMENT
MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS
MOVE SCM-KEY    TO  SCMSTR-KEY.


IF SCM-STATUS IS NOT = 'A'
MOVE INACTIVE-LOCATION   TO OUT-COMENT
MOVE INACTIVE-LOCATION-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.
MOVE SCM-PHONE-NUMBER       TO  COM-PHONE-1.
MOVE SCM-LOCATION-NAME      TO  COM-TS-NAME, FP1TSNMO.
IF (SCM-KEY-NUM = '000' OR SCM-KEY = 'TN333') AND
(COM-TS-STATE NOT = '??')
NEXT SENTENCE
ELSE
MOVE SCM-LOCATION-CITY      TO  COM-TS-CITY
MOVE SCM-LOCATION-STATE     TO  COM-TS-STATE.
MOVE COM-TS-CITY               TO FP1TSCTO.
MOVE SCM-MANUAL-CALL-FEE       TO COM-SCM-MANUAL-CALL-FEE
MOVE SCM-AUTOMATED-CALL-FEE    TO COM-SCM-AUTO-CALL-FEE.

MOVE SCM-PREMIER-LEVEL TO COM-PREMIER-LEVEL.
IF SCM-PREMIER-LEVEL < '1' OR
SCM-PREMIER-LEVEL > '5'
MOVE '1' TO COM-PREMIER-LEVEL
END-IF.


10345-READ-PRDSCMM.

MOVE '10345-READ-PRDSCMM'        TO CXUTS0ML-PARAGRAPH.

INITIALIZE PRDSCMM-RECORD
MOVE 'Y'                      TO WS-PRDSCMM-HAS-BEEN-READ
MOVE 'SC'                     TO PRDSCM-LOCATION-TYPE
MOVE SCMSTR-KEY               TO PRDSCM-LOCATION-CODE
EXEC CICS READ
DATASET ('PRDSCMM')
INTO    (PRDSCMM-RECORD)
RIDFLD  (PRDSCM-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE 'CH'                     TO PRDSCM-LOCATION-TYPE
MOVE SCM-CHAIN-CODE           TO PRDSCM-LOCATION-CODE
EXEC CICS READ
DATASET ('PRDSCMM')
INTO    (PRDSCMM-RECORD)
RIDFLD  (PRDSCM-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-IF.
IF EIBRESP = DFHRESP(NOTFND)
MOVE 'CO'                     TO PRDSCM-LOCATION-TYPE
MOVE SCM-CORPORATE-CODE       TO PRDSCM-LOCATION-CODE
EXEC CICS READ
DATASET ('PRDSCMM')
INTO    (PRDSCMM-RECORD)
RIDFLD  (PRDSCM-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-IF.


10410-VALIDATE-UNIT-DATA.

IF NO-MORE-ORDERS-ALLOWED
MOVE DO-NOT-HONOR      TO OUT-COMENT
MOVE DO-NOT-HONOR-N    TO POS-ERROR-NUMBER
MOVE CARD-BLOCKED-NBR  TO NEW-DO-NOT-HONOR-NBR
MOVE NEW-DO-NOT-HONOR1 TO NEW-OUT-MSG1
MOVE NEW-DO-NOT-HONOR2 TO NEW-OUT-MSG2
MOVE 'Y'               TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


10420-VALIDATE-MAX-PURC.



MULTIPLY WS-RFL-MAX-PURC-VARIANCE-R BY
WS-RFL-MAX-PURC-DLY-FUEL
GIVING WS-EXTRA-AMT ROUNDED.
ADD WS-RFL-MAX-PURC-DLY-FUEL   TO WS-EXTRA-AMT.
IF WS-RFL-MAX-PURC-DLY-FUEL   > 0 AND
UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD
COMPUTE WS-WORK-AMOUNT = UNITMST-CURR-DAY-OIL-COST +
UNITMST-CURR-DAY-REQ-AMT   +
UNITMST-CURR-DAY-AMT-REF
IF WS-WORK-AMOUNT > WS-EXTRA-AMT
MOVE WS-RFL-MAX-PURC-DLY-FUEL   TO PURC-MAX-NR
MOVE WS-RFL-MAX-PURC-VARIANCE   TO PURC-VAR-NR
MOVE WS-EXTRA-AMT               TO PURC-TOTAL-NR
COMPUTE WS-EXTRA-AMT = UNITMST-CURR-DAY-OIL-COST +
UNITMST-CURR-DAY-REQ-AMT   +
UNITMST-CURR-DAY-AMT-REF
MOVE WS-EXTRA-AMT               TO PURC-USED-NR
MOVE SPACES                     TO PURC-DIFF-HD
MOVE PURC-MAX-MESSAGE           TO OUT-COMENT
MOVE PURC-MAX-MESSAGE-N TO POS-ERROR-NUMBER
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
END-IF.


10430-VALIDATE-TRIP-ALLOW.


IF TRIP-ALLOWANCE-SET                AND
UNITMST-INIT-TRIP-ALLOW       > 0 AND
UNITMST-INIT-TRIP-ALLOW   NOT > UNITMST-TRIP-ALLOW-USED
MOVE TRIP-ALLOW-EXCEEDED     TO OUT-COMENT
MOVE TRIP-ALLOW-EXCEEDED-N   TO POS-ERROR-NUMBER
MOVE TRIP-ALLOW-EXCEEDED-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG        TO NEW-OUT-MESSAGE
MOVE 'Y'                     TO VCWS-ERROR-IND
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


10440-VALIDATE-EXP-BALANCE.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED   AND
PRM-EXPENSE-BALANCE < .01
MOVE PRM-EXPENSE-BALANCE           TO XCS-BAL-REQ-AMT
MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


10450-VALIDATE-CARD-PURC.

IF CSR-PURC-LIMIT-ON-CARD
IF PRM-PURC-INITIAL NOT > PRM-PURC-USED
IF CDN-PURCHASE-ORDER-POOL-LIMIT
MOVE '1' TO COM-PO-REQUIRED-FOR-FUEL
MOVE '1' TO COM-PO-REQUIRED-FOR-OIL
ELSE
MOVE '0' TO COM-PUR-OPTIONS-FUEL
MOVE '0' TO COM-PUR-OPTIONS-OIL.


10500-CHECK-FOR-MNX-XTN.

MOVE '*' TO MNX-TRANSACTION-FLAG.
MOVE 'Y' TO WS-LOOP-FLAG

PERFORM
VARYING DCT-INDX FROM 1 BY 1
UNTIL WS-LOOP-FLAG = 'N' OR
DCT-FUEL-CODE (DCT-INDX) = HIGH-VALUES
IF DCT-FUEL-CODE (DCT-INDX) = COM-FP-CO-CODE
MOVE 'S' TO MNX-TRANSACTION-FLAG
IF DCT-FUEL-TYPE (DCT-INDX) = SCM-FUEL-BRAND-1ST-5
MOVE 'M' TO MNX-TRANSACTION-FLAG
MOVE '1' TO COM-DIRECT-BILLING-OIL
COM-DIRECT-BILLING-FUEL
MOVE 'N' TO WS-LOOP-FLAG
END-IF
END-IF
END-PERFORM.


10600-GET-NETWORK-BY-CARD-INFO.

MOVE ' ' TO ERROR-FLAG.
MOVE ' ' TO ADF-NETWORK-FLAG.
MOVE 'N' TO COM-NETWORK-BY-CARD



IF CDN-LIM-NETW-BY-CARD = 'Y' AND
PRM-LIM-NETW-BY-CARD = 'Y'
PERFORM CHECK-LIM-NETW-BY-CARD
END-IF.

10610-GET-NETWORK-INFO.



MOVE 'N' TO COM-RMR-TERM-FUEL-FLAG.
IF SCM-IS-A-TERMINAL-FUEL-LOC
MOVE 'Y' TO COM-RMR-TERM-FUEL-FLAG
END-IF.


IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
PERFORM 70000-CHECK-RMS-LOCATION.


10620-CHECK-NETWORK-ERROR.

MOVE ' ' TO COM-PO-REQUIRED
IF THERE-WAS-AN-ERROR
EVALUATE TRUE
WHEN CDN-OVERRIDE-LIMITED-NETWORK = 'Y' AND
CDN-PURCHASE-ORDER           > SPACES
MOVE 'Y' TO COM-PO-REQUIRED
MOVE '*' TO ADF-NETWORK-FLAG
WHEN PRM-FUEL-OFFNET-FLAG = 'Y'
MOVE 'Y' TO COM-CARD-OFFNET-USED
MOVE '*' TO ADF-NETWORK-FLAG
WHEN OTHER
MOVE DRIVER-MAY-NOT-FUEL-HERE   TO OUT-COMENT
MOVE DRIVER-MAY-NOT-FUEL-HERE-N TO POS-ERROR-NUMBER
MOVE FUEL-NOT-ALLOWED-NBR       TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
MOVE 'Y'                        TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-EVALUATE.
MOVE ' ' TO ERROR-FLAG.
MOVE 'Y' TO WS-NETW-OK.


10630-CHECK-CARD-OFFNET-USED.


IF PRM-FUEL-OFFNET-FLAG = 'Y'
MOVE 'Y' TO COM-CARD-OFFNET-USED.


10700-CHECK-FOR-TERM-FUEL.


PERFORM DETERMINE-IF-BALANCE-BASED
IF COM-THIS-IS-A-TERM-FUEL-XTN AND
WS-BALANCE-BASED       AND
CDN-BILL-AT-LOAD
MOVE TERMINAL-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE TERMINAL-FUEL-NOT-ALLOWED   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


10710-CHECK-FOR-CREDIT-LOC.

IF CDN-CREDIT-PRICED-TEXACO
IF NOT SCM-CREDIT-PROGRAM-YES
MOVE MUST-BE-AT-A-CREDIT-LOC-N TO POS-ERROR-NUMBER
MOVE MUST-BE-AT-A-CREDIT-LOC   TO OUT-COMENT
3270-OUTPUT-DATA
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

IF CDN-CREDIT-PRICED-GENERIC
OR CDN-CREDIT-PRICED-FUELUP
IF NOT SCM-CREDIT-PROGRAM-NORMAL
MOVE MUST-BE-AT-A-CREDIT-LOC-N TO POS-ERROR-NUMBER
MOVE MUST-BE-AT-A-CREDIT-LOC   TO OUT-COMENT
3270-OUTPUT-DATA
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


10750-CHECK-CREDIT-HARD-HALT.

MOVE '10750-CHECK-CREDIT-HARD-HALT' TO CXUTS0ML-PARAGRAPH.

MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL
IF WS-BALANCE-BASED  AND
CDN-BILL-AT-LOAD
CONTINUE
ELSE
IF (CDN-CUST-ACCT-CODE NOT = 'BR000')
INITIALIZE   CREDIT-CHECK-LINK-AREA
MOVE +4                     TO CCL-FUNC-RTC
MOVE CL-CO-CD OF DCREDITL   TO CCL-CREDITL (1:5)
MOVE WS-CICS-CONTROL-RECORD TO CCL-ONLNDF
EXEC CICS LINK
PROGRAM  ('CXACO0LD')
COMMAREA (CREDIT-CHECK-LINK-AREA)
LENGTH   (LENGTH OF CREDIT-CHECK-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF CCL-FUNC-RTC = +99999
MOVE CREDIT-HARD-HALT-MSG   TO OUT-COMENT
MOVE CREDIT-HARD-HALT-MSG-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
ELSE
IF CDN-COMCASH-FLAG NOT = 'Y'
MOVE 'N'              TO CDN-COMCASH-FLAG
END-IF
MOVE CCL-CREDITL         TO DCREDITL
IF CL-XMIT-LMT = ZERO
AND CDN-COMCASH-FLAG = 'N'
MOVE CREDIT-HARD-HALT-MSG   TO OUT-COMENT
MOVE CREDIT-HARD-HALT-MSG-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


10800-CHECK-CREDIT.


IF COM-CC-FUNDED-OVERRIDE
MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS
END-IF.
INITIALIZE DCREDITL
IF (COM-COMDATA-COMPLETE-FLAG  = 'Y') AND
(COM-CC-FUNDED OR COM-CC-RECOURSE OR COM-CC-NON-FUNDED)
MOVE 'N' TO WS-EXIT-FLAG
PERFORM 10810-GET-CC-CREDIT
PERFORM 10811-CHECK-CC-OVERRIDE
PERFORM 10812-CHECK-CC-CREDIT1
PERFORM 10812-CHECK-CC-CREDIT2
IF WS-EXIT-FLAG = 'N'
PERFORM 10820-CHECK-CREDIT-NORMAL
END-IF
ELSE
PERFORM 10820-CHECK-CREDIT-NORMAL
END-IF.


10810-GET-CC-CREDIT.

MOVE 'N'    TO WS-LOOP-FLAG.
MOVE SCM-COMDATA-COMPLETE-ACCT   TO COM-CC-SCM-ACCT-CODE.
EVALUATE TRUE
WHEN COM-CC-FUNDED
MOVE CDN-COMDATA-CMPLT-ACCT-CODE
TO CL-CO-CD OF DCREDITL
WHEN COM-CC-RECOURSE
MOVE SCM-COMDATA-COMPLETE-ACCT
TO CL-CO-CD OF DCREDITL
WHEN COM-CC-NON-FUNDED
CONTINUE
WHEN OTHER
MOVE SPACES TO COM-COMDATA-COMPLETE-STATUS
MOVE CDN-CUST-ACCT-CODE
TO CL-CO-CD OF DCREDITL
END-EVALUATE.
IF COM-CC-NON-FUNDED
MOVE COM-COMDATA-COMPLETE-LIMIT TO WS-CC-AVAIL
ELSE
MOVE 'A' TO WS-CREDITL-READ-SW
PERFORM READ-CREDITL
IF WS-CREDIT-LIMIT = ZEROES
MOVE 'Y'    TO WS-CC-CUT-OFF1
MOVE ZEROES TO WS-CC-AVAIL
ELSE
MOVE 'N'    TO WS-CC-CUT-OFF1
COMPUTE WS-CC-AVAIL =
WS-CREDIT-LIMIT
- ((WS-UPDATE-OR-AR-BAL
- WS-CASH-RECEIVED)
+ WS-CURRENT-DAY)
END-COMPUTE
END-IF
END-IF.


10811-CHECK-CC-OVERRIDE.


IF (COM-CC-FUNDED             ) AND
(WS-CC-AVAIL NOT > ZERO    ) AND
(CDN-COMDATA-COMPLETE-HARD ) AND
(SCM-RECOURSE-FLAG-AVAIL   )
MOVE 'O' TO COM-COMDATA-COMPLETE-STATUS
PERFORM 10810-GET-CC-CREDIT
END-IF.


10812-CHECK-CC-CREDIT1.


EVALUATE TRUE
WHEN COM-CC-RECOURSE
IF WS-CC-AVAIL > ZEROES AND
COM-COMDATA-COMPLETE-LIMIT > ZEROES
CONTINUE
ELSE
MOVE ZEROES TO WS-CC-AVAIL
END-IF
END-EVALUATE.



IF WS-CC-AVAIL > ZEROES
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


10812-CHECK-CC-CREDIT2.




IF (CDN-COMDATA-COMPLETE-SOFT) AND
(COM-CC-CUT-OFF2 = 'Y')     AND
(COM-CC-FUNDED)             AND
(WS-EXIT-FLAG = 'N')
MOVE 'N' TO COM-CC-CUT-OFF2
END-IF.


IF (CDN-COMDATA-COMPLETE-SOFT) AND
(WS-CC-CUT-OFF1  = 'N'    ) AND
(COM-CC-CUT-OFF2 = 'N'    )
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


10820-CHECK-CREDIT-NORMAL.

MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL


IF CDN-CUST-ACCT-CODE = 'BR000'
MOVE +1 TO WS-CREDIT-LIMIT
WS-AVAIL
ELSE
MOVE 'B' TO WS-CREDITL-READ-SW
PERFORM READ-CREDITL
MOVE CL-CO-CD OF DCREDITL TO WS-CL-CO-CD
PERFORM GET-WS-AVAIL-AMOUNT
MOVE CCL-AVL-CRD-AMT      TO WS-AVAIL
END-IF.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED  AND
CDN-BILL-AT-LOAD  AND
WS-CREDIT-LIMIT = ZEROES
MOVE +1 TO WS-CREDIT-LIMIT
WS-AVAIL
END-IF.


IF WS-CREDIT-LIMIT         > 0  OR
WS-AVAIL                > 0  OR
CL-OVRD-CD OF DCREDITL = 'O' OR
CL-FP-OVRD OF DCREDITL = 'O'
CONTINUE
ELSE
PERFORM 10821-CREDIT-EXCEEDED
END-IF.


10821-CREDIT-EXCEEDED.

MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
MOVE 'Y'              TO VCWS-ERROR-IND.
MOVE '1'              TO VR-TRANS-FLAG.


IF COM-COMDATA-COMPLETE-FLAG = 'Y'
PERFORM 10822-CC-CREDIT-EXCEEDED-FUND
PERFORM 10822-CC-CREDIT-EXCEEDED-NON
PERFORM 10823-CDN-CREDIT-EXCEEDED
ELSE
PERFORM 10823-CDN-CREDIT-EXCEEDED
END-IF.


10822-CC-CREDIT-EXCEEDED-FUND.


IF COM-CC-FUNDED-OVERRIDE
MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.

IF COM-CC-FUNDED
EVALUATE TRUE
WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES
MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
WS-CC-FUNDED-CREDIT-ACCT
MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
WHEN SCM-RECOURSE-FLAG-NOT-AVAIL
MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
WS-CC-FUNDED-CREDIT-ACCT
MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
WHEN COM-COMDATA-COMPLETE-LIMIT > ZEROES
MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
WHEN OTHER
MOVE SCM-COMDATA-COMPLETE-ACCT TO
WS-CC-SC-CREDIT-ACCT
MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-EVALUATE.


10822-CC-CREDIT-EXCEEDED-NON.

IF COM-CC-RECOURSE
EVALUATE TRUE
WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES
MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
WHEN OTHER
MOVE SCM-COMDATA-COMPLETE-ACCT TO
WS-CC-SC-CREDIT-ACCT
MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-EVALUATE.
IF COM-CC-NON-FUNDED
MOVE WS-CC-RELATION-CREDIT-ERR2-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


MOVE COM-COMDATA-COMPLETE-STATUS TO NO-TYPE.


10823-CDN-CREDIT-EXCEEDED.


MOVE 0 TO ERR-AMT.
MOVE CUST-RGE-SMLNM   TO ERR-SML-NAM.
MOVE NO-MSG           TO OUT-COMENT.
MOVE NO-MSG-N         TO POS-ERROR-NUMBER
MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
MOVE 'Y'              TO VCWS-ERROR-IND.
MOVE '1'              TO VR-TRANS-FLAG.
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


10850-CHECK-FOR-FDIS-CARD.

IF (PRM-CARD-NUMB-R > 139999999 AND < 141000000) AND
(THIS-IS-NOT-A-POS-TRANS)
PERFORM 10852-CHECK-FOR-TRENDAR-EQUIP
EVALUATE TRUE
WHEN WS-TRENDAR-EQUIP-FOUND = 'N'
CONTINUE
WHEN COM-FDIS-MESSAGE-FLAG = 'Y' AND
EIBAID                = DFHPF3
CONTINUE
WHEN OTHER
MOVE 'Y' TO COM-FDIS-MESSAGE-FLAG
MOVE 'THIS IS A COMCHEK/FDIS CARD'  TO OUT-COMENT-1
MOVE 'SEE IF ATTENDANT RAN THE XTN THRU THE TRENDAR
-                  'EQUIP - PRESS PF3 TO CONTINUE'
TO OUT-COMENT-2
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-EVALUATE.


10852-CHECK-FOR-TRENDAR-EQUIP.

MOVE '10852-CHECK-FOR-TRENDAR-EQUIP' TO CXUTS0ML-PARAGRAPH.

MOVE LOW-VALUES TO CER-KEY.
MOVE 'SC'       TO CER-CUSTOMER-TYPE.
MOVE SCM-KEY    TO CER-CUSTOMER-CODE
EXEC CICS STARTBR
DATASET ('CDEQUIP')
RIDFLD  (CER-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC
MOVE CER-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
PERFORM
UNTIL SCM-KEY                   NOT = CER-CUSTOMER-CODE OR
CER-DEVICE-IDENTIFICATION(1:3) = 'TRT'            OR
EIBRESP               NOT = DFHRESP(NORMAL)
EXEC CICS READNEXT
DATASET  ('CDEQUIP')
INTO     (COMDATA-EQUIPMENT-RECORD)
RIDFLD   (CER-KEY)
RESP     (EIBRESP)
END-EXEC
MOVE CER-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-PERFORM.
EXEC CICS ENDBR
DATASET ('CDEQUIP')
RESP    (EIBRESP)
END-EXEC.

MOVE 'N' TO WS-TRENDAR-EQUIP-FOUND.
IF SCM-KEY = CER-CUSTOMER-CODE        AND
CER-DEVICE-IDENTIFICATION(1:3) = 'TRT'
MOVE 'Y' TO WS-TRENDAR-EQUIP-FOUND.


10900-SETUP-SEND-INITIAL-SCN.

PERFORM 10910-SIS-INIT-FIELDS.
PERFORM 10920-SIS-LOST-CARD.
PERFORM 10925-SIS-NO-FEE.
PERFORM 10930-SIS-LICENSE-INFO
PERFORM 10935-SIS-CHECK-EXP-DATE.
PERFORM 10940-SIS-CHECK-FOR-MAP-SEND.
PERFORM 10950-SIS-CHECK-FOR-RESTORE.


10910-SIS-INIT-FIELDS.


MOVE PRM-SUB-ACCT-NUMB  TO FP1FCO
MOVE CDN-CUST-NAME      TO FP1ANAMO
MOVE CDN-CUST-ACCT-CODE TO FP1ACODO.

10920-SIS-LOST-CARD.

IF NOT PRM-LOST-CARD         AND
NOT PRM-CARD-LOST         AND
NOT CSR-DRIVER-NR-VERIFY  AND
NOT CSR-DRIVER-NR-CAPTURE AND
NOT CSR-DRIVER-NR-VEHICLE
MOVE ATTR-ASKIP-DRK TO FP1DNRA, FP1LCDA, FP1HD4A
ELSE
MOVE SPACES TO FP1LCDO
IF PRM-LOST-CARD
MOVE 'REPLACEMENT CARD...DRIVER WILL NOT HAVE CARD' TO
FP1LCDO
END-IF
IF PRM-CARD-LOST
MOVE 'REPLACEMENT CARD...DRIVER WILL NOT HAVE CARD' TO
FP1LCDO
END-IF
END-IF.


10925-SIS-NO-FEE.

MOVE '10925-SIS-NO-FEE'          TO CXUTS0ML-PARAGRAPH.

MOVE OPACSFL-SUFFIX TO OPACSFL-SFX
MOVE WS-OPERID TO OPCKEY-OPID
MOVE 'FMST'    TO OPCKEY-SECURITY-DATA.
EXEC CICS READ
DATASET  (OPACSFL)
INTO     (OPC-DETAIL-RECD)
RIDFLD   (OPACSFL-KEY)
RESP     (EIBRESP)
END-EXEC.
MOVE OPACSFL-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
EVALUATE TRUE
WHEN EIBRESP = DFHRESP (NOTFND)
MOVE ATTR-ASKIP-DRK      TO FP1ADJHA
MOVE ATTR-ASKIP-DRK-FSET TO FP1ADJA
MOVE 'N'                 TO FP1ADJO
WHEN OPAC-UPDATING-ALLOWED
MOVE ATTR-ASKIP          TO FP1ADJHA
MOVE ATTR-UNPROT-FSET    TO FP1ADJA
WHEN OTHER
MOVE ATTR-ASKIP-DRK      TO FP1ADJHA
MOVE ATTR-ASKIP-DRK-FSET TO FP1ADJA
MOVE 'N'                 TO FP1ADJO
END-EVALUATE.


10930-SIS-LICENSE-INFO.

IF PRM-IN-STATION-CARD OR PRM-IN-STATION-PROGRAM OR
CDN-LICENSE-CAPTURE OR
COM-DL-OPTION = 'Y'
NEXT SENTENCE
ELSE
IF NOT CDN-CUST-LICENSE-YES
MOVE ATTR-ASKIP-DRK TO FP1DLNRA, FP1DLSTA,
FP1HD2A,  FP1HD3A.


10935-SIS-CHECK-EXP-DATE.

IF  (S007-MASTERCARD-CARD = 'Y')
MOVE ATTR-ASKIP       TO FP1EXPHA
MOVE ATTR-UNPROT-FSET TO FP1EXPA
ELSE
MOVE ATTR-ASKIP-DRK   TO FP1EXPHA, FP1EXPA
END-IF.


10940-SIS-CHECK-FOR-MAP-SEND.

MOVE ATTR-ASKIP-DRK TO FP1DMHA, FP1DMDA.
IF FP1TSCDI > 'XT999'
MOVE ATTR-ASKIP-DRK-FSET TO FP1TSCDA
END-IF
IF COM-STAGE = 0
MOVE 'N' TO FP1DOWNO
MOVE 'N' TO FP1BATO
MOVE ' ' TO FP1BATDO,
FP1BATTO
MOVE ' ' TO ORIDATO, ORIXTNO
MOVE 'N' TO FP1ADJO
MOVE 1 TO COM-STAGE
MOVE WS-UIWA-SC-CODE TO COM-FP-SC-CODE
MOVE 'VERIFY ALL INFO, AND PRESS ENTER TO PROCEED' TO
FP1MSG1O
EXEC CICS SEND
MAP    ('FPMAP1')
MAPSET ('USISET')
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXIT-FUEL-PGM-RETURN.


10950-SIS-CHECK-FOR-RESTORE.

IF COM-STAGE = 1 AND
WS-THIS-BE-A-RESTORE = 'Y'
MOVE 'N' TO FP1DOWNO
MOVE 'N' TO FP1BATO
MOVE ' ' TO FP1BATDO,
FP1BATTO
MOVE ' ' TO ORIDATO, ORIXTNO
MOVE 'N' TO FP1ADJO
MOVE 'RESTORE COMPLETE, VERIFY INFO AND PRESS ENTER'
TO FP1MSG1O, OUT-COMENT
EXEC CICS SEND
MAP    ('FPMAP1')
MAPSET ('USISET')
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXIT-FUEL-PGM-RETURN.


11000-VALIDATE-PHONE-NR.

MOVE SPACES TO COM-PHONE-FLAG.

IF SCM-KEY              = 'US225' OR
SCM-KEY              = 'CN225' OR
COM-PNET-BRIDGE-FLAG = 'X'
NEXT SENTENCE
ELSE
IF SCM-KEY              = 'TN333' OR
SCM-KEY-NUM          = '000'
PERFORM PHONE-VERIFY2
ELSE
PERFORM PHONE-VERIFY.


11100-CHECK-IF-OIL-AVAIL.


IF NO-OIL-PURCHASE-ALLOWED-THIS-U
MOVE '0' TO COM-PUR-OPTIONS-OIL
END-IF.
IF CSR-OIL-FLAG = 'Y'
PERFORM PREMIER-CARD-OIL-LIMIT.


11200-CHECK-IF-CASH-AVAIL1.

IF WS-FL-CASH-ADV-FLAG = 'A'
PERFORM ACCUM-CASH-TOTALS
END-IF.
IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND WS-PROPRIETARY-CARD = 'Y'
AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
PERFORM GET-FLEET-CASH-LIMIT
END-IF
IF CSR-CASH-IS-ON-THE-CARD
OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
PERFORM PREMIER-CARD-CASH-LIMIT
END-IF.

GET-FLEET-CASH-LIMIT.

PERFORM PII-SETUP-FMLP-FLDS-I
MOVE 'E'   TO FMLP-LIM-PROCESS-IND
MOVE 41001 TO FMLP-FLEET-PROD
PERFORM LINK-TO-TSFMO0LP
IF FMLP-ERROR
MOVE 'N'                    TO WS-FLEET-LIMIT-CSH-AVAIL
MOVE ZERO                   TO WS-FLEET-LIMIT-CSH-AMT
ELSE
MOVE 'Y'                    TO WS-FLEET-LIMIT-CSH-AVAIL
MOVE FMLP-FLEET-LIMIT-AVAIL TO WS-FLEET-LIMIT-CSH-AMT
END-IF.

11300-CHECK-IF-CASH-AVAIL2.



IF (WS-FL-CASH-ADV-FLAG      NOT = 'U'       AND
(WS-FL-CASH-ADV-STATUS    NOT > '0'       OR
(UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD AND
CASH-ADV-DAILY-SET                  AND
WS-RFL-CASH-ADV-INIT-DLY > 0        AND
WS-FL-CASH-ADV-USED-DLY NOT < WS-RFL-CASH-ADV-INIT-DLY)))
IF CDN-PURCHASE-ORDER-POOL-LIMIT
MOVE '1' TO COM-PO-REQUIRED-FOR-CASH
ELSE
MOVE '0' TO COM-PUR-OPTIONS-CASH
IF CSR-CASH-PER-GALLON-FLAG = 'Y' AND
PRM-CASH-PER-GALLON-LIMIT > 0
MOVE '1' TO COM-PUR-OPTIONS-CASH
END-IF
END-IF
END-IF.


11400-CHECK-IF-CASH-ONLY-SC.

IF SCM-KEY-NUM = '000'
MOVE '0' TO COM-PUR-OPTIONS-FUEL
MOVE '0' TO COM-PUR-OPTIONS-OIL
END-IF.


IF CDN-RESTRICT-CASH-LOCATIONS = 'Y'
IF SCM-KEY-NUM = '000'   OR
SCM-KEY-NUM = '999'   OR
SCMSTR-KEY  = 'TN333' OR
SCMSTR-KEY  = 'CN225' OR
SCMSTR-KEY  = 'US225' OR
SCMSTR-KEY  > 'XT999'
MOVE '0' TO COM-PUR-OPTIONS-CASH.


11500-CHECK-FOR-PO-OVERRIDE.



IF (WS-NETW-OK                   = 'Y')        AND
(CDN-PURCHASE-ORDER-POOL-LIMIT)             AND
(CDN-OVERRIDE-LIMITED-NETWORK = 'Y')        AND
(SCMSTR-KEY               NOT = 'TN333')
MOVE COM-PUR-OPTIONS-AREA  TO COM-PO-PUR-OPTIONS-AREA
MOVE COM-PROD-OPT-AREA     TO COM-PO-PROD-OPT-AREA
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '0' BY '1'
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '3' BY '1'
INSPECT COM-PROD-OPT-AREA REPLACING ALL 'E' BY 'I'
ELSE
MOVE SPACES TO COM-PO-PUR-OPTIONS-AREA
MOVE SPACES TO COM-PO-PROD-OPT-AREA
END-IF.


11550-CHECK-CARD-OFFNET.


IF (COM-CARD-OFFNET-USED         = 'Y')
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '0' BY '1'
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '3' BY '1'
INSPECT COM-PROD-OPT-AREA REPLACING ALL 'E' BY 'I'.


11600-CHECK-IF-PURCH-AVAIL.

IF (COM-PUR-OPTIONS-FUEL = '0') AND
(COM-PUR-OPTIONS-OIL  = '0') AND
(COM-PUR-OPTIONS-CASH = '0') AND
(COM-PUR-OPTIONS-PROD = '0')
MOVE DRIVER-MAY-NOT-FUEL-NO-PROD   TO OUT-COMENT
MOVE DRIVER-MAY-NOT-FUEL-NO-PROD-N TO POS-ERROR-NUMBER
MOVE FUEL-NOT-ALLOWED-NBR          TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG              TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
MOVE 'Y'                           TO ERROR-FLAG
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


12000-SETUP-MAIN-SCRN-NAME.

IF CO-INPUTS-DRIVER-NAME
MOVE -1  TO FPFSL
MOVE '/' TO FPNAMEA
ELSE
MOVE -1  TO FPNAMEL.
IF PRM-LAST-NAME  > SPACES
MOVE 20 TO INDX
MOVE 15 TO INDX-1
MOVE 24 TO INDX-2
MOVE 'YYN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING INDX,   PRM-LAST-NAME,
INDX-1, PRM-FIRST-NAME,
INDX-2, UNITMST-DRVR-NAME,
WS-CXUTSJON-OPTIONS.
MOVE UNITMST-DRVR-NAME TO FPNAMEO.


12000-SETUP-MAIN-SCRN-OTHER.

MOVE WS-UNIT-NR           TO FPUNITO (01:10)
MOVE '.'                  TO FPUNITO (11:1)
MOVE 11 TO FIELD-LENGTH.
CALL 'CXUTSSPL' USING FIELD-LENGTH, FPUNITO, FILL-CHAR.


PERFORM 87500-GET-ALL-DEF-SUB-PROD.


PERFORM SPR-SETUP-FUEL-PRICES.
MOVE ZERO TO INP-F-SRVC-DISC
INP-S-SRVC-DISC.
MOVE INP-DISC TO COM-FP-PRCNTAGES.
MOVE LOW-VALUES TO OUT-COMENT.

MOVE ' '                    TO  COM-FP-PRNT-FLAG.
IF SCM-ALL-OUTPUT-IS-ACTIVE OR SCM-OUTPUT-PARTIALLY-ACTIVE
MOVE 'P'                TO  COM-FP-PRNT-FLAG.
IF COM-FP-PRNT-FLAG IS EQUAL TO 'T'
MOVE SPACES TO COM-FP-PRNT-FLAG.
MOVE SPACE                  TO  COM-FP-SCRAMBLER-FLAG.
MOVE SPACE                  TO  COM-TS-GOLD-FLAG.


MOVE 'N'                    TO COM-MANUAL-IOL-XTN-FLAG
IF SCM-IOL-XREF-LOCATION > SPACES AND
SCM-IOL-RCP           > ZEROES
MOVE 'Y'                 TO COM-MANUAL-IOL-XTN-FLAG
MOVE 'IOL'               TO FPXPAMTI
MOVE SCM-IOL-RCP         TO OUT-PRICE-GALLON
MOVE OUT-PRICE-GALLON    TO FPCOSTO
MOVE 'IOL'               TO FPTTLO
MOVE 'IOL'               TO CTAXI.


FP-0100.

MOVE 'N' TO WS-LOOP-FP-0100.

EVALUATE TRUE
WHEN THIS-BE-AN-ATM-XTN
IF NOT TSXCO0AT-TRAN-TYPE-STANDIN
PERFORM 20846-VALIDATE-CVC-ATM
END-IF
WHEN WS-UIWA-SWIPED-KEYED = 'S'
WHEN WS-UIWA-SWIPED-KEYED = 'M'
WHEN WS-UIWA-SWIPED-KEYED = 'C'
MOVE WS-AXIA-SWIPE-DATA TO WS-SWIPED-DATA
IF SWIPED-TRANSACTION
PERFORM 20847-VALIDATE-CVC-POS
END-IF
END-EVALUATE

IF NOT THIS-BE-A-PC-REQUEST
PERFORM 20010-CHECK-FOR-EXIT
PERFORM 20020-RECEIVE-MAP
PERFORM 20215-SETUP-USER-WORK-AREA
PERFORM 20030-CHECK-FOR-DRAFT-ENTRY
PERFORM 20040-GET-CONVERSION-RATES
PERFORM 20050-GET-SC-INFO
PERFORM 20060-GET-CARD-CUST-INFO
PERFORM 20070-GET-CASH
PERFORM 20080-GET-PRODUCT
PERFORM 20090-SETUP-DRIVER-NAME
PERFORM 20100-SETUP-TRIP-NUMBER
PERFORM 20110-SETUP-INP-AREA
PERFORM 20120-GET-TRACTOR-FUEL
PERFORM 20130-GET-OTHER-FUEL
PERFORM 20140-GET-TRAILER-FUEL
PERFORM 20150-GET-NR1-FUEL
PERFORM 20156-CHK-CP-SUB-PROD


IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
MOVE 'L' TO PDLA-REQ-TYPE
PERFORM 70000-CHECK-RMS-LOCATION
END-IF
PERFORM 20160-GET-OIL
PERFORM 20170-GET-TAX
PERFORM 20180-GET-EXPECTED-AMT
PERFORM 20200-GET-HUB-INFO
PERFORM 20210-CHECK-FOR-MESSAGE
IF CDN-FLEET-LIMIT-FLAG = 'Y'
PERFORM PII-SETUP-FLEET-LIMITS
END-IF
END-IF.
PERFORM PRE-AUTH-TBL-UPDT
PERFORM 20630-GET-PRICE-CONTROL-INFO.
PERFORM 20848-VALIDATE-ATM-NETWORK.
PERFORM 20845-VALIDATE-ATM-PIN.
PERFORM 20190-GET-TRAILER-INFO
PERFORM 20307-CHECK-RMF.
PERFORM 20310-CHECK-COST-PLUS-USE.
PERFORM 20315-CHECK-PAC-PRIDE.
PERFORM 20320-CHECK-CASH-AMT-9999.
PERFORM 20305-CHECK-FOR-MANUAL-IOL.
IF NOT THIS-BE-A-PC-REQUEST
PERFORM 20306-CHECK-CANADIAN-TAX
END-IF.
PERFORM 20081-CHECK-PRODUCTS
PERFORM 20350-CALC-COST-FOR-TERM-FUEL.




PERFORM 20330-ADJUST-AMTS-REBLD-SCN.

PERFORM 20919-GET-NETWORK-PRICING
PERFORM 20306-CALC-CANADIAN-TAX.
PERFORM 20300-CHECK-CASH-AVAIL-BY-GAL.
PERFORM 20340-CHECK-FOR-MNX-XTN.
PERFORM 20360-CHECK-INVOICE-NR.
PERFORM 20370-CHECK-INVOICE-NR-FOR-CC.
PERFORM 20380-CHECK-DRAFT-NR.
PERFORM 20390-SET-FUEL-FLAG.
PERFORM 20400-CHECK-OTHER-FUEL-BLOCK.
PERFORM 20410-CHECK-NR1-FUEL-BLOCK.
PERFORM 20420-CHECK-REEFER-FUEL-BLOCK.
PERFORM 20425-CHECK-NR2-FUEL-BLOCK.

PERFORM TIME-LIMIT-CHECK.
PERFORM 20430-SET-OIL-FLAG.
PERFORM 20440-CHECK-OIL-LIMITS.
PERFORM 20445-CHECK-OIL-XTN-LIMIT.
PERFORM 20450-CHECK-OIL-COST-LIMIT.
PERFORM 20460-CHECK-MAX-FUEL-GALLONS.
PERFORM 20461-CHECK-MAX-RFR-GALLONS.
PERFORM 20462-CHECK-MAX-OTH-GALLONS.
PERFORM 20470-CHECK-FUEL-CONVERSION.
PERFORM 20480-CHECK-OIL-WITH-FUEL-LIM.
PERFORM 20490-CHECK-FUEL-GALLON-LIM.
PERFORM 20500-CHECK-REEFER-GALLON-LIM.
PERFORM 20505-CHECK-OTHER-GALLON-LIM.
PERFORM 20510-CHECK-PURCHASE-FLAGS.
PERFORM 20520-CHECK-PO-OVERRIDE.
PERFORM 20530-CHECK-PO-REQUIRED.
PERFORM 20540-CHECK-CASH-LIMITS.
PERFORM 20555-CHECK-CAROLINA-MOTORS.
PERFORM 20560-CHECK-TRIP-NUMBER.
PERFORM 20570-CHECK-TRAILER-NR.
IF WS-UIWA-RFID-TAG-TYP (1:1) = 'U' AND
SCM-LIMIT-RFID-PROMPTS-FL-YES
CONTINUE
ELSE
PERFORM 20580-CHECK-TRAILER-HUB
END-IF.
PERFORM 20590-CHECK-GST-TAX.
PERFORM 20600-CHECK-PO-NUMBER.
PERFORM 20605-CHECK-SUB-PRODS
PERFORM 20610-CHECK-HUB.
PERFORM 20620-VALIDATE-PRICE-INFO
PERFORM 20740-CHECK-LIMIT-FOR-CRD-NETW
PERFORM 20750-COMPUTE-BILLABLE-AND-NON.
PERFORM 20755-SET-BILLABLE-FLAGS.
PERFORM 20757-CHECK-FOR-ZERO-AMT.
PERFORM 20760-CHECK-AUTO-PRINT-FLAG.
PERFORM 20770-CHECK-DRAFT-ENTRY.
PERFORM 20780-VALIDATE-DRIVER-NAME.
PERFORM TIM-0010
PERFORM 20790-CHECK-CARD-PURC-LIMIT
PERFORM 20795-CHECK-FLEET-LIMITS
PERFORM 20800-CHECK-UNIT-LIMITS.
PERFORM 20805-CHECK-COMCHEK-FUEL-LMTS.
PERFORM 20810-CHECK-BRIDGE-ACCT.
PERFORM 10750-CHECK-CREDIT-HARD-HALT.
PERFORM 20820-CHECK-CREDIT.
PERFORM 20830-SEE-IF-RECOURSE-REQ
PERFORM 20840-VALIDATE-RECOURSE.
PERFORM 20850-CHECK-FOR-INQUIRY.
PERFORM 20860-CHECK-CREDIT-AUTO-APPROV.
PERFORM 20870-GET-FEES.
PERFORM 20900-CHECK-FOR-VRU-FEE
PERFORM 20905-CHECK-FOR-FREEBIE
PERFORM 20910-CHECK-BRIDGE-FEES
PERFORM 21020-COMPUTE-MANUAL-FEE
PERFORM 21025-ADJUST-MANUAL-FEE


IF WS-FMRM-05-POF NOT = 'Y'
PERFORM 20920-GET-DISCOUNT-INFO
END-IF
PERFORM 20925-CHECK-MERCHANT-SURCHARGE
PERFORM 20930-ADD-IN-MANUAL-CALL-FEE.
PERFORM 20940-ADD-IN-COST-PLUS-FEE.
PERFORM 20945-ADD-IN-NATS-FEE.
PERFORM 20950-ADJ-COMDATA-COMPLETE-FEE.
PERFORM 20955-CHECK-ATM-FEES.
PERFORM 20957-CHECK-REDUCE-CO-FEES.
PERFORM 20959-CHECK-FLEET-FEE.
PERFORM 20959-CHECK-PAM-FEE
PERFORM 209XX-COMPLETE-FEE-PROCESS.
PERFORM 20960-CHECK-DEDUCT-FEE.
PERFORM 20970-CHECK-BALANCE.
PERFORM 20980-CHECK-DB-LIMIT.
PERFORM 20985-CHECK-GUAR-DISC-AVAIL.
PERFORM 20989-GET-RFID-UNIT-TRLR
PERFORM 20992-FUEL-PROXIMITY-CHECK
MOVE 'Y'    TO WS-CIX-RESP-REQUESTED
MOVE '0200' TO WS-CIX-MESSAGE-TYPE
PERFORM IRIS-CHECK-AND-NOTIFY
PERFORM IRIS-REJECT-CHECK




IF WS-LOOP-FP-0100 NOT = 'Y'
PERFORM FP-0100-COMPLETE-XTN.


FP-0100-COMPLETE-XTN.

PERFORM 20990-COMPUTE-WS-CURXMN
PERFORM 20991-MOVE-WS-CURXMN
PERFORM 21010-CHECK-UNATTENDED-EXIT.
PERFORM 21030-SEND-MANUAL-FEE-MESSAGE
PERFORM 21040-CHECK-FOR-RESTORE
PERFORM 21045-CHECK-FOR-NATS-PRE-AUTH.
PERFORM 21047-CHECK-FOR-ATM.

IF CDN-CREDIT-PRICED-FLAG = 'F'
AND WS-NATS-PRE-AUTH-FLAG NOT = 'Y'
PERFORM 21048-CHECK-FOR-FUELUP
END-IF


PERFORM CREATE-LOG-FILES-AND-EXIT.


CREATE-LOG-FILES-AND-EXIT.

PERFORM LTI-SAVE-OFF-FILE-VALUES
IF WS-NO-TRANS-SPLIT-FLAG NOT = 'Y'
PERFORM LTI-CHECK-FOR-TRX-SPLIT
END-IF
IF WS-LARGE-TRANS-SPLITS
OR WS-LARGE-TRANS-SPLITS-TAX
PERFORM CREATE-LOG-FILES-LRG-TRAN
ELSE
PERFORM CREATE-LOG-FILES-NORMAL
END-IF
IF WS-UIWA-RFID-NBR > SPACES
PERFORM UPDT-RFID-XREF-BUILD
PERFORM UPDT-RFID-XREF-UPDATE
END-IF.

IF WS-ENQ-CARD-NR > ZEROES
PERFORM DEQ-CARD-NUMBER
END-IF.

EXEC CICS SYNCPOINT
NOHANDLE
END-EXEC


PERFORM 21210-SETUP-DB-TF-RESPONSE.

PERFORM 21240-CHECK-MANUAL-FEE-EXIT
PERFORM 21250-CHECK-DB-EXIT.
PERFORM 21260-CHECK-SETTLE-EXIT.
PERFORM 21270-CHECK-ATTACHED-PRNT-EXIT.
PERFORM 21280-GET-SC-INFO.
IF NOT WS-LARGE-TRANS-SPLITS
PERFORM 21290-LOAD-TO-SENDING-QUE
ELSE
IF THIS-IS-A-SETTLEMENT-ITEM
AND SCM-SETTLE-LOC-STATUS = 'Y'
CONTINUE
ELSE
PERFORM 85070-CHECK-FOR-TEMP-LOCATION
END-IF
END-IF


PERFORM FP-PROGRAM-LOGIC-ERROR.


LTI-SAVE-OFF-FILE-VALUES.




MOVE CDN-GUAR-YN             TO WS-CDN-GUAR-YN
MOVE CDN-ALL-HANDLING-ADD-ON TO WS-CDN-ALL-HANDLING-ADD-ON
MOVE CDN-ALL-HANDLING-ADD-ON-ALTCUR
TO WS-CDN-ALL-HANDLING-ADD-ON-AC
MOVE CDN-MANUAL-ADD-ON       TO WS-CDN-MANUAL-ADD-ON
MOVE CDN-COST-PLUS-ADD-ON    TO WS-CDN-COST-PLUS-ADD-ON
MOVE CDN-COST-PLUS-ADD-ON-ALTCUR
TO WS-CDN-COST-PLUS-ADD-ON-AC
MOVE SCM-CORP-REBATE-LOCATION
TO WS-SCM-CORP-REBATE-LOCATION
MOVE SCM-CORP-REBATE-FLAG    TO WS-SCM-CORP-REBATE-FLAG
MOVE SCPM-PP-PAC-MARKUP      TO WS-SCPM-PP-PAC-MARKUP
CONTINUE.

LTI-CHECK-FOR-TRX-SPLIT.





IF (WS-UIWA-NR2-COST-SC + WS-UIWA-NR1-COST-SC)
> (WS-UIWA-NR2-COST + WS-UIWA-NR1-COST)
MOVE 'S' TO WS-LTI-SW2
END-IF

IF (WS-UIWA-NR2-COST-SC + WS-UIWA-NR1-COST-SC
+ WS-UIWA-OTH-COST-SC)
> (WS-UIWA-NR2-COST + WS-UIWA-NR1-COST
+ WS-UIWA-OTH-COST)
MOVE 'S' TO WS-LTI-SW2
END-IF

IF WS-UIWA-REF-COST-SC > WS-UIWA-REF-COST
MOVE 'S' TO WS-LTI-SW2
END-IF

IF WS-UIWA-OTH-COST-SC > WS-UIWA-OTH-COST
MOVE 'S' TO WS-LTI-SW2
END-IF

IF CDN-ACCT-IS-MIXED-CURRENCY
MOVE 'S'                TO WS-LTI-SW2
END-IF

IF SCM-IS-IN-CANADA       AND
SCM-AUTO-CALC-TAX-YES  AND
SCPM-AUTO-CALC-TAX-YES
PERFORM LTI-CHECK-999-WITH-AUTO-CALC
ELSE
PERFORM LTI-CHECK-AGAINST-999
END-IF



IF (WS-UIWA-NR1-COST + WS-UIWA-NR2-COST +
WS-UIWA-REF-COST + WS-UIWA-OTH-COST > 0)
OR (WS-UIWA-NR1-COST-SC + WS-UIWA-NR2-COST-SC +
WS-UIWA-REF-COST-SC + WS-UIWA-OTH-COST-SC > 0)
MOVE SPACES             TO WS-LTI-TAX-SW
IF CDN-ACCT-IS-BASE-CURRENCY
IF WS-UIWA-TAX-AMT > 99.99
MOVE 'Y'            TO WS-LTI-TAX-SW
END-IF
ELSE
IF WS-UIWA-TAX-AMT-SC > 99.99
MOVE 'Y'       TO WS-LTI-TAX-SW
END-IF
END-IF
END-IF.
CONTINUE.


LTI-CHECK-AGAINST-999.


IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST-SC
+ WS-UIWA-NR1-COST-SC
+ WS-UIWA-TAX-AMT-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST-SC
+ WS-UIWA-NR1-COST-SC
+ WS-UIWA-OTH-COST-SC
+ WS-UIWA-TAX-AMT-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST-SC
+ WS-UIWA-TAX-AMT-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST-SC
+ WS-UIWA-TAX-AMT-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
ELSE
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-TAX-AMT
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-OTH-COST
+ WS-UIWA-TAX-AMT
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST
+ WS-UIWA-TAX-AMT
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST
+ WS-UIWA-TAX-AMT
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
END-IF
CONTINUE.



LTI-CHECK-999-WITH-AUTO-CALC.


IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST-SC
+ WS-UIWA-NR1-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST-SC
+ WS-UIWA-NR1-COST-SC
+ WS-UIWA-OTH-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
ELSE
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-OTH-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
IF WS-LTI-SW NOT = 'Y'
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > 999.99
MOVE 'Y' TO WS-LTI-SW
END-IF
END-IF
END-IF
CONTINUE.


CREATE-LOG-FILES-NORMAL.

MOVE 'N' TO WS-LTI-SW
PERFORM 21050-BUILD-ORDRFIL.
PERFORM 21055-CHECK-FOR-NATS-EXIT.
PERFORM 21060-BUILD-USILOG-RECD.
PERFORM 86000-GET-TS-CODE-FOR-SETTLE.

IF SCM-IS-IN-CANADA


IF SCM-NATS-FLAG-YES
NEXT SENTENCE
ELSE
MOVE 'M'               TO CTLA-FUNCTION-CODE
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO CTLA-MQ-CONTROL-NBR
IF CTLA-CAN-CONVERSION-RATE = ZEROS
IF COM-US-COMP-CN-SC
MOVE CAN-TO-US-RATE TO CTLA-CAN-CONVERSION-RATE
END-IF
END-IF
IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
(COM-US-COMP-CN-SC)
MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
ELSE
MOVE SPACE TO CTLA-CAN-CONVERSION-SW
END-IF
MOVE SCM-AUTO-CALC-TAX TO CTLA-AUTO-CALC-FLAG
PERFORM 20306-LINK-TO-TSFMO0CT
PERFORM LTI-ADJUST-UIWA-TAX-INFO
END-IF
END-IF.

PERFORM 21080-BUILD-FMLOG-RECD.
PERFORM 21083-BUILD-PRDDIS-RECD.

IF SCM-XCDM-XCLUDE-FL NOT = 'Y'
PERFORM 21085-LINK-TO-TSFMO0DI
END-IF.

PERFORM 21090-LOG-TO-SETTLE-NEW.
PERFORM 21110-UPDATE-ORDER-FILE.
PERFORM 21120-UPDATE-CREDIT.
PERFORM 21130-CHECK-CC-RECOURSE-LOG.
IF WS-UNITMST-RECD-SW NOT = 'N'
PERFORM 21140-UPDATE-UNITMST
END-IF.
PERFORM 21150-PREMIER-UPDATES.
PERFORM 21155-WRITE-LOG-FILES.
PERFORM 21160-ONE-TIME-UPDATE.
PERFORM 21165-RMF-UPDATE.
PERFORM 21170-BRIDGE-UPDATE.
PERFORM 21175-CARD-NETW-UPDT-I.
PERFORM 21180-CARD-NETWORK-UPDATE.
PERFORM 21190-PO-UPDATE.
PERFORM 21192-FMPOOL-UPDATE.
PERFORM 21193-RESET-ATP-SWITCH.
PERFORM 21195-SETUP-CHECK-ENTRY-AREA.
PERFORM 21200-SETUP-CC-RESPONSE.

PERFORM LOG-TO-DSET.
PERFORM 21230-LOG-TO-INTRADAY.


CREATE-LOG-FILES-LRG-TRAN.

MOVE 'Y'  TO WS-LTI-SW
PERFORM LARGE-TRANS-INTERIM-PROCESS
IF WS-LARGE-TRANS-SPLITS-TAX


MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
ADD 1 TO WS-LTI-SPLIT-AMT
MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-SPLIT-AMT-NBR1
ADD 1 TO WS-LTI-SPLIT-AMT-NBR1
MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-SPLIT-AMT-NBR2
ADD 1 TO WS-LTI-SPLIT-AMT-NBR2
MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-SPLIT-AMT-REFER
ADD 1 TO WS-LTI-SPLIT-AMT-REFER
MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-SPLIT-AMT-OTHER
ADD 1 TO WS-LTI-SPLIT-AMT-OTHER
ELSE
IF WS-UIWA-TAX-AMT    > 0.00



MOVE 'Y'                     TO WS-LTI-WITH-TAX-SW
MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
ADD 1 TO WS-LTI-SPLIT-AMT
MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-SPLIT-AMT-NBR1
ADD 1 TO WS-LTI-SPLIT-AMT-NBR1
MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-SPLIT-AMT-NBR2
ADD 1 TO WS-LTI-SPLIT-AMT-NBR2
MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-SPLIT-AMT-REFER
ADD 1 TO WS-LTI-SPLIT-AMT-REFER
MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-SPLIT-AMT-OTHER
ADD 1 TO WS-LTI-SPLIT-AMT-OTHER
ELSE


MOVE 1000 TO WS-LTI-SPLIT-AMT
MOVE 1000 TO WS-LTI-SPLIT-AMT-NBR1
MOVE 1000 TO WS-LTI-SPLIT-AMT-NBR2
MOVE 1000 TO WS-LTI-SPLIT-AMT-REFER
MOVE 1000 TO WS-LTI-SPLIT-AMT-OTHER
END-IF
END-IF
MOVE WS-LTIH-UIWA-AMT (1) TO WS-LTI-HOLD-AMT-NR1
MOVE WS-LTIH-UIWA-AMT (2) TO WS-LTI-HOLD-AMT-NR2
MOVE WS-LTIH-UIWA-AMT (3) TO WS-LTI-HOLD-AMT-REF
MOVE WS-LTIH-UIWA-AMT (4) TO WS-LTI-HOLD-AMT-OTH
MOVE WS-LTIH-UIWA-AMT-TAX TO WS-LTI-HOLD-AMT-TAX
MOVE WS-LTIH-UIWA-QTY (1) TO WS-LTI-HOLD-QTY-NR1
MOVE WS-LTIH-UIWA-QTY (2) TO WS-LTI-HOLD-QTY-NR2
MOVE WS-LTIH-UIWA-QTY (3) TO WS-LTI-HOLD-QTY-REF
MOVE WS-LTIH-UIWA-QTY (4) TO WS-LTI-HOLD-QTY-OTH
MOVE ZEROES               TO WS-LTI-TOTAL-QTY-NR1-OTH
WS-LTI-TOTAL-QTY-NR2-OTH
WS-LTI-TOTAL-QTY-REF-OTH
WS-LTI-TOTAL-QTY-OTH-OTH
WS-LTI-TOTAL-AMT-NR1-OTH
WS-LTI-TOTAL-AMT-NR2-OTH
WS-LTI-TOTAL-AMT-REF-OTH
WS-LTI-TOTAL-AMT-OTH-OTH
WS-LTI-TOTAL-AMT-TAX-OTH
PERFORM
VARYING WS-LTI-SUB1
FROM    1 BY 1
UNTIL   WS-LTI-SUB1 > WS-LTI-SPLIT-COUNT
PERFORM LTI-PROCESS-2
PERFORM 21050-BUILD-ORDRFIL
PERFORM 21060-BUILD-USILOG-RECD
PERFORM 86000-GET-TS-CODE-FOR-SETTLE
IF NOT LTI-FIRST-PASS
MOVE 'Y' TO WS-BYPASS-LOG-DISCOUNT
END-IF
IF SCM-IS-IN-CANADA


IF SCM-NATS-FLAG-YES
CONTINUE
ELSE
MOVE 'M'               TO CTLA-FUNCTION-CODE
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO CTLA-MQ-CONTROL-NBR
IF CTLA-CAN-CONVERSION-RATE = ZEROS
IF COM-US-COMP-CN-SC
MOVE CAN-TO-US-RATE TO
CTLA-CAN-CONVERSION-RATE
END-IF
END-IF
IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
(COM-US-COMP-CN-SC)
MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
ELSE
MOVE SPACE TO CTLA-CAN-CONVERSION-SW
END-IF
PERFORM LTI-DISCOUNT-FOR-CAN-TAXES-NEW
MOVE SCM-AUTO-CALC-TAX TO CTLA-AUTO-CALC-FLAG
MOVE WS-USER-INPUT-WORK-AREA   TO
CTLA-USER-INPUT-WORK-AREA
PERFORM 20306-LINK-TO-TSFMO0CT
PERFORM LTI-ADJUST-UIWA-TAX-INFO
PERFORM LTI-RESTORE-UIWA-COST
END-IF
END-IF
PERFORM 21080-BUILD-FMLOG-RECD
PERFORM 21083-BUILD-PRDDIS-RECD
IF LTI-FIRST-PASS

MOVE WS-LTIH-SELECT-DISC TO FMDL-SC-SELECT-DISCOUNT
END-IF
IF SCM-XCDM-XCLUDE-FL NOT = 'Y'
PERFORM 21085-LINK-TO-TSFMO0DI
END-IF
PERFORM 21090-LOG-TO-SETTLE-NEW
PERFORM 21110-UPDATE-ORDER-FILE
PERFORM 21120-UPDATE-CREDIT
PERFORM 21130-CHECK-CC-RECOURSE-LOG
IF WS-UNITMST-RECD-SW NOT = 'N'
PERFORM 21140-UPDATE-UNITMST
END-IF
PERFORM 21150-PREMIER-UPDATES
PERFORM 21155-WRITE-LOG-FILES

IF LTI-FIRST-PASS
PERFORM 21160-ONE-TIME-UPDATE
END-IF
PERFORM 21165-RMF-UPDATE
PERFORM 21170-BRIDGE-UPDATE
IF LTI-FIRST-PASS
PERFORM 21180-CARD-NETWORK-UPDATE
END-IF
PERFORM 21190-PO-UPDATE
IF LTI-FIRST-PASS
PERFORM 21192-FMPOOL-UPDATE
PERFORM 21195-SETUP-CHECK-ENTRY-AREA
PERFORM 21200-SETUP-CC-RESPONSE
PERFORM 21084-INITIALIZE-PRDDIS
END-IF
PERFORM LOG-TO-DSET
PERFORM 21230-LOG-TO-INTRADAY
END-PERFORM
PERFORM LTI-RESTORE-LARGE-TRANS-HOLD.


LARGE-TRANS-INTERIM-PROCESS.

IF WS-LARGE-TRANS-SPLITS-TAX
PERFORM LTI-DETERMINE-NBR-SPLITS-TAX
ELSE
PERFORM LTI-DETERMINE-NBR-SPLITS
END-IF.

MOVE 'N' TO WS-LOOP-FLAG
MOVE 'Y' TO FP-0175A-FIRST-PASS-SW
PERFORM FP-0175-LTI-A
UNTIL WS-LOOP-FLAG = 'Y'
PERFORM 21055-CHECK-FOR-NATS-EXIT
PERFORM 86000-GET-TS-CODE-FOR-SETTLE

PERFORM 21080-BUILD-FMLOG-RECD
PERFORM LTI-SAVE-OFF-LARGE-TRANS-HOLD
PERFORM LTI-SAVE-OFF-UIWA-VALUES
CONTINUE.


LTI-ADJUST-UIWA-TAX-INFO.

MOVE WS-USER-INPUT-WORK-AREA   TO WS-ORIG-UIWA-AREA
MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA
MOVE WS-UIWA-TAX-AMT           TO WS-HOLD-UIWA-TAX-AMT-SC
MOVE WS-ORIG-UIWA-AREA         TO WS-USER-INPUT-WORK-AREA
MOVE WS-HOLD-UIWA-TAX-AMT-SC   TO WS-UIWA-TAX-AMT-SC
IF (COM-ACCOUNT-CURR-TYPE  = 'M') AND
(COM-US-COMP-CN-SC)
MOVE WS-HOLD-UIWA-TAX-AMT-SC   TO   WS-UIWA-TAX-AMT
END-IF
ADD WS-UIWA-TAX-AMT-SC         TO WS-LTIH-TOTAL-TAX-SC

MOVE WS-UIWA-TAX-AMT-SC        TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MULTIPLY WS-US-DOLLARS BY +1
GIVING WS-UIWA-TAX-AMT-US ROUNDED.


LTI-DETERMINE-NBR-SPLITS.







IF WS-LTI-SC-CURRENCY
IF WS-UIWA-TAX-AMT > 0
IF WS-UIWA-NR1-COST-SC > WS-UIWA-NR2-COST-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-WORK-AMT
ELSE
MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-WORK-AMT
END-IF
ELSE
COMPUTE WS-LTI-WORK-AMT =
WS-UIWA-NR2-COST-SC
+ WS-UIWA-NR1-COST-SC
+ WS-UIWA-OTH-COST-SC
END-COMPUTE
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
ELSE
IF WS-UIWA-TAX-AMT > 0
IF WS-UIWA-NR1-COST > WS-UIWA-NR2-COST
MOVE WS-UIWA-NR1-COST TO WS-LTI-WORK-AMT
ELSE
MOVE WS-UIWA-NR2-COST TO WS-LTI-WORK-AMT
END-IF
ELSE
COMPUTE WS-LTI-WORK-AMT =
WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-OTH-COST
END-COMPUTE
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
END-IF


IF WS-UIWA-TAX-AMT > 0
IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST-SC  +
WS-UIWA-NR2-COST-SC  +
WS-UIWA-REF-COST-SC  +
WS-UIWA-OTH-COST-SC


IF WS-HOLD-UIWA-TAX-AMT-SC > 0
COMPUTE WS-LTI-TAX-RATE =
WS-HOLD-UIWA-TAX-AMT-SC /
WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
WS-LTI-TRANS-AMT
END-IF
ELSE
COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST  +
WS-UIWA-NR2-COST  +
WS-UIWA-REF-COST  +
WS-UIWA-OTH-COST


IF WS-HOLD-UIWA-TAX-AMT-SC > 0
COMPUTE WS-LTI-TAX-RATE =
WS-HOLD-UIWA-TAX-AMT-SC /
WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
WS-LTI-TRANS-AMT
END-IF
END-IF
END-IF.



IF WS-UIWA-TAX-AMT > 0
COMPUTE WS-LTI-INIT-SPLIT-VALUE =
999.00 - (999.00 * WS-LTI-TAX-RATE)
IF WS-LTI-INIT-SPLIT-VALUE > WS-LTI-TRANS-AMT
COMPUTE WS-LTI-INIT-SPLIT-VALUE = WS-LTI-TRANS-AMT - 1
END-IF
MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
ADD 1 TO WS-LTI-SPLIT-AMT
ELSE
MOVE 1000                    TO WS-LTI-SPLIT-AMT
MOVE 1000                    TO WS-LTI-INIT-SPLIT-NBR1
MOVE 1000                    TO WS-LTI-INIT-SPLIT-NBR2
MOVE 1000                    TO WS-LTI-INIT-SPLIT-REFER
MOVE 1000                    TO WS-LTI-INIT-SPLIT-OTHER
END-IF.



IF WS-UIWA-TAX-AMT > 0
IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
WS-UIWA-NR1-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
WS-UIWA-NR2-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
WS-UIWA-REF-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
WS-UIWA-OTH-COST-SC / WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
WS-UIWA-NR1-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
WS-UIWA-NR2-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
WS-UIWA-REF-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
WS-UIWA-OTH-COST / WS-LTI-TRANS-AMT
END-IF
END-IF.


IF WS-UIWA-TAX-AMT > 0
COMPUTE WS-LTI-INIT-SPLIT-NBR1  = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-NBR1
COMPUTE WS-LTI-INIT-SPLIT-NBR2  = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-NBR2
COMPUTE WS-LTI-INIT-SPLIT-REFER = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-REFER
COMPUTE WS-LTI-INIT-SPLIT-OTHER = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-OTHER
END-IF.



IF WS-UIWA-TAX-AMT > 0
IF WS-LTI-INIT-SPLIT-NBR1 > WS-LTI-INIT-SPLIT-NBR2
MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-INIT-SPLIT-VALUE
ELSE
MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-INIT-SPLIT-VALUE
END-IF
IF WS-LTI-INIT-SPLIT-REFER > WS-LTI-INIT-SPLIT-VALUE
MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-INIT-SPLIT-VALUE
END-IF
IF WS-LTI-INIT-SPLIT-OTHER > WS-LTI-INIT-SPLIT-VALUE
MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-INIT-SPLIT-VALUE
END-IF
MOVE WS-LTI-INIT-SPLIT-VALUE    TO WS-LTI-SPLIT-AMT
ADD 1.00                        TO WS-LTI-SPLIT-AMT
END-IF.

MOVE 1                          TO WS-LTI-SPLIT-COUNT
PERFORM
UNTIL WS-LTI-WORK-AMT < 1.00
SUBTRACT 1                FROM WS-LTI-SPLIT-AMT
SUBTRACT WS-LTI-SPLIT-AMT FROM WS-LTI-WORK-AMT


IF WS-LTI-WORK-AMT > 0.99
ADD 1 TO WS-LTI-SPLIT-COUNT
END-IF
END-PERFORM.


LTI-DETERMINE-NBR-SPLITS-TAX.










IF WS-LTI-SC-CURRENCY
IF WS-UIWA-NR1-COST-SC > WS-UIWA-NR2-COST-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-WORK-AMT
ELSE
MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST-SC
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
ELSE
IF WS-UIWA-NR1-COST > WS-UIWA-NR2-COST
MOVE WS-UIWA-NR1-COST TO WS-LTI-WORK-AMT
ELSE
MOVE WS-UIWA-NR2-COST TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-REF-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
COMPUTE WS-LTI-WORK-AMT2 =
WS-UIWA-OTH-COST
END-COMPUTE
IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
END-IF
END-IF.


IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST-SC  +
WS-UIWA-NR2-COST-SC  +
WS-UIWA-REF-COST-SC  +
WS-UIWA-OTH-COST-SC


IF WS-HOLD-UIWA-TAX-AMT-SC > 0
COMPUTE WS-LTI-TAX-RATE =
WS-HOLD-UIWA-TAX-AMT-SC /
WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
WS-LTI-TRANS-AMT
END-IF
ELSE
COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST  +
WS-UIWA-NR2-COST  +
WS-UIWA-REF-COST  +
WS-UIWA-OTH-COST


IF WS-HOLD-UIWA-TAX-AMT-SC > 0
COMPUTE WS-LTI-TAX-RATE =
WS-HOLD-UIWA-TAX-AMT-SC /
WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
WS-LTI-TRANS-AMT
END-IF
END-IF.







COMPUTE WS-LTI-INIT-SPLIT-VALUE = (95.99 /
WS-LTI-TAX-RATE).

IF WS-LTI-INIT-SPLIT-VALUE > 900
MOVE 900 TO WS-LTI-INIT-SPLIT-VALUE
END-IF.

IF (WS-LTI-INIT-SPLIT-VALUE + 1) > WS-LTI-TRANS-AMT
COMPUTE WS-LTI-INIT-SPLIT-VALUE = WS-LTI-TRANS-AMT - 1
END-IF.



IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
WS-UIWA-NR1-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
WS-UIWA-NR2-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
WS-UIWA-REF-COST-SC / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
WS-UIWA-OTH-COST-SC / WS-LTI-TRANS-AMT
ELSE
COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
WS-UIWA-NR1-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
WS-UIWA-NR2-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
WS-UIWA-REF-COST / WS-LTI-TRANS-AMT
COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
WS-UIWA-OTH-COST / WS-LTI-TRANS-AMT
END-IF.


COMPUTE WS-LTI-INIT-SPLIT-NBR1  = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-NBR1.
COMPUTE WS-LTI-INIT-SPLIT-NBR2  = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-NBR2.
COMPUTE WS-LTI-INIT-SPLIT-REFER = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-REFER.
COMPUTE WS-LTI-INIT-SPLIT-OTHER = WS-LTI-INIT-SPLIT-VALUE *
WS-LTI-PCT-XTN-OTHER.



IF WS-LTI-INIT-SPLIT-NBR1 > WS-LTI-INIT-SPLIT-NBR2
MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-INIT-SPLIT-VALUE
ELSE
MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-INIT-SPLIT-VALUE
END-IF.
IF WS-LTI-INIT-SPLIT-REFER > WS-LTI-INIT-SPLIT-VALUE
MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-INIT-SPLIT-VALUE
END-IF.
IF WS-LTI-INIT-SPLIT-OTHER > WS-LTI-INIT-SPLIT-VALUE
MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-INIT-SPLIT-VALUE
END-IF.


MOVE 1                       TO WS-LTI-SPLIT-COUNT.
MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT.
ADD 1.00                     TO WS-LTI-SPLIT-AMT.
PERFORM
UNTIL WS-LTI-WORK-AMT < 1.00
SUBTRACT 1                FROM WS-LTI-SPLIT-AMT
SUBTRACT WS-LTI-SPLIT-AMT FROM WS-LTI-WORK-AMT


IF WS-LTI-WORK-AMT > 0.99
ADD 1 TO WS-LTI-SPLIT-COUNT
END-IF
END-PERFORM.


LTI-DISCOUNT-FOR-CAN-TAXES-NEW.

MOVE WS-UIWA-NR2-COST-SC TO WS-SAVE-UIWA-NR2-COST-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-SAVE-UIWA-NR1-COST-SC
MOVE WS-UIWA-REF-COST-SC TO WS-SAVE-UIWA-REF-COST-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-SAVE-UIWA-OTH-COST-SC

MOVE ZEROES              TO WS-NR2-TAX-PROD-COST
WS-NR1-TAX-PROD-COST
WS-REF-TAX-PROD-COST
WS-OTH-TAX-PROD-COST.

IF WS-UIWA-NR2-COST-SC > 0
IF WS-NR2-SELECT-DISCOUNT > 0
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-UIWA-NR2-COST-SC / WS-LTI-HOLD-AMT-NR2
COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
WS-NR2-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-NR2-TAX-PROD-COST   =
WS-UIWA-NR2-COST-SC - WS-PROD-SPLIT-DISCOUNT
ELSE
MOVE WS-UIWA-NR2-COST-SC TO WS-NR2-TAX-PROD-COST
END-IF
END-IF.

IF WS-UIWA-NR1-COST-SC > 0
IF WS-NR1-SELECT-DISCOUNT > 0
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-UIWA-NR1-COST-SC / WS-LTI-HOLD-AMT-NR1
COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
WS-NR1-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-NR1-TAX-PROD-COST   =
WS-UIWA-NR1-COST-SC - WS-PROD-SPLIT-DISCOUNT
ELSE
MOVE WS-UIWA-NR1-COST-SC TO WS-NR1-TAX-PROD-COST
END-IF
END-IF.

IF WS-UIWA-REF-COST-SC > 0
IF WS-REF-SELECT-DISCOUNT > 0
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-UIWA-REF-COST-SC / WS-LTI-HOLD-AMT-REF
COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
WS-REF-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-REF-TAX-PROD-COST   =
WS-UIWA-REF-COST-SC - WS-PROD-SPLIT-DISCOUNT
ELSE
MOVE WS-UIWA-REF-COST-SC TO WS-REF-TAX-PROD-COST
END-IF
END-IF.

IF WS-UIWA-OTH-COST-SC > 0
IF WS-OTH-SELECT-DISCOUNT > 0
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-UIWA-OTH-COST-SC / WS-LTI-HOLD-AMT-OTH
COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
WS-OTH-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-OTH-TAX-PROD-COST   =
WS-UIWA-OTH-COST-SC - WS-PROD-SPLIT-DISCOUNT
ELSE
MOVE WS-UIWA-OTH-COST-SC TO WS-OTH-TAX-PROD-COST
END-IF
END-IF.

IF WS-NR2-TAX-PROD-COST > ZEROS
MOVE WS-NR2-TAX-PROD-COST TO WS-UIWA-NR2-COST-SC
END-IF.
IF WS-NR1-TAX-PROD-COST > ZEROS
MOVE WS-NR1-TAX-PROD-COST TO WS-UIWA-NR1-COST-SC
END-IF.
IF WS-REF-TAX-PROD-COST > ZEROS
MOVE WS-REF-TAX-PROD-COST TO WS-UIWA-REF-COST-SC
END-IF.
IF WS-OTH-TAX-PROD-COST > ZEROS
MOVE WS-OTH-TAX-PROD-COST TO WS-UIWA-OTH-COST-SC
END-IF.


LTI-DISCOUNT-FOR-CAN-TAXES.

MOVE WS-UIWA-NR2-COST-SC TO WS-SAVE-UIWA-NR2-COST-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-SAVE-UIWA-NR1-COST-SC
MOVE WS-UIWA-REF-COST-SC TO WS-SAVE-UIWA-REF-COST-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-SAVE-UIWA-OTH-COST-SC

MOVE ZEROS TO WS-NR2-TAX-PROD-COST  WS-UIWA-NR2-COST-SC
WS-NR1-TAX-PROD-COST  WS-UIWA-NR1-COST-SC
WS-REF-TAX-PROD-COST  WS-UIWA-REF-COST-SC
WS-OTH-TAX-PROD-COST  WS-UIWA-OTH-COST-SC.

IF WS-LTI-SUB1 = 1
IF WS-LARGE-TRANS-SPLITS-TAX
MOVE 900.00              TO WS-NR2-BASE-AMT
WS-NR1-BASE-AMT
WS-REF-BASE-AMT
WS-OTH-BASE-AMT
ELSE
MOVE 999.00              TO WS-NR2-BASE-AMT
WS-NR1-BASE-AMT
WS-REF-BASE-AMT
WS-OTH-BASE-AMT
END-IF
MOVE WS-LTI-HOLD-AMT-NR2 TO WS-NR2-TRANS-AMT-BAL
MOVE WS-LTI-HOLD-AMT-NR1 TO WS-NR1-TRANS-AMT-BAL
MOVE WS-LTI-HOLD-AMT-REF TO WS-REF-TRANS-AMT-BAL
MOVE WS-LTI-HOLD-AMT-OTH TO WS-OTH-TRANS-AMT-BAL
END-IF.

IF WS-LTI-SUB1 = 1
IF WS-OTH-TRANS-AMT-BAL > WS-OTH-BASE-AMT
NEXT SENTENCE
ELSE
MOVE ZEROS TO WS-OTH-TRANS-AMT-BAL
ELSE
IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
IF WS-OTH-TRANS-AMT-BAL > ZERO
NEXT SENTENCE
ELSE
MOVE WS-LTI-HOLD-AMT-OTH TO WS-OTH-TRANS-AMT-BAL
END-IF
END-IF
END-IF.

PERFORM LTI-CALC-DISC-FOR-SPLIT.


LTI-CALC-DISC-FOR-SPLIT.

IF WS-NR2-TRANS-AMT-BAL > ZERO
IF WS-NR2-SELECT-DISCOUNT > ZERO
IF WS-NR2-TRANS-AMT-BAL > WS-NR2-BASE-AMT
IF WS-LTI-SUB1 > 1
SUBTRACT 1 FROM WS-NR2-BASE-AMT
END-IF
ELSE
MOVE WS-NR2-TRANS-AMT-BAL TO WS-NR2-BASE-AMT
IF WS-LTI-SUB1 > 1
ADD .05                TO WS-NR2-BASE-AMT
END-IF
END-IF
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-NR2-BASE-AMT / WS-LTI-HOLD-AMT-NR2
COMPUTE WS-PROD-SPLIT-DISCOUNT =
WS-NR2-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-NR2-TAX-PROD-COST   =
WS-NR2-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
COMPUTE WS-NR2-TRANS-AMT-BAL =
WS-NR2-TRANS-AMT-BAL - WS-NR2-BASE-AMT
ELSE
MOVE WS-NR2-TRANS-AMT-BAL TO WS-NR2-TAX-PROD-COST
MOVE ZEROS                TO WS-NR2-TRANS-AMT-BAL
END-IF
END-IF.

IF WS-NR1-TRANS-AMT-BAL > ZERO
IF WS-NR1-SELECT-DISCOUNT > ZERO
IF WS-NR1-TRANS-AMT-BAL > WS-NR1-BASE-AMT
IF WS-LTI-SUB1 > 1
SUBTRACT 1 FROM WS-NR1-BASE-AMT
END-IF
ELSE
MOVE WS-NR1-TRANS-AMT-BAL TO WS-NR1-BASE-AMT
IF WS-LTI-SUB1 > 1
ADD .05                TO WS-NR1-BASE-AMT
END-IF
END-IF
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-NR1-BASE-AMT / WS-LTI-HOLD-AMT-NR1
COMPUTE WS-PROD-SPLIT-DISCOUNT =
WS-NR1-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-NR1-TAX-PROD-COST   =
WS-NR1-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
COMPUTE WS-NR1-TRANS-AMT-BAL =
WS-NR1-TRANS-AMT-BAL - WS-NR1-BASE-AMT
ELSE
MOVE WS-NR1-TRANS-AMT-BAL TO WS-NR1-TAX-PROD-COST
MOVE ZEROS                TO WS-NR1-TRANS-AMT-BAL
END-IF
END-IF.

IF WS-REF-TRANS-AMT-BAL > ZERO
IF WS-REF-SELECT-DISCOUNT > ZERO
IF WS-REF-TRANS-AMT-BAL > WS-REF-BASE-AMT
IF WS-LTI-SUB1 > 1
SUBTRACT 1 FROM WS-REF-BASE-AMT
END-IF
ELSE
MOVE WS-REF-TRANS-AMT-BAL TO WS-REF-BASE-AMT
IF WS-LTI-SUB1 > 1
ADD .05                TO WS-REF-BASE-AMT
END-IF
END-IF
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-REF-BASE-AMT / WS-LTI-HOLD-AMT-REF
COMPUTE WS-PROD-SPLIT-DISCOUNT =
WS-REF-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-REF-TAX-PROD-COST   =
WS-REF-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
COMPUTE WS-REF-TRANS-AMT-BAL =
WS-REF-TRANS-AMT-BAL - WS-REF-BASE-AMT
ELSE
MOVE WS-REF-TRANS-AMT-BAL TO WS-REF-TAX-PROD-COST
MOVE ZEROS                TO WS-REF-TRANS-AMT-BAL
END-IF
END-IF.

IF WS-OTH-TRANS-AMT-BAL > ZERO
IF WS-OTH-SELECT-DISCOUNT > ZERO
IF WS-OTH-TRANS-AMT-BAL > WS-OTH-BASE-AMT
IF WS-LTI-SUB1 > 1
SUBTRACT 1 FROM WS-OTH-BASE-AMT
END-IF
ELSE
MOVE WS-OTH-TRANS-AMT-BAL TO WS-OTH-BASE-AMT
IF WS-LTI-SUB1 > 1
ADD .05                TO WS-OTH-BASE-AMT
END-IF
END-IF
COMPUTE WS-PROD-COST-RATIO ROUNDED =
WS-OTH-BASE-AMT / WS-LTI-HOLD-AMT-OTH
COMPUTE WS-PROD-SPLIT-DISCOUNT =
WS-OTH-SELECT-DISCOUNT * WS-PROD-COST-RATIO
COMPUTE WS-OTH-TAX-PROD-COST   =
WS-OTH-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
COMPUTE WS-OTH-TRANS-AMT-BAL =
WS-OTH-TRANS-AMT-BAL - WS-OTH-BASE-AMT
ELSE
MOVE WS-OTH-TRANS-AMT-BAL TO WS-OTH-TAX-PROD-COST
MOVE ZEROS                TO WS-OTH-TRANS-AMT-BAL
END-IF
END-IF.

IF WS-NR2-TAX-PROD-COST > ZEROS
MOVE WS-NR2-TAX-PROD-COST TO WS-UIWA-NR2-COST-SC
END-IF.

IF WS-NR1-TAX-PROD-COST > ZEROS
MOVE WS-NR1-TAX-PROD-COST TO WS-UIWA-NR1-COST-SC
END-IF.

IF WS-REF-TAX-PROD-COST > ZEROS
MOVE WS-REF-TAX-PROD-COST TO WS-UIWA-REF-COST-SC
END-IF.

IF WS-OTH-TAX-PROD-COST > ZEROS
MOVE WS-OTH-TAX-PROD-COST TO WS-UIWA-OTH-COST-SC
END-IF.


LTI-RESTORE-UIWA-COST.

MOVE WS-SAVE-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST-SC
MOVE WS-SAVE-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST-SC
MOVE WS-SAVE-UIWA-REF-COST-SC TO WS-UIWA-REF-COST-SC
MOVE WS-SAVE-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST-SC.


FP-0175-LTI-A.

MOVE 'FP-0175-LTI-A'             TO CXUTS0ML-PARAGRAPH.

IF WS-UIWA-NATS-CTL-NR NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NATS-CTL-NR
END-IF
IF THIS-BE-A-NATS-AUTH AND
WS-UIWA-NATS-CTL-NR > ZEROES
MOVE WS-UIWA-NATS-CTL-NR TO WS-CONTROL-NR
COMPUTE CNRRA-1ST-CTRL-NR = WS-CONTROL-NR
+ WS-LTI-SPLIT-COUNT
- 1
END-COMPUTE
MOVE ZEROES              TO WS-UIWA-NATS-CTL-NR
ELSE
SET CNRIA-RN-REQUEST      TO TRUE
MOVE WS-LTI-SPLIT-COUNT   TO CNRIA-QTY-REQUESTED
CALL WS-CXUTS400 USING DFHEIBLK,
DFHCOMMAREA,
CXUTW400-PARMS
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF CNRRA-RC-MAX-CTL-USED
MOVE CTL-NR-MAX TO OUT-COMENT
MOVE CTL-NR-MAX-N TO POS-ERROR-NUMBER
MOVE -1 TO FPINVNRL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
MOVE CNRRA-1ST-CTRL-NR    TO WS-CONTROL-NR.
MOVE WS-CONTROL-NR TO ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
COMPUTE WS-CTR1 = CNRRA-1ST-CTRL-NR + 1
MOVE WS-CTR1 TO ORDRFIL-RRN
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (DUP-ORDRFIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE ORDRFIL-RRN       TO WS-NUM-7
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP


EVALUATE TRUE
WHEN EIBRESP = DFHRESP(NOTFND)
WHEN ODR-VALID-DETAIL-RECD IN DUP-ORDRFIL-RECD
CONTINUE
WHEN OTHER
MOVE 'Y' TO WS-LOOP-FLAG
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO I-CTL-NR
END-EVALUATE.


LTI-SAVE-OFF-LARGE-TRANS-HOLD.



MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO WS-LTIH-FMLOG
MOVE FMDL-SC-SELECT-DISCOUNT TO WS-LTIH-SELECT-DISC
COMPUTE WS-LTIH-TRANS-GALLONS =
FMDL-BC-TR-TRACTOR-GALLONS +
FMDL-BC-TR-OTHER-GALLONS   +
FMDL-BC-NR1-GALLONS
END-COMPUTE

MOVE WS-LTIH-TRANS-GALLONS TO WS-LTIH-TRANS-GALLONS2
COMPUTE WS-LTIH-HUB =
WS-UIWA-HUB -
UNITMST-LAST-HUB
END-COMPUTE
COMPUTE WS-HOLD-TRANS-GALLONS =
FMDL-TR-TRACTOR-GALLONS +
FMDL-TR-TRAILER-GALLONS +
FMDL-TR-OTHER-GALLONS   +
FMDL-NR1-GALLONS
END-COMPUTE
MOVE WS-UIWA-CASH-AMT    TO WS-LTIH-CASH-AMT
MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTIH-TAX-AMT-SC
MOVE ZEROES              TO WS-LTIH-TOTAL-TAX-SC
MOVE WS-BILLABLE         TO WS-LTIH-BILLABLE
MOVE WS-NON-BILLABLE     TO WS-LTIH-NON-BILLABLE
MOVE WS2-CURXMN          TO WS-LTIH-CURXMN2
MOVE WS-CURXMN           TO WS-LTIH-CURXMN
MOVE WS-CONTROL-NR       TO WS-LTIH-CONTROL-NR
IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE ZERO             TO WS-LTIH-DRAFT-AMT
ELSE
MOVE WS2-BILLABLE     TO WS-LTIH-DRAFT-AMT
END-IF
MOVE COM-FP-TRANS-AMT    TO WS-LTIH-FP-TRANS-AMT
MOVE WS-TOTAL-REQUEST    TO WS-LTIH-TOTAL-REQUEST
CONTINUE.


LTI-SAVE-OFF-UIWA-VALUES.


IF WS-LTI-SC-CURRENCY
MOVE WS-UIWA-NR1-QTY-SC  TO WS-LTIH-UIWA-NR1-QTY
MOVE WS-UIWA-NR1-COST-SC TO WS-LTIH-UIWA-NR1-COST
MOVE WS-UIWA-NR2-QTY-SC  TO WS-LTIH-UIWA-NR2-QTY
MOVE WS-UIWA-NR2-COST-SC TO WS-LTIH-UIWA-NR2-COST
MOVE WS-UIWA-REF-QTY-SC  TO WS-LTIH-UIWA-REF-QTY
MOVE WS-UIWA-REF-COST-SC TO WS-LTIH-UIWA-REF-COST
MOVE WS-UIWA-OTH-QTY-SC  TO WS-LTIH-UIWA-OTH-QTY
MOVE WS-UIWA-OTH-COST-SC TO WS-LTIH-UIWA-OTH-COST
MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTIH-UIWA-AMT-TAX
MOVE WS-UIWA-NR1-QTY     TO WS-LTI-HOLD-QTY-NR1-OTH
MOVE WS-UIWA-NR1-COST    TO WS-LTI-HOLD-AMT-NR1-OTH
MOVE WS-UIWA-NR2-QTY     TO WS-LTI-HOLD-QTY-NR2-OTH
MOVE WS-UIWA-NR2-COST    TO WS-LTI-HOLD-AMT-NR2-OTH
MOVE WS-UIWA-REF-QTY     TO WS-LTI-HOLD-QTY-REF-OTH
MOVE WS-UIWA-REF-COST    TO WS-LTI-HOLD-AMT-REF-OTH
MOVE WS-UIWA-OTH-QTY     TO WS-LTI-HOLD-QTY-OTH-OTH
MOVE WS-UIWA-OTH-COST    TO WS-LTI-HOLD-AMT-OTH-OTH
MOVE WS-UIWA-TAX-AMT     TO WS-LTI-HOLD-AMT-TAX-OTH
ELSE
MOVE WS-UIWA-NR1-QTY     TO WS-LTIH-UIWA-NR1-QTY
MOVE WS-UIWA-NR1-COST    TO WS-LTIH-UIWA-NR1-COST
MOVE WS-UIWA-NR2-QTY     TO WS-LTIH-UIWA-NR2-QTY
MOVE WS-UIWA-NR2-COST    TO WS-LTIH-UIWA-NR2-COST
MOVE WS-UIWA-REF-QTY     TO WS-LTIH-UIWA-REF-QTY
MOVE WS-UIWA-REF-COST    TO WS-LTIH-UIWA-REF-COST
MOVE WS-UIWA-OTH-QTY     TO WS-LTIH-UIWA-OTH-QTY
MOVE WS-UIWA-OTH-COST    TO WS-LTIH-UIWA-OTH-COST
MOVE WS-UIWA-TAX-AMT     TO WS-LTIH-UIWA-AMT-TAX
MOVE WS-UIWA-NR1-QTY-SC  TO WS-LTI-HOLD-QTY-NR1-OTH
MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-HOLD-AMT-NR1-OTH
MOVE WS-UIWA-NR2-QTY-SC  TO WS-LTI-HOLD-QTY-NR2-OTH
MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-HOLD-AMT-NR2-OTH
MOVE WS-UIWA-REF-QTY-SC  TO WS-LTI-HOLD-QTY-REF-OTH
MOVE WS-UIWA-REF-COST-SC TO WS-LTI-HOLD-AMT-REF-OTH
MOVE WS-UIWA-OTH-QTY-SC  TO WS-LTI-HOLD-QTY-OTH-OTH
MOVE WS-UIWA-OTH-COST-SC TO WS-LTI-HOLD-AMT-OTH-OTH
MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTI-HOLD-AMT-TAX-OTH
END-IF
CONTINUE.


LTI-PROCESS-2.


PERFORM LTI-INIT-UIWA


IF WS-LTI-SPLIT-AMT-NBR2-HLD > 0
MOVE WS-LTI-SPLIT-AMT-NBR2-HLD
TO WS-LTI-SPLIT-AMT-NBR2
MOVE ZEROES               TO WS-LTI-SPLIT-AMT-NBR2-HLD
END-IF


IF WS-LTI-SPLIT-AMT-OTHER-HLD > 0
MOVE WS-LTI-SPLIT-AMT-OTHER-HLD
TO WS-LTI-SPLIT-AMT-OTHER
MOVE ZEROES               TO WS-LTI-SPLIT-AMT-OTHER-HLD
END-IF


IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
MOVE 'Y'     TO WS-LTI-LAST-FLAG
ELSE
SUBTRACT 1 FROM WS-LTI-SPLIT-AMT
SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-NBR1
SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-NBR2
SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-REFER
SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-OTHER
END-IF
MOVE ZERO       TO WS-LTI-WORK-AMT
WS-LTI-SUB2










PERFORM LTI-BUILD-THIS-TRANS-SPLIT
UNTIL WS-LTI-SUB2 > 4

IF LTI-SECOND-PASS
PERFORM LTI-SECOND-PASS-INIT
END-IF
PERFORM LTI-CURRENCY-CONVERSIONS
PERFORM LTI-INITIALIZE-BILLABLES
PERFORM 20750-COMPUTE-BILLABLE-AND-NON
PERFORM 20990-COMPUTE-WS-CURXMN
CONTINUE.


LTI-INITIALIZE-BILLABLES.

IF LTI-FIRST-PASS
MOVE WS-LTIH-PROD-BILLABLE      TO WS-BILLABLE
MOVE WS-LTIH-PROD-BILLABLE2     TO WS2-BILLABLE
MOVE WS-LTIH-PROD-NON-BILLABLE  TO WS-NON-BILLABLE
MOVE WS-LTIH-PROD-NON-BILLABLE2 TO WS2-NON-BILLABLE
MOVE WS-LTIH-PROD-BILLABLE-FUEL TO WS2-BILLABLE-FUEL
MOVE WS-LTIH-PROD-NON-BILLABLE-FUEL
TO WS2-NON-BILLABLE-FUEL
ELSE
INITIALIZE                         WS-BILLABLE
WS2-BILLABLE
WS-NON-BILLABLE
WS2-NON-BILLABLE
WS2-BILLABLE-FUEL
WS2-NON-BILLABLE-FUEL
END-IF
CONTINUE.


LTI-INIT-UIWA.

IF WS-LTI-SC-CURRENCY
INITIALIZE WS-UIWA-NR1-QTY-SC
WS-UIWA-NR1-COST-SC
WS-UIWA-NR2-QTY-SC
WS-UIWA-NR2-COST-SC
WS-UIWA-REF-QTY-SC
WS-UIWA-REF-COST-SC
WS-UIWA-OTH-QTY-SC
WS-UIWA-OTH-COST-SC
WS-UIWA-TAX-AMT-SC
ELSE
INITIALIZE WS-UIWA-NR1-QTY
WS-UIWA-NR1-COST
WS-UIWA-NR2-QTY
WS-UIWA-NR2-COST
WS-UIWA-REF-QTY
WS-UIWA-REF-COST
WS-UIWA-OTH-QTY
WS-UIWA-OTH-COST
WS-UIWA-TAX-AMT
END-IF
CONTINUE.


LTI-BUILD-THIS-TRANS-SPLIT.

ADD 1 TO WS-LTI-SUB2
IF WS-LTI-SUB2 = 2
IF WS-LTI-SPLIT-AMT-NBR2-HLD > 0 AND
WS-LTI-SPLIT-AMT-NBR2 = 0
MOVE WS-LTI-SPLIT-AMT-NBR2-HLD TO WS-LTI-SPLIT-AMT-NBR2.
EVALUATE WS-LTI-SUB2
WHEN 1
MOVE WS-LTI-SPLIT-AMT-NBR1  TO WS-LTI-SPLIT-AMT
WHEN 2
MOVE WS-LTI-SPLIT-AMT-NBR2  TO WS-LTI-SPLIT-AMT
WHEN 3
MOVE WS-LTI-SPLIT-AMT-REFER TO WS-LTI-SPLIT-AMT
WHEN 4
MOVE WS-LTI-SPLIT-AMT-OTHER
TO WS-LTI-SPLIT-AMT
END-EVALUATE.
EVALUATE TRUE
WHEN WS-LTI-SUB2 > 4
PERFORM LTI-CALC-TAX-BEF-CHECK-TOT
WHEN WS-LTIH-UIWA-AMT (WS-LTI-SUB2) NOT > ZERO


IF WS-LTI-ZERO-FLAG (WS-LTI-SUB2) = 'Z'
PERFORM LTI-AMT-WENT-TO-ZERO
MOVE 'N' TO WS-LTI-ZERO-FLAG (WS-LTI-SUB2)
END-IF
WHEN OTHER
PERFORM LTI-ADD-ON-UIWA-AMT
END-EVALUATE
CONTINUE.


LTI-CALC-TAX-BEF-CHECK-TOT.

IF WS-LTI-SC-CURRENCY
COMPUTE WS-LTI-MOVE-TAX = (WS-UIWA-NR1-COST-SC +
WS-UIWA-NR2-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-OTH-COST-SC) *
WS-LTI-TAX-RATE
ELSE
COMPUTE WS-LTI-MOVE-TAX = (WS-UIWA-NR1-COST +
WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OTH-COST) *
WS-LTI-TAX-RATE.


ADD WS-LTI-MOVE-TAX     TO WS-LTI-TOTAL-AMT-TAX
IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
PERFORM LTI-CHECK-TOTAL-TAX
MOVE ZEROES TO WS-LTI-TOTAL-AMT-TAX
END-IF
IF WS-LTI-SC-CURRENCY
MOVE WS-LTI-MOVE-TAX    TO WS-UIWA-TAX-AMT-SC
ELSE
MOVE WS-LTI-MOVE-TAX    TO WS-UIWA-TAX-AMT.


LTI-CHECK-TOTAL-TAX.

IF WS-LTI-TOTAL-AMT-TAX = WS-LTI-HOLD-AMT-TAX
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-TAX > WS-LTI-HOLD-AMT-TAX
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-TAX - WS-LTI-HOLD-AMT-TAX
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-LTI-MOVE-TAX
ELSE
IF WS-LTI-TOTAL-AMT-TAX < WS-LTI-HOLD-AMT-TAX
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-TAX - WS-LTI-TOTAL-AMT-TAX
ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-TAX
END-IF
END-IF
END-IF.


LTI-ADD-ON-UIWA-AMT.





IF WS-LTI-SUB2 = 2
IF WS-LARGE-TRANS-SPLITS-TAX
OR WS-LARGE-TRANS-WITH-TAX
MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-WORK-AMT
ELSE
IF WS-LTIH-UIWA-AMT (WS-LTI-SUB2) > 999.99
AND WS-LTI-WORK-AMT > 999.99
MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
TO WS-LTI-WORK-AMT
ELSE
ADD  WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
TO WS-LTI-WORK-AMT
END-IF
END-IF
ELSE
MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-WORK-AMT
END-IF
IF NOT (WS-LTI-WORK-AMT > WS-LTI-SPLIT-AMT)

MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-MOVE-AMT
MOVE WS-LTIH-UIWA-QTY (WS-LTI-SUB2) TO WS-LTI-MOVE-QTY


PERFORM LTI-ADD-TO-TOTALS

PERFORM LTI-CHECK-TOTALS
PERFORM LTI-MOVE-AMT-TO-UIWA


IF WS-LTI-SUB2 = 1
AND WS-LTIH-UIWA-AMT (2) = ZEROES
IF WS-LTI-SPLIT-AMT-OTHER > ZEROES
SUBTRACT WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
FROM WS-LTI-SPLIT-AMT-OTHER
END-IF
END-IF
IF WS-LTI-SUB2 = 2
AND WS-LTI-SPLIT-AMT-OTHER > ZEROES
SUBTRACT WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
FROM WS-LTI-SPLIT-AMT-OTHER
END-IF
MOVE ZERO TO WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
MOVE 'Z'     TO WS-LTI-ZERO-FLAG (WS-LTI-SUB2)
ELSE

COMPUTE WS-LTI-OVER-AMT = WS-LTI-WORK-AMT
- WS-LTI-SPLIT-AMT
END-COMPUTE
COMPUTE WS-LTI-MOVE-AMT =
WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
- WS-LTI-OVER-AMT
END-COMPUTE
IF WS-LTI-MOVE-AMT < ZEROES
MOVE ZEROES              TO WS-LTI-MOVE-AMT
END-IF


IF WS-LTI-SUB2 = 1
IF WS-LTI-SPLIT-AMT-NBR2  > ZEROES
MOVE WS-LTI-SPLIT-AMT-NBR2
TO WS-LTI-SPLIT-AMT-NBR2-HLD
MOVE ZEROES           TO WS-LTI-SPLIT-AMT-NBR2
END-IF
IF WS-LTI-SPLIT-AMT-OTHER > ZEROES
MOVE WS-LTI-SPLIT-AMT-OTHER
TO WS-LTI-SPLIT-AMT-OTHER-HLD
MOVE ZEROES           TO WS-LTI-SPLIT-AMT-OTHER
END-IF
END-IF


IF WS-LTI-SUB2 = 2
AND WS-LTI-SPLIT-AMT-OTHER > ZEROES
MOVE WS-LTI-SPLIT-AMT-OTHER
TO WS-LTI-SPLIT-AMT-OTHER-HLD
MOVE ZEROES              TO WS-LTI-SPLIT-AMT-OTHER
END-IF
PERFORM LTI-COMPUTE-QTY


PERFORM LTI-ADD-TO-TOTALS



IF WS-LTI-SPLIT-COUNT = WS-LTI-SUB1
PERFORM LTI-CHECK-TOTALS
END-IF
PERFORM LTI-MOVE-AMT-TO-UIWA

MOVE WS-LTI-OVER-AMT TO WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
MOVE WS-LTI-OVER-QTY TO WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
END-IF
CONTINUE.


LTI-ADD-TO-TOTALS.





EVALUATE WS-LTI-SUB2
WHEN 1
COMPUTE WS-LTI-TOTAL-AMT-NR1 = WS-LTI-TOTAL-AMT-NR1 +
WS-LTI-MOVE-AMT
COMPUTE WS-LTI-TOTAL-QTY-NR1 = WS-LTI-TOTAL-QTY-NR1 +
WS-LTI-MOVE-QTY
WHEN 2
COMPUTE WS-LTI-TOTAL-AMT-NR2 = WS-LTI-TOTAL-AMT-NR2 +
WS-LTI-MOVE-AMT
COMPUTE WS-LTI-TOTAL-QTY-NR2 = WS-LTI-TOTAL-QTY-NR2 +
WS-LTI-MOVE-QTY
WHEN 3
COMPUTE WS-LTI-TOTAL-AMT-REF = WS-LTI-TOTAL-AMT-REF +
WS-LTI-MOVE-AMT
COMPUTE WS-LTI-TOTAL-QTY-REF = WS-LTI-TOTAL-QTY-REF +
WS-LTI-MOVE-QTY
WHEN 4
COMPUTE WS-LTI-TOTAL-AMT-OTH = WS-LTI-TOTAL-AMT-OTH +
WS-LTI-MOVE-AMT
COMPUTE WS-LTI-TOTAL-QTY-OTH = WS-LTI-TOTAL-QTY-OTH +
WS-LTI-MOVE-QTY
END-EVALUATE.


LTI-CHECK-TOTALS.






EVALUATE WS-LTI-SUB2
WHEN 1
IF WS-LTI-TOTAL-AMT-NR1 = WS-LTI-HOLD-AMT-NR1
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-NR1 > WS-LTI-HOLD-AMT-NR1
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-NR1 - WS-LTI-HOLD-AMT-NR1
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-LTI-MOVE-AMT
ELSE
IF WS-LTI-TOTAL-AMT-NR1 < WS-LTI-HOLD-AMT-NR1
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-NR1 - WS-LTI-TOTAL-AMT-NR1
ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
END-IF
END-IF
END-IF
WHEN 2
IF WS-LTI-TOTAL-AMT-NR2 = WS-LTI-HOLD-AMT-NR2
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-NR2 > WS-LTI-HOLD-AMT-NR2
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-NR2 - WS-LTI-HOLD-AMT-NR2
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-LTI-MOVE-AMT
ELSE
IF WS-LTI-TOTAL-AMT-NR2 < WS-LTI-HOLD-AMT-NR2
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-NR2 - WS-LTI-TOTAL-AMT-NR2
ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
END-IF
END-IF
END-IF
WHEN 3
IF WS-LTI-TOTAL-AMT-REF = WS-LTI-HOLD-AMT-REF
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-REF > WS-LTI-HOLD-AMT-REF
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-REF - WS-LTI-HOLD-AMT-REF
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-LTI-MOVE-AMT
ELSE
IF WS-LTI-TOTAL-AMT-REF < WS-LTI-HOLD-AMT-REF
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-REF - WS-LTI-TOTAL-AMT-REF
ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
END-IF
END-IF
END-IF
WHEN 4
IF WS-LTI-TOTAL-AMT-OTH = WS-LTI-HOLD-AMT-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-OTH > WS-LTI-HOLD-AMT-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-OTH - WS-LTI-HOLD-AMT-OTH
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-LTI-MOVE-AMT
ELSE
IF WS-LTI-TOTAL-AMT-OTH < WS-LTI-HOLD-AMT-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-OTH - WS-LTI-TOTAL-AMT-OTH
ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
END-IF
END-IF
END-IF
END-EVALUATE.


EVALUATE WS-LTI-SUB2
WHEN 1
IF WS-LTI-TOTAL-QTY-NR1 = WS-LTI-HOLD-QTY-NR1
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-NR1 > WS-LTI-HOLD-QTY-NR1
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-NR1 - WS-LTI-HOLD-QTY-NR1
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-LTI-MOVE-QTY
ELSE
IF WS-LTI-TOTAL-QTY-NR1 < WS-LTI-HOLD-QTY-NR1
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-NR1 - WS-LTI-TOTAL-QTY-NR1
ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
END-IF
END-IF
END-IF
WHEN 2
IF WS-LTI-TOTAL-QTY-NR2 = WS-LTI-HOLD-QTY-NR2
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-NR2 > WS-LTI-HOLD-QTY-NR2
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-NR2 - WS-LTI-HOLD-QTY-NR2
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-LTI-MOVE-QTY
ELSE
IF WS-LTI-TOTAL-QTY-NR2 < WS-LTI-HOLD-QTY-NR2
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-NR2 - WS-LTI-TOTAL-QTY-NR2
ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
END-IF
END-IF
END-IF
WHEN 3
IF WS-LTI-TOTAL-QTY-REF = WS-LTI-HOLD-QTY-REF
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-REF > WS-LTI-HOLD-QTY-REF
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-REF - WS-LTI-HOLD-QTY-REF
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-LTI-MOVE-QTY
ELSE
IF WS-LTI-TOTAL-QTY-REF < WS-LTI-HOLD-QTY-REF
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-REF - WS-LTI-TOTAL-QTY-REF
ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
END-IF
END-IF
END-IF
WHEN 4
IF WS-LTI-TOTAL-QTY-OTH = WS-LTI-HOLD-QTY-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-OTH > WS-LTI-HOLD-QTY-OTH
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-OTH - WS-LTI-HOLD-QTY-OTH
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-LTI-MOVE-QTY
ELSE
IF WS-LTI-TOTAL-QTY-OTH < WS-LTI-HOLD-QTY-OTH
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-OTH - WS-LTI-TOTAL-QTY-OTH
ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
END-IF
END-IF
END-IF
END-EVALUATE.



LTI-COMPUTE-QTY.





COMPUTE WS-LTI-PERCENT ROUNDED =
WS-LTI-MOVE-AMT / WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
END-COMPUTE
COMPUTE WS-LTI-MOVE-QTY ROUNDED =
WS-LTI-PERCENT  * WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
END-COMPUTE
COMPUTE WS-LTI-OVER-QTY =
WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
- WS-LTI-MOVE-QTY
END-COMPUTE
CONTINUE.


LTI-MOVE-AMT-TO-UIWA.


EVALUATE WS-LTI-SUB2 ALSO TRUE
WHEN 1 ALSO WS-LTI-SC-CURRENCY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR1-QTY-SC
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR1-COST-SC
WHEN 1 ALSO ANY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR1-QTY
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR1-COST
WHEN 2 ALSO WS-LTI-SC-CURRENCY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR2-QTY-SC
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR2-COST-SC
WHEN 2 ALSO ANY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR2-QTY
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR2-COST
WHEN 3 ALSO WS-LTI-SC-CURRENCY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-REF-QTY-SC
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-REF-COST-SC
WHEN 3 ALSO ANY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-REF-QTY
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-REF-COST
WHEN 4 ALSO WS-LTI-SC-CURRENCY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-OTH-QTY-SC
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-OTH-COST-SC
WHEN 4 ALSO ANY
MOVE WS-LTI-MOVE-QTY TO WS-UIWA-OTH-QTY
MOVE WS-LTI-MOVE-AMT TO WS-UIWA-OTH-COST
END-EVALUATE

CONTINUE.


LTI-AMT-WENT-TO-ZERO.



EVALUATE WS-LTI-SUB2
WHEN 1
INITIALIZE WS-UIWA-NR1-PPU-US
WS-RETAIL-PPG-NR1
WS2-RETAIL-PPG-NR1
WHEN 2
INITIALIZE WS-UIWA-NR2-PPU
WS-UIWA-NR2-PPU-SC
WS-UIWA-NR2-PPU-US
WS-RETAIL-PPG-NR2
WS2-RETAIL-PPG-NR2
WHEN 3
INITIALIZE WS-UIWA-REF-PPU
WS-UIWA-REF-PPU-SC
WS-UIWA-REF-PPU-US
WS-RETAIL-PPG-TRAILER
WS2-RETAIL-PPG-TRAILER
TRAILER-PURCHASE
WHEN 4
INITIALIZE WS-UIWA-OTH-PPU
WS-UIWA-OTH-PPU-SC
WS-UIWA-OTH-PPU-US
END-EVALUATE

PERFORM 20390-SET-FUEL-FLAG
CONTINUE.


LTI-SECOND-PASS-INIT.




INITIALIZE WS-DC-DISCOUNT-AMT
WS-DC-SC-DISCOUNT-AMT
WS-DC-SC-REBATE-AMT
WS-DC-FEE-AMT
WS-DC-FEE-AMT-FUEL
WS-DC-FEE-AMT-CUSTOM
WS-DC-FEE-AMT-RETAIN
WS-DC-FEE-AMT-MANUAL
WS-DC-DISCOUNT-FOCUS-SELECT
WS-DC-DISCOUNT-SMFL
WS-DC-REBATE-AMT
WS-SC-CORP-REB-AMT
WS-WORK-TOTAL-AR
WS-COST-PLUS-CPG-FEE1
WS-COST-PLUS-CPG-FEE2
WS-FMDL-PRODUCT-FEE-INFO
WS-HOLD-RATE
WS-TOTAL-PRCNTAGE
WS-CDN-PRCNTAGE
SAVE-FMDL-SC-INVOICE-AMT
WS-XBORDER-ASSMT-AMT
INP-TOTAL-COST
WS-ADVANCE-RATE
WS-ADVANCE-RATE2
WS-ADVANCE-RATE3
WS-TOTAL-RATE
WS-TOTAL-RATE2
WS-FUEL-RATE
WS-FUEL-RATE2
WS-FUEL-RATE3
WS-UIWA-FLEET-AMT-ORIG
WS-AMOUNT-OF-DISC-CPG
COM-PNET-SC-FEE
COM-PNET-CO-FEE
COM-PNET-CASH-ADD-ON
COM-PNET-VOICE-SURCHARGE
COM-DISCOUNT-METHOD
WS-DISCOUNT-TYPE-FLAG
WS-UIWA-NATS-FEE
WS-PPRIDE-MARKUP-SC
WS-UIWA-BASE-PPG
WS-UIWA-DELIVERY-FEE-PPG
WS-CDN-GUAR-YN
WS-CDN-ALL-HANDLING-ADD-ON
WS-CDN-ALL-HANDLING-ADD-ON-AC
WS-CDN-MANUAL-ADD-ON
WS-CDN-COST-PLUS-ADD-ON
WS-CDN-COST-PLUS-ADD-ON-AC
WS-SCM-CORP-REBATE-LOCATION
WS-SCM-CORP-REBATE-FLAG
WS-SCPM-PP-PAC-MARKUP


WS-UIWA-CASH-AMT
WS-UIWA-CASH-AMT-SC
WS-UIWA-OIL-QTY
WS-UIWA-OIL-QTY-SC
WS-UIWA-OIL-COST
WS-UIWA-OIL-COST-SC
OIL-PURCHASE
PRODUCT-PURCHASE
WS-UIWA-PR1-COST
WS-UIWA-PR1-COST-SC
WS-UIWA-PR1-COST-US
WS-UIWA-PR2-COST
WS-UIWA-PR2-COST-SC
WS-UIWA-PR2-COST-US
WS-UIWA-PR3-COST
WS-UIWA-PR3-COST-SC
WS-UIWA-PR3-COST-US
WS-UIWA-PR-CODE (1)
WS-UIWA-PR-CODE (2)
WS-UIWA-PR-CODE (3)
WS-UIWA-TOTAL-TAX-PPG
WS-FMDL-PRODUCT-FEE-INFO
COM-NET-PRICING-FLAG
CONTINUE.


LTI-CURRENCY-CONVERSIONS.



IF COM-US-COMP-US-SC OR COM-CN-COMP-CN-SC

IF WS-LTI-SC-CURRENCY
PERFORM LTI-CONVERT-FOR-SAME-CURR
ELSE
PERFORM CONVERT-FOR-NO-ACCOUNT
END-IF
END-IF
IF COM-US-COMP-CN-SC
IF WS-LTI-SC-CURRENCY
PERFORM LTI-CONVERT-FOR-US-ACC
ELSE
PERFORM LTI-CONVERT-FOR-CN-SC
END-IF
END-IF
IF COM-CN-COMP-US-SC
IF WS-LTI-SC-CURRENCY
PERFORM LTI-CONVERT-FOR-CN-ACC
ELSE
PERFORM LTI-CONVERT-FOR-US-SC
END-IF
END-IF

PERFORM CONVERT-FOR-US-AMOUNTS
CONTINUE.


LTI-CONVERT-FOR-SAME-CURR.

MOVE WS-UIWA-NR2-QTY-SC    TO WS-UIWA-NR2-QTY
MOVE WS-UIWA-OTH-QTY-SC    TO WS-UIWA-OTH-QTY
MOVE WS-UIWA-REF-QTY-SC    TO WS-UIWA-REF-QTY
MOVE WS-UIWA-NR1-QTY-SC    TO WS-UIWA-NR1-QTY
MOVE WS-UIWA-NR2-COST-SC   TO WS-UIWA-NR2-COST
MOVE WS-UIWA-OTH-COST-SC   TO WS-UIWA-OTH-COST
MOVE WS-UIWA-REF-COST-SC   TO WS-UIWA-REF-COST
MOVE WS-UIWA-NR1-COST-SC   TO WS-UIWA-NR1-COST
MOVE WS-UIWA-TAX-AMT-SC    TO WS-UIWA-TAX-AMT
CONTINUE.


LTI-CONVERT-FOR-CN-SC.


MOVE WS-UIWA-NR2-QTY     TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-NR2-QTY-SC
ADD WS-UIWA-NR2-QTY-SC   TO WS-LTI-TOTAL-QTY-NR2-OTH

MOVE WS-UIWA-NR2-COST    TO WS-US-DOLLARS
PERFORM LTI-RETURN-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST-SC
ADD WS-UIWA-NR2-COST-SC  TO WS-LTI-TOTAL-AMT-NR2-OTH


MOVE WS-UIWA-OTH-QTY     TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-OTH-QTY-SC
ADD WS-UIWA-OTH-QTY-SC   TO WS-LTI-TOTAL-QTY-OTH-OTH

MOVE WS-UIWA-OTH-COST    TO WS-US-DOLLARS
PERFORM LTI-RETURN-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST-SC
ADD WS-UIWA-OTH-COST-SC  TO WS-LTI-TOTAL-AMT-OTH-OTH


MOVE WS-UIWA-REF-QTY     TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-REF-QTY-SC
ADD WS-UIWA-REF-QTY-SC   TO WS-LTI-TOTAL-QTY-REF-OTH

MOVE WS-UIWA-REF-COST    TO WS-US-DOLLARS
PERFORM LTI-RETURN-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST-SC
ADD WS-UIWA-REF-COST-SC  TO WS-LTI-TOTAL-AMT-REF-OTH


MOVE WS-UIWA-NR1-QTY     TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-NR1-QTY-SC
ADD WS-UIWA-NR1-QTY-SC   TO WS-LTI-TOTAL-QTY-NR1-OTH

MOVE WS-UIWA-NR1-COST    TO WS-US-DOLLARS
PERFORM LTI-RETURN-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST-SC
ADD WS-UIWA-NR1-COST-SC  TO WS-LTI-TOTAL-AMT-NR1-OTH

MOVE WS-UIWA-TAX-AMT     TO WS-US-DOLLARS
PERFORM LTI-RETURN-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-TAX-AMT-SC
ADD WS-UIWA-TAX-AMT-SC   TO WS-LTI-TOTAL-AMT-TAX-OTH

IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
PERFORM LTI-CHECK-TOTALS-OTH
END-IF.

CONTINUE.


LTI-CONVERT-FOR-CN-ACC.


MOVE WS-UIWA-NR2-QTY-SC  TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-NR2-QTY
ADD WS-UIWA-NR2-QTY      TO WS-LTI-TOTAL-QTY-NR2-OTH

MOVE WS-UIWA-NR2-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST
ADD WS-UIWA-NR2-COST     TO WS-LTI-TOTAL-AMT-NR2-OTH


MOVE WS-UIWA-OTH-QTY-SC  TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-OTH-QTY
ADD WS-UIWA-OTH-QTY      TO WS-LTI-TOTAL-QTY-OTH-OTH

MOVE WS-UIWA-OTH-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST
ADD WS-UIWA-OTH-COST     TO WS-LTI-TOTAL-AMT-OTH-OTH


MOVE WS-UIWA-REF-QTY-SC  TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-REF-QTY
ADD WS-UIWA-REF-QTY      TO WS-LTI-TOTAL-QTY-REF-OTH

MOVE WS-UIWA-REF-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST
ADD WS-UIWA-REF-COST     TO WS-LTI-TOTAL-AMT-REF-OTH


MOVE WS-UIWA-NR1-QTY-SC  TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO WS-UIWA-NR1-QTY
ADD WS-UIWA-NR1-QTY      TO WS-LTI-TOTAL-QTY-NR1-OTH

MOVE WS-UIWA-NR1-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST
ADD WS-UIWA-NR1-COST     TO WS-LTI-TOTAL-AMT-NR1-OTH

MOVE WS-UIWA-TAX-AMT-SC  TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-TAX-AMT
ADD WS-UIWA-TAX-AMT      TO WS-LTI-TOTAL-AMT-TAX-OTH

IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
PERFORM LTI-CHECK-TOTALS-OTH
END-IF.

CONTINUE.


LTI-CONVERT-FOR-US-SC.


MOVE WS-UIWA-NR2-QTY     TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-NR2-QTY-SC
ADD WS-UIWA-NR2-QTY-SC   TO WS-LTI-TOTAL-QTY-NR2-OTH

MOVE WS-UIWA-NR2-COST    TO WS-CANADIAN-DOLLARS
PERFORM LTI-RETURN-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST-SC
ADD WS-UIWA-NR2-COST-SC  TO WS-LTI-TOTAL-AMT-NR2-OTH


MOVE WS-UIWA-OTH-QTY     TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-OTH-QTY-SC
ADD WS-UIWA-OTH-QTY-SC   TO WS-LTI-TOTAL-QTY-OTH-OTH

MOVE WS-UIWA-OTH-COST    TO WS-CANADIAN-DOLLARS
PERFORM LTI-RETURN-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST-SC
ADD WS-UIWA-OTH-COST-SC  TO WS-LTI-TOTAL-AMT-OTH-OTH


MOVE WS-UIWA-REF-QTY     TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-REF-QTY-SC
ADD WS-UIWA-REF-QTY-SC   TO WS-LTI-TOTAL-QTY-REF-OTH

MOVE WS-UIWA-REF-COST    TO WS-CANADIAN-DOLLARS
PERFORM LTI-RETURN-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST-SC
ADD WS-UIWA-REF-COST-SC  TO WS-LTI-TOTAL-AMT-REF-OTH


MOVE WS-UIWA-NR1-QTY     TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-NR1-QTY-SC
ADD WS-UIWA-NR1-QTY-SC   TO WS-LTI-TOTAL-QTY-NR1-OTH

MOVE WS-UIWA-NR1-COST    TO WS-CANADIAN-DOLLARS

PERFORM LTI-RETURN-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST-SC
ADD WS-UIWA-NR1-COST-SC  TO WS-LTI-TOTAL-AMT-NR1-OTH

MOVE WS-UIWA-TAX-AMT     TO WS-CANADIAN-DOLLARS
PERFORM LTI-RETURN-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-TAX-AMT-SC
ADD WS-UIWA-TAX-AMT-SC   TO WS-LTI-TOTAL-AMT-TAX-OTH

IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
PERFORM LTI-CHECK-TOTALS-OTH
END-IF.

CONTINUE.


LTI-CONVERT-FOR-US-ACC.


MOVE WS-UIWA-NR2-QTY-SC  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-NR2-QTY
ADD WS-UIWA-NR2-QTY      TO WS-LTI-TOTAL-QTY-NR2-OTH

MOVE WS-UIWA-NR2-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST
ADD WS-UIWA-NR2-COST     TO WS-LTI-TOTAL-AMT-NR2-OTH


MOVE WS-UIWA-OTH-QTY-SC  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-OTH-QTY
ADD WS-UIWA-OTH-QTY      TO WS-LTI-TOTAL-QTY-OTH-OTH

MOVE WS-UIWA-OTH-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST
ADD WS-UIWA-OTH-COST     TO WS-LTI-TOTAL-AMT-OTH-OTH


MOVE WS-UIWA-REF-QTY-SC  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-REF-QTY
ADD WS-UIWA-REF-QTY      TO WS-LTI-TOTAL-QTY-REF-OTH

MOVE WS-UIWA-REF-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST
ADD WS-UIWA-REF-COST     TO WS-LTI-TOTAL-AMT-REF-OTH


MOVE WS-UIWA-NR1-QTY-SC  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO WS-UIWA-NR1-QTY
ADD WS-UIWA-NR1-QTY      TO WS-LTI-TOTAL-QTY-NR1-OTH

MOVE WS-UIWA-NR1-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST
ADD WS-UIWA-NR1-COST     TO WS-LTI-TOTAL-AMT-NR1-OTH

MOVE WS-UIWA-TAX-AMT-SC  TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-TAX-AMT
ADD WS-UIWA-TAX-AMT      TO WS-LTI-TOTAL-AMT-TAX-OTH

IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
PERFORM LTI-CHECK-TOTALS-OTH
END-IF.

CONTINUE.


LTI-RETURN-TO-US.

IF US-TO-CAN-RATE = ZERO
MOVE 1 TO US-TO-CAN-RATE
END-IF.
DIVIDE WS-CANADIAN-DOLLARS BY US-TO-CAN-RATE
GIVING WS-US-DOLLARS ROUNDED.


LTI-RETURN-TO-CAN.

IF CAN-TO-US-RATE = ZERO
MOVE 1 TO CAN-TO-US-RATE
END-IF.
DIVIDE WS-US-DOLLARS BY CAN-TO-US-RATE
GIVING WS-CANADIAN-DOLLARS ROUNDED.


LTI-CHECK-TOTALS-OTH.










IF WS-LTI-TOTAL-AMT-NR1-OTH = WS-LTI-HOLD-AMT-NR1-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-NR1-OTH > WS-LTI-HOLD-AMT-NR1-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-NR1-OTH - WS-LTI-HOLD-AMT-NR1-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-NR1-COST
ELSE
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-NR1-COST-SC
END-IF
ELSE
IF WS-LTI-TOTAL-AMT-NR1-OTH < WS-LTI-HOLD-AMT-NR1-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-NR1-OTH - WS-LTI-TOTAL-AMT-NR1-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR1-COST
ELSE
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR1-COST-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-AMT-NR2-OTH = WS-LTI-HOLD-AMT-NR2-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-NR2-OTH > WS-LTI-HOLD-AMT-NR2-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-NR2-OTH - WS-LTI-HOLD-AMT-NR2-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-NR2-COST
ELSE
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-NR2-COST-SC
END-IF
ELSE
IF WS-LTI-TOTAL-AMT-NR2-OTH < WS-LTI-HOLD-AMT-NR2-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-NR2-OTH - WS-LTI-TOTAL-AMT-NR2-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR2-COST
ELSE
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR2-COST-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-AMT-REF-OTH = WS-LTI-HOLD-AMT-REF-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-REF-OTH > WS-LTI-HOLD-AMT-REF-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-REF-OTH - WS-LTI-HOLD-AMT-REF-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-REF-COST
ELSE
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-REF-COST-SC
END-IF
ELSE
IF WS-LTI-TOTAL-AMT-REF-OTH < WS-LTI-HOLD-AMT-REF-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-REF-OTH - WS-LTI-TOTAL-AMT-REF-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-REF-COST
ELSE
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-REF-COST-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-AMT-OTH-OTH = WS-LTI-HOLD-AMT-OTH-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-OTH-OTH > WS-LTI-HOLD-AMT-OTH-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-OTH-OTH - WS-LTI-HOLD-AMT-OTH-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-OTH-COST
ELSE
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-OTH-COST-SC
END-IF
ELSE
IF WS-LTI-TOTAL-AMT-OTH-OTH < WS-LTI-HOLD-AMT-OTH-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-OTH-OTH - WS-LTI-TOTAL-AMT-OTH-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-OTH-COST
ELSE
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-OTH-COST-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-AMT-TAX-OTH = WS-LTI-HOLD-AMT-TAX-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-AMT-TAX-OTH > WS-LTI-HOLD-AMT-TAX-OTH
COMPUTE WS-LTI-AMT-TO-SUBTRACT =
WS-LTI-TOTAL-AMT-TAX-OTH - WS-LTI-HOLD-AMT-TAX-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-TAX-AMT
ELSE
SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
WS-UIWA-TAX-AMT-SC
END-IF
ELSE
IF WS-LTI-TOTAL-AMT-TAX-OTH < WS-LTI-HOLD-AMT-TAX-OTH
COMPUTE WS-LTI-AMT-TO-ADD =
WS-LTI-HOLD-AMT-TAX-OTH - WS-LTI-TOTAL-AMT-TAX-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-TAX-AMT
ELSE
ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-TAX-AMT-SC
END-IF
END-IF
END-IF
END-IF.


IF WS-LTI-TOTAL-QTY-NR1-OTH = WS-LTI-HOLD-QTY-NR1-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-NR1-OTH > WS-LTI-HOLD-QTY-NR1-OTH
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-NR1-OTH - WS-LTI-HOLD-QTY-NR1-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-NR1-QTY
ELSE
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-NR1-QTY-SC
END-IF
ELSE
IF WS-LTI-TOTAL-QTY-NR1-OTH < WS-LTI-HOLD-QTY-NR1-OTH
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-NR1-OTH - WS-LTI-TOTAL-QTY-NR1-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR1-QTY
ELSE
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR1-QTY-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-QTY-NR2-OTH = WS-LTI-HOLD-QTY-NR2-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-NR2-OTH > WS-LTI-HOLD-QTY-NR2-OTH
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-NR2-OTH - WS-LTI-HOLD-QTY-NR2-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-NR2-QTY
ELSE
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-NR2-QTY-SC
END-IF
ELSE
IF WS-LTI-TOTAL-QTY-NR2-OTH < WS-LTI-HOLD-QTY-NR2-OTH
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-NR2-OTH - WS-LTI-TOTAL-QTY-NR2-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR2-QTY
ELSE
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR2-QTY-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-QTY-REF-OTH = WS-LTI-HOLD-QTY-REF-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-REF-OTH > WS-LTI-HOLD-QTY-REF-OTH
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-REF-OTH - WS-LTI-HOLD-QTY-REF-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-REF-QTY
ELSE
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-REF-QTY-SC
END-IF
ELSE
IF WS-LTI-TOTAL-QTY-REF-OTH < WS-LTI-HOLD-QTY-REF-OTH
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-REF-OTH - WS-LTI-TOTAL-QTY-REF-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-REF-QTY
ELSE
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-REF-QTY-SC
END-IF
END-IF
END-IF
END-IF.

IF WS-LTI-TOTAL-QTY-OTH-OTH = WS-LTI-HOLD-QTY-OTH-OTH
CONTINUE
ELSE
IF WS-LTI-TOTAL-QTY-OTH-OTH > WS-LTI-HOLD-QTY-OTH-OTH
COMPUTE WS-LTI-QTY-TO-SUBTRACT =
WS-LTI-TOTAL-QTY-OTH-OTH - WS-LTI-HOLD-QTY-OTH-OTH
IF WS-LTI-SC-CURRENCY
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-OTH-QTY
ELSE
SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
WS-UIWA-OTH-QTY-SC
END-IF
ELSE
IF WS-LTI-TOTAL-QTY-OTH-OTH < WS-LTI-HOLD-QTY-OTH-OTH
COMPUTE WS-LTI-QTY-TO-ADD =
WS-LTI-HOLD-QTY-OTH-OTH - WS-LTI-TOTAL-QTY-OTH-OTH
IF WS-LTI-SC-CURRENCY
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-OTH-QTY
ELSE
ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-OTH-QTY-SC
END-IF
END-IF
END-IF
END-IF.


LTI-RESTORE-LARGE-TRANS-HOLD.



MOVE WS-LTIH-FMLOG        TO FUEL-MANAGEMENT-DAILY-LOG-RECD
MOVE WS-LTIH-CASH-AMT     TO WS-UIWA-CASH-AMT
MOVE WS-LTIH-TAX-AMT-SC   TO WS-UIWA-TAX-AMT-SC
IF WS-LTIH-TOTAL-TAX-SC > ZERO
MOVE WS-LTIH-TOTAL-TAX-SC TO WS-UIWA-TAX-AMT-SC
MOVE WS-UIWA-TAX-AMT-SC   TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MULTIPLY WS-US-DOLLARS BY +1
GIVING WS-UIWA-TAX-AMT-US ROUNDED
END-IF
MOVE WS-LTIH-BILLABLE     TO WS-BILLABLE
MOVE WS-LTIH-NON-BILLABLE TO WS-NON-BILLABLE
MOVE WS-LTIH-CURXMN2      TO WS2-CURXMN
MOVE WS-LTIH-CURXMN       TO WS-CURXMN
MOVE WS-LTIH-CONTROL-NR   TO WS-CONTROL-NR
MOVE WS-LTIH-DRAFT-AMT    TO ODR-DRAFT-AMT
IN ORDRFIL-DETAIL-RECD
MOVE WS-LTIH-FP-TRANS-AMT TO COM-FP-TRANS-AMT
CONTINUE.


20010-CHECK-FOR-EXIT.

IF (EIBAID = DFHCLEAR) OR
(EIBAID = DFHPA1  ) OR
(EIBAID = DFHPA2  ) OR
(EIBAID = DFHPA3  )
IF CHECK-ENTRY-IN-PROGRESS
MOVE CHECK-NR-BIGGER TO OUT-COMENT
MOVE CHECK-NR-BIGGER-N TO POS-ERROR-NUMBER
MOVE -1 TO FPCHKL
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM SETUP-SEND-MAIN-ENTRY-SCREEN
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
PERFORM CLEAR-AND-EXIT-TO-CICS
END-IF.


20020-RECEIVE-MAP.

EXEC CICS RECEIVE
MAP    ('FPMAPB')
MAPSET ('USISET')
FROM   (UNFORMATTED-AREA)
LENGTH (UNFORMATTED-LENG)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE SPACES TO UNFORMATTED-AREA.


20030-CHECK-FOR-DRAFT-ENTRY.

IF CHECK-ENTRY-IN-PROGRESS
IF FPESCI IS EQUAL TO '.NOI.'
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
MOVE -1 TO FPCMT1L
MOVE YOU-ARE-RELEASED TO OUT-COMENT
MOVE YOU-ARE-RELEASED-N TO POS-ERROR-NUMBER
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE COM-FP-I-DATA TO CHECK-ENTRY-DATA
PERFORM FP-1100.


20040-GET-CONVERSION-RATES.

MOVE '20040-GET-CONVERSION-RATES' TO CXUTS0ML-PARAGRAPH.



INITIALIZE CXXCO0CL-COMMAREA.
MOVE 'USD'         TO CA-CXXCO0CL-BASE-CUR-CD.
MOVE 'CAD'         TO CA-CXXCO0CL-CNV-TO-CUR-CD.
PERFORM 20042-LINK-CXXCO0CL.
IF EIBRESP = DFHRESP(NORMAL)
MOVE CA-XCCL-CURR-CNV-RT TO US-TO-CAN-RATE
INITIALIZE CXXCO0CL-COMMAREA
MOVE 'CAD'     TO CA-CXXCO0CL-BASE-CUR-CD
MOVE 'USD'     TO CA-CXXCO0CL-CNV-TO-CUR-CD
PERFORM 20042-LINK-CXXCO0CL
MOVE CA-XCCL-CURR-CNV-RT TO CAN-TO-US-RATE
END-IF.


20042-LINK-CXXCO0CL.

MOVE '20042-LINK-CXXCO0CL'       TO CXUTS0ML-PARAGRAPH.
MOVE SPACES        TO CA-CXXCO0CL-CUR-RT-EFF-DT.
EXEC CICS LINK
PROGRAM  ('CXXCO0CL')
COMMAREA (CXXCO0CL-COMMAREA)
LENGTH   (LENGTH OF CXXCO0CL-COMMAREA)
RESP     (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF CA-CXXCO0CL-RTN-CD = '9'
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.
IF CA-XCCL-CURR-CNV-RT NOT NUMERIC
MOVE 1            TO CA-XCCL-CURR-CNV-RT
END-IF.


20050-GET-SC-INFO.

MOVE '20050-GET-SC-INFO'         TO CXUTS0ML-PARAGRAPH.

MOVE COM-FP-SC-CODE TO  WS-UIWA-SC-CODE.
MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY.
MOVE SPACES         TO  SERVICE-CENTER-MASTER-RECORD.
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS


INITIALIZE COMDATA-ADDRESS-RECORD.
MOVE 'SC' TO CAR-CUSTOMER-TYPE.
MOVE WS-UIWA-SC-CODE TO CAR-CUSTOMER-CODE.
MOVE 'A' TO CAR-ADDRESS-TYPE.
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC.
MOVE CAR-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
MOVE CAR-TAX-ID          TO WS-HLD-CAR-TAX-ID.
IF COM-PNET-BRIDGE-FLAG-YES AND
COM-PNET-CHAIN-CODE > SPACES
MOVE 'CH' TO CAR-CUSTOMER-TYPE
MOVE COM-PNET-CHAIN-CODE TO CAR-CUSTOMER-CODE
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE CAR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-IF.


20060-GET-CARD-CUST-INFO.


MOVE COM-PREMIER-CARD          TO WS-PRM-CARD-NR
MOVE WS-UIWA-CARD-NR-16 (16:1) TO WS-PRM-CARD-CKD
PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999

IF CSR-VERIFY-UNIT = 'G'
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
PERFORM 52000-VALIDATE-CUST-UNIT
IF SQLCODE = +100
MOVE INVALID-UNIT-NR           TO OUT-COMENT
MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-IF.

MOVE 'C' TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST.
IF EIBRESP = DFHRESP(NOTFND)
IF (COM-UNIT-NR = ' XCASH' AND
THIS-BE-A-VRU-XTN)     OR
CSR-VERIFY-UNIT = 'N'
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N'                   TO WS-UNITMST-RECD-SW
MOVE '1'                   TO UNITMST-UBC-RECD-ID
MOVE COM-UNIT-POOL-CUST-ID TO UNITMST-UBC-CUST-ID
MOVE 'DEFAULT'             TO UNITMST-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO UNITMST-UBC-UNIT-NR
ELSE
MOVE INVALID-UNIT-NR           TO OUT-COMENT
MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-IF.

PERFORM 60500-CHECK-UNITMST-NUMERICS
PERFORM 60510-MOVE-UNITMST-VALUES.
PERFORM READ-CDNCUST.


20070-GET-CASH.

IF ADVAMTI  > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE ADVAMTI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-CASH-AMT
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO ADVAMTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-CASH-AMT > 9999.99
MOVE -1                    TO ADVAMTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20080-GET-PRODUCT.

IF PRD1CDI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE PRD1AMTI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-PR1-COST
WS-UIWA-PR1-COST-SC
MOVE PRD1CDI                  TO WS-UIWA-PR1-CODE
IF WS-CXUTS123-ERR-FOUND
MOVE -1                       TO PRD1AMTL
MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE 'Y' TO WS-EXIT-FLAG
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF PRD2CDI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE PRD2AMTI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-PR2-COST
WS-UIWA-PR2-COST-SC
MOVE PRD2CDI                  TO WS-UIWA-PR2-CODE
IF WS-CXUTS123-ERR-FOUND
MOVE -1                       TO PRD2AMTL
MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE 'Y' TO WS-EXIT-FLAG
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF PRD3CDI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE PRD3AMTI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-PR3-COST
WS-UIWA-PR3-COST-SC
MOVE PRD3CDI                  TO WS-UIWA-PR3-CODE
IF WS-CXUTS123-ERR-FOUND
MOVE -1                       TO PRD3AMTL
MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE 'Y' TO WS-EXIT-FLAG
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20081-CHECK-PRODUCTS.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
IF WS-AXIA-AUTH-1-PROD-CODE > SPACES
MOVE WS-AXIA-AUTH-1-PROD-CODE TO WS-UIWA-PR1-CODE
MOVE .01                      TO WS-UIWA-PR1-COST
WS-UIWA-PR1-COST-SC
END-IF
IF WS-AXIA-AUTH-2-PROD-CODE > SPACES
MOVE WS-AXIA-AUTH-2-PROD-CODE TO WS-UIWA-PR2-CODE
MOVE .01                      TO WS-UIWA-PR2-COST
WS-UIWA-PR2-COST-SC
END-IF
IF WS-AXIA-AUTH-3-PROD-CODE > SPACES
MOVE WS-AXIA-AUTH-3-PROD-CODE TO WS-UIWA-PR3-CODE
MOVE .01                      TO WS-UIWA-PR3-COST
WS-UIWA-PR3-COST-SC
END-IF
END-IF.

IF WS-UIWA-PR1-CODE    > SPACES OR
WS-UIWA-PR2-CODE    > SPACES OR
WS-UIWA-PR3-CODE    > SPACES OR
WS-UIWA-PR1-COST    > ZEROES OR
WS-UIWA-PR2-COST    > ZEROES OR
WS-UIWA-PR3-COST    > ZEROES OR
COM-PUR-OPTIONS-PROD = '1'
PERFORM PRODUCT-CODE-EDITS
END-IF


IF (COM-PUR-OPTIONS-PROD NOT = '1') AND
(WS-UIWA-PR1-CODE > SPACES OR
WS-UIWA-PR2-CODE > SPACES OR
WS-UIWA-PR3-CODE > SPACES)
MOVE -1 TO PRD1CDL
MOVE DRIVER-MAY-NOT-PURC-PROD-N TO POS-ERROR-NUMBER
MOVE PURCHASE-NOT-ALLOWED-NBR   TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
MOVE 'Y'                        TO VCWS-ERROR-IND
MOVE DRIVER-MAY-NOT-PURC-PROD   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


IF NOT WS-XTN-TYPE-LARGE-AMT
EVALUATE TRUE
WHEN WS-UIWA-PR1-COST > 9999.99
MOVE -1                    TO PRD1AMTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-PR2-COST > 9999.99
MOVE -1                    TO PRD2AMTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-PR3-COST > 9999.99
MOVE -1                    TO PRD3AMTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE
END-IF.


20090-SETUP-DRIVER-NAME.


IF CO-INPUTS-DRIVER-NAME
MOVE UNITMST-DRVR-NAME    TO FPNAMEI.
IF PRM-LAST-NAME  > SPACES AND
PRM-FIRST-NAME > SPACES AND
CO-INPUTS-DRIVER-NAME
MOVE 20 TO INDX
MOVE 15 TO INDX-1
MOVE 24 TO INDX-2
MOVE 'YYN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING INDX,   PRM-LAST-NAME,
INDX-1, PRM-FIRST-NAME,
INDX-2, UNITMST-DRVR-NAME,
WS-CXUTSJON-OPTIONS
MOVE UNITMST-DRVR-NAME TO FPNAMEI
END-IF.


20100-SETUP-TRIP-NUMBER.


IF CSR-TRIP-NUMBER-REQ = 'C'
MOVE 'E'                   TO WS-FL-TRIP-FLAG
IF PRM-DRIVER-TRIP-NR NOT > SPACES
MOVE 'T'                TO WS-FL-TRIP-FLAG.
IF TRIP-NR-ENTERED
MOVE UNITMST-TRIP-NR       TO WS-UIWA-TRIP-NR.
IF CSR-TRIP-NUMBER-REQ = 'C'
IF PRM-DRIVER-TRIP-NR > SPACES
MOVE PRM-DRIVER-TRIP-NR TO WS-UIWA-TRIP-NR.


20110-SETUP-INP-AREA.

MOVE COM-FP-PRCNTAGES TO INP-DISC.
MOVE FPNAMEI            TO WS-UIWA-15-BYTES.
MOVE '+'                TO WS-UIWA-USI-FLAG.
MOVE CUST-RGE-SMLNM     TO INP-CO-SMLNAME.
MOVE ZEROES             TO INP-AUTH-NR.
MOVE FPINVNRI           TO WS-UIWA-INVOICE-NR.
MOVE FPFSI              TO WS-UIWA-SERVICE-TYPE.


20120-GET-TRACTOR-FUEL.

IF FPGLNSI  > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE FPGLNSI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
MOVE WS-DEEDIT-QTY            TO WS-UIWA-NR2-QTY
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPGLNSL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-NR2-QTY  > 999.99
MOVE -1                    TO FPGLNSL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF FPTTLI  > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE FPTTLI                   TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-NR2-COST
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPTTLL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

IF FPCOSTI  > SPACES
MOVE 05                       TO WS-CXUTS123-BYTES
MOVE 03                       TO WS-CXUTS123-DECIMALS
MOVE FPCOSTI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
MOVE WS-DEEDIT-PPU            TO WS-UIWA-NR2-PPU
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPCOSTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF WS-UIWA-NR2-COST > 0
PERFORM 20121-CHECK-NR2-SUB-PROD
ELSE
MOVE SPACES                   TO WS-HOLD-NR2-CP-SUFFIX
END-IF.


20121-CHECK-NR2-SUB-PROD.

IF N2SPRDI > SPACES
MOVE N2SPRDI                  TO WS-HOLD-NR2-SUB-PROD-IN
ELSE
PERFORM 87100-GET-NR2-DEF-SUB-PROD
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN > SPACES
MOVE WS-HOLD-NR2-SUB-PROD-IN  TO WS-SUB-PROD-IN
MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
PERFORM 20122-VALIDATE-NR2-SUB-PROD
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR2-SUB-PROD
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN > SPACES
IF COM-COST-PLUS-FLAG = 'Y'
PERFORM 20125-CP-FOR-NR2-SUB-PROD
ELSE
MOVE WS-UIWA-NR2-SUB-PROD  TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD
END-IF
MOVE DSC-APPLY-FLG            TO WS-UIWA-NR2-SUB-PROD-DSC
END-IF.


20122-VALIDATE-NR2-SUB-PROD.

IF WS-UIWA-NR2-QTY  NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR2-QTY
END-IF.
IF WS-UIWA-NR2-COST NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR2-COST
END-IF.
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'D2'
PERFORM 20123-NR2-SUB-PROD-ERROR
END-IF.


20123-NR2-SUB-PROD-ERROR.

MOVE -1                          TO N2SPRDL
MOVE INVALID-NR2-SUB-PROD-MSG    TO OUT-COMENT
MOVE INVALID-NR2-SUB-PROD        TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20125-CP-FOR-NR2-SUB-PROD.

MOVE WS-UIWA-NR2-SUB-PROD TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD.
IF CST-PLUS-SUFFIX > SPACES
MOVE CST-PLUS-SUFFIX TO WS-HOLD-NR2-CP-SUFFIX
END-IF.


20130-GET-OTHER-FUEL.

IF FPGLNSBI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE FPGLNSBI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
MOVE WS-DEEDIT-QTY            TO WS-UIWA-OTH-QTY
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPGLNSBL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-OTH-QTY  > 999.99
MOVE -1                    TO FPGLNSBL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF FPTTLBI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE FPTTLBI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-OTH-COST
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPTTLBL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

IF FPCOSTBI > SPACES
MOVE 05                       TO WS-CXUTS123-BYTES
MOVE 03                       TO WS-CXUTS123-DECIMALS
MOVE FPCOSTBI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
MOVE WS-DEEDIT-PPU            TO WS-UIWA-OTH-PPU
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPCOSTBL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

PERFORM 20131-CHECK-OTH-SUB-PROD.


20131-CHECK-OTH-SUB-PROD.

IF FPSPRDI > SPACES
MOVE FPSPRDI                  TO WS-HOLD-OTH-SUB-PROD-IN
ELSE
PERFORM 87400-GET-OTH-DEF-SUB-PROD
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN > SPACES
MOVE WS-HOLD-OTH-SUB-PROD-IN  TO WS-SUB-PROD-IN
MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
PERFORM 20131-CHECK-OTHER-FUEL-TYPE
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-OTH-TYPE
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN > SPACES
MOVE WS-UIWA-OTH-SUB-PROD  TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD
MOVE DSC-APPLY-FLG         TO WS-UIWA-OTH-SUB-PROD-DSC
END-IF.


20131-CHECK-OTHER-FUEL-TYPE.

IF WS-UIWA-OTH-QTY  NOT NUMERIC
MOVE ZEROS TO WS-UIWA-OTH-QTY
END-IF.
IF WS-UIWA-OTH-COST NOT NUMERIC
MOVE ZEROS TO WS-UIWA-OTH-COST
END-IF.
IF WS-UIWA-OTH-QTY      > 0                OR
WS-UIWA-OTH-COST     > 0
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'OT'
MOVE -1                    TO FPSPRDL
MOVE INVALID-OTHER-FUEL-TYPE-MSG
TO OUT-COMENT
MOVE INVALID-OTHER-FUEL-TYPE
TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.


20140-GET-TRAILER-FUEL.

IF TRGLNI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE TRGLNI                   TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
MOVE WS-DEEDIT-QTY            TO WS-UIWA-REF-QTY
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO TRGLNL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-REF-QTY  > 999.99
MOVE -1                    TO TRGLNL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF TRTOTALI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE TRTOTALI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-REF-COST
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO TRTOTALL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

IF TRCOSTI > SPACES
MOVE 05                       TO WS-CXUTS123-BYTES
MOVE 03                       TO WS-CXUTS123-DECIMALS
MOVE TRCOSTI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
MOVE WS-DEEDIT-PPU            TO WS-UIWA-REF-PPU
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO TRCOSTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF WS-UIWA-REF-COST > 0
PERFORM 20141-CHECK-REF-SUB-PROD
ELSE
MOVE SPACES                   TO WS-HOLD-REF-CP-SUFFIX
END-IF.


20141-CHECK-REF-SUB-PROD.

IF TRSPRDI > SPACES
MOVE TRSPRDI               TO WS-HOLD-REF-SUB-PROD-IN
ELSE
PERFORM 87300-GET-REF-DEF-SUB-PROD
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN > SPACES
MOVE WS-HOLD-REF-SUB-PROD-IN  TO WS-SUB-PROD-IN
MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
PERFORM 20141-VALIDATE-REF-SUB-PROD
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-REF-SUB-PROD
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN > SPACES
IF COM-COST-PLUS-FLAG = 'Y'
PERFORM 20145-CP-FOR-REF-SUB-PROD
ELSE
MOVE WS-UIWA-REF-SUB-PROD  TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD
END-IF
MOVE DSC-APPLY-FLG            TO WS-UIWA-REF-SUB-PROD-DSC
END-IF.


20141-VALIDATE-REF-SUB-PROD.

PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'RF'
PERFORM 20142-REEFER-SUB-PROD-ERROR
END-IF.


20142-REEFER-SUB-PROD-ERROR.

MOVE -1                          TO TRSPRDL
MOVE INVALID-REEFER-SUB-PROD-MSG TO OUT-COMENT
MOVE INVALID-REEFER-SUB-PROD     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20145-CP-FOR-REF-SUB-PROD.

MOVE WS-UIWA-REF-SUB-PROD TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD.
IF CST-PLUS-SUFFIX > SPACES
MOVE CST-PLUS-SUFFIX TO WS-HOLD-REF-CP-SUFFIX
END-IF.


20150-GET-NR1-FUEL.

IF NR1GLNSI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE NR1GLNSI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
MOVE WS-DEEDIT-QTY            TO WS-UIWA-NR1-QTY
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO NR1GLNSL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-NR1-QTY + WS-UIWA-NR2-QTY > 999.99
MOVE -1                    TO NR1GLNSL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.

IF NR1TTLI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE NR1TTLI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-NR1-COST
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO NR1TTLL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

IF NR1COSTI > SPACES
MOVE 05                       TO WS-CXUTS123-BYTES
MOVE 03                       TO WS-CXUTS123-DECIMALS
MOVE NR1COSTI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
MOVE WS-DEEDIT-PPU            TO WS-UIWA-NR1-PPU
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO NR1COSTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF WS-UIWA-NR1-COST > 0
PERFORM 20151-CHECK-NR1-SUB-PROD
ELSE
MOVE SPACES                   TO WS-HOLD-NR1-CP-SUFFIX
END-IF.


20151-CHECK-NR1-SUB-PROD.

IF N1SPRDI > SPACES
MOVE N1SPRDI                  TO WS-HOLD-NR1-SUB-PROD-IN
ELSE
PERFORM 87200-GET-NR1-DEF-SUB-PROD
END-IF
IF WS-HOLD-NR1-SUB-PROD-IN > SPACES
MOVE WS-HOLD-NR1-SUB-PROD-IN  TO WS-SUB-PROD-IN
MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
PERFORM 20151-VALIDATE-NR1-SUB-PROD
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR1-SUB-PROD
END-IF.
IF WS-HOLD-NR1-SUB-PROD-IN > SPACES
IF COM-COST-PLUS-FLAG = 'Y'
PERFORM 20155-CP-FOR-NR1-SUB-PROD
ELSE
MOVE WS-UIWA-NR1-SUB-PROD  TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD
END-IF
MOVE DSC-APPLY-FLG            TO WS-UIWA-NR1-SUB-PROD-DSC
END-IF.


20151-VALIDATE-NR1-SUB-PROD.

PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'D1'
PERFORM 20152-NR1-SUB-PROD-ERROR
END-IF.


20152-NR1-SUB-PROD-ERROR.

MOVE -1                          TO N1SPRDL
MOVE INVALID-NR1-SUB-PROD-MSG    TO OUT-COMENT
MOVE INVALID-NR1-SUB-PROD        TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20155-CP-FOR-NR1-SUB-PROD.

MOVE WS-UIWA-NR1-SUB-PROD TO WS-SUB-PROD-OUT
PERFORM 89000-READ-CDN-SUB-PROD.
IF CST-PLUS-SUFFIX > SPACES
MOVE CST-PLUS-SUFFIX TO WS-HOLD-NR1-CP-SUFFIX
END-IF.


20156-CHK-CP-SUB-PROD.

MOVE 'Y'                     TO WS-CP-FOR-SUBPROD
MOVE COM-CP-COST-PLUS-VENDOR TO RP-KEY-TYPE
MOVE COM-CP-SUPPLIER-NR      TO RP-SUPPLIER-NUMBER
MOVE COM-RMF-RACK-CITY       TO RP-CITY-NUMBER
IF EIBTRNID = 'FMBP' OR 'FMMP'
PERFORM GCPI-COMPUTE-CALC-DAYS
END-IF.
IF RP-KEY-TYPE = 'C'
PERFORM GCPI-GET-FMRACK-DATA
ELSE
PERFORM GCPI-GET-SINGLE-FMRACK
END-IF
IF CP-ERROR-FLAG = ' '
PERFORM COMPUTE-COST-PLUS-PRICES THRU CCPP-EXIT
END-IF
IF CP-ERROR-FLAG = ' '
COMPUTE COM-NR2-COST-PLUS-PPG = WS-NR2-COST
COMPUTE COM-NR1-COST-PLUS-PPG = WS-NR1-COST
COMPUTE COM-REF-COST-PLUS-PPG = WS-REF-COST
IF CP-ERROR-FLAG > ' ' AND
ERROR-FLAG = ' '
MOVE CP-ERROR-FLAG TO ERROR-FLAG
END-IF
END-IF.


20160-GET-OIL.

IF OILQTSI > SPACES
MOVE 07                       TO WS-CXUTS123-BYTES
MOVE 00                       TO WS-CXUTS123-DECIMALS
MOVE OILQTSI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTY-NO-DECX
MOVE WS-DEEDIT-QTY-NO-DEC     TO WS-UIWA-OIL-QTY
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO OILQTSL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-OIL-QTY  > 99
MOVE -1                    TO OILQTSL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MOVE WS-UIWA-OIL-QTY TO OILQTSO.

IF OILCSTI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE OILCSTI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-OIL-COST
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO OILCSTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-OIL-COST > 999.99
MOVE -1                    TO OILCSTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20170-GET-TAX.

IF CTAXI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE CTAXI                    TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-TAX-AMT
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO CTAXL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.


20180-GET-EXPECTED-AMT.

IF FPXPAMTI > SPACES
MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE FPXPAMTI                 TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-UIWA-INVOICE-AMT
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPXPAMTL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF NOT WS-XTN-TYPE-LARGE-AMT AND
WS-UIWA-INVOICE-AMT > 99999.99
MOVE -1                    TO FPXPAMTL
MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

EVALUATE TRUE
WHEN COM-MANUAL-IOL-XTN-YES
CONTINUE
WHEN WS-UIWA-INVOICE-AMT = ZEROES
MOVE ZERO-OR-NEG               TO OUT-COMENT
MOVE ZERO-OR-NEG-N             TO POS-ERROR-NUMBER
MOVE -1                        TO FPXPAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
WHEN WS-UIWA-INVOICE-AMT NOT = (WS-UIWA-NR2-COST +
WS-UIWA-OTH-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-NR1-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT    +
WS-UIWA-CASH-AMT)
MOVE -1                        TO FPXPAMTL
MOVE INVOICE-TOTAL-ERROR       TO OUT-COMENT
MOVE INVOICE-TOTAL-ERROR-N     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20190-GET-TRAILER-INFO.


IF TRLRHBI > SPACES
MOVE 08                       TO WS-CXUTS123-BYTES
MOVE 01                       TO WS-CXUTS123-DECIMALS
MOVE TRLRHBI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
MOVE WS-DEEDIT-HUB            TO WS-UIWA-TRAILER-HUB
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO TRLRHBL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


IF TRLRHRI > SPACES
MOVE 08                       TO WS-CXUTS123-BYTES
MOVE 01                       TO WS-CXUTS123-DECIMALS
MOVE TRLRHRI                  TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
MOVE WS-DEEDIT-HUB            TO WS-UIWA-TRAILER-HRS
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO TRLRHRL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


IF CDN-TRAILER-NR-FLAG = 'E' AND
PRM-TRAILER-NR > SPACES
MOVE PRM-TRAILER-NR TO TRLRNRI, WS-UIWA-TRAILER-NR.


20200-GET-HUB-INFO.

MOVE ZEROES                      TO WS-UIWA-HUB.
IF FPHUBI > SPACES
MOVE 08                       TO WS-CXUTS123-BYTES
MOVE 01                       TO WS-CXUTS123-DECIMALS
MOVE FPHUBI                   TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
MOVE WS-DEEDIT-HUB            TO WS-UIWA-HUB
IF WS-CXUTS123-ERR-FOUND
MOVE -1                    TO FPHUBL
MOVE INVALID-NUM-VALUE     TO OUT-COMENT
MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE WS-UIWA-HUB              TO FPHUBO
END-IF.

PERFORM 40000-CHECK-FOR-TRI-STATE.
IF WS-TRI-STATE-ACCT
IF WS-UIWA-HUB NOT > ZEROES
MOVE UNIT-NR-REQ   TO ERROR-TYPE
MOVE UNIT-NR-REQ-N TO POS-ERROR-NUMBER
MOVE '*'           TO ERROR-FLAG
MOVE -1            TO FPHUBL
MOVE ERROR-TYPE TO OUT-COMENT-1
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20210-CHECK-FOR-MESSAGE.

IF THERE-IS-A-MESSAGE-PENDING AND
MSGSTSI NOT = 'Y'
MOVE INVALID-RESP-MSG-QUERY TO OUT-COMENT
MOVE INVALID-RESP-MSG-QUERY-N TO POS-ERROR-NUMBER
MOVE -1 TO MSGSTSL
MOVE 'N'                    TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20215-SETUP-USER-WORK-AREA.


IF PONRI < SPACES
MOVE SPACES TO PONRI.
IF ADVTRIPI < SPACES
MOVE SPACES TO ADVTRIPI.
IF TRLRNRI  < SPACES
MOVE SPACES TO TRLRNRI.

MOVE PONRI     TO WS-UIWA-PO-NR
MOVE ADVTRIPI  TO WS-UIWA-TRIP-NR
MOVE TRLRNRI   TO WS-UIWA-TRAILER-NR.
MOVE FPCHKI    TO WS-UIWA-CHECK-NRX.


MOVE ALL '0'                    TO WS-UIWA-SC-SECURITY-CARD
IF SECUCDI > SPACES    AND
SECUCDI NUMERIC
MOVE SECUCDI                 TO WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD             TO WS-UIWA-SC-SECURITY-CARD
END-IF.


20300-CHECK-CASH-AVAIL-BY-GAL.

IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND WS-PROPRIETARY-CARD = 'Y'
AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
PERFORM GET-FLEET-CASH-LIMIT
END-IF
IF CSR-CASH-PER-GALLON-FLAG = 'Y'    AND
PRM-CASH-PER-GALLON-LIMIT < 9.99  AND
(CSR-CASH-IS-ON-THE-CARD OR
WS-FLEET-LIMIT-CSH-AVAIL > SPACE)
PERFORM ADJUST-CASH-AVAIL-BY-GALLONS.


20305-CHECK-FOR-MANUAL-IOL.

IF COM-MANUAL-IOL-XTN-YES
IF WS-UIWA-NR2-QTY = ZEROES
MOVE ZERO-OR-NEG   TO ERROR-TYPE
MOVE ZERO-OR-NEG-N TO POS-ERROR-NUMBER
MOVE -1            TO FPGLNSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE SCM-IOL-RCP       TO WS-UIWA-IOL-RCP
PERFORM SPR-SETUP-IOL-AUTH
COMPUTE WS-UIWA-NR2-PPU ROUNDED = WS-UIWA-IOL-RCP
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-NR2-COST +
WS-UIWA-TAX-AMT.


20306-CHECK-CANADIAN-TAX.

IF SCM-IS-IN-CANADA       AND
SCM-AUTO-CALC-TAX-YES  AND
SCPM-AUTO-CALC-TAX-YES
PERFORM 20306-BACKOUT-CANADIAN-TAXES
END-IF.


20306-BACKOUT-CANADIAN-TAXES.

IF WS-UIWA-TAX-AMT > ZEROES
MOVE TAX-NOT-ALLOWED   TO OUT-COMENT
MOVE TAX-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE -1                TO CTAXL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.

MOVE 'Y' TO WS-TAX-COMPUTED-FLAG.

MOVE 'B'                       TO CTLA-FUNCTION-CODE.
MOVE SCM-LOCATION-STATE-2      TO CTLA-PROVINCE
MOVE WS-BUSINESS-DATE-CYYMMDD  TO CTLA-MQ-TRAN-DATE
MOVE EIBTIME                   TO CTLA-MQ-TRAN-TIME
MOVE FMDL-RK-CONTROL-NUMBER    TO CTLA-MQ-CONTROL-NBR
MOVE ZEROS                     TO CTLA-CAN-CONVERSION-RATE
MOVE SPACE                     TO CTLA-CAN-CONVERSION-SW
MOVE WS-USER-INPUT-WORK-AREA   TO CTLA-USER-INPUT-WORK-AREA

PERFORM 20306-LINK-TO-TSFMO0CT

MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA.


20306-COMPUTE-TAX-FOR-FUEL.





















COMPUTE WS-TAX-COST-HOLD = WS-TAX-COST.
MOVE ZEROES TO WS-TAX-PST-RATE
WS-TAX-GST-RATE
PERFORM 20306-GET-SCSTATE.
EVALUATE TRUE
WHEN SCSR-FUEL-INC-SW = 'Y' AND
SCSR-FUEL-PST-RATE > ZEROS
COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-PST-RATE
COMPUTE WS-TAX-PPL      ROUNDED =
WS-TAX-PPL      / WS-TAX-CALC-AMT
COMPUTE WS-TAX-COST     ROUNDED =
WS-TAX-COST     / WS-TAX-CALC-AMT
COMPUTE WS-TAX-PST-RATE ROUNDED =
WS-TAX-COST-HOLD - WS-TAX-COST

COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-GST-RATE
COMPUTE WS-TAX-PPL      ROUNDED =
WS-TAX-PPL      / WS-TAX-CALC-AMT
COMPUTE WS-TAX-COST     ROUNDED =
WS-TAX-COST     / WS-TAX-CALC-AMT
COMPUTE WS-TAX-GST-RATE ROUNDED =
WS-TAX-COST-HOLD - WS-TAX-COST
WHEN SCSR-FUEL-PST-RATE > ZEROS
COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-PST-RATE
+ SCSR-FUEL-GST-RATE
COMPUTE WS-TAX-PPL      ROUNDED =
WS-TAX-PPL      / WS-TAX-CALC-AMT
COMPUTE WS-TAX-COST     ROUNDED =
WS-TAX-COST     / WS-TAX-CALC-AMT

COMPUTE WS-TAX-GST-RATE ROUNDED =
WS-TAX-COST      * SCSR-FUEL-GST-RATE
COMPUTE WS-TAX-PST-RATE  ROUNDED =
WS-TAX-COST      * SCSR-FUEL-PST-RATE
WHEN OTHER
COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-GST-RATE
COMPUTE WS-TAX-PPL      ROUNDED =
WS-TAX-PPL      / WS-TAX-CALC-AMT
COMPUTE WS-TAX-COST     ROUNDED =
WS-TAX-COST     / WS-TAX-CALC-AMT
COMPUTE WS-TAX-GST-RATE ROUNDED =
WS-TAX-COST-HOLD - WS-TAX-COST
END-EVALUATE.


COMPUTE WS-TAX-AMOUNT = WS-TAX-COST-HOLD -
WS-TAX-COST.


20306-GET-SCSTATE.

MOVE '20306-GET-SCSTATE'         TO CXUTS0ML-PARAGRAPH.

IF WS-READ-SCSTATE-SW NOT = 'Y'
MOVE SCM-LOCATION-STATE TO SCSR-STATE
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-STATE-RECORD)
RIDFLD  (SCSR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCSR-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
MOVE 'Y' TO  WS-READ-SCSTATE-SW
PERFORM 60300-CHECK-SCSTATE-NUMERICS
END-IF.


20306-CALC-CANADIAN-TAX.

IF SCM-IS-IN-CANADA


IF SCM-NATS-FLAG-YES
NEXT SENTENCE
ELSE
PERFORM 20306-CALC-TAX-AFTER-DISCOUNT
END-IF
END-IF.


20306-CALC-TAX-AFTER-DISCOUNT.


MOVE WS-USER-INPUT-WORK-AREA        TO WS-ORIG-UIWA-AREA
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-ORIG-FMLOG-AREA

MOVE WS-BILLABLE              TO WS-HOLD-BILLABLE
MOVE WS-NON-BILLABLE          TO WS-HOLD-NON-BILLABLE
MOVE WS-UIWA-NR2-COST-SC      TO WS-HOLD-UIWA-NR2-COST-SC
MOVE WS-UIWA-NR2-PPU-SC       TO WS-HOLD-UIWA-NR2-PPU-SC
MOVE WS-UIWA-NR2-SUB-PROD     TO WS-HOLD-UIWA-NR2-SUB-PROD
MOVE WS-UIWA-NR2-QTY          TO WS-HOLD-UIWA-NR2-QTY
MOVE WS-UIWA-NR2-QTY-SC       TO WS-HOLD-UIWA-NR2-QTY-SC
MOVE WS-UIWA-NR2-QTY-US       TO WS-HOLD-UIWA-NR2-QTY-US
MOVE WS-UIWA-NR1-COST-SC      TO WS-HOLD-UIWA-NR1-COST-SC
MOVE WS-UIWA-NR1-PPU-SC       TO WS-HOLD-UIWA-NR1-PPU-SC
MOVE WS-UIWA-NR1-SUB-PROD     TO WS-HOLD-UIWA-NR1-SUB-PROD
MOVE WS-UIWA-NR1-QTY          TO WS-HOLD-UIWA-NR1-QTY
MOVE WS-UIWA-NR1-QTY-SC       TO WS-HOLD-UIWA-NR1-QTY-SC
MOVE WS-UIWA-NR1-QTY-US       TO WS-HOLD-UIWA-NR1-QTY-US
MOVE WS-UIWA-REF-COST-SC      TO WS-HOLD-UIWA-REF-COST-SC
MOVE WS-UIWA-REF-PPU-SC       TO WS-HOLD-UIWA-REF-PPU-SC
MOVE WS-UIWA-REF-SUB-PROD     TO WS-HOLD-UIWA-REF-SUB-PROD
MOVE WS-UIWA-REF-QTY          TO WS-HOLD-UIWA-REF-QTY
MOVE WS-UIWA-REF-QTY-SC       TO WS-HOLD-UIWA-REF-QTY-SC
MOVE WS-UIWA-REF-QTY-US       TO WS-HOLD-UIWA-REF-QTY-US
MOVE WS-UIWA-OTH-COST-SC      TO WS-HOLD-UIWA-OTH-COST-SC
MOVE WS-UIWA-OTH-PPU-SC       TO WS-HOLD-UIWA-OTH-PPU-SC
MOVE WS-UIWA-OTH-SUB-PROD     TO WS-HOLD-UIWA-OTH-SUB-PROD
MOVE WS-UIWA-OTH-QTY          TO WS-HOLD-UIWA-OTH-QTY
MOVE WS-UIWA-OTH-QTY-SC       TO WS-HOLD-UIWA-OTH-QTY-SC
MOVE WS-UIWA-OTH-QTY-US       TO WS-HOLD-UIWA-OTH-QTY-US
MOVE WS-UIWA-OIL-COST-SC      TO WS-HOLD-UIWA-OIL-COST-SC
MOVE WS-UIWA-OIL-QTY          TO WS-HOLD-UIWA-OIL-QTY
MOVE WS-UIWA-PR1-COST         TO WS-HOLD-UIWA-PR1-COST
MOVE WS-UIWA-PR1-COST-SC      TO WS-HOLD-UIWA-PR1-COST-SC
MOVE WS-UIWA-PR1-COST-US      TO WS-HOLD-UIWA-PR1-COST-US
MOVE WS-UIWA-PR2-COST         TO WS-HOLD-UIWA-PR2-COST
MOVE WS-UIWA-PR2-COST-SC      TO WS-HOLD-UIWA-PR2-COST-SC
MOVE WS-UIWA-PR2-COST-US      TO WS-HOLD-UIWA-PR2-COST-US
MOVE WS-UIWA-PR3-COST         TO WS-HOLD-UIWA-PR3-COST
MOVE WS-UIWA-PR3-COST-SC      TO WS-HOLD-UIWA-PR3-COST-SC
MOVE WS-UIWA-PR3-COST-US      TO WS-HOLD-UIWA-PR3-COST-US
MOVE WS-UIWA-TAX-AMT-SC       TO WS-HOLD-UIWA-TAX-AMT-SC
WS-ORIG-UIWA-TAX-AMT-SC
MOVE ZEROS                    TO WS-NR2-SELECT-DISCOUNT
WS-NR1-SELECT-DISCOUNT
WS-REF-SELECT-DISCOUNT
WS-OTH-SELECT-DISCOUNT
WS-OIL-SELECT-DISCOUNT
WS-PR1-SELECT-DISCOUNT
WS-PR2-SELECT-DISCOUNT
WS-PR3-SELECT-DISCOUNT
WS-TOT-SELECT-DISCOUNT

IF WS-HOLD-UIWA-NR2-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-NR2-COST-SC  TO WS-UIWA-NR2-COST-SC
MOVE WS-HOLD-UIWA-NR2-PPU-SC   TO WS-UIWA-NR2-PPU-SC
MOVE WS-HOLD-UIWA-NR2-SUB-PROD TO WS-UIWA-NR2-SUB-PROD
MOVE WS-HOLD-UIWA-NR2-QTY      TO WS-UIWA-NR2-QTY
MOVE WS-HOLD-UIWA-NR2-QTY-SC   TO WS-UIWA-NR2-QTY-SC
MOVE WS-HOLD-UIWA-NR2-QTY-US   TO WS-UIWA-NR2-QTY-US
IF COM-DIRECT-BILLING-FUEL = '1'
MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-NON-BILLABLE
ELSE
MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-BILLABLE
END-IF
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-NR2-COST-SC = WS-UIWA-NR2-COST-SC
- FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-NR2-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-NR1-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-NR1-COST-SC  TO WS-UIWA-NR1-COST-SC
MOVE WS-HOLD-UIWA-NR1-PPU-SC   TO WS-UIWA-NR1-PPU-SC
MOVE WS-HOLD-UIWA-NR1-SUB-PROD TO WS-UIWA-NR1-SUB-PROD
MOVE WS-HOLD-UIWA-NR1-QTY      TO WS-UIWA-NR1-QTY
MOVE WS-HOLD-UIWA-NR1-QTY-SC   TO WS-UIWA-NR1-QTY-SC
MOVE WS-HOLD-UIWA-NR1-QTY-US   TO WS-UIWA-NR1-QTY-US
IF COM-DIRECT-BILLING-FUEL = '1'
MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-NON-BILLABLE
ELSE
MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-BILLABLE
END-IF
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-NR1-COST-SC = WS-UIWA-NR1-COST-SC
- FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-NR1-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-REF-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-REF-COST-SC  TO WS-UIWA-REF-COST-SC
MOVE WS-HOLD-UIWA-REF-PPU-SC   TO WS-UIWA-REF-PPU-SC
MOVE WS-HOLD-UIWA-REF-SUB-PROD TO WS-UIWA-REF-SUB-PROD
MOVE WS-HOLD-UIWA-REF-QTY      TO WS-UIWA-REF-QTY
MOVE WS-HOLD-UIWA-REF-QTY-SC   TO WS-UIWA-REF-QTY-SC
MOVE WS-HOLD-UIWA-REF-QTY-US   TO WS-UIWA-REF-QTY-US
IF COM-DIRECT-BILLING-FUEL = '1'
MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-NON-BILLABLE
ELSE
MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-BILLABLE
END-IF
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-REF-COST-SC = WS-UIWA-REF-COST-SC
- FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-REF-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-OTH-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-OTH-COST-SC  TO WS-UIWA-OTH-COST-SC
MOVE WS-HOLD-UIWA-OTH-PPU-SC   TO WS-UIWA-OTH-PPU-SC
MOVE WS-HOLD-UIWA-OTH-SUB-PROD TO WS-UIWA-OTH-SUB-PROD
MOVE WS-HOLD-UIWA-OTH-QTY      TO WS-UIWA-OTH-QTY
MOVE WS-HOLD-UIWA-OTH-QTY-SC   TO WS-UIWA-OTH-QTY-SC
MOVE WS-HOLD-UIWA-OTH-QTY-US   TO WS-UIWA-OTH-QTY-US
IF COM-DIRECT-BILLING-FUEL = '1'
MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-NON-BILLABLE
ELSE
MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-BILLABLE
END-IF
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-OTH-COST-SC = WS-UIWA-OTH-COST-SC
- FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-OTH-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-OIL-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-OIL-COST-SC  TO WS-UIWA-OIL-COST-SC
MOVE WS-HOLD-UIWA-OIL-QTY      TO WS-UIWA-OIL-QTY
IF COM-DIRECT-BILLING-OIL = '1'
MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-NON-BILLABLE
ELSE
MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-BILLABLE
END-IF
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-OIL-COST-SC = WS-UIWA-OIL-COST-SC
-  FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-OIL-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-PR1-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-PR1-COST-SC  TO WS-UIWA-PR1-COST-SC
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-PR1-COST-SC = WS-UIWA-PR1-COST-SC
-  FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-PR1-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-PR2-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-PR2-COST-SC  TO WS-UIWA-PR2-COST-SC
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-PR2-COST-SC = WS-UIWA-PR2-COST-SC
-  FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-PR2-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-PR3-COST-SC > ZERO
PERFORM 20306-CLEAR-UIWA-FIELDS
MOVE WS-HOLD-UIWA-PR3-COST-SC  TO WS-UIWA-PR3-COST-SC
PERFORM 20306-PRODUCT-DISCOUNT
COMPUTE WS-HOLD-UIWA-PR3-COST-SC = WS-UIWA-PR3-COST-SC
-  FMDL-SC-RD-SC-SELECT-DISCOUNT
IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
TO WS-PR3-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
END-IF
END-IF

IF WS-HOLD-UIWA-NR1-COST-SC > ZERO
MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST-SC
END-IF
IF WS-HOLD-UIWA-NR2-COST-SC > ZERO
MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST-SC
END-IF
IF WS-HOLD-UIWA-REF-COST-SC > ZERO
MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-UIWA-REF-COST-SC
END-IF
IF WS-HOLD-UIWA-OTH-COST-SC > ZERO
MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST-SC
END-IF
IF WS-HOLD-UIWA-OIL-COST-SC > ZERO
MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-UIWA-OIL-COST-SC
END-IF
IF WS-HOLD-UIWA-PR1-COST-SC > ZERO
MOVE WS-HOLD-UIWA-PR1-COST-SC TO WS-UIWA-PR1-COST-SC
END-IF
IF WS-HOLD-UIWA-PR2-COST-SC > ZERO
MOVE WS-HOLD-UIWA-PR2-COST-SC TO WS-UIWA-PR2-COST-SC
END-IF
IF WS-HOLD-UIWA-PR3-COST-SC > ZERO
MOVE WS-HOLD-UIWA-PR3-COST-SC TO WS-UIWA-PR3-COST-SC
END-IF

MOVE WS-HOLD-BILLABLE          TO WS-BILLABLE
MOVE WS-HOLD-NON-BILLABLE      TO WS-NON-BILLABLE

MOVE 'C'                       TO CTLA-FUNCTION-CODE.
MOVE SCM-LOCATION-STATE-2      TO CTLA-PROVINCE

IF FMDL-RK-TRANSACTION-DATE NUMERIC
AND FMDL-RK-TRANSACTION-DATE > ZEROS
MOVE FMDL-RK-TRANSACTION-DATE  TO CTLA-MQ-TRAN-DATE
ELSE
MOVE WS-BUSINESS-DATE-CYYMMDD  TO CTLA-MQ-TRAN-DATE
END-IF

IF FMDL-TR-TRANSACTION-TIME NUMERIC
AND FMDL-TR-TRANSACTION-TIME > ZEROS
MOVE FMDL-TR-TRANSACTION-TIME  TO CTLA-MQ-TRAN-TIME
ELSE
MOVE EIBTIME                   TO CTLA-MQ-TRAN-TIME
END-IF

MOVE FMDL-RK-CONTROL-NUMBER    TO CTLA-MQ-CONTROL-NBR
MOVE WS-USER-INPUT-WORK-AREA   TO CTLA-USER-INPUT-WORK-AREA

MOVE ZEROES            TO CTLA-CAN-CONVERSION-RATE
IF COM-US-COMP-CN-SC
MOVE CAN-TO-US-RATE TO CTLA-CAN-CONVERSION-RATE
END-IF.


IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
(COM-US-COMP-CN-SC)
MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
ELSE
MOVE SPACE TO CTLA-CAN-CONVERSION-SW
END-IF

PERFORM 20306-LINK-TO-TSFMO0CT.


MOVE WS-ORIG-FMLOG-AREA   TO FUEL-MANAGEMENT-DAILY-LOG-RECD.



MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA


MOVE WS-UIWA-TAX-AMT      TO WS-HOLD-UIWA-TAX-AMT-SC


MOVE WS-ORIG-UIWA-AREA    TO WS-USER-INPUT-WORK-AREA.


MOVE WS-ORIG-UIWA-TAX-AMT-SC  TO WS-UIWA-TAX-AMT-ORIG


MOVE WS-HOLD-UIWA-TAX-AMT-SC TO WS-UIWA-TAX-AMT-SC
FMDL-CN-TAX-AMT-CN
FMDL-SC-TAX-AMT
WS-UIWA-TAX-AMT
WS-UIWA-TAX-AMT-US
FMDL-CN-TAX-AMT-US
FMDL-BC-TAX-AMT.


IF COM-ACCOUNT-CURR-TYPE NOT = 'M'
IF COM-US-COMP-CN-SC
MOVE WS-UIWA-TAX-AMT-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MULTIPLY WS-US-DOLLARS BY +1
GIVING WS-UIWA-TAX-AMT ROUNDED,
WS-UIWA-TAX-AMT-US ROUNDED,
FMDL-CN-TAX-AMT-US ROUNDED,
FMDL-BC-TAX-AMT ROUNDED
END-IF
END-IF.


20306-LINK-TO-TSFMO0CT.

MOVE '20306-LINK-TO-TSFMO0CT'    TO CXUTS0ML-PARAGRAPH.
EXEC CICS LINK
PROGRAM  ('TSFMO0CT')
COMMAREA (CANADIAN-TAX-LINK-AREA)
LENGTH   (LENGTH OF CANADIAN-TAX-LINK-AREA)
RESP     (EIBRESP)
END-EXEC

PERFORM CHECK-FOR-NORMAL-EIBRESP.


20306-CLEAR-UIWA-FIELDS.


MOVE ZEROS                  TO FMDL-SC-RD-SC-SELECT-DISCOUNT
WS-UIWA-NR2-PPU-SC
WS-UIWA-NR1-PPU-SC
WS-UIWA-REF-PPU-SC
WS-UIWA-NR2-COST-SC
WS-UIWA-NR1-COST-SC
WS-UIWA-REF-COST-SC
WS-UIWA-OTH-COST-SC
WS-UIWA-OIL-COST-SC
WS-UIWA-PR1-COST-SC
WS-UIWA-PR2-COST-SC
WS-UIWA-PR3-COST-SC
WS-UIWA-NR2-QTY
WS-UIWA-NR1-QTY
WS-UIWA-REF-QTY
WS-UIWA-OTH-QTY
WS-UIWA-OIL-QTY
WS-UIWA-NR2-QTY-SC
WS-UIWA-NR1-QTY-SC
WS-UIWA-REF-QTY-SC
WS-UIWA-OTH-QTY-SC
WS-UIWA-NR2-QTY-US
WS-UIWA-NR1-QTY-US
WS-UIWA-REF-QTY-US
WS-UIWA-OTH-QTY-US
WS-BILLABLE
WS-NON-BILLABLE.


20306-PRODUCT-DISCOUNT.

MOVE 'B' TO FMCD-REQ-TYPE
PERFORM BUILD-FMCD-COMMAREA
PERFORM LINK-TO-TSFMO0CD.


MOVE FMCD-SC-MASTER-RECORD
TO SERVICE-CENTER-MASTER-RECORD.

IF SCM-SELF-SERV-CASH-PRICE NOT NUMERIC
MOVE ZERO TO SCM-SELF-SERV-CASH-PRICE
END-IF.

MOVE FMCD-FMLOG-RECORD
TO FUEL-MANAGEMENT-DAILY-LOG-RECD.

IF FMDL-SC-RD-SC-SELECT-DISCOUNT NOT NUMERIC
MOVE ZERO TO FMDL-SC-SC-SELECT-DISCOUNT
END-IF.



20307-CHECK-RMF.


COMPUTE WS-TOTAL-GALLONS = WS-UIWA-NR2-QTY +
WS-UIWA-OTH-QTY +
WS-UIWA-REF-QTY +
WS-UIWA-NR1-QTY.
IF WS-TOTAL-GALLONS = ZERO
MOVE 'N' TO COM-RMF-FLAG.


20310-CHECK-COST-PLUS-USE.


MOVE WS-UIWA-NR2-PPU      TO WS-RETAIL-PPG-NR2.
MOVE WS-UIWA-NR1-PPU      TO WS-RETAIL-PPG-NR1.
MOVE WS-UIWA-REF-PPU      TO WS-RETAIL-PPG-TRAILER.


IF COM-COST-PLUS-TYPE = 'U'
PERFORM 20311-CHECK-COST-PLUS-USE-TR
PERFORM 20312-CHECK-COST-PLUS-USE-RF
PERFORM 20313-CHECK-COST-PLUS-USE-N1
END-IF.


20311-CHECK-COST-PLUS-USE-TR.

IF WS-UIWA-NR2-PPU > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
WS-UIWA-NR2-PPU < COM-NR2-COST-PLUS-PPG) OR
(THIS-BE-TERMINAL-FUEL)                   OR
(COM-RMF-FLAG = 'Y'   )
MOVE 'Y' TO COM-COST-PLUS-TYPEU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
WS-UIWA-NR2-COST
COMPUTE WS-UIWA-NR2-PPU  ROUNDED = COM-NR2-COST-PLUS-PPG
COMPUTE WS-UIWA-NR2-COST ROUNDED = WS-UIWA-NR2-QTY *
WS-UIWA-NR2-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-NR2-COST.


20312-CHECK-COST-PLUS-USE-RF.

IF WS-UIWA-REF-PPU > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
WS-UIWA-REF-PPU < COM-REF-COST-PLUS-PPG) OR
(THIS-BE-TERMINAL-FUEL)                   OR
(COM-RMF-FLAG = 'Y'   )
MOVE 'Y' TO COM-COST-PLUS-TYPEU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
WS-UIWA-REF-COST
COMPUTE WS-UIWA-REF-PPU  ROUNDED = COM-REF-COST-PLUS-PPG
COMPUTE WS-UIWA-REF-COST ROUNDED = WS-UIWA-REF-QTY *
WS-UIWA-REF-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-REF-COST.


20313-CHECK-COST-PLUS-USE-N1.

IF WS-UIWA-NR1-PPU > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
WS-UIWA-NR1-PPU < COM-NR1-COST-PLUS-PPG) OR
(THIS-BE-TERMINAL-FUEL)                   OR
(COM-RMF-FLAG = 'Y'   )
MOVE 'Y' TO COM-COST-PLUS-TYPEU
COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT -
WS-UIWA-NR1-COST
COMPUTE WS-UIWA-NR1-PPU  ROUNDED = COM-NR1-COST-PLUS-PPG
COMPUTE WS-UIWA-NR1-COST ROUNDED = WS-UIWA-NR1-QTY *
WS-UIWA-NR1-PPU
COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT +
WS-UIWA-NR1-COST.


20315-CHECK-PAC-PRIDE.

MOVE 'N' TO COM-PAC-PRIDE-FLAG
IF SCM-PAC-PRIDE-FLAG = 'Y'
MOVE 'Y' TO COM-PAC-PRIDE-FLAG
PERFORM 20315-CPP-GET-COMPANY-MARKUP
PERFORM 20315-CPP-RECOMPUTE-TRACTOR
PERFORM 20315-CPP-RECOMPUTE-NR1
PERFORM 20315-CPP-RECOMPUTE-OTHER
PERFORM 20315-CPP-RECOMPUTE-TRAILER

MOVE 'Y'                   TO CDN-FOCUS-DISCOUNT-FLAG
SCM-FOCUS-DISCOUNT-FLAG
INITIALIZE               RMR-FOCUS-REBATE-INFO
INITIALIZE               RMR-FOCUS-REBATE-INFO-ADDL
MOVE 'Y'                   TO RMR-FOCUS-DISCOUNT-TYPE
COMPUTE RMR-FOCUS-CPG-TOTAL-DISC = WS-PPRIDE-MARKUP-SC *
100
COMPUTE RMR-FOCUS-CPG-RETAINED   = WS-PPRIDE-MARKUP-SC *
100
MOVE 'SC'                  TO RMR-FOCUS-CPG-USE-FLAG
MOVE RMR-FOCUS-REBATE-INFO TO FMRX-DISCOUNT-INFO
MOVE RMR-FOCUS-REBATE-INFO-ADDL
TO FMRX-FOCUS-REBATE-INFO-ADDL
PERFORM 71110-CHECK-FOCUS-DISCOUNT
END-IF.


20315-CPP-RECOMPUTE-TRACTOR.


IF WS-UIWA-NR2-COST > ZEROES
IF WS-PPRIDE-TRANSFER-PPG = ZEROES
MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
END-IF
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
WS-UIWA-NR2-COST
COMPUTE WS-UIWA-NR2-PPU = WS-UIWA-NR2-PPU +
SCPM-PP-PAC-MARKUP  +
WS-PPRIDE-MARKUP-SC

COMPUTE WS-UIWA-NR2-COST ROUNDED = WS-UIWA-NR2-QTY *
WS-UIWA-NR2-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-NR2-COST.


20315-CPP-RECOMPUTE-OTHER.


IF WS-UIWA-OTH-COST > ZEROES
IF WS-PPRIDE-TRANSFER-PPG = ZEROES
MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
END-IF
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
WS-UIWA-OTH-COST
COMPUTE WS-UIWA-OTH-PPU  = WS-UIWA-OTH-PPU +
SCPM-PP-PAC-MARKUP  +
WS-PPRIDE-MARKUP-SC

COMPUTE WS-UIWA-OTH-COST ROUNDED = WS-UIWA-OTH-QTY *
WS-UIWA-OTH-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-OTH-COST.


20315-CPP-RECOMPUTE-TRAILER.


IF WS-UIWA-REF-COST > ZEROES
IF WS-PPRIDE-TRANSFER-PPG = ZEROES
MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
END-IF
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
WS-UIWA-REF-COST
COMPUTE WS-UIWA-REF-PPU  = WS-UIWA-REF-PPU +
SCPM-PP-PAC-MARKUP  +
WS-PPRIDE-MARKUP-SC

COMPUTE WS-UIWA-REF-COST ROUNDED = WS-UIWA-REF-QTY *
WS-UIWA-REF-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-REF-COST.


20315-CPP-RECOMPUTE-NR1.


IF WS-UIWA-NR1-COST > ZEROES
IF WS-PPRIDE-TRANSFER-PPG = ZEROES
MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
END-IF
COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT -
WS-UIWA-NR1-COST
COMPUTE WS-UIWA-NR1-PPU      = WS-UIWA-NR1-PPU +
SCPM-PP-PAC-MARKUP  +
WS-PPRIDE-MARKUP-SC
COMPUTE WS-UIWA-NR1-COST ROUNDED = WS-UIWA-NR1-QTY *
WS-UIWA-NR1-PPU
COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
WS-UIWA-NR1-COST.


20315-CPP-GET-COMPANY-MARKUP.



IF CDN-PPRIDE-ORIDE = 'Y'
MOVE CDN-PPRIDE-ORIDE-MARKUP TO WS-PPRIDE-MARKUP-SC
ELSE
MOVE SCPM-PP-CDN-MARKUP-US   TO WS-PPRIDE-MARKUP-SC
END-IF.


20320-CHECK-CASH-AMT-9999.



IF WS-UIWA-CASH-AMT > +999.99
MOVE '*'                          TO ERROR-FLAG
MOVE EXCESSIVE-ADVANCE-REQUEST1   TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N  TO POS-ERROR-NUMBER
MOVE -1                           TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20330-ADJUST-AMTS-REBLD-SCN.





IF COM-US-COMP-US-SC OR COM-CN-COMP-CN-SC
PERFORM CONVERT-FOR-NO-ACCOUNT.
IF COM-US-COMP-CN-SC
PERFORM CONVERT-FOR-US-ACCOUNT.
IF COM-CN-COMP-US-SC
PERFORM CONVERT-FOR-CN-ACCOUNT.


PERFORM CONVERT-FOR-US-AMOUNTS.




IF COM-COST-PLUS-PRICE-ALTERED OR
WS-TAX-COMPUTED-FLAG = 'Y'  OR
COM-PAC-PRIDE-FLAG   = 'Y'
NEXT SENTENCE
ELSE
PERFORM DISPLAY-MAP-DATA.


20340-CHECK-FOR-MNX-XTN.

IF MNX-TRANSACTION-FLAG = SPACE
PERFORM 10500-CHECK-FOR-MNX-XTN
END-IF.


20350-CALC-COST-FOR-TERM-FUEL.



IF THIS-BE-TERMINAL-FUEL
PERFORM 20351-CALC-COST-FOR-TF-TR
PERFORM 20352-CALC-COST-FOR-TF-OT
PERFORM 20353-CALC-COST-FOR-TF-N1
END-IF.


20351-CALC-COST-FOR-TF-TR.


IF (WS-UIWA-NR2-QTY > ZEROES) AND
(WS-UIWA-NR2-PPU = 0 OR WS-UIWA-NR2-COST = 0)
ADD UNITMST-PTD-NR-GALS,
UNITMST-CURR-DAY-NR-GALS,
UNITMST-PREV-DAY-NR-GALS   GIVING WS-YTD-GALLONS
ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
UNITMST-PREV-DAY-REQ-AMT   GIVING WS-YTD-FUEL-TOTAL
IF WS-YTD-GALLONS NOT = ZEROES
DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
GIVING WS-UIWA-NR2-PPU ROUNDED
MULTIPLY WS-UIWA-NR2-PPU BY WS-UIWA-NR2-QTY
GIVING WS-UIWA-NR2-COST ROUNDED
ELSE
MOVE 1 TO WS-UIWA-NR2-PPU
MOVE WS-UIWA-NR2-QTY TO WS-UIWA-NR2-COST.



20352-CALC-COST-FOR-TF-OT.


IF (WS-UIWA-OTH-QTY > ZEROES) AND
(WS-UIWA-OTH-PPU = ZERO OR WS-UIWA-OTH-COST = ZERO)
ADD UNITMST-PTD-NR-GALS,
UNITMST-CURR-DAY-NR-GALS,
UNITMST-PREV-DAY-NR-GALS    GIVING WS-YTD-GALLONS
ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
UNITMST-PREV-DAY-REQ-AMT    GIVING WS-YTD-FUEL-TOTAL
IF WS-YTD-GALLONS IS NOT EQUAL TO 0
DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
GIVING WS-UIWA-OTH-PPU ROUNDED
MULTIPLY WS-UIWA-OTH-PPU BY WS-UIWA-OTH-QTY
GIVING WS-UIWA-OTH-COST ROUNDED
ELSE
MOVE 1 TO WS-UIWA-OTH-PPU
MOVE WS-UIWA-OTH-QTY TO WS-UIWA-OTH-COST.


20353-CALC-COST-FOR-TF-N1.

IF (WS-UIWA-NR1-QTY > ZEROES) AND
(WS-UIWA-NR1-PPU = ZERO OR WS-UIWA-NR1-COST = ZERO)


ADD UNITMST-PTD-NR-GALS,
UNITMST-CURR-DAY-NR-GALS,
UNITMST-PREV-DAY-NR-GALS GIVING WS-YTD-GALLONS
ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
UNITMST-PREV-DAY-REQ-AMT GIVING WS-YTD-FUEL-TOTAL

IF WS-YTD-GALLONS IS NOT EQUAL TO 0
DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
GIVING WS-UIWA-NR1-PPU ROUNDED
MULTIPLY WS-UIWA-NR1-PPU BY WS-UIWA-NR1-QTY
GIVING WS-UIWA-NR1-COST ROUNDED
ELSE
MOVE 1 TO WS-UIWA-NR1-PPU
MOVE WS-UIWA-NR1-QTY TO WS-UIWA-NR1-COST.


20360-CHECK-INVOICE-NR.

IF THIS-BE-AN-UNATTENDED-XTN AND
WS-UIWA-INVOICE-NR NOT > SPACES
MOVE 'AGINVOICE'    TO WS-UIWA-INVOICE-NR
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE PD-DD       TO WS-INVOICE-DD
MOVE EIBTIME     TO WS-INVOICE-TIME
MOVE WS-INVOICE  TO WS-UIWA-INVOICE-NR.

IF THIS-BE-TERMINAL-FUEL AND
THIS-BE-A-PC-REQUEST  AND
WS-UIWA-INVOICE-NR NOT > SPACES
MOVE 'TFINVOICE' TO WS-UIWA-INVOICE-NR.

IF WS-UIWA-INVOICE-NR NOT > SPACES
MOVE INVOICE-NR-REQUIRED TO OUT-COMENT
MOVE INVOICE-NR-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20370-CHECK-INVOICE-NR-FOR-CC.

IF (COM-COMDATA-COMPLETE-FLAG = 'Y')
MOVE 8 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-INVOICE-NR,
FILL-CHAR
INSPECT WS-UIWA-INVOICE-NR REPLACING LEADING ' ' BY '0'
IF WS-UIWA-INVOICE-NR NOT NUMERIC OR
WS-UIWA-INVOICE-NR = '00000000'
MOVE INVOICE-NR-INVALID TO OUT-COMENT
MOVE INVOICE-NR-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF (COM-COMDATA-COMPLETE-FLAG = 'Y') AND
(CSR-VERIFY-UNIT = 'N')           AND
(NOT THIS-BE-A-PC-REQUEST)
IF PRM-LAST-FP-INV-NR = WS-UIWA-INVOICE-NR
MOVE UNITMST-LAST-XTN-NR    TO CC-INVOICE-NR-CTL
MOVE CC-INVOICE-NR-INVALID TO OUT-COMENT
MOVE CC-INVOICE-NR-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20380-CHECK-DRAFT-NR.

IF WS-UIWA-CHECK-NR1 NUMERIC AND
WS-UIWA-CHECK-NR1 = ZEROES
MOVE SPACES TO WS-UIWA-CHECK-NRX.
IF WS-UIWA-CHECK-NRX > SPACES
PERFORM VALIDATE-CHECK-NR
MOVE 1ST-10-BYTES-N TO WS-HOLD-CHECK-NR
WS-UIWA-CHECK-NR1
WS-UIWA-CHECK-NR2.


20390-SET-FUEL-FLAG.

IF WS-UIWA-NR2-QTY      > ZEROES OR
WS-UIWA-NR2-PPU      > ZEROES OR
WS-UIWA-NR2-COST     > ZEROES OR
WS-UIWA-OTH-QTY      > ZEROES OR
WS-UIWA-OTH-PPU      > ZEROES OR
WS-UIWA-OTH-COST     > ZEROES OR
WS-UIWA-NR1-QTY      > ZEROES OR
WS-UIWA-NR1-PPU      > ZEROES OR
WS-UIWA-NR1-COST     > ZEROES
MOVE 1 TO TRACTOR-PURCHASE.


20400-CHECK-OTHER-FUEL-BLOCK.

IF WS-UIWA-OTH-QTY     > ZERO   OR
WS-UIWA-OTH-PPU > ZEROES OR
WS-UIWA-OTH-COST    > ZEROES
IF CDN-BLENDED-FUEL-BLOCK = 'Y'
MOVE OTHER-FUEL-NOT-ALLOWED TO ERROR-TYPE
MOVE OTHER-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE ERROR-TYPE TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20410-CHECK-NR1-FUEL-BLOCK.

IF WS-UIWA-NR1-QTY      > ZEROES OR
WS-UIWA-NR1-PPU      > ZEROES OR
WS-UIWA-NR1-COST     > ZEROES
IF CDN-NR-1-FLAG-IS-BLOCKED
MOVE NR1-FUEL-NOT-ALLOWED TO ERROR-TYPE
MOVE NR1-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE ERROR-TYPE TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20420-CHECK-REEFER-FUEL-BLOCK.

IF WS-UIWA-REF-QTY     > ZEROES OR
WS-UIWA-REF-PPU > ZEROES OR
WS-UIWA-REF-COST    > ZEROES
MOVE 1 TO TRAILER-PURCHASE
IF REFER-IS-BLOCKED
MOVE NO-REFER-PURC TO ERROR-TYPE
MOVE NO-REFER-PURC-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE ERROR-TYPE TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20425-CHECK-NR2-FUEL-BLOCK.

IF CDN-NR-2-FLAG-IS-BLOCKED
IF WS-UIWA-NR2-QTY      > ZEROES OR
WS-UIWA-NR2-PPU      > ZEROES OR
WS-UIWA-NR2-COST     > ZEROES
MOVE NR2-FUEL-NOT-ALLOWED   TO ERROR-TYPE
MOVE NR2-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                    TO ERROR-FLAG
MOVE ERROR-TYPE             TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20430-SET-OIL-FLAG.

IF (WS-UIWA-OIL-QTY > 0 AND WS-UIWA-OIL-COST = 0) OR
(WS-UIWA-OIL-QTY = 0 AND WS-UIWA-OIL-COST > 0)
MOVE ZERO-OR-NEG   TO ERROR-TYPE
MOVE ZERO-OR-NEG-N TO POS-ERROR-NUMBER
MOVE '*'           TO ERROR-FLAG
MOVE ERROR-TYPE    TO OUT-COMENT
MOVE -1            TO OILQTSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
IF WS-UIWA-OIL-QTY > ZEROES
MOVE 1 TO OIL-PURCHASE.


20440-CHECK-OIL-LIMITS.

IF OIL-PURCHASE = 1 AND
CSR-OIL-FLAG = 'Y'
PERFORM PREMIER-CARD-OIL-LIMIT
IF PRM-OIL-INITIAL-QUARTS  < WS-UIWA-OIL-QTY OR
PRM-OIL-INITIAL-DOLLARS < WS-UIWA-OIL-COST
PERFORM 20441-OIL-LIMITS-EXCEEDED.


20441-OIL-LIMITS-EXCEEDED.

MOVE '*'                    TO ERROR-FLAG
MOVE -1                     TO OILQTSL
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE OIL-EXCEEDS-MAX-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE 'QUARTS'                TO OIL-EXCEEDS-MAX-QTY-MSG
MOVE PRM-OIL-INITIAL-QUARTS  TO OIL-EXCEEDS-MAX-QTY
MOVE PRM-OIL-INITIAL-DOLLARS TO OIL-EXCEEDS-MAX-DOL
MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' QUARTS'               TO OIL-EXCEEDS-MAX-QTY-MSG
MOVE PRM-OIL-INITIAL-QUARTS  TO WS-LITERS
PERFORM LITERS-TO-QTS
MOVE WS-QTS                  TO OIL-EXCEEDS-MAX-QTY
MOVE PRM-OIL-INITIAL-DOLLARS TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS           TO OIL-EXCEEDS-MAX-DOL
MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE 'LITERS'                TO OIL-EXCEEDS-MAX-QTY-MSG
MOVE PRM-OIL-INITIAL-QUARTS  TO OIL-EXCEEDS-MAX-QTY
MOVE PRM-OIL-INITIAL-DOLLARS TO OIL-EXCEEDS-MAX-DOL
MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS'               TO OIL-EXCEEDS-MAX-QTY-MSG
MOVE PRM-OIL-INITIAL-QUARTS  TO WS-QTS
PERFORM QTS-TO-LITERS
MOVE WS-LITERS               TO OIL-EXCEEDS-MAX-QTY
MOVE PRM-OIL-INITIAL-DOLLARS TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS     TO OIL-EXCEEDS-MAX-DOL
MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20445-CHECK-OIL-XTN-LIMIT.

IF OIL-PURCHASE = 1
IF WS-FL-MAX-OIL-QTS  < WS-UIWA-OIL-QTY
MOVE '*'                    TO ERROR-FLAG
MOVE -1                     TO OILQTSL
MOVE WS-FL-MAX-OIL-QTS      TO XCS-OIL-REQ
MOVE EXCESSIVE-OIL-REQUEST  TO ERROR-TYPE
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE EXCESSIVE-OIL-REQUEST-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE 'QUARTS'  TO XCS-OIL-REQ-MSG
MOVE WS-FL-MAX-OIL-QTS     TO XCS-OIL-REQ
MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE 'QUARTS'  TO XCS-OIL-REQ-MSG
MOVE WS-FL-MAX-OIL-QTS     TO WS-LITERS
PERFORM LITERS-TO-QTS
MOVE WS-QTS         TO XCS-OIL-REQ
MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE 'LITERS'  TO XCS-OIL-REQ-MSG
MOVE WS-FL-MAX-OIL-QTS     TO XCS-OIL-REQ
MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE 'LITERS'  TO XCS-OIL-REQ-MSG
MOVE WS-FL-MAX-OIL-QTS     TO WS-QTS
PERFORM QTS-TO-LITERS
MOVE WS-LITERS      TO XCS-OIL-REQ
MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20450-CHECK-OIL-COST-LIMIT.

IF OIL-PURCHASE = 1
IF WS-UIWA-OIL-COST > 99.99
MOVE OIL-AMOUNT-TOO-LARGE   TO ERROR-TYPE
MOVE OIL-AMOUNT-TOO-LARGE-N TO POS-ERROR-NUMBER
MOVE '*'                    TO ERROR-FLAG
MOVE ERROR-TYPE             TO OUT-COMENT
MOVE -1                     TO OILCSTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20460-CHECK-MAX-FUEL-GALLONS.


COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY-SC  +
WS-UIWA-NR1-QTY-SC.

IF COM-MAXIMUM-GALLONS < WS-GALLONS
IF (WS-UIWA-PO-NR > SPACES OR COM-CARD-OFFNET-USED = 'Y')
AND
CDN-PO-OVERRIDE-MAX-GALLONS = 'Y'
CONTINUE
ELSE
MOVE MAXIMUM-GALLON-MESSAGE-N  TO POS-ERROR-NUMBER
MOVE COM-MAXIMUM-GALLONS       TO MAXIMUM-GALLON-NR
MOVE '*'                       TO ERROR-FLAG
MOVE -1                        TO FPGLNSL
MOVE ' GALLONS'                TO MAXIMUM-GALLON-MSG
IF COM-SC-IS-CANADIAN
MOVE ' LITERS'              TO MAXIMUM-GALLON-MSG
END-IF
MOVE MAXIMUM-GALLON-MESSAGE    TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20461-CHECK-MAX-RFR-GALLONS.

IF COM-MAX-RFR-GALLONS < WS-UIWA-REF-QTY-SC
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE COM-MAX-RFR-GALLONS      TO MAXIMUM-GALLON-NR
MOVE '*'                      TO ERROR-FLAG
MOVE -1                       TO TRGLNL
IF COM-SC-IS-CANADIAN
MOVE '  LITERS OF'         TO MAXIMUM-GALLON-MSG
ELSE
MOVE ' GALLONS OF'         TO MAXIMUM-GALLON-MSG
END-IF
MOVE MAXIMUM-GALLON-MESSAGE   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20462-CHECK-MAX-OTH-GALLONS.

IF COM-MAX-OTH-GALLONS < WS-UIWA-OTH-QTY-SC
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE COM-MAX-OTH-GALLONS      TO MAXIMUM-GALLON-NR
MOVE '*'                      TO ERROR-FLAG
MOVE -1                       TO FPGLNSBL
IF COM-SC-IS-CANADIAN
MOVE '  LITERS OF'         TO MAXIMUM-GALLON-MSG
ELSE
MOVE ' GALLONS OF'         TO MAXIMUM-GALLON-MSG
END-IF
MOVE MAXIMUM-GALLON-MESSAGE   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20470-CHECK-FUEL-CONVERSION.



IF COM-CN-COMP-US-SC
IF WS-UIWA-NR2-QTY-SC + WS-UIWA-NR1-QTY-SC > 263
MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1  TO FPGLNSL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.
IF COM-CN-COMP-US-SC
IF WS-UIWA-OTH-QTY-SC > 263
MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1  TO FPGLNSBL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.
IF COM-CN-COMP-US-SC
IF WS-UIWA-REF-QTY-SC > 263
MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1  TO TRGLNL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


20480-CHECK-OIL-WITH-FUEL-LIM.


COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY    +
WS-UIWA-OTH-QTY    +
WS-UIWA-NR1-QTY    +
WS-UIWA-REF-QTY.
IF (OIL-PURCHASE = 1) AND
(CDN-MIN-GAS-FOR-OIL > WS-GALLONS)
MOVE MINIMUM-GALLON-MESSAGE2-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO OILCSTL
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS'          TO MINIMUM-GALLON-MSG2
MOVE CDN-MIN-GAS-FOR-OIL TO MINIMUM-GALLON-NR2
MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS'          TO MINIMUM-GALLON-MSG2
MOVE CDN-MIN-GAS-FOR-OIL TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MINIMUM-GALLON-NR2
MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS '          TO MINIMUM-GALLON-MSG2
MOVE CDN-MIN-GAS-FOR-OIL TO MINIMUM-GALLON-NR2
MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS '          TO MINIMUM-GALLON-MSG2
MOVE CDN-MIN-GAS-FOR-OIL TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MINIMUM-GALLON-NR2
MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20490-CHECK-FUEL-GALLON-LIM.


COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY    +
WS-UIWA-NR1-QTY +
PRM-DIESEL-USED.

IF CSR-DIESEL-LIMIT-FLAG = 'Y'
IF WS-UIWA-NR2-QTY > +0  OR
WS-UIWA-NR1-QTY > +0
IF PRM-DIESEL-LIMIT < WS-GALLONS
MOVE '*' TO ERROR-FLAG
MOVE -1  TO FPGLNSL
MOVE ' DIESEL ' TO MAXIMUM-GALLON-MSG3T
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 = PRM-DIESEL-LIMIT -
PRM-DIESEL-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-LITERS = PRM-DIESEL-LIMIT -
PRM-DIESEL-USED
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 = PRM-DIESEL-LIMIT -
PRM-DIESEL-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-GALLONS = PRM-DIESEL-LIMIT -
PRM-DIESEL-USED
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20500-CHECK-REEFER-GALLON-LIM.

IF CSR-REEFER-LIMIT-FLAG = 'Y'
IF WS-UIWA-REF-QTY > +0
IF PRM-REEFER-LIMIT < PRM-REEFER-USED   +
WS-UIWA-REF-QTY
MOVE ' REEFER ' TO MAXIMUM-GALLON-MSG3T
MOVE '*' TO ERROR-FLAG
MOVE -1  TO TRGLNL
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 = PRM-REEFER-LIMIT -
PRM-REEFER-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-LITERS = PRM-REEFER-LIMIT -
PRM-REEFER-USED
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 = PRM-REEFER-LIMIT -
PRM-REEFER-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-GALLONS = PRM-REEFER-LIMIT -
PRM-REEFER-USED
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20505-CHECK-OTHER-GALLON-LIM.

IF CSR-OTHER-LIMIT-FLAG = 'Y'
IF WS-UIWA-OTH-QTY > +0
IF CSRH-OTHER-QTY-LIMIT < PIR-OTHER-USED   +
WS-UIWA-OTH-QTY
MOVE ' OTHER  ' TO MAXIMUM-GALLON-MSG3T
MOVE '*' TO ERROR-FLAG
MOVE -1  TO TRGLNL
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 =
CSRH-OTHER-QTY-LIMIT -  PIR-OTHER-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-LITERS = CSRH-OTHER-QTY-LIMIT -
PIR-OTHER-USED
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE MAXIMUM-GALLON-NR3 =
CSRH-OTHER-QTY-LIMIT -  PIR-OTHER-USED
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
COMPUTE WS-GALLONS = CSRH-OTHER-QTY-LIMIT -
PIR-OTHER-USED
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20510-CHECK-PURCHASE-FLAGS.

PERFORM 20511-CHECK-TRACTOR-FLAG.
PERFORM 20512-CHECK-TRAILER-FLAG.
PERFORM 20513-CHECK-OIL-FLAG.
PERFORM 20514-CHECK-PRODUCT-FLAG.
PERFORM 20515-CHECK-CASH-FLAG.


20511-CHECK-TRACTOR-FLAG.

IF TRACTOR-PURCHASE = 1 AND
COM-PUR-OPTIONS-FUEL = '0'
MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO FPGLNSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20512-CHECK-TRAILER-FLAG.

IF TRAILER-PURCHASE = 1 AND
COM-PUR-OPTIONS-FUEL = '0'
MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO TRGLNL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20513-CHECK-OIL-FLAG.

IF OIL-PURCHASE = 1 AND
(COM-PUR-OPTIONS-OIL = '0')
MOVE OIL-NOT-ALLOWED   TO OUT-COMENT
MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'               TO ERROR-FLAG
MOVE -1                TO OILQTSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20514-CHECK-PRODUCT-FLAG.

IF PRODUCT-PURCHASE = 1 AND
(COM-PUR-OPTIONS-PROD = '0')
MOVE PROD-NOT-ALLOWED   TO OUT-COMENT
MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO PRD1CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20515-CHECK-CASH-FLAG.

IF WS-UIWA-CASH-AMT > ZEROES AND
(COM-PUR-OPTIONS-CASH = '0')
MOVE CASH-NOT-ALLOWED   TO OUT-COMENT
MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20520-CHECK-PO-OVERRIDE.


IF (COM-PO-PUR-OPTIONS-AREA = SPACE) OR
(COM-PO-PUR-OPTIONS-AREA > SPACE AND
WS-UIWA-PO-NR > SPACE)
CONTINUE
ELSE
PERFORM 20521-CHECK-PO-OVR-FUEL
PERFORM 20522-CHECK-PO-OVR-TRAILER
PERFORM 20523-CHECK-PO-OVR-OIL
PERFORM 20524-CHECK-PO-OVR-PRODUCTS
PERFORM 20525-CHECK-PO-OVR-CASH
END-IF.


20521-CHECK-PO-OVR-FUEL.

IF COM-PO-PUR-OPTIONS-FUEL = '0'
IF TRACTOR-PURCHASE = 1
MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO FPGLNSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20522-CHECK-PO-OVR-TRAILER.

IF COM-PO-PUR-OPTIONS-FUEL = '0'
IF TRAILER-PURCHASE = 1
MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO TRGLNL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20523-CHECK-PO-OVR-OIL.

IF COM-PO-PUR-OPTIONS-OIL = '0'
IF OIL-PURCHASE = 1
MOVE OIL-NOT-ALLOWED   TO OUT-COMENT
MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'               TO ERROR-FLAG
MOVE -1                TO OILQTSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20524-CHECK-PO-OVR-PRODUCTS.

IF COM-PO-PUR-OPTIONS-PROD = '0'
IF PRODUCT-PURCHASE = 1
MOVE PROD-NOT-ALLOWED   TO OUT-COMENT
MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO PRD1CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20525-CHECK-PO-OVR-CASH.

IF COM-PO-PUR-OPTIONS-CASH = '0'
IF WS-UIWA-CASH-AMT > ZEROES
MOVE CASH-NOT-ALLOWED   TO OUT-COMENT
MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20530-CHECK-PO-REQUIRED.


IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
(WS-UIWA-PO-NR NOT > SPACES)
PERFORM 20531-CHECK-PO-REQ-FUEL
PERFORM 20532-CHECK-PO-REQ-TRAILER
PERFORM 20533-CHECK-PO-REQ-OIL
PERFORM 20534-CHECK-PO-REQ-PRODUCTS
PERFORM 20535-CHECK-PO-REQ-CASH
END-IF.


20531-CHECK-PO-REQ-FUEL.

IF COM-PO-REQUIRED-FOR-FUEL = '1'
IF TRACTOR-PURCHASE = 1
MOVE FUEL-NOT-ALLOWED2  TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*'                TO ERROR-FLAG
MOVE -1                 TO FPGLNSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20532-CHECK-PO-REQ-TRAILER.

IF COM-PO-REQUIRED-FOR-FUEL = '1'
IF TRAILER-PURCHASE = 1
MOVE FUEL-NOT-ALLOWED2 TO OUT-COMENT
MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO TRGLNL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20533-CHECK-PO-REQ-OIL.

IF COM-PO-REQUIRED-FOR-OIL = '1'
IF OIL-PURCHASE = 1
MOVE OIL-NOT-ALLOWED2 TO OUT-COMENT
MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO OILQTSL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20534-CHECK-PO-REQ-PRODUCTS.

IF COM-PO-REQUIRED-FOR-PROD = '1'
IF PRODUCT-PURCHASE = 1
MOVE PROD-NOT-ALLOWED2 TO OUT-COMENT
MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO PRD1CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20535-CHECK-PO-REQ-CASH.

IF COM-PO-REQUIRED-FOR-CASH = '1'
IF WS-UIWA-CASH-AMT > ZEROES
MOVE CASH-NOT-ALLOWED2 TO OUT-COMENT
MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20540-CHECK-CASH-LIMITS.

MOVE SPACES TO ERROR-FLAG.
PERFORM 20541-ADJUST-CASH-INFO.
IF WS-UIWA-CASH-AMT > 0 AND
WS-FL-CASH-ADV-FLAG NOT = 'U'
PERFORM 20542-CHECK-CASH-LIMIT
END-IF.
PERFORM 20543-CHECK-CASH-CONVERSION.
PERFORM 20544-CHECK-CASH-AND-MIN-FUEL.
PERFORM 20545-ADJUST-ATM-AMOUNT.


20541-ADJUST-CASH-INFO.


IF WS-UIWA-CASH-AMT > ZEROES AND
WS-CURRENT-DATE-YYDDD NOT = UNITMST-DATE-LAST-XTN
MOVE 0 TO UNITMST-DLY-CASH-ADV-USED.
IF WS-FL-CASH-ADV-FLAG = 'A'
PERFORM ACCUM-CASH-TOTALS.
IF CSR-CASH-IS-ON-THE-CARD
OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
PERFORM PREMIER-CARD-CASH-LIMIT.


20542-CHECK-CASH-LIMIT.

IF WS-UIWA-CASH-AMT + WS-RFL-CASH-ADV-USED    >
WS-RFL-CASH-ADV-INIT
COMPUTE WS-US-DOLLARS, WS-CANADIAN-DOLLARS =
WS-RFL-CASH-ADV-INIT - WS-RFL-CASH-ADV-USED
PERFORM COMPUTE-XCS-ADV-REQ-AMT
MOVE EXCESSIVE-ADVANCE-REQUEST     TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N   TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-ADVANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
MOVE '7'                           TO VR-TRANS-FLAG
MOVE -1 TO ADVAMTL
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF CASH-ADV-DAILY-SET                AND
WS-RFL-CASH-ADV-INIT-DLY > ZEROES AND
WS-UIWA-CASH-AMT + WS-FL-CASH-ADV-USED-DLY >
WS-RFL-CASH-ADV-INIT-DLY
COMPUTE WS-US-DOLLARS, WS-CANADIAN-DOLLARS =
WS-RFL-CASH-ADV-INIT-DLY - WS-FL-CASH-ADV-USED-DLY
PERFORM COMPUTE-XCS-ADV-REQ-AMT
MOVE EXCESSIVE-ADVANCE-REQUEST   TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-ADVANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                         TO VCWS-ERROR-IND
MOVE '7'                         TO VR-TRANS-FLAG
MOVE -1 TO ADVAMTL
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20543-CHECK-CASH-CONVERSION.



IF (COM-CN-COMP-US-SC         OR COM-US-COMP-CN-SC)    AND
(WS-UIWA-CASH-AMT > 999.99 OR WS-UIWA-CASH-AMT-SC > 999.99)
MOVE '*' TO ERROR-FLAG
MOVE -1  TO ADVAMTL
IF COM-CN-COMP-US-SC
MOVE 999.90 TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS TO XCS-ADV-REQ-AMT2
MOVE EXCESSIVE-ADVANCE-REQUEST2  TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
MOVE 999.90 TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO XCS-ADV-REQ-AMT2
MOVE EXCESSIVE-ADVANCE-REQUEST2  TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20544-CHECK-CASH-AND-MIN-FUEL.

IF WS-UIWA-CASH-AMT > 0
IF NOT THIS-BE-A-VRU-XTN
PERFORM AUTHORIZE-ADVANCE
COMPUTE WS-CASH-GALLONS = WS-UIWA-NR2-QTY +
WS-UIWA-OTH-QTY +
WS-UIWA-REF-QTY +
WS-UIWA-NR1-QTY
IF CDN-CUST-USES-UNIT-RFID-TAGS
AND SCM-RFID-ENABLED-FL-YES
AND PIR-LAST-PURC-LOC-RFID = WS-UIWA-SC-CODE
AND PIR-LAST-PURC-QTY-RFID >= CDN-MINIMUM-GALLONS-CASH
AND WS-CASH-GALLONS = ZERO
PERFORM 20544-CHECK-LST-RFID-TIME
IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
MOVE ' '              TO ERROR-FLAG
MOVE 'Y'              TO WS-RESET-LAST-QTY-RFID
END-IF
END-IF
IF THERE-WAS-AN-ERROR
MOVE MINIMUM-GALLON-MESSAGE TO OUT-COMENT
MOVE MINIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1 TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF
END-IF.


20544-CHECK-LST-RFID-TIME.

IF WS-UIWA-SC-CODE NOT > SPACES
MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
END-IF
IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF
IF PIR-LAST-PURC-TIME-RFID NUMERIC
AND PIR-LAST-PURC-TIME-RFID > ZERO
MOVE PIR-LAST-PURC-TIME-RFID  TO WS-PURC-TIME-UNPACK
MOVE WS-PURC-TIME-UNPACK(2:4) TO WS-TIME-4
ELSE
MOVE ZERO                     TO WS-TIME-1
END-IF
COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
END-COMPUTE
IF PIR-LAST-PURC-DATE-RFID NOT NUMERIC
MOVE WS-CURRENT-DATE-YYDDD TO PIR-LAST-PURC-DATE-RFID
END-IF
MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
IF PIR-LAST-PURC-DATE-RFID NOT = WS-CURRENT-DATE-YYDDD
ADD 1440      TO WS-CURR-MIN-WORK
END-IF
COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
END-COMPUTE.



20545-ADJUST-ATM-AMOUNT.

IF THIS-BE-AN-ATM-XTN
ADD TSXCO0AT-SURCHARGE-FEE TO WS-UIWA-CASH-AMT
WS-UIWA-CASH-AMT-SC
WS-UIWA-CASH-AMT-US.


20555-CHECK-CAROLINA-MOTORS.

IF (WS-FP-ACCT-CODE = 'CA130' OR 'CA237') AND
WS-UIWA-TRIP-NR NOT > SPACES
MOVE UNIT-NR-REQ TO ERROR-TYPE
MOVE UNIT-NR-REQ-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO ADVTRIPL
MOVE ERROR-TYPE TO OUT-COMENT-1
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20560-CHECK-TRIP-NUMBER.

IF TRIP-NR-REQ-THIS-UNIT
IF WS-UIWA-TRIP-NR NOT > SPACES
MOVE TRIP-NR-REQUIRED TO OUT-COMENT
MOVE TRIP-NR-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO ADVTRIPL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF TRIP-NR-REQ-THIS-UNIT
PERFORM TRIP-NR-EDIT
IF THERE-WAS-AN-ERROR
MOVE TRIP-NR-INVALID     TO OUT-COMENT
MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE -1 TO ADVTRIPL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF TRIP-NR-REQ-THIS-UNIT
IF CDN-CUST-MC-CUSTID = 'Y'
MOVE 6 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-TRIP-NR,
WS-ZERO
MOVE 6 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
HOLD-TRIP-NUMBER,
WS-ZERO
END-IF
END-IF.

IF WS-FL-TRIP-FLAG = 'B'
MOVE WS-UIWA-TRIP-NR TO HOLD-TRIP-NUMBER-I
IF HOLD-TRIP-NUMBER    NOT = HOLD-TRIP-NUMBER-I
MOVE TRIP-NR-INVALID     TO OUT-COMENT
MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE -1 TO ADVTRIPL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF WS-FL-TRIP-FLAG = 'D'
MOVE WS-UIWA-TRIP-NR TO HOLD-TRIP-NUMBER-I
IF HOLD-TRIP-NUMBER    NOT = HOLD-TRIP-NUMBER-I
AND HOLD-TRIP-NUMBER-2 NOT = HOLD-TRIP-NUMBER-I
AND HOLD-TRIP-NUMBER-3 NOT = HOLD-TRIP-NUMBER-I
MOVE TRIP-NR-INVALID     TO OUT-COMENT
MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE -1 TO ADVTRIPL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20570-CHECK-TRAILER-NR.

PERFORM 20571-CHECK-TRAILER-NR.
IF WS-UIWA-RFID-TAG-TYP (1:1) = 'U' AND
SCM-LIMIT-RFID-PROMPTS-FL-YES
CONTINUE
ELSE
PERFORM 20572-CHECK-TRAILER-HR
END-IF.


20571-CHECK-TRAILER-NR.

IF CDN-TRAILER-NR-FLAG = 'C' OR 'V' OR 'P'
IF (CDN-REFER-ONLY = 'Y' AND TRAILER-PURCHASE = 1) OR
(CDN-REFER-ONLY NOT = 'Y')
IF WS-UIWA-TRAILER-NR NOT > SPACES
MOVE TRAILER-NR-REQUIRED TO OUT-COMENT
MOVE TRAILER-NR-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
PERFORM TRAILER-NR-EDIT
IF THERE-WAS-AN-ERROR
MOVE TRAILER-NR-INVALID TO OUT-COMENT
MOVE TRAILER-NR-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20572-CHECK-TRAILER-HR.

IF CDN-VERIFY-TRAILER-HOURS = 'C' OR 'V'
IF TRLRHRI > SPACES
PERFORM TRAILER-HR-EDIT
IF THERE-WAS-AN-ERROR
MOVE TRAILER-HR-INVALID TO OUT-COMENT
MOVE TRAILER-HR-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRHRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
IF TRAILER-PURCHASE = 1
MOVE TRAILER-HR-REQUIRED TO OUT-COMENT
MOVE TRAILER-HR-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRHRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF
END-IF.


20580-CHECK-TRAILER-HUB.

IF CDN-TRAILER-HUB = 'Y'
IF TRLRHBI NOT > SPACES
MOVE TRAILER-HUB-REQUIRED   TO OUT-COMENT
MOVE TRAILER-HUB-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRHBL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
PERFORM TRAILER-HUB-EDIT
IF THERE-WAS-AN-ERROR
MOVE TRAILER-HUB-INVALID TO OUT-COMENT
MOVE TRAILER-HUB-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO TRLRHBL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20590-CHECK-GST-TAX.

IF COM-CAPTURE-TAX = 'Y'
EVALUATE TRUE
WHEN PGRM-FUNCTION-CASH-ONLY
IF WS-UIWA-TAX-AMT > ZEROES
MOVE CANADIAN-TAX-AMT-NOT-REQ-N TO POS-ERROR-NUMBER
MOVE CANADIAN-TAX-AMT-NOT-REQ   TO OUT-COMENT
MOVE -1                         TO CTAXL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
WHEN OTHER
IF WS-UIWA-TAX-AMT = ZEROES
MOVE CANADIAN-TAX-AMT-REQ-N     TO POS-ERROR-NUMBER
MOVE CANADIAN-TAX-AMT-REQ       TO OUT-COMENT
MOVE -1                         TO CTAXL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-EVALUATE.


20600-CHECK-PO-NUMBER.

IF CDN-PURCHASE-ORDER-CAPTURE-REQ
IF WS-UIWA-PO-NR NOT > SPACES
MOVE PURCHASE-ORDER-REQUIRED   TO OUT-COMENT
MOVE PURCHASE-ORDER-REQUIRED-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
IF COM-PO-REQUIRED = 'Y'
IF WS-UIWA-PO-NR NOT > SPACES
MOVE PO-REQUIRED-TO-FUEL-HERE  TO OUT-COMENT
MOVE PO-REQUIRED-TO-FUEL-HERE-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
IF CDN-PURCHASE-ORDER-VALID
IF WS-UIWA-PO-NR > SPACES
PERFORM PURCHASE-ORDER-EDIT
IF THERE-WAS-AN-ERROR
MOVE PURCHASE-ORDER-INVALID TO OUT-COMENT
MOVE PURCHASE-ORDER-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20605-CHECK-SUB-PRODS.






















CONTINUE.

20606-SUB-PRODS-MOVED.

MOVE FMLP-IN-NR2-SUB-PROD TO WS-HOLD-NR2-SUB-PROD-IN
MOVE FMLP-IN-NR2-QTY      TO WS-UIWA-NR2-QTY
MOVE FMLP-IN-NR2-COST     TO WS-UIWA-NR2-COST
MOVE FMLP-IN-NR1-SUB-PROD TO WS-HOLD-NR1-SUB-PROD-IN
MOVE FMLP-IN-NR1-QTY      TO WS-UIWA-NR1-QTY
MOVE FMLP-IN-NR1-COST     TO WS-UIWA-NR1-COST
MOVE FMLP-IN-REF-SUB-PROD TO WS-HOLD-REF-SUB-PROD-IN
MOVE FMLP-IN-REF-QTY      TO WS-UIWA-REF-QTY
MOVE FMLP-IN-REF-COST     TO WS-UIWA-REF-COST
MOVE FMLP-IN-OTH-SUB-PROD TO WS-HOLD-OTH-SUB-PROD-IN
MOVE FMLP-IN-OTH-QTY      TO WS-UIWA-OTH-QTY
MOVE FMLP-IN-OTH-COST     TO WS-UIWA-OTH-COST
MOVE FMLP-IN-PR1-SUB-PROD TO WS-UIWA-PR1-CODE
MOVE FMLP-IN-PR1-COST     TO WS-UIWA-PR1-COST
MOVE FMLP-IN-PR2-SUB-PROD TO WS-UIWA-PR2-CODE
MOVE FMLP-IN-PR2-COST     TO WS-UIWA-PR2-COST
MOVE FMLP-IN-PR3-SUB-PROD TO WS-UIWA-PR3-CODE
MOVE FMLP-IN-PR3-COST     TO WS-UIWA-PR3-COST.

20610-CHECK-HUB.

IF (TRACTOR-PURCHASE = 1 AND HUB-READING-REQUIRED)
OR
(PRODUCT-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'P')
OR
(THIS-BE-AN-UNATTENDED-PRE-AUTH AND
HUB-READING-REQUIRED)
OR
(TRAILER-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'R')
PERFORM CHECK-FOR-ADDITIVE
END-IF.

CHECK-FOR-ADDITIVE.

MOVE 'Y' TO WS-CHK-HUB
EVALUATE TRUE
WHEN WS-UIWA-NR2-COST > ZERO AND FMLP-ADDTV-FLG-NR2 = 'Y'
WHEN WS-UIWA-NR1-COST > ZERO AND FMLP-ADDTV-FLG-NR1 = 'Y'
WHEN WS-UIWA-REF-COST > ZERO AND FMLP-ADDTV-FLG-REF = 'Y'
WHEN WS-UIWA-OTH-COST > ZERO AND FMLP-ADDTV-FLG-OTH = 'Y'
MOVE 'N' TO WS-CHK-HUB
END-EVALUATE
IF WS-CHK-HUB = 'Y'
PERFORM 20611-CHECK-HUB
END-IF.


20611-CHECK-HUB.

PERFORM HUBOMETER-EDIT
IF THERE-WAS-AN-ERROR
MOVE HUB-MESSAGE      TO OUT-COMENT
MOVE HUB-MESSAGE-N    TO POS-ERROR-NUMBER
MOVE -1 TO FPHUBL
IF HUB-ERROR-FOUND
MOVE HUB-READING-NBR  TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE
MOVE 'Y'              TO VCWS-ERROR-IND
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20620-VALIDATE-PRICE-INFO.

IF EIBTRNID = ('FMBP' OR 'FMMP') OR
SCM-BUSINESS-TYPE-CODE = 'WH' OR
COM-NET-PRICING-FLAG = 'P'
CONTINUE
ELSE
MOVE 'N' TO WS-EXIT-PPG-CHECK
PERFORM 20640-SETUP-PPG-CHECK
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20650-CHECK-CALC-ERROR
PERFORM 20660-VALIDATE-SVC-TYPE
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20670-GET-STATE-PPG-INFO
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20680-CHECK-MIN-MAX-PPG
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20690-SETUP-PPG-VAR-CHECK
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20700-CALC-DAYS-SINCE-LST-XTN
PERFORM 20710-CHECK-FOR-NEW-PRICE
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20720-SEE-IF-PRICE-WAS-ALTER
END-IF
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20730-CHECK-PPG-VARIANCE
END-IF
END-IF.


PRE-AUTH-TBL-UPDT.


IF (WS-UIWA-SYSTEM-ID NOT NUMERIC
OR WS-UIWA-SYSTEM-ID NOT = 1)
AND NOT TRANS-IS-UNATTENDED-PRE-AUTH
IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF

MOVE WS-UIWA-CARD-NR    TO CRD-NBR  OF DPRPPAUT
IF WS-UIWA-SC-CODE > SPACES
MOVE WS-UIWA-SC-CODE TO MRCH-NBR OF DPRPPAUT
ELSE
MOVE SCM-SERVICE-CENTER-CODE
TO MRCH-NBR OF DPRPPAUT
END-IF
MOVE '20'   TO PRE-AUTH-DT OF DPRPPAUT (1:2)
MOVE YMD-YY TO PRE-AUTH-DT OF DPRPPAUT (3:2)
MOVE YMD-MM TO PRE-AUTH-DT OF DPRPPAUT (6:2)
MOVE YMD-DD TO PRE-AUTH-DT OF DPRPPAUT (9:2)
MOVE '-'    TO PRE-AUTH-DT OF DPRPPAUT (5:1)
PRE-AUTH-DT OF DPRPPAUT (8:1)
MOVE 'PRE-AUTH-TBL-UPDT' TO CXUTS0ML-PARAGRAPH
MOVE 'OPEN CURSOR'       TO CXUTS0ML-COMMAND
EXEC SQL
OPEN CUR_PRE_AUTH_UPDT
END-EXEC
PERFORM CHECK-NORMAL-SQL
MOVE 'FETCH CURSOR'      TO CXUTS0ML-COMMAND
EXEC SQL
FETCH CUR_PRE_AUTH_UPDT
INTO  :DPRPPAUT.PRE-AUTH-DT,
:DPRPPAUT.PRE-AUTH-TS,
:DPRPPAUT.D1-AMT-LIM,
:DPRPPAUT.D2-AMT-LIM,
:DPRPPAUT.RFR-AMT-LIM,
:DPRPPAUT.OTH-AMT-LIM,
:DPRPPAUT.OIL-AMT-LIM,
:DPRPPAUT.CASH-AMT-LIM
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = ZERO
EXEC SQL
CLOSE CUR_PRE_AUTH_UPDT
END-EXEC



PERFORM FINALLY-UPDT-PRE-AUTH-TBL
ELSE
EXEC SQL
CLOSE CUR_PRE_AUTH_UPDT
END-EXEC
END-IF
END-IF.

COMPARE-TO-PRE-AUTH-LIMS.

EVALUATE TRUE
WHEN WS-UIWA-NR1-COST > D1-AMT-LIM
WHEN WS-UIWA-NR2-COST > D2-AMT-LIM
WHEN WS-UIWA-REF-COST > RFR-AMT-LIM
WHEN WS-UIWA-OTH-COST > OTH-AMT-LIM
WHEN WS-UIWA-OIL-COST > OIL-AMT-LIM
WHEN WS-UIWA-CASH-AMT > CASH-AMT-LIM
CONTINUE
WHEN OTHER
MOVE 'Y' TO WS-FORCE-POST-FROM-PRE-AUTH
END-EVALUATE.

FINALLY-UPDT-PRE-AUTH-TBL.

MOVE 'UPDT-PRE-AUTH-TBL' TO CXUTS0ML-PARAGRAPH
MOVE 'UPDATE'            TO CXUTS0ML-COMMAND
MOVE 'P'  TO POST-FLG     OF DPRPPAUT
MOVE +2   TO MDY-USR-LEN  OF DPRPPAUT
MOVE 'US' TO MDY-USR-TEXT OF DPRPPAUT
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
UPDATE DBO.PRP_PRE_AUTH
SET   POST_FLG = :DPRPPAUT.POST-FLG,
MDY_TS   = CURRENT TIMESTAMP,
MDY_USR  = :DPRPPAUT.MDY-USR
WHERE CRD_NBR     = :DPRPPAUT.CRD-NBR
AND MRCH_NBR    = :DPRPPAUT.MRCH-NBR
AND PRE_AUTH_DT = :DPRPPAUT.PRE-AUTH-DT
AND PRE_AUTH_TS = :DPRPPAUT.PRE-AUTH-TS
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM
PERFORM CHECK-NORMAL-SQL.

20630-GET-PRICE-CONTROL-INFO.

MOVE '20630-GET-PRICE-CONTROL-INFO' TO CXUTS0ML-PARAGRAPH.


MOVE SPACES     TO SERVICE-CENTER-PRICE-MASTER
MOVE 'XX'       TO SCPM-KEY
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-PRICE-MASTER)
RIDFLD  (SCPM-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCPM-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM 60300-CHECK-SCSTATE-NUMERICS.


20640-SETUP-PPG-CHECK.

MOVE 'N' TO WS-EXIT-PPG-CHECK.
EVALUATE TRUE
WHEN PGRM-FUNCTION-CASH-ONLY
MOVE WS-UIWA-CASH-AMT TO INP-TOTAL-COST
MOVE 0 TO INP-NR-GALLONS,
INP-PRICE-GALLON,
WS-CDN-DISC,
WS-PERCENTAGES,
WS-WORK-TOTAL-AR
MOVE 'Y' TO WS-EXIT-PPG-CHECK
WHEN PGRM-FUNCTION-OIL-ONLY
MOVE WS-UIWA-OIL-QTY TO INP-NR-GALLONS
MOVE WS-UIWA-OIL-COST TO INP-TOTAL-COST
MOVE 0 TO INP-PRICE-GALLON,
WS-CDN-DISC,
WS-PERCENTAGES,
WS-WORK-TOTAL-AR
MOVE 'Y' TO WS-EXIT-PPG-CHECK
WHEN PGRM-FUNCTION-PRODUCT-ONLY
COMPUTE INP-TOTAL-COST = WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST
MOVE 0 TO INP-PRICE-GALLON,
WS-CDN-DISC,
WS-PERCENTAGES,
WS-WORK-TOTAL-AR,
INP-NR-GALLONS
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-EVALUATE.


20650-CHECK-CALC-ERROR.


MOVE FP-CALC-ERR-MESSAGE TO MULTIPLY-ERROR-MESSAGE.

IF TRAILER-PURCHASE = 1
PERFORM 20651-CHECK-CALC-ERROR-TRL
END-IF.
IF TRACTOR-PURCHASE = 1
PERFORM 20652-CHECK-CALC-ERROR-TRAC
END-IF.


20651-CHECK-CALC-ERROR-TRL.

MOVE WS-UIWA-REF-QTY      TO INP-NR-GALLONS
MOVE WS-UIWA-REF-PPU      TO INP-PRICE-GALLON
MOVE WS-UIWA-REF-COST     TO INP-TOTAL-COST
MOVE WS-UIWA-REF-QTY-SC   TO INP2-NR-GALLONS
MOVE WS-UIWA-REF-PPU-SC   TO INP2-PRICE-GALLON
MOVE WS-UIWA-REF-COST-SC  TO INP2-TOTAL-COST
PERFORM VERIFY-PRICE
IF THERE-WAS-AN-ERROR
MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1  TO TRGLNL
MOVE 'I' TO TRGLNA, TRCOSTA, TRTOTALA, TRSPRDA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20652-CHECK-CALC-ERROR-TRAC.

IF (WS-UIWA-OTH-QTY > ZEROES OR
WS-UIWA-OTH-COST > ZEROES)
MOVE WS-UIWA-OTH-QTY      TO INP-NR-GALLONS
MOVE WS-UIWA-OTH-PPU      TO INP-PRICE-GALLON
MOVE WS-UIWA-OTH-COST     TO INP-TOTAL-COST
MOVE WS-UIWA-OTH-QTY-SC   TO INP2-NR-GALLONS
MOVE WS-UIWA-OTH-PPU-SC TO INP2-PRICE-GALLON
MOVE WS-UIWA-OTH-COST-SC  TO INP2-TOTAL-COST
PERFORM VERIFY-PRICE
IF THERE-WAS-AN-ERROR
MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1 TO FPGLNSBL
MOVE 'I' TO FPGLNSBA, FPCOSTBA, FPTTLBA, FPSPRDA,
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF (WS-UIWA-NR1-QTY > ZEROES OR
WS-UIWA-NR1-COST > ZEROES)
MOVE WS-UIWA-NR1-QTY       TO INP-NR-GALLONS
MOVE WS-UIWA-NR1-PPU       TO INP-PRICE-GALLON
MOVE WS-UIWA-NR1-COST      TO INP-TOTAL-COST
MOVE WS-UIWA-NR1-QTY-SC    TO INP2-NR-GALLONS
MOVE WS-UIWA-NR1-PPU-SC TO INP2-PRICE-GALLON
MOVE WS-UIWA-NR1-COST-SC   TO INP2-TOTAL-COST
PERFORM VERIFY-PRICE
IF THERE-WAS-AN-ERROR
MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1 TO NR1GLNSL
MOVE 'I' TO NR1GLNSA, NR1COSTA, NR1TTLA, N1SPRDA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF (WS-UIWA-NR2-QTY > ZEROES OR
WS-UIWA-NR2-COST > ZEROES)
MOVE WS-UIWA-NR2-QTY      TO INP-NR-GALLONS
MOVE WS-UIWA-NR2-PPU      TO INP-PRICE-GALLON
MOVE WS-UIWA-NR2-COST     TO INP-TOTAL-COST
MOVE WS-UIWA-NR2-QTY-SC   TO INP2-NR-GALLONS
MOVE WS-UIWA-NR2-PPU-SC   TO INP2-PRICE-GALLON
MOVE WS-UIWA-NR2-COST-SC  TO INP2-TOTAL-COST
PERFORM VERIFY-PRICE
IF THERE-WAS-AN-ERROR
MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1 TO FPGLNSL
MOVE 'I' TO FPGLNSA, FPCOSTA, FPTTLA, N2SPRDA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20660-VALIDATE-SVC-TYPE.


MOVE INP-PRICE-GALLON  TO HOLD-INP-PRICE-GALLON.


IF NOT FUEL-PRICE-TO-BE-CHECKED
MOVE 0 TO COM-FP-FULL-PRICE
MOVE 0 TO COM-FP-MINI-PRICE
MOVE 0 TO COM-FP-SELF-PRICE.


IF FPFSI = 'F' OR
FPFSI = 'M' OR
FPFSI = 'S' OR
FPFSI = 'W'
NEXT SENTENCE
ELSE
MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1                        TO FPFSL
MOVE DFHBMASB                  TO FPFSHDA
MOVE 'I'                       TO FPFSA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


EVALUATE TRUE ALSO TRUE
WHEN SELF-SERVICE-ONLY ALSO FPFSI NOT = 'S'
MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1                        TO FPFSL
MOVE DFHBMASB                  TO FPFSHDA
MOVE 'I'                       TO FPFSA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN SELF-MINI-SERVICE  ALSO FPFSI     = 'F'
MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1                        TO FPFSL
MOVE DFHBMASB                  TO FPFSHDA
MOVE 'I'                       TO FPFSA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


MOVE COM-FP-SC-CODE TO  SCMSTR-KEY.
IF SCM-KEY-NUM = '999'
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-IF.


20670-GET-STATE-PPG-INFO.




IF TRACTOR-PURCHASE NOT = 1 OR
WS-UIWA-NR2-QTY      = 0
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-IF.

IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20671-GET-STATE-PPG-INFO
END-IF.


20671-GET-STATE-PPG-INFO.

MOVE '20671-GET-STATE-PPG-INFO'  TO CXUTS0ML-PARAGRAPH.

IF COM-TS-STATE NOT > SPACES
MOVE SCM-KEY-ST TO COM-TS-STATE.
IF NOT THIS-BE-A-PC-REQUEST OR
THIS-BE-TERMINAL-FUEL
MOVE SPACES TO SERVICE-CENTER-STATE-RECORD
MOVE COM-TS-STATE TO SCSR-STATE
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-STATE-RECORD)
RIDFLD  (SCSR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCSR-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
MOVE 'Y' TO  WS-READ-SCSTATE-SW
END-IF
PERFORM 60300-CHECK-SCSTATE-NUMERICS.


20680-CHECK-MIN-MAX-PPG.


IF INP2-PRICE-GALLON < SCSR-MIN-FUEL-PRICE OR
INP2-PRICE-GALLON > SCSR-MAX-FUEL-PRICE
MOVE SCSR-MIN-FUEL-PRICE TO PRICE-EXCEEDS-MAX-MIN
MOVE SCSR-MAX-FUEL-PRICE TO PRICE-EXCEEDS-MAX-MAX
MOVE PRICE-EXCEEDS-MAX   TO OUT-COMENT
MOVE PRICE-EXCEEDS-MAX-N TO POS-ERROR-NUMBER
MOVE -1                  TO FPCOSTL
MOVE 'I'                 TO FPCOSTA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF THIS-BE-TERMINAL-FUEL
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-IF.


20690-SETUP-PPG-VAR-CHECK.










MOVE WS-UIWA-NR2-PPU-SC TO INP-PRICE-GALLON,
HOLD-INP-PRICE-GALLON.


IF EIBTRMID IS = '9999'
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-IF.


20700-CALC-DAYS-SINCE-LST-XTN.


IF COM-FP-PRICE-DATE NOT NUMERIC
MOVE WS-CURRENT-DATE-YYDDD TO COM-FP-PRICE-DATE.
IF COM-FP-PRICE-DATE > ZEROES
MOVE +223 TO CALENDAR-OPTIONS
MOVE COM-FP-PRICE-DATE TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-DAYS TO WS-CALC-DAYS
ELSE
MOVE 999999 TO WS-CALC-DAYS.


20710-CHECK-FOR-NEW-PRICE.


IF TRACTOR-PURCHASE  = 1 AND
WS-UIWA-NR2-QTY > 0
IF (FPFSI = 'F' AND COM-FP-FULL-PRICE = 0) OR
(FPFSI = 'M' AND COM-FP-MINI-PRICE = 0) OR
(FPFSI = 'S' AND COM-FP-SELF-PRICE = 0)
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK.


20720-SEE-IF-PRICE-WAS-ALTER.

IF COM-PNET-BULK-FUEL-YES            OR
COM-PNET-NEGOTIATED-PRICING = 'Y' OR
COM-COST-PLUS-PRICE-ALTERED
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK.


20730-CHECK-PPG-VARIANCE.


PERFORM 20731-DETERMINE-VARIANCE.
PERFORM 20731-SETUP-PPG-VAR1.
PERFORM 20732-CHECK-PPG-VAR1.
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20733-CHECK-PPG-TAX
END-IF.
IF WS-EXIT-PPG-CHECK = 'N'
PERFORM 20734-CHECK-PPG-VAR2
END-IF.


20731-DETERMINE-VARIANCE.

EVALUATE TRUE
WHEN CDN-CREDIT-PRICED-FLAG = 'U' OR
CDN-CREDIT-PRICED-FLAG = 'T' OR
CDN-CREDIT-PRICED-FLAG = 'Y' OR
CDN-CREDIT-PRICED-FLAG = 'F'
MOVE SCPM-LEVEL-1-VARIANCE-CREDIT TO
WS-SCPM-LEVEL-1-VARIANCE
WHEN CDN-CREDIT-PRICED-FLAG = 'C' AND
COM-CREDIT-PRICED-FLAG = 'Y'
MOVE SCPM-LEVEL-1-VARIANCE-CREDIT TO
WS-SCPM-LEVEL-1-VARIANCE
WHEN OTHER
MOVE SCPM-LEVEL-1-VARIANCE TO
WS-SCPM-LEVEL-1-VARIANCE
END-EVALUATE.


20731-SETUP-PPG-VAR1.


MOVE ZEROES TO WS-PPG-VAR.
EVALUATE TRUE
WHEN FPFSI = 'F'
COMPUTE WS-PPG-VAR = COM-FP-FULL-PRICE -
INP-PRICE-GALLON
WHEN FPFSI = 'M'
COMPUTE WS-PPG-VAR = COM-FP-MINI-PRICE -
INP-PRICE-GALLON
WHEN FPFSI = 'S'
COMPUTE WS-PPG-VAR = COM-FP-SELF-PRICE -
INP-PRICE-GALLON
END-EVALUATE.
IF WS-PPG-VAR < 0 THEN
COMPUTE WS-PPG-VAR = WS-PPG-VAR * -1
END-IF.


20732-CHECK-PPG-VAR1.



IF THIS-BE-A-SMART-FUEL-AUTH
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
ELSE
EVALUATE TRUE
WHEN WS-PPG-VAR > WS-SCPM-LEVEL-1-VARIANCE
IF WS-CALC-DAYS > SCPM-LEVEL-1-DAYS
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
END-IF
WHEN OTHER
IF WS-PPG-VAR > +.009 OR
COM-FP-PRICE-DATE NOT = WS-CURRENT-DATE-YYDDD
PERFORM LOG-THE-PRICE
END-IF
MOVE 'Y' TO WS-EXIT-PPG-CHECK
PERFORM FP-0108
END-EVALUATE
END-IF
.


20733-CHECK-PPG-TAX.


IF (SCSR-TAX-EITHER) AND (COM-SCM-TAX-IN-POSTED)
IF WS-TAX-TRIED = 'N'
COMPUTE INP-PRICE-GALLON = INP-PRICE-GALLON +
SCSR-TAX-RATE
MOVE 'Y' TO WS-TAX-TRIED
MOVE WS-PPG-VAR TO WS-TAX-TRIED-VAR
PERFORM 20732-CHECK-PPG-VAR1.
IF (SCSR-TAX-EITHER AND COM-SCM-TAX-NOT-IN-POSTED)
IF WS-TAX-TRIED = 'N'
COMPUTE INP-PRICE-GALLON = INP-PRICE-GALLON -
SCSR-TAX-RATE
MOVE WS-PPG-VAR TO WS-TAX-TRIED-VAR
MOVE 'Y' TO WS-TAX-TRIED
PERFORM 20732-CHECK-PPG-VAR1.


IF WS-EXIT-PPG-CHECK = 'N'
IF WS-TAX-TRIED = 'Y'
IF WS-PPG-VAR < WS-TAX-TRIED-VAR
MOVE INP-PRICE-GALLON TO WS-TAX-PPG-HOLD
END-IF
MOVE WS-TAX-TRIED-VAR TO WS-PPG-VAR.


20734-CHECK-PPG-VAR2.


MOVE HOLD-INP-PRICE-GALLON TO INP-PRICE-GALLON.
MOVE 'N'                   TO WS-TAX-TRIED.


IF WS-PPG-VAR NOT > SCPM-LEVEL-2-VARIANCE
IF WS-CALC-DAYS > SCPM-LEVEL-2-DAYS
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
ELSE
IF (EIBAID               = DFHPF3)      OR
(COM-PNET-BRIDGE-FLAG = 'X' OR 'L')
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
ELSE
PERFORM SEND-FUEL-PRICE-ERROR.
IF WS-PPG-VAR > SCPM-LEVEL-2-VARIANCE
IF WS-CALC-DAYS > SCPM-LEVEL-2-DAYS
PERFORM LOG-THE-PRICE
PERFORM FP-0108
MOVE 'Y' TO WS-EXIT-PPG-CHECK
ELSE
MOVE '*NO OVERRIDE' TO PRICE-ERROR-OVER-FLAG,
PRICE-ERROR-OVER-FLAG-TAX,
PERFORM SEND-FUEL-PRICE-ERROR.


FP-0108.

MOVE HOLD-INP-PRICE-GALLON TO INP-PRICE-GALLON.

IF FPFSI = 'M'
MOVE 'S' TO WS-UIWA-SERVICE-TYPE.
IF TRACTOR-PURCHASE = 1 AND
WS-UIWA-NR2-QTY > 0
ADD WS-UIWA-OTH-QTY TO INP-NR-GALLONS
ADD WS-UIWA-OTH-COST TO INP-TOTAL-COST
ADD WS-UIWA-NR1-QTY TO INP-NR-GALLONS
ADD WS-UIWA-NR1-COST TO INP-TOTAL-COST.

MOVE SPACES TO WS-FF-LOG-RECD.

PERFORM DISCOUNT-CALCULATIONS
IF THERE-WAS-AN-ERROR
MOVE -1 TO FPFSL
MOVE DFHBMASB TO FPFSHDA
MOVE 'I' TO FPFSA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20740-CHECK-LIMIT-FOR-CRD-NETW.


IF CDN-LIM-NETW-BY-CARD = 'Y' AND
PRM-LIM-NETW-BY-CARD = 'Y'
IF COM-NETWORK-BY-CARD = 'Y'
PERFORM CHECK-LIM-NETW-LIMITS.


20750-COMPUTE-BILLABLE-AND-NON.




COMPUTE WS-CURXMN = WS-UIWA-NR2-COST +
WS-UIWA-OTH-COST +
WS-UIWA-REF-COST +
WS-UIWA-NR1-COST +
WS-UIWA-OIL-COST +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-TAX-AMT.
COMPUTE WS-TOTAL-REQUEST = WS-CURXMN +
WS-UIWA-CASH-AMT.
COMPUTE WS2-CURXMN = WS-UIWA-NR2-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC.
COMPUTE WS2-TOTAL-REQUEST = WS2-CURXMN +
WS-UIWA-CASH-AMT-SC.
COMPUTE WS3-CURXMN = WS-UIWA-NR2-COST-US +
WS-UIWA-OTH-COST-US +
WS-UIWA-REF-COST-US +
WS-UIWA-NR1-COST-US +
WS-UIWA-OIL-COST-US +
WS-UIWA-PR1-COST-US +
WS-UIWA-PR2-COST-US +
WS-UIWA-PR3-COST-US +
WS-UIWA-TAX-AMT-US.
COMPUTE WS3-TOTAL-REQUEST = WS3-CURXMN +
WS-UIWA-CASH-AMT-US.

MOVE WS-BILLABLE           TO WS-LTIH-PROD-BILLABLE
MOVE WS2-BILLABLE          TO WS-LTIH-PROD-BILLABLE2
MOVE WS-NON-BILLABLE       TO WS-LTIH-PROD-NON-BILLABLE
MOVE WS2-NON-BILLABLE      TO WS-LTIH-PROD-NON-BILLABLE2
MOVE WS2-BILLABLE-FUEL     TO WS-LTIH-PROD-BILLABLE-FUEL
MOVE WS2-NON-BILLABLE-FUEL TO WS-LTIH-PROD-NON-BILLABLE-FUEL

MOVE 'N' TO WS-TAX-ADDED.
IF COM-DIRECT-BILLING-FUEL = '1'
ADD WS-UIWA-NR2-COST, WS-UIWA-REF-COST,
WS-UIWA-OTH-COST, WS-UIWA-NR1-COST
TO WS-NON-BILLABLE
ADD WS-UIWA-NR2-COST-SC, WS-UIWA-REF-COST-SC,
WS-UIWA-OTH-COST-SC, WS-UIWA-NR1-COST-SC
TO WS2-NON-BILLABLE, WS2-NON-BILLABLE-FUEL
IF WS-UIWA-TAX-AMT > 0 OR WS-UIWA-TAX-AMT-SC > 0
ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE
WS2-NON-BILLABLE-FUEL
MOVE 'Y' TO WS-TAX-ADDED
END-IF
ELSE
ADD WS-UIWA-NR2-COST, WS-UIWA-REF-COST,
WS-UIWA-OTH-COST, WS-UIWA-NR1-COST
TO WS-BILLABLE
ADD WS-UIWA-NR2-COST-SC, WS-UIWA-REF-COST-SC,
WS-UIWA-OTH-COST-SC, WS-UIWA-NR1-COST-SC
TO WS2-BILLABLE, WS2-BILLABLE-FUEL
IF WS-UIWA-TAX-AMT > 0 OR WS-UIWA-TAX-AMT-SC > 0
ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE
WS2-BILLABLE-FUEL
MOVE 'Y' TO WS-TAX-ADDED
END-IF
END-IF.
IF COM-DIRECT-BILLING-OIL = '1'
ADD WS-UIWA-OIL-COST TO WS-NON-BILLABLE
ADD WS-UIWA-OIL-COST-SC TO WS2-NON-BILLABLE
IF WS-UIWA-TAX-AMT > 0 AND WS-TAX-ADDED = 'N'
ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE
WS2-NON-BILLABLE-FUEL
MOVE 'Y' TO WS-TAX-ADDED
END-IF
ELSE
ADD WS-UIWA-OIL-COST TO WS-BILLABLE
ADD WS-UIWA-OIL-COST-SC TO WS2-BILLABLE
IF WS-UIWA-TAX-AMT > 0 AND WS-TAX-ADDED = 'N'
ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE
WS2-BILLABLE-FUEL
MOVE 'Y' TO WS-TAX-ADDED
END-IF
END-IF.
IF COM-DIRECT-BILLING-CASH = '1'
ADD WS-UIWA-CASH-AMT TO WS-NON-BILLABLE
ADD WS-UIWA-CASH-AMT-SC TO WS2-NON-BILLABLE
ELSE
ADD WS-UIWA-CASH-AMT TO WS-BILLABLE
ADD WS-UIWA-CASH-AMT-SC TO WS2-BILLABLE.
IF WS-TAX-ADDED = 'N'
IF WS-BILLABLE > ZEROES AND
WS-BILLABLE NOT = WS-UIWA-CASH-AMT
ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE,
WS2-BILLABLE-FUEL
ELSE
ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE,
WS2-NON-BILLABLE-FUEL
END-IF
END-IF.

PERFORM 20750-COMPUTE-US-AMOUNTS.


20750-COMPUTE-US-AMOUNTS.


EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE WS-BILLABLE          TO WS3-BILLABLE
MOVE WS-NON-BILLABLE      TO WS3-NON-BILLABLE
WHEN COM-SC-IS-US
MOVE WS2-BILLABLE         TO WS3-BILLABLE
MOVE WS2-NON-BILLABLE     TO WS3-NON-BILLABLE
WHEN COM-CN-COMP-CN-SC
MOVE WS-BILLABLE          TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS3-BILLABLE
MOVE WS-NON-BILLABLE      TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS3-NON-BILLABLE
END-EVALUATE.


20755-SET-BILLABLE-FLAGS.

SET WS-BILLABLE-IS-NOT-ALL-CASH TO TRUE.
IF WS-UIWA-CASH-AMT > ZEROES
IF WS-UIWA-CASH-AMT = WS-BILLABLE OR
WS-UIWA-CASH-AMT-SC = WS2-BILLABLE
SET WS-BILLABLE-IS-ALL-CASH TO TRUE.


20757-CHECK-FOR-ZERO-AMT.

IF WS-BILLABLE     = ZEROES AND
WS-NON-BILLABLE = ZEROES
IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE ZERO-OR-NEG               TO OUT-COMENT
MOVE ZERO-OR-NEG-N             TO POS-ERROR-NUMBER
MOVE -1                        TO FPXPAMTL
IF THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20760-CHECK-AUTO-PRINT-FLAG.


IF THIS-IS-A-POSSIBLE-PRINT
IF FPAUTOI = 'Y' OR 'N'
NEXT SENTENCE
ELSE
IF NOT MNX-TRANSACTION AND
COM-PRM-NETWORKING NOT = 'D'
MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
MOVE MUST-ANSWER-Y-N-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO FPAUTOL
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
IF MNX-TRANSACTION
IF WS-UIWA-CASH-AMT > 0
MOVE 'A' TO FPCHKA
MOVE '8' TO FPCHKHDA
MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE
-                        'ISSUED-' TO FPCHKHDO
MOVE 'PRINT CHECK ON PRINTER-' TO FPAUTHDO
MOVE '?' TO FPAUTOO
MOVE '8' TO FPAUTHDA
MOVE 'A' TO FPAUTOA
MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
MOVE MUST-ENTER-CHECK TO OUT-COMENT-2
MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO FPCHKL
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
MOVE 'N' TO FPAUTOI
ELSE
IF WS-BILLABLE > 0
MOVE 'A' TO FPCHKA
MOVE '8' TO FPCHKHDA
MOVE '8' TO FPAUTHDA
MOVE 'A' TO FPAUTOA
MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE
-                        'ISSUED-' TO FPCHKHDO
MOVE 'PRINT CHECK ON PRINTER-' TO FPAUTHDO
MOVE '?' TO FPAUTOO
MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
MOVE MUST-ENTER-CHECK TO OUT-COMENT-2
MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE -1 TO FPCHKL
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
MOVE 'N' TO FPAUTOI
ELSE
MOVE 'N' TO FPAUTOI.


20770-CHECK-DRAFT-ENTRY.

IF WS-UIWA-CHECK-NRX NOT > SPACES AND
FPAUTOI = 'N'                  AND
NOT THIS-IS-A-SETTLEMENT-ITEM  AND
NOT THIS-BE-TERMINAL-FUEL
EVALUATE TRUE
WHEN MNX-TRANSACTION
PERFORM 20771-CHECK-DRAFT-ENTRY-MNX
WHEN COM-PRM-NETWORKING = 'D'
PERFORM 20772-CHECK-DRAFT-ENTRY-DB
WHEN OTHER
MOVE -1 TO FPCHKL
MOVE MUST-ENTER-CHECK TO OUT-COMENT
MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


20771-CHECK-DRAFT-ENTRY-MNX.

IF WS-UIWA-CASH-AMT > ZEROES
MOVE -1 TO FPCHKL
MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE ISSUED-'
TO FPCHKHDO
MOVE MUST-ENTER-CHECK TO OUT-COMENT
MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
MOVE 'A' TO FPCHKA
MOVE '8' TO FPCHKHDA
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20772-CHECK-DRAFT-ENTRY-DB.

IF WS-BILLABLE > ZEROES
MOVE -1 TO FPCHKL
MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE ISSUED-'
TO FPCHKHDO
MOVE MUST-ENTER-CHECK TO OUT-COMENT
MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
MOVE 'A' TO FPCHKA
MOVE '8' TO FPCHKHDA
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20780-VALIDATE-DRIVER-NAME.

MOVE WS-UIWA-DRV-NAME TO WS-DRVNM.
MOVE 0            TO ORDRPTR-RRN.
SET LTR-INDX, DRV-INDX TO 1.
IF WS-UIWA-DRV-NAME NOT > SPACES
EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE 'AGNAME'  TO WS-UIWA-DRV-NAME
WHEN THIS-BE-AN-ATM-XTN
MOVE 'ATMNAME' TO WS-UIWA-DRV-NAME
END-EVALUATE.

PERFORM
VARYING DRV-INDX FROM 1 BY 1
UNTIL   DRV-INDX = 3
PERFORM 20781-VALIDATE-NAME-CHAR
SUBTRACT 1 FROM TABNBR (LTR-INDX) GIVING LTR-VALUE
IF DRV-INDX = 1
MULTIPLY 676 BY LTR-VALUE GIVING ORDRPTR-RRN
ELSE
MULTIPLY 26 BY LTR-VALUE
ADD LTR-VALUE TO ORDRPTR-RRN
END-IF
END-PERFORM.
ADD TABNBR (LTR-INDX) TO ORDRPTR-RRN.


20781-VALIDATE-NAME-CHAR.

PERFORM
VARYING LTR-INDX FROM 1 BY 1
UNTIL WS-DRVN (DRV-INDX) = LTR-SRCH (LTR-INDX) OR
WS-DRVN (DRV-INDX) < LTR-SRCH (LTR-INDX) OR
LTR-INDX           > 25
END-PERFORM
IF WS-DRVN (DRV-INDX) NOT = LTR-SRCH (LTR-INDX)
EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE ' ' TO ERROR-FLAG
MOVE 'AGNAME' TO WS-UIWA-DRV-NAME
WHEN THIS-BE-AN-ATM-XTN
MOVE ' ' TO ERROR-FLAG
MOVE 'ATMNAME' TO WS-UIWA-DRV-NAME
WHEN OTHER
MOVE INVALID-CHAR-IN-NAME TO OUT-COMENT
MOVE INVALID-CHAR-IN-NAME-N TO POS-ERROR-NUMBER
MOVE -1 TO FPNAMEL
MOVE 'I' TO FPNAMEA
MOVE DFHBMASB TO FPNAMHDA
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20790-CHECK-CARD-PURC-LIMIT.


IF (CSR-PURC-LIMIT-ON-CARD) AND
(NOT THIS-BE-A-VRU-XTN)  AND
(PRM-PURC-USED + WS-CURXMN > PRM-PURC-INITIAL)
EVALUATE TRUE
WHEN COM-CN-COMP-US-SC
SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS TO XCS-PURC-REQ
WHEN COM-US-COMP-CN-SC
SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO XCS-PURC-REQ
WHEN OTHER
SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
XCS-PURC-REQ
END-EVALUATE
MOVE CARD-PURCHASE-EXCEEDED     TO OUT-COMENT
MOVE CARD-PURCHASE-EXCEEDED-N   TO POS-ERROR-NUMBER
MOVE -1 TO FPCMT1L
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20795-CHECK-FLEET-LIMITS.


IF CDN-FLEET-LIMIT-FLAG = 'Y'
MOVE 'B'                   TO FMLP-LIM-PROCESS-IND
MOVE WS-CURXMN             TO FMLP-CURXMN
IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
PERFORM PII-SETUP-FMLP-POSTING
END-IF
PERFORM LINK-TO-TSFMO0LP
IF FMLP-ERROR
MOVE FMLP-FPCMT1L          TO FPCMT1L
MOVE FMLP-OUT-COMENT       TO OUT-COMENT
MOVE FMLP-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

LINK-TO-TSFMO0LP.

MOVE 'LINK-TO-TSFMO0LP'          TO CXUTS0ML-PARAGRAPH.

EXEC CICS LINK
PROGRAM  ('TSFMO0LP')
COMMAREA (WS-TSFMO0LP-COMMAREA)
LENGTH   (LENGTH OF WS-TSFMO0LP-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF WS-TSFMO0LP-RETURN-CODE NOT = ZERO
MOVE WS-TSFMO0LP-RETURN-CODE TO
WS-TSFMO0LP-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-TSFMO0LP-ABEND)
END-EXEC
END-IF.

20800-CHECK-UNIT-LIMITS.

IF PGRM-FUNCTION > ZEROES OR
THIS-BE-AN-UNATTENDED-PRE-AUTH
PERFORM 20801-CHECK-TRIP-ALLOWANCE
PERFORM 20802-COMPUTE-CURRENT-DAY
PERFORM 20803-CHECK-MAX-DAILY
PERFORM 20804-CHECK-SPECIAL-LIMITS.


20801-CHECK-TRIP-ALLOWANCE.


IF WS-RFL-MAX-PURC-VARIANCE = ZERO
MOVE 25  TO WS-RFL-MAX-PURC-VARIANCE.
IF TRIP-ALLOWANCE-SET
MOVE 0   TO WS-RFL-MAX-PURC-VARIANCE
IF UNITMST-INIT-TRIP-ALLOW > 0 AND
UNITMST-TRIP-ALLOW-USED + WS-CURXMN >
UNITMST-INIT-TRIP-ALLOW
MOVE TRIP-ALLOW-EXCEEDED     TO OUT-COMENT
MOVE TRIP-ALLOW-EXCEEDED-N   TO POS-ERROR-NUMBER
MOVE TRIP-ALLOW-EXCEEDED-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG        TO NEW-OUT-MESSAGE
MOVE 'Y'                     TO VCWS-ERROR-IND
MOVE -1                      TO FPCMT1L
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED    TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N  TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20802-COMPUTE-CURRENT-DAY.


MOVE WS-CURXMN TO WS-CURR-DAY-TOTAL.
IF WS-CURRENT-DATE-YYDDD = UNITMST-DATE-LAST-XTN
COMPUTE WS-CURR-DAY-TOTAL = WS-CURR-DAY-TOTAL          +
UNITMST-CURR-DAY-REQ-AMT   +
UNITMST-CURR-DAY-OIL-COST.


20803-CHECK-MAX-DAILY.


IF WS-RFL-MAX-PURC-DLY-FUEL   = ZEROES  OR
WS-CURR-DAY-TOTAL          < WS-RFL-MAX-PURC-DLY-FUEL
NEXT SENTENCE
ELSE
MULTIPLY WS-RFL-MAX-PURC-VARIANCE-R BY
WS-RFL-MAX-PURC-DLY-FUEL
GIVING WS-EXTRA-AMT ROUNDED
ADD WS-RFL-MAX-PURC-DLY-FUEL   TO WS-EXTRA-AMT
IF WS-CURR-DAY-TOTAL NOT > WS-EXTRA-AMT
MOVE 'O' TO SAVE-BY-GRACE-FLAG
ELSE
MOVE WS-RFL-MAX-PURC-DLY-FUEL   TO PURC-MAX-NR
MOVE WS-RFL-MAX-PURC-VARIANCE   TO PURC-VAR-NR
MOVE WS-EXTRA-AMT               TO PURC-TOTAL-NR
SUBTRACT WS-CURR-DAY-TOTAL FROM WS-EXTRA-AMT
MOVE WS-EXTRA-AMT TO PURC-DIFF-NR
MOVE WS-EXTRA-AMT TO NEW-PURC-DIFF-NBR
ADD UNITMST-CURR-DAY-REQ-AMT,
UNITMST-CURR-DAY-OIL-COST
GIVING WS-EXTRA-AMT
MOVE WS-EXTRA-AMT               TO PURC-USED-NR
MOVE PURC-MAX-MESSAGE           TO OUT-COMENT
MOVE PURC-MAX-MESSAGE-N TO POS-ERROR-NUMBER
MOVE NEW-PURC-MAX-MESSAGE1      TO NEW-OUT-MSG1
MOVE NEW-PURC-MAX-MESSAGE2      TO NEW-OUT-MSG2
MOVE 'Y'                        TO VCWS-ERROR-IND
MOVE -1 TO FPCMT1L
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20804-CHECK-SPECIAL-LIMITS.


IF (WS-FP-ACCT-CODE = 'MI448' OR 'MI419') AND
(MNX-SPECIAL)
IF WS-UIWA-NR2-COST + WS-UIWA-OTH-COST > 60
MOVE MAX-PURC-MNX-DRIVER     TO OUT-COMENT
MOVE MAX-PURC-MNX-DRIVER-N   TO POS-ERROR-NUMBER
MOVE NEW-MAX-PURC-MNX-DRIVER TO NEW-OUT-MESSAGE
MOVE 'Y'                     TO VCWS-ERROR-IND
MOVE -1 TO FPCMT1L
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20805-CHECK-COMCHEK-FUEL-LMTS.


IF PIR-CMCK-FUEL-LIMIT-USED NOT NUMERIC
MOVE ZEROS TO PIR-CMCK-FUEL-LIMIT-USED.
IF CSR-CMCK-FUEL-LIMIT NOT NUMERIC
MOVE ZEROS TO CSR-CMCK-FUEL-LIMIT.

IF CDN-LOAD-PAY-NETWORK = 'C'
AND (PIR-CMCK-FUEL-LIMIT-USED + WS-CURXMN >
CSR-CMCK-FUEL-LIMIT)
SUBTRACT PIR-CMCK-FUEL-LIMIT-USED
FROM CSR-CMCK-FUEL-LIMIT
GIVING CMCKMOB-AVAIL-AMT
MOVE COMCHEK-MOB-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE COMCHEK-MOB-LIMIT-EXCEEDED   TO OUT-COMENT
MOVE -1 TO FPCMT1L
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20810-CHECK-BRIDGE-ACCT.

IF CDN-CUST-ACCT-CODE = 'BR000'
IF NOT COM-PNET-BRIDGE-FLAG-YES
MOVE ACCT-BR000-MUST-BE-BRIDGE-N TO POS-ERROR-NUMBER
MOVE ACCT-BR000-MUST-BE-BRIDGE   TO OUT-COMENT
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
IF CDN-CUST-ACCT-CODE = 'BR000'
IF WS-BILLABLE > ZEROES
MOVE FUNDED-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE FUNDED-NOT-ALLOWED   TO OUT-COMENT
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20820-CHECK-CREDIT.

IF COM-CC-FUNDED-OVERRIDE
MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.
INITIALIZE DCREDITL
MOVE 'N'    TO WS-EXIT-FLAG.


IF (COM-COMDATA-COMPLETE-FLAG = 'Y') AND
(WS3-NON-BILLABLE > ZEROES)       AND
(COM-CC-FUNDED OR COM-CC-NON-FUNDED OR COM-CC-RECOURSE)
PERFORM 20821-GET-CC-CREDIT
PERFORM 20822-CHECK-CC-OVERRIDE
PERFORM 20823-CHECK-CC-CREDIT1
IF WS-EXIT-FLAG = 'N'
PERFORM 20823-CHECK-CC-CREDIT2
PERFORM 20823-CHECK-CC-CREDIT3.

MOVE 'N'    TO WS-EXIT-FLAG.
PERFORM 20825-CHECK-NORMAL-CREDIT1.
PERFORM 20825-CHECK-NORMAL-CREDIT2.
IF WS-EXIT-FLAG = 'N'
PERFORM 20825-CHECK-NORMAL-CREDIT3.


20821-GET-CC-CREDIT.

EVALUATE TRUE
WHEN COM-CC-FUNDED
MOVE CDN-COMDATA-CMPLT-ACCT-CODE
TO CL-CO-CD OF DCREDITL
WHEN COM-CC-RECOURSE
MOVE COM-CC-SCM-ACCT-CODE
TO CL-CO-CD OF DCREDITL
WHEN COM-CC-NON-FUNDED
CONTINUE
WHEN OTHER
MOVE 'F'    TO COM-COMDATA-COMPLETE-STATUS
MOVE CDN-COMDATA-CMPLT-ACCT-CODE
TO CL-CO-CD OF DCREDITL
END-EVALUATE.

IF COM-CC-NON-FUNDED
MOVE COM-COMDATA-COMPLETE-LIMIT TO WS-CC-AVAIL
ELSE
MOVE 'A' TO WS-CREDITL-READ-SW
PERFORM READ-CREDITL
IF WS-CREDIT-LIMIT = ZEROES
MOVE 'Y'    TO WS-CC-CUT-OFF1
MOVE ZEROES TO WS-CC-AVAIL
ELSE
MOVE 'N'    TO WS-CC-CUT-OFF1
COMPUTE WS-CC-AVAIL =
WS-CREDIT-LIMIT
- ((WS-UPDATE-OR-AR-BAL
- WS-CASH-RECEIVED)
+ WS-CURRENT-DAY)
END-COMPUTE
END-IF
END-IF.


20822-CHECK-CC-OVERRIDE.


IF (COM-CC-FUNDED                 ) AND
(WS3-NON-BILLABLE > WS-CC-AVAIL) AND
(CDN-COMDATA-COMPLETE-HARD     ) AND
(SCM-RECOURSE-FLAG-AVAIL       )
MOVE 'O' TO COM-COMDATA-COMPLETE-STATUS
MOVE 'COMDATA COMPLETE (FO)   ' TO FPCHKHDO
PERFORM 20821-GET-CC-CREDIT.


20823-CHECK-CC-CREDIT1.


IF COM-CC-RECOURSE
IF WS3-NON-BILLABLE  > WS-CC-AVAIL     OR
WS3-NON-BILLABLE  > COM-COMDATA-COMPLETE-LIMIT
MOVE ZEROES TO WS-CC-AVAIL.


IF CDN-COMDATA-COMPLETE-HARD
IF WS3-NON-BILLABLE > WS-CC-AVAIL
PERFORM 20829-CREDIT-EXCEEDED
ELSE
MOVE 'Y' TO WS-EXIT-FLAG.


20823-CHECK-CC-CREDIT2.




IF (CDN-COMDATA-COMPLETE-SOFT) AND
(COM-CC-CUT-OFF2 = 'Y')     AND
(COM-CC-FUNDED)
MOVE 'N' TO COM-CC-CUT-OFF2.


IF CDN-COMDATA-COMPLETE-SOFT
IF WS-CC-CUT-OFF1 = 'Y' OR
COM-CC-CUT-OFF2 = 'Y'
PERFORM 20829-CREDIT-EXCEEDED.


20823-CHECK-CC-CREDIT3.


IF CDN-COMDATA-COMPLETE-SOFT AND
COM-CC-FUNDED
PERFORM COPY-CREDLNK
IF CCL-FUNC-RTC NOT = ZEROES
MOVE 'C' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD.


20825-CHECK-NORMAL-CREDIT1.


MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL
IF (CDN-CUST-ACCT-CODE = 'BR000') OR
(COM-PNET-BRIDGE-FLAG-YES AND WS3-BILLABLE = ZERO)
MOVE ZEROES TO CCL-FUNC-RTC

MOVE +99999999 TO WS-CREDIT-LIMIT
MOVE ZEROES    TO WS-UPDATE-OR-AR-BAL
WS-CASH-RECEIVED
WS-CURRENT-DAY
ELSE
MOVE 'C' TO WS-CREDITL-READ-SW
PERFORM READ-CREDITL
END-IF


IF WS-BALANCE-BASED AND
CDN-BILL-AT-LOAD
CONTINUE
ELSE
IF WS-CREDIT-LIMIT = ZEROS AND
CDN-COMCASH-FLAG = 'Y'  AND
CCL-FUNC-RTC = ZEROS
MOVE 'Y' TO WS-EXIT-FLAG
END-IF
END-IF.



IF WS-EXIT-FLAG NOT = 'Y'
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
IF WS3-BILLABLE          > ZEROES
IF WS-CREDIT-LIMIT > ZEROES     OR
CL-OVRD-CD OF DCREDITL = 'O' OR
CL-FP-OVRD OF DCREDITL = 'O'
NEXT SENTENCE
ELSE
PERFORM 20829-CREDIT-EXCEEDED.


20825-CHECK-NORMAL-CREDIT2.

MOVE WS-TOTAL-REQUEST  TO WS-CURXMN.
MOVE WS2-TOTAL-REQUEST TO WS2-CURXMN.
MOVE WS3-TOTAL-REQUEST TO WS3-CURXMN.
IF THIS-BE-TERMINAL-FUEL
MOVE 0 TO WS-CURXMN
MOVE 0 TO WS2-CURXMN
MOVE 0 TO WS3-CURXMN.


MOVE SAVE-PCTUP TO FF-PERCENTAGES.

IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
WS3-BILLABLE = ZEROES
MOVE ZEROES TO CCL-FUNC-RTC

MOVE +99999999 TO WS-CREDIT-LIMIT
PERFORM FP-0137
MOVE 'Y'       TO WS-EXIT-FLAG.


20825-CHECK-NORMAL-CREDIT3.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED  AND
CDN-BILL-AT-LOAD
CONTINUE
ELSE










PERFORM FP-0137
END-IF.


FP-0137.


INITIALIZE PROCCTL-RECORD
MOVE 'CONTROL001'        TO PROCCTL-KEY-NAME
EXEC CICS READ
DATASET ('PROCCTL')
INTO    (PROCCTL-RECORD)
RIDFLD  (PROCCTL-KEY)
RESP    (EIBRESP)
END-EXEC.
IF PROCCTL-HARD-HOLD NOT = 'Y'
MOVE 'N' TO PROCCTL-HARD-HOLD.




IF CL-HARD-CR-HOLD OF DCREDITL   = 'Y' AND
PROCCTL-HARD-HOLD             = 'N' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y'
MOVE CL-CO-CD OF DCREDITL TO WS-CL-CO-CD
PERFORM GET-WS-AVAIL-AMOUNT
MOVE CCL-AVL-CRD-AMT      TO WS-AVAIL
IF WS-AVAIL NOT < WS-MERCH-SURCHRG-AMT-ADJ
MOVE ZEROS TO CCL-FUNC-RTC
END-IF
PERFORM 20828-ADJ-PRE-AUTH
IF CCL-FUNC-RTC NOT = ZEROES
IF CL-FP-OVRD OF DCREDITL NOT = 'O'
PERFORM 20829-CREDIT-EXCEEDED.

IF WS-CREDIT-LIMIT > ZERO                         OR
ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD = ' ' OR
CL-FP-OVRD OF DCREDITL = 'O'
CONTINUE
ELSE
IF CDN-COMCASH-FLAG = 'Y' AND
CCL-FUNC-RTC = ZEROES  AND
WS-CREDIT-LIMIT = ZERO
CONTINUE
ELSE
PERFORM 20829-CREDIT-EXCEEDED.


GET-WS-AVAIL-AMOUNT.

MOVE 'GET-WS-AVAIL-AMOUNT'       TO CXUTS0ML-PARAGRAPH.
INITIALIZE                     CREDIT-CHECK-LINK-AREA
MOVE WS-CL-CO-CD            TO CCL-CREDITL (1:5)
MOVE WS-CICS-CONTROL-RECORD TO CCL-ONLNDF
MOVE 1                      TO CCL-FUNC-RTC
MOVE WS-BILLABLE            TO CCL-AMT
EXEC CICS LINK
PROGRAM  ('CXACO0LD')
COMMAREA (CREDIT-CHECK-LINK-AREA)
LENGTH   (LENGTH OF CREDIT-CHECK-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


20828-ADJ-PRE-AUTH.


MOVE 0                   TO WS-DIRECT-BILLING-PROD.
PERFORM
VARYING INDX-3 FROM 1 BY 1
UNTIL INDX-3                 > 36  OR
WS-DIRECT-BILLING-PROD = '1'
IF COM-DIRECT-BILLING-PRODUCT (INDX-3) = '1'
MOVE '1'          TO WS-DIRECT-BILLING-PROD
END-IF
END-PERFORM.
IF COM-DIRECT-BILLING-FUEL = '1' OR
COM-DIRECT-BILLING-OIL  = '1' OR
WS-DIRECT-BILLING-PROD  = '1'
CONTINUE
ELSE
IF WS-AVAIL < WS-AUTO-GAS-AVAIL
MOVE WS-AVAIL         TO WS-AUTO-GAS-AVAIL
END-IF
END-IF.
IF COM-DIRECT-BILLING-CASH = '1'
CONTINUE
ELSE
IF WS-AVAIL < WS-AUTO-GAS-AVAIL-AMT-CSH
MOVE WS-AVAIL         TO WS-AUTO-GAS-AVAIL-AMT-CSH
END-IF
END-IF.


20829-CREDIT-EXCEEDED.


MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
MOVE 'Y'              TO VCWS-ERROR-IND.
MOVE -1 TO FPINVNRL.


IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
WS3-NON-BILLABLE > WS-CC-AVAIL
PERFORM 20829-CC-CREDIT-EXCEEDED
ELSE
PERFORM 20829-CDN-CREDIT-EXCEEDED.


20829-CC-CREDIT-EXCEEDED.


IF COM-CC-FUNDED-OVERRIDE
MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.

IF COM-CC-FUNDED
EVALUATE TRUE
WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES OR
SCM-RECOURSE-FLAG-NOT-AVAIL
MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
WS-CC-FUNDED-CREDIT-ACCT
MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS3-NON-BILLABLE > COM-COMDATA-COMPLETE-LIMIT
MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN OTHER
MOVE SCM-COMDATA-COMPLETE-ACCT TO
WS-CC-SC-CREDIT-ACCT
MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE
END-IF.
IF COM-CC-RECOURSE
EVALUATE TRUE
WHEN WS3-NON-BILLABLE > COM-COMDATA-COMPLETE-LIMIT
MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN OTHER
MOVE SCM-COMDATA-COMPLETE-ACCT TO
WS-CC-SC-CREDIT-ACCT
MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE
END-IF.
IF COM-CC-NON-FUNDED
MOVE WS-CC-RELATION-CREDIT-ERR2-N TO POS-ERROR-NUMBER
MOVE WS-CC-RELATION-CREDIT-ERR2   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


MOVE COM-COMDATA-COMPLETE-STATUS TO NO-TYPE.
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20829-CDN-CREDIT-EXCEEDED.

MOVE ZEROES           TO ERR-AMT
MOVE CUST-RGE-SMLNM   TO ERR-SML-NAM.
MOVE NO-MSG           TO OUT-COMENT.
MOVE NO-MSG-N         TO POS-ERROR-NUMBER.
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20830-SEE-IF-RECOURSE-REQ.


IF COM-CC-FUNDED-OVERRIDE   AND
WS-NON-BILLABLE > ZEROES AND
SCM-RECOURSE-FLAG-CARD-REQ
IF COM-ASK-FOR-SECU-CARD = 'Y' OR
THIS-IS-A-POS-TRANS
NEXT SENTENCE
ELSE
MOVE 'Y' TO COM-ASK-FOR-SECU-CARD
MOVE '0' TO SECUCDHA
MOVE 'A' TO SECUCDA
MOVE -1  TO SECUCDL
MOVE WS-CC-RECOURSE-SECURITY-REQ TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20840-VALIDATE-RECOURSE.

IF COM-CC-FUNDED-OVERRIDE   AND
WS-NON-BILLABLE > ZEROES AND
SCM-RECOURSE-FLAG-CARD-REQ
PERFORM 20841-SEE-IF-REC-CARD-ENTERED.


20841-SEE-IF-REC-CARD-ENTERED.


EVALUATE TRUE
WHEN WS-UIWA-SC-SECURITY-CARD = ALL '0'
MOVE WS-CC-RECOURSE-SECURITY-REQ-N TO POS-ERROR-NUMBER
MOVE WS-CC-RECOURSE-SECURITY-REQ   TO OUT-COMENT
MOVE -1                            TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-SC-SECURITY-CARD NOT > SPACES
MOVE SECURITY-CARD-IS-REQUIRED     TO OUT-COMENT
MOVE SECURITY-CARD-IS-REQUIRED-N   TO POS-ERROR-NUMBER
MOVE -1                            TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-SC-SECURITY-CARD NOT NUMERIC
MOVE SECURITY-CARD-IS-INVALID      TO OUT-COMENT
MOVE SECURITY-CARD-IS-INVALID-N    TO POS-ERROR-NUMBER
MOVE -1                            TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN

WHEN OTHER
PERFORM 20842-VALIDATE-REC-CARD
PERFORM 20843-VALIDATE-REC-INFO
END-EVALUATE.


20842-VALIDATE-REC-CARD.

MOVE '20842-VALIDATE-REC-CARD'   TO CXUTS0ML-PARAGRAPH.
MOVE PRM-CARD-RECORD           TO WS-HOLD-PRM-CARD-RECORD
MOVE WS-UIWA-SC-SECURITY-CARD  TO WS-PRM-CARD
MOVE WS-PRM-CARD-NR            TO PRM-CARD-NUMB
EXEC CICS READ
DATASET ('PRMCARD')
INTO    (PRM-CARD-RECORD)
RIDFLD  (PRM-CARD-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRM-CARD-KEY               TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL) AND
PRM-SUB-ACCT-NUMB = 'SECURITY'
PERFORM 60000-CHECK-PRMCARD
IF PRM-CARD-ACTIVE
MOVE PRM-CARD-EMPLOYEE-ID TO WS-CC-EMPLOYEE-CHECK
MOVE PRM-CARD-PIN         TO WS-CC-PIN-CHECK
MOVE WS-HOLD-PRM-CARD-RECORD TO PRM-CARD-RECORD
ELSE
MOVE SECURITY-CARD-NOT-ACTIVE TO OUT-COMENT
MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
MOVE SECURITY-CARD-IS-INVALID TO OUT-COMENT
MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20843-VALIDATE-REC-INFO.

IF WS-CC-EMPLOYEE-CHECK NOT = COM-FP-SC-CODE
MOVE SECURITY-CARD-IS-INVALID TO OUT-COMENT
MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO SECUCDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
IF THIS-IS-A-POS-TRANS
IF WS-UIWA-SC-SECURITY-PIN NUMERIC
AND WS-UIWA-SC-SECURITY-PIN > 0
PERFORM 20843A-ENCRYPT-PIN
MOVE PS90-PRM-CARD-KEY            TO PRM-PIN-KEY
PERFORM 20845A-GET-ENCRYPTED-PIN
IF PS90-PIN-BLOCK NOT = PRM-PIN-ENCRYPTED
MOVE SECURITY-PIN-IS-INVALID   TO OUT-COMENT
MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
MOVE SECURITY-PIN-IS-INVALID TO OUT-COMENT
MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20843A-ENCRYPT-PIN.

MOVE +1                   TO PS90-REQUEST-CODE
MOVE WS-PRM-CARD-NR       TO PS90-PRM-CARD-KEY
MOVE WS-UIWA-SC-SECURITY-PIN
TO PS90-PRM-CARD-PIN

EXEC CICS LINK
PROGRAM    ('CXPSO090')
COMMAREA   (CXPSO090-COMM-AREA)
LENGTH     (LENGTH OF CXPSO090-COMM-AREA)
DATALENGTH (LENGTH OF CXPSO090-COMM-AREA)
RESP       (EIBRESP)
END-EXEC
IF  (EIBRESP = DFHRESP(NORMAL))
AND (PS90-RETURN-CODE = +0)
CONTINUE
ELSE
MOVE '0000000000000000' TO PS90-PIN-BLOCK
END-IF.


20845-VALIDATE-ATM-PIN.

IF (THIS-BE-AN-ATM-XTN) AND
(TSXCO0AT-PIN-BLOCK   NOT = 'REVS')  AND
(NOT TSXCO0AT-TRAN-TYPE-PINLESS-PUR) AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F)   AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI)     AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)   AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI)
MOVE PRM-CARD-KEY                 TO PRM-PIN-KEY
PERFORM 20845A-GET-ENCRYPTED-PIN
IF TSXCO0AT-PIN-BLOCK NOT = PRM-PIN-ENCRYPTED
MOVE SECURITY-PIN-IS-INVALID   TO OUT-COMENT
MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM INCREMENT-PIN-TRIES
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF (THIS-BE-AN-ATM-XTN) AND
(TSXCO0AT-PIN-BLOCK NOT = 'REVS')
PERFORM CHECK-EXCESSIVE-PIN-TRIES.


20845A-GET-ENCRYPTED-PIN.

MOVE '20845A-GET-ENCRYPTED-PIN'  TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
FILE    ('PRMPIN')
INTO    (PRM-PIN-RECORD)
RIDFLD  (PRM-PIN-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE PRM-PIN-KEY                 TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF PRM-PIN-ENCRYPTED > ' '
CONTINUE
ELSE
MOVE '0000000000000000' TO PRM-PIN-ENCRYPTED
END-IF.


INCREMENT-PIN-TRIES.

MOVE 'INCREMENT-PIN-TRIES'       TO CXUTS0ML-PARAGRAPH.
MOVE PRM-CARD-RECORD TO WS-HOLD-PRM-CARD-RECORD.
EXEC CICS READ
DATASET   ('PRMCARD')
RIDFLD    (PRM-CARD-KEY)
INTO      (PRM-CARD-RECORD)
UPDATE
RESP      (EIBRESP)
END-EXEC.
MOVE PRM-CARD-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
MOVE PRM-CARD-RECORD TO PRB-CARD-BEFORE-RECORD
PERFORM 21121G-PRMCARD-NUMERIC-CHECKS
END-IF.
PERFORM 60000-CHECK-PRMCARD

IF PRM-VRU-PIN-ATTEMPTS < 9
COMPUTE PRM-VRU-PIN-ATTEMPTS = PRM-VRU-PIN-ATTEMPTS + 1.

EXEC CICS REWRITE
DATASET ('PRMCARD')
FROM    (PRM-CARD-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP (NORMAL)
MOVE PRM-CARD-RECORD TO PRA-CARD-AFTER-RECORD
MOVE PRM-CARD-CHANGE-RECORD
TO XCOH-MSG-DATA
MOVE 2               TO XCOH-MSG-CODE
PERFORM 21121C-LINK-TO-MSG-HANDLER
END-IF.

MOVE PRM-VRU-PIN-ATTEMPTS     TO WS-PRM-VRU-PIN-ATTEMPTS.
MOVE WS-HOLD-PRM-CARD-RECORD  TO PRM-CARD-RECORD.
MOVE WS-PRM-VRU-PIN-ATTEMPTS  TO PRM-VRU-PIN-ATTEMPTS.


CHECK-EXCESSIVE-PIN-TRIES.

IF PRM-VRU-PIN-ATTEMPTS > 3
IF WS-SAVE-ATM-ERROR-NUMBER = SECURITY-PIN-IS-INVALID-N
MOVE ZERO                   TO WS-SAVE-ATM-ERROR-NUMBER
END-IF
MOVE SECURITY-PIN-EXCESSIVE    TO OUT-COMENT
MOVE SECURITY-PIN-EXCESSIVE-N  TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20846-VALIDATE-CVC-ATM.




MOVE SPACES                  TO WS-CXXCW0LE-CVC-COMMON-AREA.
IF S007-PROPRIETARY-CARD = 'Y'

MOVE 'P'                   TO WS-CXXCW0LE-CARD-TYPE
END-IF
MOVE ATMW-TRACK-2-DATA          TO WS-ATMW-TRACK2-DATA
MOVE 'C1V'                      TO WS-CXXCW0LE-FUNCTION.

MOVE WS-ATM-TRACK2-CARD         TO WS-CXXCW0LE-CARD-NBR.

MOVE WS-ATM-TRACK2-EXP-DT-YYMM  TO WS-CXXCW0LE-EXP-DATE.

MOVE WS-ATM-TRACK2-SERVICE-CODE TO WS-CXXCW0LE-SRVC-CODE.
IF S007-PROPRIETARY-CARD = 'Y'

MOVE WS-PROP-ATM-TRACK2-CVC1 TO WS-CXXCW0LE-CVC1
ELSE

MOVE WS-MC-ATM-TRACK2-CVC1   TO WS-CXXCW0LE-CVC1
END-IF.

MOVE PRM-CREATION-DATE         TO WS-CXXCW0LE-CARD-CREATION.
MOVE PRM-LAST-PRINTED-DATE     TO WS-CXXCW0LE-CARD-PRINTED.
MOVE PRM-CARD-PRIOR-PRINT-DATE TO
WS-CXXCW0LE-CARD-PRIOR-PRNT.



IF WS-CXXCW0LE-CVC1 NUMERIC
IF S007-MC-CHIP-CVC-FLAG = 'Y'
MOVE SPACES TO WS-CVC3-PASSED-FLAG
PERFORM 20846A-SEE-IF-CVC3-PASSED
END-IF
ELSE
MOVE 'Y'                     TO WS-CVC1-FLAG
END-IF


IF CVC1-NOT-FOUND

MOVE '01'                 TO WS-CXXCW0LE-RETURN-CODE
ELSE



IF WS-CXXCW0LE-CARD-NBR    NUMERIC

AND WS-CXXCW0LE-EXP-DATE   NUMERIC

AND WS-CXXCW0LE-SRVC-CODE  NUMERIC
IF CVC3-WAS-PASSED

MOVE WS-CXXCW0LE-SRVC-CODE TO WS-SAVE-SRVC-CODE

MOVE 999                   TO WS-CXXCW0LE-SRVC-CODE
END-IF

PERFORM 20846X-LINK-CXXCO0LE

IF WS-CXXCW0LE-RETURN-CODE  = '01'

IF CVC3-WAS-PASSED

MOVE SPACES           TO WS-CXXCW0LE-RETURN-CODE

MOVE WS-SAVE-SRVC-CODE TO WS-CXXCW0LE-SRVC-CODE

PERFORM 20846X-LINK-CXXCO0LE
END-IF
END-IF
END-IF
END-IF.



IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
OR CODES-CVC-DECLINE
MOVE INVALID-CVC1            TO OUT-COMENT
MOVE INVALID-CVC1-N          TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.



20846A-SEE-IF-CVC3-PASSED.


MOVE ATMW-DE48-71-ON-BEHALF    TO WS-ATMW-DE48-71-ON-BEHALF.

PERFORM VARYING WS-DE48-71-INDX FROM 1 BY 1
UNTIL WS-DE48-71-INDX > 10
IF WS-ATMW-DE48-71-SF1 (WS-DE48-71-INDX) = '01'
OR '02'
MOVE 'Y'                TO WS-CVC3-PASSED-FLAG
END-IF
END-PERFORM.



20846X-LINK-CXXCO0LE.



MOVE SPACES           TO WS-CXXCW0LE-RETURN-CODE.








EXEC CICS LINK
PROGRAM ('CXXCO0LE')
COMMAREA (WS-CXXCW0LE-CVC-COMMON-AREA)
LENGTH (LENGTH OF WS-CXXCW0LE-CVC-COMMON-AREA)
RESP  (EIBRESP)
END-EXEC.


20847-VALIDATE-CVC-POS.




MOVE SPACES                  TO WS-CXXCW0LE-CVC-COMMON-AREA.
IF S007-PROPRIETARY-CARD = 'Y'

MOVE 'P'                   TO WS-CXXCW0LE-CARD-TYPE
END-IF

MOVE 'C1V'                     TO WS-CXXCW0LE-FUNCTION.
MOVE WS-SWIPED-CARD            TO WS-CXXCW0LE-CARD-NBR.

MOVE WS-SWIPED-EXP-DT-YYMM     TO WS-CXXCW0LE-EXP-DATE.

MOVE WS-SWIPED-SRVC-CD         TO WS-CXXCW0LE-SRVC-CODE.
IF S007-PROPRIETARY-CARD = 'Y'

MOVE WS-PROP-SWIPED-CVC1    TO WS-CXXCW0LE-CVC1
ELSE

MOVE WS-MC-SWIPED-CVC1      TO WS-CXXCW0LE-CVC1
END-IF.

MOVE PRM-CREATION-DATE         TO WS-CXXCW0LE-CARD-CREATION.
MOVE PRM-LAST-PRINTED-DATE     TO WS-CXXCW0LE-CARD-PRINTED.
MOVE PRM-CARD-PRIOR-PRINT-DATE TO
WS-CXXCW0LE-CARD-PRIOR-PRNT.




IF NOT WS-CXXCW0LE-CVC1 NUMERIC
IF WS-UIWA-SWIPED-KEYED = 'C'
AND S007-MASTERCARD-CARD = 'Y'
MOVE 'Y'              TO WS-CODES-CVC-DECLINE-FLG
ELSE

IF THIS-BE-A-POS-AUTH
PERFORM 20847D-CHECK-PRE-AUTH
IF WS-PRE-AUTH-FOUND AND WCC-CD = 'S'

MOVE 'S' TO WS-UIWA-SWIPED-KEYED
PERFORM 20847C-GET-CVC-TIME-LIMIT
PERFORM 20847X-READ-CODES-FILE-2
IF WS-SP14-ELAPSED-TIME-MINS <
WS-CODES-CVC-TIME-LIMIT
NEXT SENTENCE
END-IF
END-IF
END-IF

PERFORM 20847A-GET-CVC-DECLINE-FLAGS
PERFORM 20847X-READ-CODES-FILE
END-IF
END-IF



IF NOT WS-CXXCW0LE-CVC1 NUMERIC
CONTINUE
ELSE


IF  WS-CXXCW0LE-CARD-NBR   NUMERIC

AND WS-CXXCW0LE-EXP-DATE   NUMERIC

AND WS-CXXCW0LE-SRVC-CODE  NUMERIC


IF  S007-MASTERCARD-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED = 'C'

MOVE 999              TO WS-CXXCW0LE-SRVC-CODE
END-IF

PERFORM 20846X-LINK-CXXCO0LE


IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
AND S007-MASTERCARD-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED = 'S'
PERFORM 20847B-GET-CVC-DECLINE-FLAGS
PERFORM 20847X-READ-CODES-FILE

IF NOT CODES-CVC-DECLINE

MOVE 999              TO WS-CXXCW0LE-SRVC-CODE

PERFORM 20846X-LINK-CXXCO0LE
END-IF
END-IF
END-IF
END-IF.




IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
OR CODES-CVC-DECLINE
MOVE INVALID-CVC1            TO OUT-COMENT
MOVE INVALID-CVC1-N          TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20847A-GET-CVC-DECLINE-FLAGS.


EVALUATE TRUE
WHEN S007-PROPRIETARY-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED = 'M'
MOVE '006' TO CODES-SEQ
WHEN S007-PROPRIETARY-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED NOT = 'M'
MOVE '007' TO CODES-SEQ
WHEN S007-MASTERCARD-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED = 'M'
MOVE '008' TO CODES-SEQ
WHEN S007-MASTERCARD-CARD = 'Y'
AND WS-UIWA-SWIPED-KEYED NOT =  'M'
MOVE '009' TO CODES-SEQ
END-EVALUATE.


20847B-GET-CVC-DECLINE-FLAGS.


MOVE '010' TO CODES-SEQ.


20847C-GET-CVC-TIME-LIMIT.


MOVE '020' TO CODES-SEQ.


20847D-CHECK-PRE-AUTH.


MOVE 'N'              TO WS-PRE-AUTH-SW

MOVE SPACES           TO WS-SWIPED-CARD-20
MOVE WS-SWIPED-CARD   TO WS-SWIPED-CARD-20

EXEC SQL
SELECT
TIMESTAMPDIFF(4,CHAR(TIMESTAMP(CURRENT TIMESTAMP)
- TIMESTAMP(PRE_AUTH_TS)))
,WCC_CD
INTO
:WS-SP14-ELAPSED-TIME-MINS
,:DPRPPAUT.WCC-CD
FROM
DBO.PRP_PRE_AUTH A
WHERE
A.CRD_NBR        = :WS-SWIPED-CARD-20
AND A.MRCH_NBR       = :COM-FP-SC-CODE
AND A.PRE_AUTH_TS =
(
SELECT
MAX(B.PRE_AUTH_TS)
FROM
DBO.PRP_PRE_AUTH B
WHERE
B.CRD_NBR      = A.CRD_NBR
AND B.MRCH_NBR     = A.MRCH_NBR
)
END-EXEC

EVALUATE SQLCODE
WHEN +0
MOVE 'Y'         TO WS-PRE-AUTH-SW
WHEN +100
MOVE 'N'         TO WS-PRE-AUTH-SW
WHEN OTHER
PERFORM CHECK-NOTFND-SQL
END-EVALUATE
.


20847X-READ-CODES-FILE.

MOVE '20847X-READ-CODES-FILE   '  TO CXUTS0ML-PARAGRAPH.
MOVE CODES-KEY                    TO CXUTS0ML-COMMAND.

MOVE 'US'          TO CODES-PGM.

MOVE 'N'                   TO WS-CODES-CVC-DECLINE-FLG
MOVE ZEROES TO EIBRESP

EXEC CICS READ
DATASET ('CODES')
RIDFLD  (CODES-KEY)
INTO    (PROGRAM-CODES)
RESP    (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NOTFND-EIBRESP.
EVALUATE EIBRESP
WHEN DFHRESP(NORMAL)
MOVE CODES-DATA(25:1) TO WS-CODES-CVC-DECLINE-FLG
WHEN DFHRESP(NOTFND)
WHEN DFHRESP(ENDFILE)
MOVE 'N'              TO WS-CODES-CVC-DECLINE-FLG
END-EVALUATE.


20847X-READ-CODES-FILE-2.

MOVE '20847X-READ-CODES-FILE-2'   TO CXUTS0ML-PARAGRAPH.
MOVE CODES-KEY                    TO CXUTS0ML-COMMAND.

MOVE 'US'          TO CODES-PGM.

MOVE ZEROES                TO WS-CODES-CVC-TIME-LIMIT
MOVE ZEROES TO EIBRESP

EXEC CICS READ
DATASET ('CODES')
RIDFLD  (CODES-KEY)
INTO    (PROGRAM-CODES)
RESP    (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NOTFND-EIBRESP.
EVALUATE EIBRESP
WHEN DFHRESP(NORMAL)
MOVE CODES-DATA(1:9)  TO WS-CODES-CVC-TIME-LIMIT
WHEN DFHRESP(NOTFND)
WHEN DFHRESP(ENDFILE)
MOVE ZEROES           TO WS-CODES-CVC-TIME-LIMIT
END-EVALUATE.


20848-VALIDATE-ATM-NETWORK.

IF (THIS-BE-AN-ATM-XTN)
IF (TSXCO0AT-FANB-LOC OR
TSXCO0AT-MAESTRO-LOC)         AND
CDN-EFS-PRIVATE-ATM-NETWORK = 'Y'
MOVE INVALID-ATM-NETWORK       TO OUT-COMENT
MOVE INVALID-ATM-NETWORK-N     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.

20850-CHECK-FOR-INQUIRY.


IF ONLINE-SYSTEM-STATUS IS EQUAL TO 'I'
MOVE INQUIRY-MESSAGE TO OUT-COMENT
MOVE INQUIRY-MESSAGE-N TO POS-ERROR-NUMBER
MOVE -1 TO FPCMT1L
MOVE '*' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


20860-CHECK-CREDIT-AUTO-APPROV.


IF ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD = ' ' OR
CL-XMIT-CD OF DCREDITL NOT = 'X'
CONTINUE
ELSE
IF WS3-CURXMN < 500.00 AND
CL-OVR-LMT-CNT OF DCREDITL < 16
MOVE ' ' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD
MOVE 1 TO OCR-FLAG
ELSE
MOVE 0 TO OCR-FLAG
END-IF
END-IF.

IF ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD NOT = ' '
IF CL-OVRD-CD OF DCREDITL = 'O'
MOVE ' ' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD
END-IF
END-IF.


CHK-FOR-MULTI-PART-PURCHASE.


IF NOT (EIBTRNID = 'FMBP' OR 'FMMP')
OR (EIBTRNID = 'FMBP' AND WS-UIWA-SYSTEM-ID = 1)
PERFORM CHK-FOR-MULTI-PART-PURC2
END-IF.

CHK-FOR-MULTI-PART-PURC2.

IF WS-UIWA-SC-CODE NOT > SPACES
MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
END-IF
IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF
IF PRM-LAST-PURC-TIME-FUEL NUMERIC
AND PRM-LAST-PURC-TIME-FUEL > ZERO
MOVE PRM-LAST-PURC-TIME-FUEL  TO WS-PURC-TIME-UNPACK
MOVE WS-PURC-TIME-UNPACK(2:4) TO WS-TIME-4
ELSE
MOVE ZERO                     TO WS-TIME-1
END-IF
COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
END-COMPUTE
MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
IF PRM-LAST-PURC-DATE-FUEL NOT = WS-CURRENT-DATE-YYDDD
ADD 1440      TO WS-CURR-MIN-WORK
END-IF
COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
END-COMPUTE
IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
MOVE 'Y' TO WS-NO-FUEL-FEE-FLAG
END-IF.


20870-GET-FEES.

MOVE 'N' TO WS-EXIT-FLAG.
PERFORM 20871-ADJUST-FEES.
IF PGRM-FUNCTION-OIL-ONLY AND
WS-UIWA-CASH-AMT = ZEROES
PERFORM 20872-CHECK-OIL-ONLY
END-IF.
PERFORM 20873-CHECK-NO-FEE.
IF WS-EXIT-FLAG = 'N'
IF THIS-IS-AN-ALLIANCE-CUST OR
COM-PREFERRED-CUSTOMER
PERFORM 20880-ALLIANCE-RATES
ELSE
PERFORM 20890-OLD-RATES.


20871-ADJUST-FEES.


IF COM-DIRECT-BILLING-IN-PROCESS AND

COM-FP-CO-CODE NOT = CDN-CUST-NUMBER
MOVE SPACES             TO CDN-CUSTOMER-RECORD

MOVE COM-FP-CO-CODE     TO CDN-CUST-KEY
MOVE 'Y'                TO READ-CUST-FLAG
PERFORM READ-CDNCUST.


IF COM-PNET-BULK-FUEL-YES
MOVE CDN-BULK-FUEL-RATE TO CDN-DIRECT-BILL-RATE,
CDN-ALL-DIRECT-BILL
MOVE CDN-BULK-FUEL-RATE-ALTCUR TO
CDN-ALL-DIRECT-BILL-ALTCUR
END-IF


IF COM-PREFERRED-CUSTOMER
MOVE COM-PREFERRED-RATE TO CDN-ALL-STANDARD-FEE
CDN-ALL-STANDARD-FEE-ALTCUR
END-IF

MOVE ZEROS TO WS-FUEL-RATE
WS-FUEL-RATE2
WS-FUEL-RATE3
WS-ADVANCE-RATE
WS-ADVANCE-RATE2
WS-ADVANCE-RATE3
WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.
INITIALIZE WS-FMDL-PRODUCT-FEE-INFO.


20872-CHECK-OIL-ONLY.


MOVE +223 TO CALENDAR-OPTIONS
MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-DAYS TO WS-CALC-DAYS.

MOVE EIBTIME TO SYS-TIME.
COMPUTE CURRENT-TIME-IN-SECONDS =
(SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS.

MOVE UNITMST-TIME-LAST-XTN TO SYS-TIME.
COMPUTE CURRENT-TIME-IN-SECONDS =
(CURRENT-TIME-IN-SECONDS +
((WS-CALC-DAYS)  * 86400)) -
((SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS).
IF (CURRENT-TIME-IN-SECONDS < 1800) AND
(WS-UIWA-SC-CODE = UNITMST-LAST-TS-CODE)
MOVE 'Y' TO WS-EXIT-FLAG.
IF (CDN-CUST-ACCT-CODE = 'CA032')
MOVE 'Y' TO WS-EXIT-FLAG.


20873-CHECK-NO-FEE.


IF COM-NO-FEE-FLAG = 'Y'
MOVE 'Y' TO WS-EXIT-FLAG.


20880-ALLIANCE-RATES.

EVALUATE TRUE
WHEN THIS-BE-TERMINAL-FUEL
PERFORM 20883-TERMINAL-FUEL-RATE
WHEN THIS-BE-A-VRU-EXPRESS-CASH
PERFORM 20882-VOICE-RESPONSE-RATE
WHEN COM-RMF-FLAG = 'Y'
IF NOT WS-NO-FUEL-FEE
MOVE CDN-RMF-XTN-FEE          TO WS-BASE-FUEL-RATE
MOVE CDN-RMF-XTN-FEE-ALTCUR   TO WS-MIXED-FUEL-RATE
END-IF
PERFORM 20881-CHECK-CASH-ADVANCE
WHEN OTHER

IF NOT WS-NO-FUEL-FEE
MOVE CDN-ALL-STANDARD-FEE     TO WS-BASE-FUEL-RATE
MOVE CDN-ALL-STANDARD-FEE-ALTCUR
TO WS-MIXED-FUEL-RATE
END-IF
MOVE ZEROS TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
PERFORM 20881-CHECK-DIRECT-BILL
IF WS-EXIT-FLAG = 'N'
PERFORM 20881-CHECK-NON-DIRECT-BILL
PERFORM 20881-CHECK-CASH-ADVANCE
END-IF

IF COM-RMR-PRDFMRM-EXISTS NOT = 'Y'
PERFORM 20895-SETUP-PRODUCT-FEES
END-IF
END-EVALUATE.


20881-CHECK-DIRECT-BILL.


IF WS-BILLABLE = 0 AND WS-NON-BILLABLE > 0
IF PGRM-FUNCTION-CASH-ONLY
MOVE CDN-ALL-DIRECT-BILL        TO WS-BASE-ADVANCE-RATE
MOVE CDN-ALL-DIRECT-BILL-ALTCUR TO WS-MIXED-ADVANCE-RATE
MOVE ZEROS TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
IF NOT WS-NO-FUEL-FEE
MOVE CDN-ALL-DIRECT-BILL     TO WS-BASE-FUEL-RATE
MOVE CDN-ALL-DIRECT-BILL-ALTCUR
TO WS-MIXED-FUEL-RATE
END-IF
MOVE 'Y' TO WS-EXIT-FLAG.


20881-CHECK-NON-DIRECT-BILL.



IF COM-DIRECT-BILLING-IN-PROCESS
IF WS-BILLABLE-IS-ALL-CASH
IF WS-NON-BILLABLE > 0
IF CDN-CUST-ACCT-CODE = 'CR950' OR 'SU960' OR
'SH985' OR 'HT002'
IF NOT WS-NO-FUEL-FEE
MOVE +.50 TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
MOVE +.50 TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
IF NOT WS-NO-FUEL-FEE
MOVE CDN-ALL-CASH-ONLY-RATE
TO WS-BASE-FUEL-RATE
MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR
TO WS-MIXED-FUEL-RATE
END-IF
MOVE ZEROS TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
MOVE CDN-ALL-CASH-ONLY-RATE        TO
WS-BASE-ADVANCE-RATE
MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR TO
WS-MIXED-ADVANCE-RATE
MOVE ZEROS TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
MOVE 'Y' TO WS-EXIT-FLAG.


20881-CHECK-CASH-ADVANCE.

IF WS-UIWA-CASH-AMT = 0
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N'
EVALUATE TRUE
WHEN WS-BILLABLE-IS-ALL-CASH
MOVE ZEROS TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
MOVE CDN-ALL-CASH-ONLY-RATE        TO
WS-BASE-ADVANCE-RATE
MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR TO
WS-MIXED-ADVANCE-RATE
WHEN OTHER
MOVE CDN-ALL-CASH-ADD-ON        TO
WS-BASE-ADVANCE-RATE
MOVE CDN-ALL-CASH-ADD-ON-ALTCUR TO
WS-MIXED-ADVANCE-RATE
END-EVALUATE.


20882-VOICE-RESPONSE-RATE.

MOVE ZEROS TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
IF CDN-LESS-PICKUP
MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
WS-CHARGE-RATE
ELSE
MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
MOVE ZEROES                       TO WS-CHARGE-RATE.


20883-TERMINAL-FUEL-RATE.

IF THIS-BE-TERMINAL-FUEL
MOVE ZEROS TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
IF NOT WS-NO-FUEL-FEE
MOVE CDN-ALL-TERMINAL-FUEL     TO WS-BASE-FUEL-RATE
MOVE CDN-ALL-TERMINAL-FUEL-ALTCUR
TO WS-MIXED-FUEL-RATE
END-IF.


20890-OLD-RATES.

EVALUATE TRUE
WHEN THIS-BE-TERMINAL-FUEL
PERFORM 20891-TERMINAL-FUEL-RATE
WHEN OTHER
PERFORM 20892-SETUP-NORMAL-RATE
IF WS-EXIT-FLAG = 'N'
PERFORM 20892-NORMAL-RATE-DB-CASH
END-IF
IF WS-EXIT-FLAG = 'N'
PERFORM 20892-NORMAL-RATE-COMBINE
END-IF
END-EVALUATE.


20891-TERMINAL-FUEL-RATE.

MOVE '20891-TERMINAL-FUEL-RATE'  TO CXUTS0ML-PARAGRAPH.
MOVE INP-TOTAL-COST TO WS-CURXMN.
IF THIS-BE-TERMINAL-FUEL
AND COM-FP-SCRAMBLER-FLAG > SPACES
MOVE COM-FP-SCRAMBLER-FLAG TO RATE-KEY-RATE.
MOVE 0             TO RCA-RATE-CODE.
MOVE RATE-KEY-RATE TO RCA-RATE-CODE-LO.
MOVE WS-CURXMN     TO RCA-TRANS-AMT.
IF THIS-BE-TERMINAL-FUEL
MOVE 50          TO RCA-TRANS-AMT.
EXEC CICS LINK
PROGRAM  ('RATEMNT')
COMMAREA (RATE-CALC-AREA)
LENGTH   (12)
RESP     (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF RCA-TRANS-RATE IS NOT NUMERIC
MOVE -1 TO RCA-TRANS-RATE.
IF RCA-TRANS-RATE IS LESS THAN 0 THEN
MOVE INVALID-RATE-CODE   TO OUT-COMENT
MOVE INVALID-RATE-CODE-N TO POS-ERROR-NUMBER
MOVE INVALID-RATE-NBR    TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE -1                  TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
MOVE RCA-TRANS-RATE TO ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD.
MOVE ZEROES TO WS-BASE-ADVANCE-RATE
WS-BASE-FUEL-RATE
WS-MIXED-ADVANCE-RATE
WS-MIXED-FUEL-RATE
IF NOT WS-NO-FUEL-FEE
MOVE ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD TO
WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF.


20892-SETUP-NORMAL-RATE.


IF COM-DIRECT-BILLING-IN-PROCESS AND
WS-BILLABLE     = ZEROES      AND
WS-NON-BILLABLE > ZEROES
IF NOT WS-NO-FUEL-FEE
MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
MOVE 0 TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
ELSE
MOVE ZEROES TO WS-BASE-ADVANCE-RATE
WS-BASE-FUEL-RATE
WS-MIXED-ADVANCE-RATE
WS-MIXED-FUEL-RATE
IF PGRM-FUNCTION IS GREATER THAN 1
IF NOT WS-NO-FUEL-FEE
MOVE CDN-FUEL-RATE (1)  TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
END-IF
IF WS-UIWA-CASH-AMT IS GREATER THAN .01
MOVE WS-FL-CASH-ADV-RATE  TO WS-BASE-ADVANCE-RATE,
WS-MIXED-ADVANCE-RATE
IF PGRM-FUNCTION IS GREATER THAN 1
MOVE CDN-FUEL-RATE (6) TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.

IF WS-FP-ACCT-CODE = 'AN020' OR
WS-FP-ACCT-CODE = 'WA050'
MOVE 'Y' TO WS-EXIT-FLAG.
IF NOT COM-DIRECT-BILLING-IN-PROCESS
MOVE 'Y' TO WS-EXIT-FLAG.


20892-NORMAL-RATE-DB-CASH.

IF WS-EXIT-FLAG = 'N' AND
WS-BILLABLE = 0
IF WS-UIWA-CASH-AMT = WS-NON-BILLABLE
MOVE ZEROS TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.

IF WS-BILLABLE     = 0 OR
WS-NON-BILLABLE = 0
MOVE 'Y' TO WS-EXIT-FLAG.


20892-NORMAL-RATE-COMBINE.




IF WS-BILLABLE-IS-ALL-CASH
IF COM-DIRECT-BILLING-CASH = '0'
IF NOT WS-NO-FUEL-FEE
MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N' AND
WS-UIWA-CASH-AMT > 0 AND
COM-DIRECT-BILLING-CASH = '1'
MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.


20895-SETUP-PRODUCT-FEES.

IF WS-UIWA-PR-CODE(01) NUMERIC OR
WS-UIWA-PR-CODE(02) NUMERIC OR
WS-UIWA-PR-CODE(03) NUMERIC
IF WS-PRDCUST-HAS-BEEN-READ NOT = 'Y'
PERFORM RC-READ-PRDCUST.

INITIALIZE WS-PRD-FEE-WORK-AREA
MOVE 'CUST'               TO WS-PRD-CALC-TYPE
IF WS-UIWA-PR-CODE (01) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR1-CODE-NUM + 1
MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (01)
MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
WS-PRD-FUNDED-RATE (01)
MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
WS-PRD-DB-RATE (01)
MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
WS-PRD-FUNDED-RATE-ALTCUR (01)
MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
WS-PRD-DB-RATE-ALTCUR (01)
END-IF.
IF WS-UIWA-PR-CODE (02) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR2-CODE-NUM + 1
MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (02)
MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
WS-PRD-FUNDED-RATE (02)
MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
WS-PRD-DB-RATE (02)
MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
WS-PRD-FUNDED-RATE-ALTCUR (02)
MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
WS-PRD-DB-RATE-ALTCUR (02)
END-IF.
IF WS-UIWA-PR-CODE (03) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR3-CODE-NUM + 1
MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (03)
MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
WS-PRD-FUNDED-RATE (03)
MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
WS-PRD-DB-RATE (03)
MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
WS-PRD-FUNDED-RATE-ALTCUR (03)
MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
WS-PRD-DB-RATE-ALTCUR (03)
END-IF.
PERFORM 20896-CHECK-FOR-PRODUCT-FEES.


20896-CHECK-FOR-PRODUCT-FEES.

MOVE 'N' TO WS-CHECK-PRODUCT-FEE
MOVE 'N' TO WS-STANDARD-ITEM-PURCHASED
MOVE 'N' TO WS-ADD-ON-APPLIES
IF (WS-UIWA-PR-CODE (01) NUMERIC) AND
(WS-PRD-FEE-TYPE (01) = 'A' OR 'P' OR 'B')
MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
END-IF.
IF (WS-UIWA-PR-CODE (02) NUMERIC) AND
(WS-PRD-FEE-TYPE (02) = 'A' OR 'P' OR 'B')
MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
END-IF.
IF (WS-UIWA-PR-CODE (03) NUMERIC) AND
(WS-PRD-FEE-TYPE (03) = 'A' OR 'P' OR 'B')
MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
END-IF.
IF WS-CHECK-PRODUCT-FEE = 'Y'
PERFORM 20897-SETUP-PURCHASE-FLAG
PERFORM 20897-SETUP-BASE-FEE
PERFORM 20897-ADD-PRODUCT-FEES
VARYING WS-INDEX FROM 1 BY 1
UNTIL   WS-INDEX > 3
END-IF.


20897-SETUP-PURCHASE-FLAG.



IF  (WS-UIWA-NR2-QTY > ZERO)
OR (WS-UIWA-NR1-QTY > ZERO)
OR (WS-UIWA-REF-QTY > ZERO)
OR (WS-UIWA-OTH-QTY > ZERO)
OR (WS-UIWA-OIL-QTY > ZERO)
OR (WS-UIWA-PR-CODE (01) NUMERIC AND
(WS-PRD-FEE-TYPE (01) = 'S' OR ' '))
OR (WS-UIWA-PR-CODE (02) NUMERIC AND
(WS-PRD-FEE-TYPE (02) = 'S' OR ' '))
OR (WS-UIWA-PR-CODE (03) NUMERIC AND
(WS-PRD-FEE-TYPE (03) = 'S' OR ' '))
MOVE 'Y' TO WS-STANDARD-ITEM-PURCHASED
END-IF.


20897-SETUP-BASE-FEE.

PERFORM VARYING TALLY FROM 1 BY 1
UNTIL   TALLY > 3
IF (WS-UIWA-PR-CODE (TALLY) NUMERIC) AND
(WS-PRD-FEE-TYPE (TALLY) = 'P' OR 'B')
MOVE 'Y'       TO WS-ADD-ON-APPLIES
IF WS-STANDARD-ITEM-PURCHASED = 'N'
EVALUATE WS-PRD-CALC-TYPE
WHEN 'CUST'
MOVE ZEROES TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
WHEN 'FMRM'
MOVE ZEROES TO COM-PNET-CO-FEE
COM-PNET-SC-FEE
WHEN 'SCMM'
MOVE ZEROES TO WS-DC-FEE-AMT-FUEL
WS-PRD-PROD-FEE (01)
WS-PRD-PROD-FEE (02)
WS-PRD-PROD-FEE (03)
END-EVALUATE
END-IF
END-IF
END-PERFORM.


20897-ADD-PRODUCT-FEES.

IF WS-UIWA-PR-CODE (WS-INDEX) NUMERIC
EVALUATE WS-PRD-FEE-TYPE (WS-INDEX)
WHEN 'A'
IF WS-STANDARD-ITEM-PURCHASED = 'Y' OR
WS-ADD-ON-APPLIES          = 'Y'
PERFORM 20897-ADD-THE-FEE
END-IF
WHEN 'P'
IF WS-STANDARD-ITEM-PURCHASED = 'N'
PERFORM 20897-ADD-THE-FEE
END-IF
WHEN 'B'
PERFORM 20897-ADD-THE-FEE
END-EVALUATE
END-IF.


20897-ADD-THE-FEE.

EVALUATE WS-PRD-CALC-TYPE
WHEN 'CUST'
PERFORM 20897-ADD-THE-FEE-CUST
WHEN 'SCMM'
PERFORM 20897-ADD-THE-FEE-SCMM
WHEN 'FMRM'
PERFORM 20897-ADD-THE-FEE-FMRM
END-EVALUATE.


20897-ADD-THE-FEE-CUST.


IF WS-BILLABLE = 0 AND WS-NON-BILLABLE > 0
ADD WS-PRD-DB-RATE (WS-INDEX)        TO
WS-BASE-FUEL-RATE
ADD WS-PRD-DB-RATE-ALTCUR (WS-INDEX) TO
WS-MIXED-FUEL-RATE
MOVE WS-PRD-DB-RATE (WS-INDEX)       TO
WS-FMDL-PF-CUST-FEE (WS-INDEX)

ELSE
ADD WS-PRD-FUNDED-RATE (WS-INDEX)    TO
WS-BASE-FUEL-RATE
ADD WS-PRD-FUNDED-RATE-ALTCUR (WS-INDEX) TO
WS-MIXED-FUEL-RATE
MOVE WS-PRD-FUNDED-RATE (WS-INDEX)       TO
WS-FMDL-PF-CUST-FEE (WS-INDEX)
END-IF.
MOVE 'C'                             TO
WS-FMDL-PF-CUST-FEE-SOURCE (WS-INDEX)
MOVE PRDCST-CUSTOMER-TYPE            TO
WS-FMDL-PF-CUST-FEE-CUST-TYPE (WS-INDEX)
MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
WS-FMDL-PF-CUST-FEE-TYPE (WS-INDEX).


20897-ADD-THE-FEE-SCMM.


SUBTRACT WS-PRD-PROD-FEE (WS-INDEX) FROM
WS-DC-FEE-AMT-FUEL.


IF WS-PRD-SCM-FLAT-OR-POF (WS-INDEX) = 'F'
EVALUATE TRUE
WHEN THIS-IS-A-POS-TRANS OR
COM-DOWN-ENTRY-FLAG = 'Y'
ADD WS-PRD-SCM-AUTO-RATE   (WS-INDEX) TO
WS-DC-FEE-AMT-FUEL
MOVE WS-PRD-SCM-AUTO-RATE (WS-INDEX) TO
WS-FMDL-PF-SC-FEE (WS-INDEX)
WHEN OTHER
ADD WS-PRD-SCM-MANUAL-RATE (WS-INDEX) TO
WS-DC-FEE-AMT-FUEL
MOVE WS-PRD-SCM-MANUAL-RATE (WS-INDEX) TO
WS-FMDL-PF-SC-FEE (WS-INDEX)
END-EVALUATE
ELSE
EVALUATE TRUE
WHEN THIS-IS-A-POS-TRANS OR
COM-DOWN-ENTRY-FLAG = 'Y'
COMPUTE WS-DC-FEE-AMT-FUEL ROUNDED =
WS-DC-FEE-AMT-FUEL +
(WS-UIWA-PR-COST-SC  (WS-INDEX) *
WS-PRD-SCM-AUTO-RATE (WS-INDEX) / 100)
COMPUTE WS-FMDL-PF-SC-FEE (WS-INDEX) ROUNDED =
(WS-UIWA-PR-COST-SC  (WS-INDEX) *
WS-PRD-SCM-AUTO-RATE (WS-INDEX) / 100)
WHEN OTHER
COMPUTE WS-DC-FEE-AMT-FUEL ROUNDED =
WS-DC-FEE-AMT-FUEL +
(WS-UIWA-PR-COST-SC  (WS-INDEX) *
WS-PRD-SCM-MANUAL-RATE (WS-INDEX) / 100)
COMPUTE WS-FMDL-PF-SC-FEE (WS-INDEX) ROUNDED =
(WS-UIWA-PR-COST-SC  (WS-INDEX) *
WS-PRD-SCM-MANUAL-RATE (WS-INDEX) / 100)
END-EVALUATE
END-IF.


MOVE 'S'                             TO
WS-FMDL-PF-SC-FEE-SOURCE (WS-INDEX)
MOVE PRDSCM-LOCATION-TYPE            TO
WS-FMDL-PF-SC-FEE-LOC-TYPE (WS-INDEX)
MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
WS-FMDL-PF-SC-FEE-TYPE (WS-INDEX).


20897-ADD-THE-FEE-FMRM.


IF WS-NON-BILLABLE > ZEROS OR COM-DIRECT-BILLING-IN-PROCESS
ADD WS-PRD-DB-RATE (WS-INDEX)        TO
COM-PNET-CO-FEE
MOVE WS-PRD-DB-RATE (WS-INDEX) TO
WS-FMDL-PF-CUST-FEE (WS-INDEX)
ELSE
ADD WS-PRD-FUNDED-RATE (WS-INDEX)    TO
COM-PNET-CO-FEE
MOVE WS-PRD-FUNDED-RATE (WS-INDEX) TO
WS-FMDL-PF-CUST-FEE (WS-INDEX)
END-IF.


ADD WS-PRD-SC-RATE (WS-INDEX)                TO
COM-PNET-SC-FEE.
MOVE WS-PRD-SC-RATE (WS-INDEX) TO
WS-FMDL-PF-SC-FEE (WS-INDEX).


MOVE 'F'                             TO
WS-FMDL-PF-CUST-FEE-SOURCE (WS-INDEX)
WS-FMDL-PF-SC-FEE-SOURCE (WS-INDEX)
MOVE COM-RMR-PRDFMRM-LOC-TYPE         TO
WS-FMDL-PF-CUST-FEE-CUST-TYPE (WS-INDEX)
WS-FMDL-PF-SC-FEE-LOC-TYPE (WS-INDEX)
MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
WS-FMDL-PF-CUST-FEE-TYPE (WS-INDEX)
WS-FMDL-PF-SC-FEE-TYPE (WS-INDEX).


20900-CHECK-FOR-VRU-FEE.


IF (NOT THIS-IS-AN-ALLIANCE-CUST) AND
(NOT COM-PREFERRED-CUSTOMER)
IF THIS-BE-A-VRU-EXPRESS-CASH
IF CDN-BILL-AT-PICKUP
IF CDN-LESS-PICKUP
MOVE WS-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
WS-CHARGE-RATE
ELSE
MOVE WS-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
MOVE ZEROES         TO WS-CHARGE-RATE.


20905-CHECK-FOR-FREEBIE.

MOVE 'N' TO WS-EXIT-FLAG.


PERFORM DETERMINE-IF-BALANCE-BASED
IF NOT WS-BALANCE-BASED
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-TERMINAL-FUEL OR WS-BILLABLE = 0
MOVE 'Y' TO WS-EXIT-FLAG.

IF THIS-BE-AN-ATM-XTN
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N'
IF PRM-FREE-XTN-COUNT < CDN-FREE-XTN-COUNT
MOVE ZEROS TO WS-BASE-ADVANCE-RATE,
WS-MIXED-ADVANCE-RATE,
WS-BASE-FUEL-RATE,
WS-MIXED-FUEL-RATE,
WS-CHARGE-RATE.


20910-CHECK-BRIDGE-FEES.


MOVE ZEROES TO SAVE-SC-FEE,
WS-DC-FEE-AMT-CUSTOM
IF COM-PNET-BRIDGE-FLAG-YES OR
COM-CUSTOM-FEE-FLAG = 'Y'
PERFORM 20911-SETUP-BRIDGE-FEES
PERFORM 20912-CHECK-BRIDGE-CASH-ONLY
IF WS-EXIT-FLAG = 'N'
PERFORM 20913-ADJUST-BRIDGE-FEES-CO
PERFORM 20914-ADJUST-BRIDGE-FEES-SC
END-IF
PERFORM 20915-ADJUST-BRIDGE-CASH-CO
PERFORM 20916-ADJUST-BRIDGE-CASH-SC
PERFORM 20917-ADJUST-BRIDGE-ADD-ON.


20911-SETUP-BRIDGE-FEES.

IF CDN-RELATIONSHIP-FLAG = 'Y'
IF COM-RMR-FUND-DB-CASH-FEE-TYPE = 'P'
OR COM-RMR-FUND-DB-BOTH-FEE-TYPE = 'P'
OR COM-RMR-FUND-DB-FUEL-FEE-TYPE = 'P'
OR COM-RMR-FUND-CASH-FEE-TYPE    = 'P'
OR COM-RMR-FUND-BOTH-FEE-TYPE    = 'P'
OR COM-RMR-FUND-FUEL-FEE-TYPE    = 'P'
PERFORM 20920-GET-DISCOUNT-INFO
COMPUTE WS-TOTAL-FACE-SC-POF  =
WS-UIWA-NR2-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC



COMPUTE WS-TOTAL-FACE-SC-POF =
WS-TOTAL-FACE-SC-POF - WS-DC-DISCOUNT-AMT
MOVE 'Y' TO WS-FMRM-05-POF
END-IF
IF WS-NON-BILLABLE > ZEROS OR COM-DIRECT-BILLING-IN-PROCESS
EVALUATE TRUE
WHEN PGRM-FUNCTION-CASH-ONLY
MOVE COM-RMR-CO-DB-CASH TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-DB-CASH TO COM-PNET-SC-FEE
MOVE ZEROS              TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
IF COM-RMR-SC-DB-CASH   > ZEROS
AND COM-RMR-FUND-DB-CASH-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE = WS-UIWA-CASH-AMT-SC
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-DB-CASH / 100
END-IF
END-IF
WHEN WS-UIWA-CASH-AMT > 0
MOVE COM-RMR-CO-DB-ADD-ON TO COM-PNET-CASH-ADD-ON
MOVE COM-RMR-CO-DB-BOTH   TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-DB-BOTH   TO COM-PNET-SC-FEE
MOVE COM-RMR-SC-DB-ADD-ON TO COM-PNET-SC-ADD-ON
IF COM-RMR-SC-DB-BOTH   > ZEROS
AND COM-RMR-FUND-DB-BOTH-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE =
WS-TOTAL-FACE-SC-POF + WS-UIWA-CASH-AMT
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-DB-BOTH   / 100
MOVE ZEROS          TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
END-IF
END-IF
WHEN OTHER
MOVE COM-RMR-CO-DB-FUEL TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-DB-FUEL TO COM-PNET-SC-FEE
MOVE ZEROS              TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
IF COM-RMR-SC-DB-FUEL   > ZEROS
AND COM-RMR-FUND-DB-FUEL-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE =
WS-TOTAL-FACE-SC-POF
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-DB-FUEL  / 100
END-IF
END-IF
END-EVALUATE
ELSE
EVALUATE TRUE
WHEN PGRM-FUNCTION-CASH-ONLY
MOVE COM-RMR-CO-FUND-CASH TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-FUND-CASH TO COM-PNET-SC-FEE
MOVE ZEROS                TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
IF COM-RMR-SC-FUND-CASH > ZEROS
AND COM-RMR-FUND-CASH-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE = WS-UIWA-CASH-AMT-SC
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-FUND-CASH / 100
END-IF
END-IF
WHEN WS-UIWA-CASH-AMT > 0
MOVE COM-RMR-CO-FUND-ADD-ON TO COM-PNET-CASH-ADD-ON
MOVE COM-RMR-CO-FUND-BOTH   TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-FUND-BOTH   TO COM-PNET-SC-FEE
MOVE COM-RMR-SC-FUND-ADD-ON TO COM-PNET-SC-ADD-ON
IF COM-RMR-SC-FUND-BOTH > ZEROS
AND COM-RMR-FUND-BOTH-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE =
WS-TOTAL-FACE-SC-POF + WS-UIWA-CASH-AMT
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-FUND-BOTH / 100
MOVE ZEROS      TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
END-IF
END-IF
WHEN OTHER
MOVE COM-RMR-CO-FUND-FUEL TO COM-PNET-CO-FEE
MOVE COM-RMR-SC-FUND-FUEL TO COM-PNET-SC-FEE
MOVE ZEROS                TO COM-PNET-CASH-ADD-ON
COM-PNET-SC-ADD-ON
IF COM-RMR-SC-FUND-FUEL > ZEROS
AND COM-RMR-FUND-FUEL-FEE-TYPE = 'P'
IF COM-PNET-SC-FEE > ZEROS
COMPUTE COM-PNET-SC-FEE =
WS-TOTAL-FACE-SC-POF
COMPUTE COM-PNET-SC-FEE
ROUNDED = COM-PNET-SC-FEE *
COM-RMR-SC-FUND-FUEL / 100
END-IF
END-IF
END-EVALUATE
END-IF
PERFORM 20911-CHECK-PRODUCT-FEES.


20911-CHECK-PRODUCT-FEES.

MOVE COM-RMR-ALLOW-CUSTOM-PROD-FEE TO
RMR-ALLOW-CUSTOM-PROD-FEE
IF RMR-ALLOW-CUSTOM-PROD-FEE-YES
PERFORM 20911-SETUP-PROD-FEES-FMRM
ELSE
PERFORM 20911-SETUP-PROD-FEES-DEFAULT
END-IF.


20911-SETUP-PROD-FEES-FMRM.

MOVE 'FMRM'               TO WS-PRD-CALC-TYPE
MOVE COM-RMR-PRD-RATE-INFO TO PFMRM-RATE-INFO
INITIALIZE WS-PRD-FEE-WORK-AREA
IF WS-UIWA-PR-CODE (01) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR1-CODE-NUM + 1
MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (01)
MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)   TO
WS-PRD-FUNDED-RATE (01)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE (01)
MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
WS-PRD-FUNDED-RATE-ALTCUR (01)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE-ALTCUR (01)
MOVE PFMRM-SC-RATE (WS-INDEX)    TO
WS-PRD-SC-RATE (01)
END-IF.
IF WS-UIWA-PR-CODE (02) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR2-CODE-NUM + 1
MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (02)
MOVE PFMRM-CO-FUNDED-RATE(WS-INDEX)   TO
WS-PRD-FUNDED-RATE (02)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE (02)
MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
WS-PRD-FUNDED-RATE-ALTCUR (02)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE-ALTCUR (02)
MOVE PFMRM-SC-RATE (WS-INDEX)    TO
WS-PRD-SC-RATE (02)
END-IF.
IF WS-UIWA-PR-CODE (03) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR3-CODE-NUM + 1
MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (03)
MOVE PFMRM-CO-FUNDED-RATE(WS-INDEX)   TO
WS-PRD-FUNDED-RATE (03)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE (03)
MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
WS-PRD-FUNDED-RATE-ALTCUR (03)
MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
WS-PRD-DB-RATE-ALTCUR (03)
MOVE PFMRM-SC-RATE (WS-INDEX)    TO
WS-PRD-SC-RATE (03)
END-IF.
PERFORM 20896-CHECK-FOR-PRODUCT-FEES.


20911-SETUP-PROD-FEES-DEFAULT.




MOVE WS-BASE-FUEL-RATE  TO WS-HOLD-BASE-FUEL-RATE
MOVE WS-MIXED-FUEL-RATE TO WS-HOLD-MIXED-FUEL-RATE
MOVE WS-DC-FEE-AMT-FUEL TO WS-HOLD-DC-FEE-AMT-FUEL.



MOVE COM-PNET-CO-FEE    TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
MOVE COM-PNET-SC-FEE    TO WS-DC-FEE-AMT-FUEL
PERFORM 20895-SETUP-PRODUCT-FEES
PERFORM 81040-COMPUTE-PROD-FEES.



MOVE WS-BASE-FUEL-RATE  TO COM-PNET-CO-FEE
MOVE WS-DC-FEE-AMT-FUEL TO COM-PNET-SC-FEE.

MOVE WS-HOLD-BASE-FUEL-RATE  TO WS-BASE-FUEL-RATE
MOVE WS-HOLD-MIXED-FUEL-RATE TO WS-MIXED-FUEL-RATE
MOVE WS-HOLD-DC-FEE-AMT-FUEL TO WS-DC-FEE-AMT-FUEL.


20912-CHECK-BRIDGE-CASH-ONLY.



MOVE 'N' TO WS-EXIT-FLAG.
IF COM-CUSTOM-FEE-FLAG NOT = 'Y'
IF (WS-NON-BILLABLE = ZEROES)      OR
(WS-NON-BILLABLE = WS-UIWA-CASH-AMT AND
COM-DIRECT-BILLING-CASH = '1')
MOVE 'Y' TO WS-EXIT-FLAG.


20913-ADJUST-BRIDGE-FEES-CO.






IF COM-PNET-PAYMENT-CODE = '1' OR '3'
MOVE ZEROES TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE.
IF COM-PNET-PAYMENT-CODE = '2'
IF PGRM-FUNCTION-CASH-ONLY
MOVE ZEROES TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
ELSE
IF NOT WS-NO-FUEL-FEE
MOVE COM-PNET-CO-FEE TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE.
IF COM-PNET-PAYMENT-CODE = '4'
IF PGRM-FUNCTION-CASH-ONLY
MOVE ZEROES TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
ELSE
IF NOT WS-NO-FUEL-FEE
COMPUTE WS-BASE-FUEL-RATE  = COM-PNET-CO-FEE +
COM-PNET-SC-FEE
COMPUTE WS-MIXED-FUEL-RATE = COM-PNET-CO-FEE +
COM-PNET-SC-FEE.


20914-ADJUST-BRIDGE-FEES-SC.


IF COM-PNET-PAYMENT-CODE = '1' OR '2'
IF PGRM-FUNCTION-CASH-ONLY
NEXT SENTENCE
ELSE
MOVE COM-PNET-SC-FEE TO SAVE-SC-FEE,
WS-DC-FEE-AMT-CUSTOM.
IF COM-PNET-PAYMENT-CODE = '3'
IF PGRM-FUNCTION-CASH-ONLY
NEXT SENTENCE
ELSE
COMPUTE SAVE-SC-FEE = COM-PNET-SC-FEE + COM-PNET-CO-FEE
COMPUTE WS-DC-FEE-AMT-CUSTOM = COM-PNET-SC-FEE +
COM-PNET-CO-FEE.


20915-ADJUST-BRIDGE-CASH-CO.


IF (WS-UIWA-CASH-AMT > ZEROES) AND
(COM-DIRECT-BILLING-CASH = '1' OR
COM-CUSTOM-FEE-FLAG = 'Y')
IF COM-PNET-PAYMENT-CODE-1-OR-3
MOVE ZEROES TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
IF COM-PNET-PAYMENT-CODE-2-OR-4
IF PGRM-FUNCTION-CASH-ONLY
MOVE COM-PNET-CO-FEE      TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
IF COM-PNET-PAYMENT-CODE = '4'
ADD COM-PNET-SC-FEE    TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
ELSE
MOVE COM-PNET-CASH-ADD-ON TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.


20916-ADJUST-BRIDGE-CASH-SC.


IF COM-PNET-PAYMENT-CODE = '1' OR '2' OR '3'
IF WS-UIWA-CASH-AMT        > ZERO AND
(COM-DIRECT-BILLING-CASH = '1' OR
COM-CUSTOM-FEE-FLAG = 'Y')
IF PGRM-FUNCTION-CASH-ONLY
MOVE COM-PNET-SC-FEE      TO SAVE-SC-FEE,
WS-DC-FEE-AMT-CUSTOM
IF COM-PNET-PAYMENT-CODE = '3'
ADD COM-PNET-CO-FEE    TO SAVE-SC-FEE
WS-DC-FEE-AMT-CUSTOM
ELSE
NEXT SENTENCE
ELSE
ADD  COM-PNET-SC-ADD-ON TO SAVE-SC-FEE
WS-DC-FEE-AMT-CUSTOM.

20917-ADJUST-BRIDGE-ADD-ON.

IF COM-PNET-VOICE-SURCHARGE NOT NUMERIC
MOVE ZEROES TO COM-PNET-VOICE-SURCHARGE.


IF COM-PNET-BRIDGE-FLAG-YES OR
CDN-RELATIONSHIP-FLAG = 'Y'
EVALUATE TRUE
WHEN THIS-IS-A-POS-TRANS
WHEN WS-UIWA-NATS-POS-FLAG = 'Y'
CONTINUE
WHEN COM-PNET-VOICE-SURCHARGE > ZEROES
MOVE ZEROES                  TO COM-SCM-AUTO-CALL-FEE
COM-SCM-MANUAL-CALL-FEE
WS-MANUAL-FEE
ADD COM-PNET-VOICE-SURCHARGE TO SAVE-SC-FEE
WS-DC-FEE-AMT-CUSTOM
END-EVALUATE.

20919-GET-NETWORK-PRICING.

IF NOT THIS-IS-A-POS-TRANS
IF SCM-NET-PRICING-FL-YES
MOVE ZERO TO CONTINUE-NET-PRICING-SW
MOVE SPACES               TO WS-DNETPRCG-PFID-CD
PERFORM 71115-CHECK-NET-PRICING-2
END-IF
END-IF.

20920-GET-DISCOUNT-INFO.


IF THIS-IS-A-SETTLEMENT-ITEM OR
WS-MANUAL-FEE > ZEROES
PERFORM 80000-DISCOUNT-COMPUTATION
END-IF.


20925-CHECK-MERCHANT-SURCHARGE.


IF APPLY-MERCH-SURCHRG
ADD WS-MERCH-SURCHRG-TOTAL TO WS-TOTAL-REQUEST
MULTIPLY WS-MERCH-SURCHRG-TOTAL BY -1
GIVING WS-MERCH-SURCHRG-AMT-ADJ
IF WS-UIWA-PR1-CODE NOT > SPACES
MOVE '31' TO WS-UIWA-PR1-CODE
MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR1-COST
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR1-COST-SC
WS-UIWA-PR1-COST-US
WS-MERCH-SURCHRG-AMT-SC
IF WS-BILLABLE = ZERO
MOVE 'D' TO INP-PROD-BILL-1
END-IF
ELSE
IF WS-UIWA-PR2-CODE > SPACES
MOVE '31' TO WS-UIWA-PR3-CODE
MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR3-COST
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR3-COST-SC
WS-UIWA-PR3-COST-US
WS-MERCH-SURCHRG-AMT-SC
IF WS-BILLABLE = ZERO
MOVE 'D' TO INP-PROD-BILL-3
END-IF
ELSE
MOVE '31' TO WS-UIWA-PR2-CODE
MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR2-COST
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR2-COST-SC
WS-UIWA-PR2-COST-US
WS-MERCH-SURCHRG-AMT-SC
IF WS-BILLABLE = ZERO
MOVE 'D' TO INP-PROD-BILL-2
END-IF
END-IF
END-IF
ADD WS-WORK-PROD-AMT    TO WS-CURXMN
ADD WS-WORK-PROD-AMT-US TO WS2-CURXMN, WS3-CURXMN
IF WS-BILLABLE = ZERO
ADD WS-WORK-PROD-AMT    TO WS-NON-BILLABLE
ADD WS-WORK-PROD-AMT-US TO WS2-NON-BILLABLE
WS3-NON-BILLABLE
ELSE
ADD WS-WORK-PROD-AMT    TO WS-BILLABLE
ADD WS-WORK-PROD-AMT-US TO WS2-BILLABLE
WS3-BILLABLE
END-IF
END-IF.


20930-ADD-IN-MANUAL-CALL-FEE.


EVALUATE TRUE
WHEN THIS-IS-A-POS-TRANS
WHEN WS-UIWA-NATS-POS-FLAG = 'Y'
WHEN PGRM-FUNCTION-CASH-ONLY
CONTINUE
WHEN OTHER
IF NOT WS-NO-FUEL-FEE
ADD CDN-MANUAL-ADD-ON TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
END-EVALUATE.


20940-ADD-IN-COST-PLUS-FEE.


IF WS-COST-PLUS-USED = 'Y'
IF NOT WS-NO-FUEL-FEE
ADD CDN-COST-PLUS-ADD-ON        TO WS-BASE-FUEL-RATE
ADD CDN-COST-PLUS-ADD-ON-ALTCUR TO WS-MIXED-FUEL-RATE
END-IF
COMPUTE WS-COST-PLUS-CPG-FEE1 = WS-TOTAL-GALLONS *
(CDN-COST-PLUS-CPG / 100)
IF WS-COST-PLUS-CPG-FEE1 > WS-DC-DISCOUNT-AMT
MOVE WS-DC-DISCOUNT-AMT TO WS-COST-PLUS-CPG-FEE1
END-IF
IF NOT WS-NO-FUEL-FEE
ADD WS-COST-PLUS-CPG-FEE1 TO WS-BASE-FUEL-RATE
END-IF
COMPUTE WS-COST-PLUS-CPG-FEE2 = WS-TOTAL-GALLONS *
(CDN-COST-PLUS-CPG-ALTCUR / 100)
IF WS-COST-PLUS-CPG-FEE2 > WS-DC-DISCOUNT-AMT
MOVE WS-DC-DISCOUNT-AMT TO WS-COST-PLUS-CPG-FEE2
END-IF
IF NOT WS-NO-FUEL-FEE
ADD WS-COST-PLUS-CPG-FEE2 TO WS-MIXED-FUEL-RATE
END-IF
END-IF.


20945-ADD-IN-NATS-FEE.


IF THIS-BE-A-NATS-AUTH
IF WS-UIWA-NATS-FEE NUMERIC
IF NOT WS-NO-FUEL-FEE
ADD WS-UIWA-NATS-FEE TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE.


20950-ADJ-COMDATA-COMPLETE-FEE.


IF COM-COMDATA-COMPLETE-FLAG = 'Y'
IF CDN-FEE-ON-TRANSLINK-YES OR
WS-BILLABLE > ZEROES
MOVE ZEROES TO SAVE-SC-FEE
ELSE
MOVE ZEROES TO WS-BASE-FUEL-RATE,
WS-BASE-ADVANCE-RATE,
WS-MIXED-FUEL-RATE,
WS-MIXED-ADVANCE-RATE,
SAVE-SC-FEE,
WS-DC-FEE-AMT-CUSTOM.


20955-CHECK-ATM-FEES.

IF THIS-BE-AN-ATM-XTN
MOVE ZEROES TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
EVALUATE TRUE
WHEN TSXCO0AT-IN-NETW-CARD-VAL
CONTINUE
WHEN TSXCO0AT-TRAN-TYPE-INQUIRY
IF TSXCO0AT-LOCATION-CODE = 'AT900' OR 'AT901'
MOVE CDN-ATM-INQUIRY-FEE TO WS-BASE-ADVANCE-RATE
MOVE CDN-ATM-INQUIRY-FEE TO WS-MIXED-ADVANCE-RATE
ELSE
IF TSXCO0AT-IN-NETW-CASH-OUT
CONTINUE
ELSE
MOVE CDN-MAESTRO-INQ-FEE
TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
END-IF
WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW-US
MOVE CDN-ATM-FEE-US      TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW-CN
MOVE CDN-ATM-FEE-CN      TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
WHEN TSXCO0AT-TRAN-TYPE-PURCHASE
IF TSXCO0AT-IN-NETW-PURC
MOVE CDN-IN-NETWORK-FEE
TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
ELSE
MOVE CDN-MAESTRO-FEE  TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
END-EVALUATE
END-IF.


20957-CHECK-REDUCE-CO-FEES.




IF WS-CURRENT-DATE-YYYYDDD NOT > COM-CO-FEE-DISC-CUTOFF AND
(COM-CO-FEE-PERCENT-DISC > 0 OR
COM-CO-FEE-FLAT-DISC > 0)
PERFORM 20958-REDUCE-CO-FEES.


20958-REDUCE-CO-FEES.







IF COM-CO-FEE-PERCENT-DISC > 0
COMPUTE WS-CO-FUEL-RATE-REDUCTION = WS-BASE-FUEL-RATE *
(COM-CO-FEE-PERCENT-DISC / 100)
ELSE
COMPUTE WS-CO-FUEL-RATE-REDUCTION = COM-CO-FEE-FLAT-DISC
END-IF.

IF WS-CO-FUEL-RATE-REDUCTION > WS-BASE-FUEL-RATE
MOVE WS-BASE-FUEL-RATE TO WS-CO-FUEL-RATE-REDUCTION
END-IF.

COMPUTE WS-BASE-FUEL-RATE = WS-BASE-FUEL-RATE -
WS-CO-FUEL-RATE-REDUCTION.
MOVE WS-BASE-FUEL-RATE TO WS-MIXED-FUEL-RATE.


20959-CHECK-FLEET-FEE.


IF CDN-FLEET-FLAT-FEE NOT NUMERIC
MOVE ZEROES TO CDN-FLEET-FLAT-FEE.
IF THIS-BE-A-FLEET-XTN
IF NOT WS-NO-FUEL-FEE
MOVE CDN-FLEET-FLAT-FEE TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
END-IF
MOVE ZEROES             TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF.


20959-CHECK-PAM-FEE.




IF CDN-CUST-ACCT-CODE = 'PA073' OR
CDN-CUST-ACCT-CODE = 'TT984'
IF TRACTOR-PURCHASE = 1 OR
TRAILER-PURCHASE = 1
ADD  WS-BASE-ADVANCE-RATE  TO WS-BASE-FUEL-RATE
ADD  WS-MIXED-ADVANCE-RATE TO WS-MIXED-FUEL-RATE
MOVE ZEROES                TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE.

209XX-COMPLETE-FEE-PROCESS.







EVALUATE TRUE
WHEN COM-ACCT-IS-BASE-CURRENCY
MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
MOVE WS-BASE-FUEL-RATE     TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO WS-FUEL-RATE
MOVE WS-CONVERT-AMOUNT2    TO WS-FUEL-RATE2
MOVE WS-CONVERT-AMOUNT3    TO WS-FUEL-RATE3

MOVE WS-BASE-ADVANCE-RATE  TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO WS-ADVANCE-RATE
MOVE WS-CONVERT-AMOUNT2    TO WS-ADVANCE-RATE2
MOVE WS-CONVERT-AMOUNT3    TO WS-ADVANCE-RATE3
WHEN OTHER
MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
IF COM-COMP-SC-CURR-SAME
MOVE WS-BASE-FUEL-RATE  TO WS-CONVERT-AMOUNT
ELSE
MOVE WS-MIXED-FUEL-RATE TO WS-CONVERT-AMOUNT
END-IF
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO WS-FUEL-RATE
MOVE WS-CONVERT-AMOUNT2    TO WS-FUEL-RATE2
MOVE WS-CONVERT-AMOUNT3    TO WS-FUEL-RATE3

IF COM-COMP-SC-CURR-SAME
MOVE WS-BASE-ADVANCE-RATE  TO WS-CONVERT-AMOUNT
ELSE
MOVE WS-MIXED-ADVANCE-RATE TO WS-CONVERT-AMOUNT
END-IF
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO WS-ADVANCE-RATE
MOVE WS-CONVERT-AMOUNT2    TO WS-ADVANCE-RATE2
MOVE WS-CONVERT-AMOUNT3    TO WS-ADVANCE-RATE3
END-EVALUATE.

COMPUTE WS-TOTAL-RATE  = WS-FUEL-RATE  + WS-ADVANCE-RATE.
COMPUTE WS-TOTAL-RATE2 = WS-FUEL-RATE2 + WS-ADVANCE-RATE2.
COMPUTE WS-TOTAL-RATE3 = WS-FUEL-RATE3 + WS-ADVANCE-RATE3.


20960-CHECK-DEDUCT-FEE.

COMPUTE WS-WORK-AMOUNT = WS-TOTAL-REQUEST +
WS-TOTAL-RATE.
IF (I-DEDUCT-CHARGE-FROM-DRIVER)
MOVE WS-TOTAL-RATE TO WS-HOLD-RATE.

IF (I-DEDUCT-CHARGE-FROM-DRIVER) AND
(WS-WORK-AMOUNT >
(PRM-EXPENSE-BALANCE + WS-MERCH-SURCHRG-TOTAL))

COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE -
WS-FUEL-RATE        -
WS-ADVANCE-RATE
MOVE PRM-EXPENSE-BALANCE    TO XCS-BAL-REQ-AMT
EVALUATE TRUE
WHEN COM-CN-COMP-US-SC
MOVE PRM-EXPENSE-BALANCE TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO XCS-BAL-REQ-AMT
WHEN COM-US-COMP-CN-SC
MOVE PRM-EXPENSE-BALANCE TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO XCS-BAL-REQ-AMT
END-EVALUATE

MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
MOVE -1 TO FPCMT1L
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20970-CHECK-BALANCE.

PERFORM DETERMINE-IF-BALANCE-BASED
IF (NOT I-DEDUCT-CHARGE-FROM-DRIVER) AND
(WS-BALANCE-BASED               ) AND
(WS-TOTAL-REQUEST >
(PRM-EXPENSE-BALANCE + WS-MERCH-SURCHRG-TOTAL))
MOVE PRM-EXPENSE-BALANCE    TO XCS-BAL-REQ-AMT
EVALUATE TRUE
WHEN COM-CN-COMP-US-SC
MOVE PRM-EXPENSE-BALANCE TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO XCS-BAL-REQ-AMT
WHEN COM-US-COMP-CN-SC
MOVE PRM-EXPENSE-BALANCE TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO XCS-BAL-REQ-AMT
END-EVALUATE
MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
MOVE -1 TO FPCMT1L
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


20980-CHECK-DB-LIMIT.

MOVE 'N' TO WS-LOOP-FP-0100.


IF (COM-PNET-BRIDGE-FLAG-YES OR CDN-RELATIONSHIP-FLAG = 'Y')
AND
(COM-PNET-CHAIN-CODE  > SPACES OR COM-BRIDGE-KEY > SPACES)
AND
(COM-PNET-DAILY-LIMIT > ZEROES)
IF (COM-PNET-DAILY-LIMIT - COM-PNET-DAILY-USED) <
(WS2-NON-BILLABLE)
PERFORM 20981-DB-LIMIT-EXCEEDED.


20981-DB-LIMIT-EXCEEDED.

IF (COM-PNET-BRIDGE-FLAG = 'L' AND EIBAID = DFHPF4) OR
(THIS-BE-A-PC-REQUEST AND COM-PNET-BRIDGE-FLAG
NOT = 'X')
MOVE 'X' TO COM-PNET-BRIDGE-FLAG
MOVE 'Y' TO READ-CUST-FLAG
MOVE ' ' TO COM-PRM-NETWORKING
COM-DIRECT-BILL-CONTROL
MOVE COM-FP-SC-CODE    TO  SCMSTR-KEY
MOVE SPACES            TO COM-PNET-CHAIN-CODE
COM-BRIDGE-KEY
MOVE ZEROES            TO WS-BILLABLE,
WS2-BILLABLE,
WS3-BILLABLE,
WS-NON-BILLABLE,
WS2-NON-BILLABLE
WS3-NON-BILLABLE
MOVE 'Y' TO WS-LOOP-FP-0100
ELSE
IF CDN-CUST-ACCT-CODE = 'BR000'
MOVE BRIDGE-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE BRIDGE-LIMIT-EXCEEDED   TO OUT-COMENT-1
MOVE ACCT-BR000-MUST-BE-BRIDGE TO OUT-COMENT-2
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF CDN-RELATIONSHIP-FLAG = 'Y' AND
COM-BRIDGE-KEY > SPACES     AND
NOT COM-PNET-BRIDGE-FLAG-YES
MOVE DIRECT-LIMIT-EXCEEDED-N
TO POS-ERROR-NUMBER
MOVE DIRECT-LIMIT-EXCEEDED TO OUT-COMENT-1
MOVE DIRECT-LIMIT-EXCEEDED-2
TO OUT-COMENT-2
MOVE 'L' TO COM-PNET-BRIDGE-FLAG
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE BRIDGE-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE BRIDGE-LIMIT-EXCEEDED TO OUT-COMENT-1
MOVE BRIDGE-LIMIT-EXCEEDED-2 TO OUT-COMENT-2
MOVE 'L' TO COM-PNET-BRIDGE-FLAG
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


20985-CHECK-GUAR-DISC-AVAIL.

IF TRACTOR-PURCHASE NOT = 1 AND
TRAILER-PURCHASE NOT = 1
MOVE 'N' TO CDN-GUAR-YN.

IF COM-FOCUS-DISC-FLAG = 'Y'
MOVE 'N' TO CDN-GUAR-YN.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-NON-BILLABLE > 0
IF CDN-BILL-AT-LOAD AND WS-BALANCE-BASED
CONTINUE
ELSE
MOVE 'N' TO CDN-GUAR-YN.

20989-GET-RFID-UNIT-TRLR.

IF WS-UIWA-RFID-NBR > SPACES
AND WS-RFID-XREF-READ NOT = 'Y'
MOVE '20989-GET-RFID-UNIT-TRLR' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.RFID_XREF'     TO CXUTS0ML-COMMAND
EXEC SQL
SELECT RFID_UNIT_TRLR_NBR,
LST_USE_TS,
LST_USE_CRD_NBR,
LST_USE_LOC_ID,
LST_USE_DRVR_NBR,
LST_USE_TRLR_NBR,
LST_USE_HUB_HI_VAL,
LST_USE_TRLR_HUB_VAL,
LST_USE_TRLR_HRS,
LST_USE_TRIP_NBR,
LST_USE_DL_NBR,
LST_USE_DL_ST,
LST_USE_PO_NBR,
LST_USE_LST_NM,
LST_USE_FST_NM,
LST_USE_UNIT_NBR
INTO :DRFIDXRF.RFID-UNIT-TRLR-NBR,
:DRFIDXRF.LST-USE-TS,
:DRFIDXRF.LST-USE-CRD-NBR,
:DRFIDXRF.LST-USE-LOC-ID,
:DRFIDXRF.LST-USE-DRVR-NBR,
:DRFIDXRF.LST-USE-TRLR-NBR,
:DRFIDXRF.LST-USE-HUB-HI-VAL,
:DRFIDXRF.LST-USE-TRLR-HUB-VAL,
:DRFIDXRF.LST-USE-TRLR-HRS,
:DRFIDXRF.LST-USE-TRIP-NBR,
:DRFIDXRF.LST-USE-DL-NBR,
:DRFIDXRF.LST-USE-DL-ST,
:DRFIDXRF.LST-USE-PO-NBR,
:DRFIDXRF.LST-USE-LST-NM,
:DRFIDXRF.LST-USE-FST-NM,
:DRFIDXRF.LST-USE-UNIT-NBR
FROM DBO.RFID_XREF
WHERE RFID_NBR = :WS-UIWA-RFID-NBR
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = +100
MOVE INVALID-RFID-NBR   TO OUT-COMENT
MOVE INVALID-RFID-NBR-N TO POS-ERROR-NUMBER
ELSE
MOVE 'Y' TO WS-RFID-XREF-READ
END-IF
END-IF.

IRIS-CHECK-AND-NOTIFY.

IF WS-NOTIFY-IRIS-FL = 'Y'
PERFORM IRIS-NUM-CHECK-1
IF WS-CIX-MESSAGE-TYPE = '0200'
AND WS-POS-ERROR-NUMBER > ZERO
CONTINUE
ELSE
MOVE 'N' TO WS-NOTIFY-IRIS-FL
EVALUATE TRUE
WHEN THIS-BE-AN-ATM-XTN
WHEN THIS-BE-AN-ATM-CANCEL
PERFORM IRIS-COMMON-REQ-VALUES
PERFORM IRIS-BLD-ATM-REQUEST
WHEN THIS-BE-A-VRU-CASH-ON-CARD
WHEN THIS-IS-A-CANCEL-XTN
AND WS-DRAFT-WAS-CANCELLED = 'Y'
PERFORM IRIS-VRU-TRANS
WHEN OTHER
PERFORM IRIS-COMMON-REQ-VALUES
PERFORM IRIS-BLD-FUEL-REQUEST
END-EVALUATE
PERFORM IRIS-LINK-TO-CXXCO0FC
END-IF
END-IF.


IRIS-COMMON-REQ-VALUES.

MOVE SPACES TO CXXCW170-CXXCO0FC-COMMAREA-IN
PERFORM IRIS-NUM-CHECK-2
MOVE 'US'   TO CXXCW170-CCI-PROGRAM-ID
MOVE '07'   TO CXXCW170-CIX-VERSION-NR
COMPUTE WS-CIX-CARD-NR =
(PRM-CARD-NUMB * 10) + PRM-CHECK-DIGIT
END-COMPUTE
MOVE WS-CIX-CARD-NR           TO CXXCW170-CIX-CARD-NR
IF PRM-CREATION-DATE NOT NUMERIC OR
PRM-CREATION-DATE = ZERO
MOVE '0001-01-01-00.00.00' TO CXXCW170-CIX-CRD-CTE-TS
ELSE
PERFORM IRIS-FORMAT-TIMESTAMP-I
MOVE WS-TS-WORK            TO CXXCW170-CIX-CRD-CTE-TS
END-IF
MOVE ZERO                     TO CXXCW170-CIX-DRVR-VRFY-RESP
MOVE CDN-CUST-ACCT-CODE       TO CXXCW170-CIX-ACCT-CD
MOVE CDN-CUST-NUMBER          TO CXXCW170-CIX-CUST-ID
IF WS-HOLD-POS-ERROR-MSG > SPACES
MOVE WS-HOLD-POS-ERROR-MSG TO CXXCW170-CIX-ERROR-MSG
ELSE
MOVE OUT-COMENT-1          TO CXXCW170-CIX-ERROR-MSG
END-IF
MOVE WS-POS-ERROR-NUMBER      TO CXXCW170-CIX-CDN-RESP-CD
MOVE 1                        TO CXXCW170-CIX-ATTEMPT
COMPUTE                          CXXCW170-CIX-CREDIT-LIMIT
= CCL-AVL-CRD-AMT * 100
END-COMPUTE
MOVE PRM-CARD-STATUS          TO CXXCW170-CIX-CARD-STATUS

EVALUATE TRUE
WHEN WS-UIWA-PROMPTED-DRIVER-ID > SPACES
MOVE WS-UIWA-PROMPTED-DRIVER-ID
TO CXXCW170-CIX-DRIVER-ID
WHEN WS-UIWA-EMPLOYEE-NR > SPACES
MOVE WS-UIWA-EMPLOYEE-NR
TO CXXCW170-CIX-DRIVER-ID
WHEN WS-UIWA-UNIT-NR > SPACES
MOVE WS-UIWA-UNIT-NR    TO CXXCW170-CIX-DRIVER-ID
END-EVALUATE

MOVE CDN-CORPORATE-CODE       TO CXXCW170-CIX-CORP-CODE
MOVE WS-COMPANY-STANDARD-ID  TO CXXCW170-CIX-PURCHASING-PROFL
MOVE SCM-LOCATION-ADDRESS     TO CXXCW170-CIX-ACCEPT-ADDR
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-CARD-CREDIT-LIM
MOVE CDN-BALLIM-FLAG          TO CXXCW170-CIX-BALLIM-FL
MOVE PRM-FIRST-NAME           TO CXXCW170-CIX-CHLDR-FNAME
MOVE PRM-LAST-NAME            TO CXXCW170-CIX-CHLDR-LNAME
MOVE PRM-CARD-EMPLOYEE-ID     TO CXXCW170-CIX-EMP-ID
MOVE HLD-PRIVATE-LABEL-CODE   TO CXXCW170-CIX-PL-CODE





CONTINUE.


IRIS-BLD-ATM-REQUEST.

MOVE TSXCO0AT-ISO-DATA TO ATMW-FORMATTED-FIELDS
PERFORM IRIS-NUM-CHECK-3

IF WS-CIX-MESSAGE-TYPE = '0200'
MOVE ATMW-MESSAGE-TYPE     TO CXXCW170-CIX-MESSAGE-TYPE
ELSE
MOVE WS-CIX-MESSAGE-TYPE   TO CXXCW170-CIX-MESSAGE-TYPE
END-IF
IF CXXCW170-CIX-CARD-NR NOT > ZERO
MOVE WS-PRM-CARD           TO CXXCW170-CIX-CARD-NR
END-IF
MOVE ATMW-PROCESS-CODE        TO CXXCW170-CIX-PROCESS-CODE
COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
ATMW-TRANSACTION-AMOUNT-N * 100
END-COMPUTE
MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
COMPUTE WS-AMOUNT-NO-DECIMAL-06 =
OL-PT-AMOUNT * 100
END-COMPUTE
MOVE WS-AMOUNT-NO-DECIMAL-06  TO CXXCW170-CIX-XTN-AMT-COMP
MOVE ATMW-TRAN-DATE  TO WS-TS-DATE-IN
MOVE ATMW-TRAN-TIME  TO WS-TS-TIME-IN
PERFORM IRIS-FORMAT-TIMESTAMP-II
MOVE WS-TS-WORK               TO CXXCW170-CIX-XTN-TRANS-TS
MOVE ATMW-DATE-LOCAL TO WS-TS-DATE-IN
MOVE ATMW-TIME-LOCAL TO WS-TS-TIME-IN
PERFORM IRIS-FORMAT-TIMESTAMP-II
MOVE WS-TS-WORK               TO CXXCW170-CIX-XTN-LOCAL-TS

IF S007-MASTERCARD-CARD = 'Y'
MOVE CDN-CARD-EXPIRATION-DATE
TO CXXCW170-CIX-EXP-DT
ELSE
MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
END-IF
MOVE ATMW-MERCHANT-CATEGORY   TO CXXCW170-CIX-MCC
CXXCW170-CIX-MCC-ORIGIN
MOVE ATMW-POS-ENTRY-MODE      TO CXXCW170-CIX-POS-ENT-MODE
MOVE ATMW-ACQUIRE-INST        TO CXXCW170-CIX-ACQ-INST-ID
MOVE ATMW-FORWARD-INST        TO CXXCW170-CIX-FWD-INST-ID

PERFORM IRIS-GET-RESPONSE-CD
MOVE ATMW-TERMINAL-ID         TO CXXCW170-CIX-TERM-ID
IF ATMW-ACCEPTOR-ID > SPACES
MOVE ATMW-ACCEPTOR-ID      TO CXXCW170-CIX-MERCH-ID
ELSE
MOVE 'MC901'               TO CXXCW170-CIX-MERCH-ID
END-IF
MOVE ATMW-TERMINAL-LOCATION   TO CXXCW170-CIX-ACCEPT-LOC
MOVE ATMW-TERMINAL-LOCATION (39:02)
TO CXXCW170-CIX-ACCEPT-STATE
IF ATMW-POS-DATA (14:3) NUMERIC
AND ATMW-POS-DATA (14:3) > '000'
PERFORM GET-COUNTRY-CODE
END-IF
IF CNTRY-ALPHA = 'US'
MOVE ATMW-POS-DATA (17:05)
TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
ELSE
MOVE ATMW-POS-DATA (17:10)
TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
END-IF
MOVE CNTRY-ALPHA              TO CXXCW170-CIX-ACCEPT-CNTRY
MOVE ATMW-CURRENCY-CODE       TO CXXCW170-CIX-TRAN-CURR-CD
MOVE '840'                    TO CXXCW170-CIX-COMP-CURR-CD
MOVE ATMW-POS-DATA            TO CXXCW170-CIX-POS-DATA
MOVE 'MD'                     TO CXXCW170-CIX-PROD-TYP
IF ATMW-ADVICE-REASON-CODE = '200' OR '201' OR '202' OR '203'
MOVE 'Y'                  TO CXXCW170-CIX-STAND-IN-FL
ELSE
MOVE 'N'                  TO CXXCW170-CIX-STAND-IN-FL
END-IF
MOVE ATMW-RETRIEVAL-REF       TO CXXCW170-CIX-RETRIEVAL-REF
MOVE ATMW-NETWORK-DATA        TO CXXCW170-CIX-NETWORK-DATA
MOVE ATMW-AUDIT-NUMBER-N      TO CXXCW170-CIX-AUDIT-NUMBER
MOVE ATMW-REPLACEMENT-AMOUNTS TO CXXCW170-CIX-RPLCMNT-AMT



















CONTINUE.


IRIS-BLD-FUEL-REQUEST.

PERFORM IRIS-NUM-CHECK-4
MOVE WS-CIX-RESP-REQUESTED    TO CXXCW170-CIX-RESP-REQUESTED

IF WS-CIX-MESSAGE-TYPE = '0200'
PERFORM IRIS-GET-MESSAGE-TYPE
END-IF
MOVE WS-CIX-MESSAGE-TYPE      TO CXXCW170-CIX-MESSAGE-TYPE
IF CXXCW170-CIX-CARD-NR NOT > ZERO
MOVE WS-UIWA-CARD-NR       TO CXXCW170-CIX-CARD-NR
END-IF
MOVE '000000'                 TO CXXCW170-CIX-PROCESS-CODE
COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
(WS-UIWA-NR2-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-CASH-AMT-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC)  * 100
END-COMPUTE
MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
(WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OTH-COST +
WS-UIWA-NR1-COST +
WS-UIWA-OIL-COST +
WS-UIWA-CASH-AMT +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-TAX-AMT)  * 100
END-COMPUTE
MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-COMP
IF CXXCW170-CIX-XTN-AMT-MERCH = ZERO
AND WS-AMOUNT-NO-DECIMAL-12 > ZERO
MOVE WS-AMOUNT-NO-DECIMAL-12
TO CXXCW170-CIX-XTN-AMT-MERCH
END-IF
IF WS-CURRENT-TIMESTAMP NOT > SPACES
PERFORM GET-CURRENT-TIMESTAMP
END-IF
MOVE WS-TIMESTAMP-GMT         TO CXXCW170-CIX-XTN-TRANS-TS
MOVE WS-CURRENT-TIMESTAMP     TO CXXCW170-CIX-XTN-LOCAL-TS

IF S007-MASTERCARD-CARD = 'Y'
MOVE WS-EXPDATE-YYMM       TO CXXCW170-CIX-EXP-DT
ELSE
MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
END-IF
MOVE 'CDNP'                   TO CXXCW170-CIX-MCC
CXXCW170-CIX-MCC-ORIGIN
IF THIS-IS-A-POS-TRANS
AND WS-UIWA-SWIPED-KEYED = 'S'
MOVE '090'                 TO CXXCW170-CIX-POS-ENT-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'M'
MOVE '030'              TO CXXCW170-CIX-POS-ENT-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'C'
MOVE '050'           TO CXXCW170-CIX-POS-ENT-MODE
ELSE
MOVE '010'           TO CXXCW170-CIX-POS-ENT-MODE
END-IF
END-IF
END-IF
IF WS-POS-ERROR-NUMBER = ZERO
MOVE '00'                  TO CXXCW170-CIX-RESPONSE-CD
ELSE
MOVE '05'                  TO CXXCW170-CIX-RESPONSE-CD
END-IF
IF THIS-IS-NOT-A-POS-TRANS
MOVE EIBTRMID              TO CXXCW170-CIX-TERM-ID
ELSE
MOVE WS-UIWA-DEVICE-TYPE   TO CXXCW170-CIX-TERM-ID
END-IF
MOVE WS-UIWA-SC-CODE          TO CXXCW170-CIX-MERCH-ID
MOVE COM-TS-NAME           TO CXXCW170-CIX-ACCEPT-LOC(01:23)
MOVE COM-TS-CITY           TO CXXCW170-CIX-ACCEPT-LOC(24:15)
MOVE COM-TS-STATE          TO CXXCW170-CIX-ACCEPT-LOC(39:02)
CXXCW170-CIX-ACCEPT-STATE
MOVE SCM-LOCATION-ZIP      TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
IF SCM-IS-IN-CANADA
MOVE 'CA'                  TO CXXCW170-CIX-ACCEPT-CNTRY
MOVE '124'                 TO CXXCW170-CIX-TRAN-CURR-CD
ELSE
MOVE 'US'                  TO CXXCW170-CIX-ACCEPT-CNTRY
MOVE '840'                 TO CXXCW170-CIX-TRAN-CURR-CD
END-IF
IF CDN-CANADA-COUNTRY
MOVE '124'                 TO CXXCW170-CIX-COMP-CURR-CD
ELSE
MOVE '840'                 TO CXXCW170-CIX-COMP-CURR-CD
END-IF

PERFORM IRIS-GET-PROD-TYP
IF WS-UIWA-SYSTEM-ID = 1
MOVE 'Y'                   TO CXXCW170-CIX-STAND-IN-FL
ELSE
MOVE 'N'                   TO CXXCW170-CIX-STAND-IN-FL
END-IF
IF WS-UIWA-NR2-QTY-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR2-QTY-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR2-QTY * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR2-QTY
IF WS-UIWA-NR2-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR2-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR2-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR2-COST
IF WS-UIWA-NR1-QTY-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR1-QTY-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR1-QTY * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR1-QTY
IF WS-UIWA-NR1-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR1-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-NR1-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR1-COST
IF WS-UIWA-OTH-QTY-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OTH-QTY-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OTH-QTY * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OTH-QTY
IF WS-UIWA-OTH-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OTH-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OTH-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OTH-COST
IF WS-UIWA-REF-QTY-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-REF-QTY-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-REF-QTY * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-REF-QTY
IF WS-UIWA-REF-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-REF-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-REF-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-REF-COST

IF WS-UIWA-OIL-QTY-US > ZERO
MOVE WS-UIWA-OIL-QTY-US    TO CXXCW170-CIX-OIL-QTY
ELSE
MOVE WS-UIWA-OIL-QTY       TO CXXCW170-CIX-OIL-QTY
END-IF
IF WS-UIWA-OIL-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OIL-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-OIL-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OIL-COST
MOVE WS-UIWA-PR1-CODE         TO CXXCW170-CIX-PR1-CODE
IF WS-UIWA-PR1-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR1-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR1-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR1-COST
MOVE WS-UIWA-PR2-CODE         TO CXXCW170-CIX-PR2-CODE
IF WS-UIWA-PR2-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR2-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR2-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR2-COST
MOVE WS-UIWA-PR3-CODE         TO CXXCW170-CIX-PR3-CODE
IF WS-UIWA-PR3-COST-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR3-COST-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-PR3-COST * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR3-COST
IF WS-UIWA-CASH-AMT-US > ZERO
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-CASH-AMT-US * 100
END-COMPUTE
ELSE
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
WS-UIWA-CASH-AMT * 100
END-COMPUTE
END-IF
MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-CASH-AMT








CONTINUE.

IRIS-VRU-TRANS.

INITIALIZE CXXCW170-CXXCO0FC-COMMAREA-IN
PERFORM IRIS-NUM-CHECK-5
MOVE 'US'                     TO CXXCW170-CCI-PROGRAM-ID
MOVE '07'                     TO CXXCW170-CIX-VERSION-NR
MOVE WS-CIX-RESP-REQUESTED    TO CXXCW170-CIX-RESP-REQUESTED
MOVE WS-UIWA-CARD-NR          TO CXXCW170-CIX-CARD-NR

MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
CXXCW170-CIX-XTN-AMT-COMP
IF WS-CURRENT-TIMESTAMP NOT > SPACES
PERFORM GET-CURRENT-TIMESTAMP
END-IF
MOVE WS-CURRENT-TIMESTAMP     TO CXXCW170-CIX-XTN-TRANS-TS
CXXCW170-CIX-XTN-LOCAL-TS

IF S007-MASTERCARD-CARD = 'Y'
MOVE WS-EXPDATE-YYMM       TO CXXCW170-CIX-EXP-DT
ELSE
MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
END-IF
MOVE WS-UIWA-SC-CODE          TO CXXCW170-CIX-MERCH-ID
MOVE 'MM'                     TO CXXCW170-CIX-PROD-TYP
MOVE PRM-ACCT-NUMBER          TO CXXCW170-CIX-ACCT-CD
MOVE PRM-SUB-ACCT-NUMB        TO CXXCW170-CIX-CUST-ID
IF WS-HOLD-POS-ERROR-MSG > SPACES
MOVE WS-HOLD-POS-ERROR-MSG TO CXXCW170-CIX-ERROR-MSG
ELSE
MOVE OUT-COMENT-1          TO CXXCW170-CIX-ERROR-MSG
END-IF
MOVE WS-POS-ERROR-NUMBER      TO CXXCW170-CIX-CDN-RESP-CD
MOVE 1                        TO CXXCW170-CIX-ATTEMPT
MOVE 'N'                      TO CXXCW170-CIX-STAND-IN-FL

MOVE WS-AMOUNT-NO-DECIMAL-09 TO CXXCW170-CIX-CARD-CREDIT-LIM
MOVE CDN-BALLIM-FLAG          TO CXXCW170-CIX-BALLIM-FL
MOVE PRM-FIRST-NAME           TO CXXCW170-CIX-CHLDR-FNAME
MOVE PRM-LAST-NAME            TO CXXCW170-CIX-CHLDR-LNAME
MOVE PRM-CARD-EMPLOYEE-ID     TO CXXCW170-CIX-EMP-ID
MOVE HLD-PRIVATE-LABEL-CODE   TO CXXCW170-CIX-PL-CODE
MOVE CDN-EXP-BILL             TO CXXCW170-CIX-BILL-FL
IF THIS-IS-A-CANCEL-XTN
MOVE 'CXDRAFT'             TO CXXCW170-CIX-TXN-TYPE
MOVE '0626'                TO CXXCW170-CIX-MESSAGE-TYPE
ELSE
MOVE 'CCDRAFT'             TO CXXCW170-CIX-TXN-TYPE
MOVE '0641'                TO CXXCW170-CIX-MESSAGE-TYPE
END-IF
MOVE OL-PT-CHECK-NR           TO CXXCW170-CIX-DRAFT-NBR
CONTINUE.

IRIS-LINK-TO-CXXCO0FC.

IF PRM-CARD-NUMB = ZEROS
MOVE SPACES              TO CXXCW170-CIX-CARD-STOCK
CXXCW170-CIX-MISC-1
CXXCW170-CIX-MISC-2
MOVE ZEROS               TO CXXCW170-CIX-REASON-CODE
MOVE '0'                 TO CXXCW170-CIX-VIP-IND
ELSE
MOVE PRM-FLEET-CARD-TYPE TO CXXCW170-CIX-CARD-STOCK
PERFORM READ-PRMINFO-FOR-IRIS
END-IF.

INSPECT CXXCW170-CCI-IRIS-XMIT-DATA
REPLACING ALL LOW-VALUES BY SPACE

EXEC CICS LINK
PROGRAM  ('CXXCO0FC')
COMMAREA (CXXCW170-CXXCO0FC-COMMAREA)
LENGTH   (LENGTH OF CXXCW170-CXXCO0FC-COMMAREA)
END-EXEC.


IRIS-FORMAT-TIMESTAMP-I.

MOVE PRM-CREATION-DATE TO CALENDAR-JULIAN-DATE
MOVE +225              TO CALENDAR-OPTIONS
CALL 'CXUTSCAL'     USING CALENDAR-PARAMETERS, OMITTED
MOVE YMD-YY TO WS-TS-YEAR
IF WS-TS-YEAR > 70
MOVE 19  TO WS-TS-CEN
ELSE
MOVE 20  TO WS-TS-CEN
END-IF
MOVE YMD-MM TO WS-TS-MON
MOVE YMD-DD TO WS-TS-DAY
MOVE ZERO   TO WS-TS-HOUR
WS-TS-MIN
WS-TS-SEC.


IRIS-FORMAT-TIMESTAMP-II.

MOVE '20'                        TO WS-TS-CEN
MOVE WS-CURRENT-DATE-YYYYMMDD-YY TO WS-TS-YEAR
MOVE WS-TS-DATE-IN (1:2)         TO WS-TS-MON
MOVE WS-TS-DATE-IN (3:2)         TO WS-TS-DAY

IF WS-TS-MON = '01' AND
WS-CURRENT-DATE-YYYYMMDD-MM = '12'
ADD 1                         TO WS-TS-YEAR
END-IF
IF WS-TS-MON = '12' AND
WS-CURRENT-DATE-YYYYMMDD-MM = '01'
SUBTRACT 1                  FROM WS-TS-YEAR
END-IF
IF WS-TS-MON = ZERO
AND WS-TS-DAY = ZERO
MOVE ZERO                     TO WS-TS-CEN
MOVE 1                        TO WS-TS-YEAR
WS-TS-MON
WS-TS-DAY
END-IF
MOVE WS-TS-TIME-IN (1:2)         TO WS-TS-HOUR
MOVE WS-TS-TIME-IN (3:2)         TO WS-TS-MIN
MOVE WS-TS-TIME-IN (5:2)         TO WS-TS-SEC.


IRIS-NUM-CHECK-1.

IF POS-ERROR-NUMBER NOT NUMERIC
MOVE ZERO                     TO WS-POS-ERROR-NUMBER
ELSE
MOVE POS-ERROR-NUMBER         TO WS-POS-ERROR-NUMBER
END-IF
IF WS-POS-ERROR-NUMBER = ZERO
AND WS-HOLD-POS-ERROR-NUMBER > ZERO
MOVE WS-HOLD-POS-ERROR-NUMBER TO WS-POS-ERROR-NUMBER
END-IF.


IRIS-NUM-CHECK-2.

IF PRM-CARD-NUMB NOT NUMERIC
MOVE ZERO             TO PRM-CARD-NUMB
END-IF
IF PRM-CHECK-DIGIT NOT NUMERIC
MOVE ZERO             TO PRM-CHECK-DIGIT
END-IF
IF CCL-AVL-CRD-AMT NOT NUMERIC
OR CCL-AVL-CRD-AMT = ZERO
MOVE CDN-CUST-ACCT-CODE TO WS-CL-CO-CD
IF WS-BILLABLE NOT NUMERIC
MOVE ZERO TO WS-BILLABLE
END-IF
PERFORM GET-WS-AVAIL-AMOUNT
END-IF
IF PRM-COMPANY-STANDARD-ID NOT NUMERIC
MOVE ZERO                    TO WS-COMPANY-STANDARD-ID
ELSE
MOVE PRM-COMPANY-STANDARD-ID TO WS-COMPANY-STANDARD-ID
END-IF
EVALUATE TRUE
WHEN CDN-BALANCE-BASED AND PRM-EXPENSE-BALANCE NUMERIC
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
PRM-EXPENSE-BALANCE * 100
WHEN CDN-LIMIT-BASED   AND PRM-PURC-INITIAL NUMERIC
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
PRM-PURC-INITIAL * 100
WHEN OTHER
MOVE ZERO TO WS-AMOUNT-NO-DECIMAL-09
END-EVALUATE.


IRIS-NUM-CHECK-3.

IF ATMW-TRANSACTION-AMOUNT-N NOT NUMERIC
MOVE ZERO TO ATMW-TRANSACTION-AMOUNT-N
END-IF
IF OL-PT-AMOUNT NOT NUMERIC
MOVE ZERO TO OL-PT-AMOUNT
END-IF
IF ATMW-TRAN-DATE NOT NUMERIC
MOVE ZERO TO ATMW-TRAN-DATE
END-IF
IF ATMW-TRAN-TIME NOT NUMERIC
MOVE ZERO TO ATMW-TRAN-TIME
END-IF
IF ATMW-DATE-LOCAL NOT NUMERIC
MOVE ZERO TO ATMW-DATE-LOCAL
END-IF
IF ATMW-TIME-LOCAL NOT NUMERIC
MOVE ZERO TO ATMW-TIME-LOCAL
END-IF
IF CDN-CARD-EXPIRATION-DATE NOT NUMERIC
MOVE ZERO TO CDN-CARD-EXPIRATION-DATE
END-IF
IF ATMW-AUDIT-NUMBER-N NOT NUMERIC
MOVE ZERO TO ATMW-AUDIT-NUMBER-N
END-IF.


IRIS-NUM-CHECK-4.

IF WS-UIWA-NR2-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR2-COST
END-IF
IF WS-UIWA-NR2-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR2-COST-SC
END-IF
IF WS-UIWA-NR2-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR2-COST-US
END-IF
IF WS-UIWA-NR2-QTY NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR2-QTY
END-IF
IF WS-UIWA-NR2-QTY-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR2-QTY-US
END-IF
IF WS-UIWA-REF-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-REF-COST
END-IF
IF WS-UIWA-REF-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-REF-COST-SC
END-IF
IF WS-UIWA-REF-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-REF-COST-US
END-IF
IF WS-UIWA-REF-QTY NOT NUMERIC
MOVE ZERO TO WS-UIWA-REF-QTY
END-IF
IF WS-UIWA-REF-QTY-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-REF-QTY-US
END-IF
IF WS-UIWA-OTH-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-OTH-COST
END-IF
IF WS-UIWA-OTH-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-OTH-COST-SC
END-IF
IF WS-UIWA-OTH-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-OTH-COST-US
END-IF
IF WS-UIWA-OTH-QTY NOT NUMERIC
MOVE ZERO TO WS-UIWA-OTH-QTY
END-IF
IF WS-UIWA-OTH-QTY-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-OTH-QTY-US
END-IF
IF WS-UIWA-NR1-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR1-COST
END-IF
IF WS-UIWA-NR1-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR1-COST-SC
END-IF
IF WS-UIWA-NR1-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR1-COST-US
END-IF
IF WS-UIWA-NR1-QTY NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR1-QTY
END-IF
IF WS-UIWA-NR1-QTY-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-NR1-QTY-US
END-IF
IF WS-UIWA-OIL-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-OIL-COST
END-IF
IF WS-UIWA-OIL-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-OIL-COST-SC
END-IF
IF WS-UIWA-OIL-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-OIL-COST-US
END-IF
IF WS-UIWA-OIL-QTY NOT NUMERIC
MOVE ZERO TO WS-UIWA-OIL-QTY
END-IF
IF WS-UIWA-OIL-QTY-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-OIL-QTY-US
END-IF
IF WS-UIWA-CASH-AMT NOT NUMERIC
MOVE ZERO TO WS-UIWA-CASH-AMT
END-IF
IF WS-UIWA-CASH-AMT-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-CASH-AMT-SC
END-IF
IF WS-UIWA-CASH-AMT-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-CASH-AMT-US
END-IF
IF WS-UIWA-PR1-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR1-COST
END-IF
IF WS-UIWA-PR1-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR1-COST-SC
END-IF
IF WS-UIWA-PR1-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR1-COST-US
END-IF
IF WS-UIWA-PR2-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR2-COST
END-IF
IF WS-UIWA-PR2-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR2-COST-SC
END-IF
IF WS-UIWA-PR2-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR2-COST-US
END-IF
IF WS-UIWA-PR3-COST NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR3-COST
END-IF
IF WS-UIWA-PR3-COST-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR3-COST-SC
END-IF
IF WS-UIWA-PR3-COST-US NOT NUMERIC
MOVE ZERO TO WS-UIWA-PR3-COST-US
END-IF
IF WS-UIWA-TAX-AMT NOT NUMERIC
MOVE ZERO TO WS-UIWA-TAX-AMT
END-IF
IF WS-UIWA-TAX-AMT-SC NOT NUMERIC
MOVE ZERO TO WS-UIWA-TAX-AMT-SC
END-IF
IF WS-EXPDATE-YYMM NOT NUMERIC
MOVE ZERO TO WS-EXPDATE-YYMM
END-IF
IF WS-UIWA-SYSTEM-ID NOT NUMERIC
MOVE ZERO TO WS-UIWA-SYSTEM-ID
END-IF.

IRIS-NUM-CHECK-5.

IF WS-UIWA-CASH-AMT NOT NUMERIC
MOVE ZERO TO WS-UIWA-CASH-AMT
END-IF
COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
WS-UIWA-CASH-AMT * 100
END-COMPUTE
IF PRM-EXPENSE-BALANCE NOT NUMERIC
MOVE ZERO TO PRM-EXPENSE-BALANCE
END-IF
COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
PRM-EXPENSE-BALANCE * 100
END-COMPUTE
IF OL-PT-CHECK-NR NOT NUMERIC
MOVE ZERO TO OL-PT-CHECK-NR
END-IF.


READ-PRMINFO-FOR-IRIS.

INITIALIZE PRM-INFO-RECORD
MOVE PRM-CARD-NUMB  TO PIR-CARD-NUMBER
EXEC CICS READ
DATASET ('PRMINFO')
INTO    (PRM-INFO-RECORD)
RIDFLD  (PIR-KEY)
RESP    (EIBRESP)
END-EXEC
IF EIBRESP = DFHRESP(NORMAL)
CONTINUE
ELSE
MOVE SPACES       TO PIR-MISC-NR1
PIR-MISC-NR2
MOVE '0'          TO PIR-VIP-FLAG
MOVE ZEROS        TO PIR-BLOCK-REASON-CODE
END-IF

IF PIR-MISC-NR1 > SPACES
MOVE PIR-MISC-NR1        TO CXXCW170-CIX-MISC-1
ELSE
MOVE SPACES              TO CXXCW170-CIX-MISC-1.

IF PIR-MISC-NR2 > SPACES
MOVE PIR-MISC-NR2        TO CXXCW170-CIX-MISC-2
ELSE
MOVE SPACES              TO CXXCW170-CIX-MISC-2.

IF PIR-VIP-FLAG > SPACES
MOVE PIR-VIP-FLAG        TO CXXCW170-CIX-VIP-IND
ELSE
MOVE '0'                 TO CXXCW170-CIX-VIP-IND.

IF PIR-BLOCK-REASON-CODE NUMERIC
MOVE PIR-BLOCK-REASON-CODE
TO CXXCW170-CIX-REASON-CODE
ELSE
MOVE ZEROS               TO CXXCW170-CIX-REASON-CODE.



GET-COUNTRY-CODE.


MOVE ATMW-POS-DATA (14:3) TO CNTRY-KEY
EXEC CICS READ
DATASET ('COUNTRY')
INTO    (COUNTRY-CODES)
RIDFLD  (CNTRY-KEY)
RESP    (EIBRESP)
END-EXEC
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE SPACES          TO CNTRY-ALPHA
END-IF.


IRIS-GET-RESPONSE-CD.

MOVE WS-POS-ERROR-NUMBER TO TSXCO0AT-APP-RETURN-CODE
EVALUATE TRUE
WHEN TSXCO0AT-APP-LIMIT-EXCEEDED
IF TSXCO0AT-TRAN-TYPE = '10'
MOVE '00'        TO CXXCW170-CIX-RESPONSE-CD
ELSE
MOVE '51'        TO CXXCW170-CIX-RESPONSE-CD
END-IF
WHEN TSXCO0AT-APP-INVALID-PIN
MOVE '55'            TO CXXCW170-CIX-RESPONSE-CD
WHEN TSXCO0AT-APP-EXCESSIVE-PIN
MOVE '75'            TO CXXCW170-CIX-RESPONSE-CD
WHEN TSXCO0AT-APP-INVALID-TRANS
MOVE '57'            TO CXXCW170-CIX-RESPONSE-CD
WHEN TSXCO0AT-APP-RETURN-CODE = ZEROS
MOVE '00'            TO CXXCW170-CIX-RESPONSE-CD
WHEN OTHER
MOVE '62'            TO CXXCW170-CIX-RESPONSE-CD
END-EVALUATE.


IRIS-GET-MESSAGE-TYPE.

EVALUATE TRUE
WHEN WS-UIWA-SYSTEM-ID = 1
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE '0220'          TO WS-CIX-MESSAGE-TYPE



END-EVALUATE.


IRIS-GET-PROD-TYP.

EVALUATE TRUE
WHEN WS-NATS-PRE-AUTH-FLAG = 'Y'
WHEN THIS-BE-A-NATS-AUTH
MOVE 'NA'            TO CXXCW170-CIX-PROD-TYP


WHEN THIS-BE-TERMINAL-FUEL
MOVE 'TF'            TO CXXCW170-CIX-PROD-TYP
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH
WHEN THIS-BE-A-SMART-FUEL-AUTH
MOVE 'SF'            TO CXXCW170-CIX-PROD-TYP
WHEN THIS-BE-AN-IOL-XTN
MOVE 'IO'            TO CXXCW170-CIX-PROD-TYP
WHEN THIS-IS-A-CANCEL-XTN
MOVE 'CN'            TO CXXCW170-CIX-PROD-TYP
WHEN THIS-BE-AN-UNATTENDED-XTN
MOVE 'US'            TO CXXCW170-CIX-PROD-TYP
WHEN OTHER
MOVE 'FP'            TO CXXCW170-CIX-PROD-TYP
END-EVALUATE.


IRIS-REJECT-CHECK.

IF CXXCW170-CIR-IRIS-REJECTED
MOVE 'Y' TO WS-NOTIFY-IRIS-FL
MOVE WS-E-IRIS-DENIED-N    TO POS-ERROR-NUMBER
MOVE WS-E-IRIS-DENIED      TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


20990-COMPUTE-WS-CURXMN.

MOVE WS-BILLABLE  TO WS-CURXMN.
MOVE WS2-BILLABLE TO WS2-CURXMN.
MOVE WS3-BILLABLE TO WS3-CURXMN.
IF THIS-BE-TERMINAL-FUEL
MOVE ZERO TO WS-CURXMN
WS2-CURXMN
WS3-CURXMN.
IF MNX-TRANSACTION
MOVE WS-UIWA-CASH-AMT TO WS-CURXMN
MOVE WS-UIWA-CASH-AMT-SC TO WS2-CURXMN
MOVE WS-UIWA-CASH-AMT-US TO WS3-CURXMN.


20991-MOVE-WS-CURXMN.

IF COM-ACCT-IS-BASE-CURRENCY
MOVE WS-CURXMN TO I-AMT
MOVE WS-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD,
OUT-NETXMN
ELSE
MOVE WS2-CURXMN TO I-AMT
MOVE WS2-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD,
OUT-NETXMN.


20992-FUEL-PROXIMITY-CHECK.

IF THIS-BE-A-POS-AUTH
OR THIS-BE-AN-UNATTENDED-PRE-AUTH
OR THIS-BE-A-SMART-FUEL-PRE-AUTH
OR THIS-IS-NOT-A-POS-TRANS
PERFORM 20992-BUILD-XCTE-COMMAREA
PERFORM 20992-LINK-TO-CXXCO0TE
END-IF
CONTINUE
.


20992-BUILD-XCTE-COMMAREA.


INITIALIZE WS-CXXCW0TE-COMMAREA

MOVE PRM-CHECK-DIGIT              TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD                  TO WS-XCTE-CARD-NBR
MOVE UNITMST-UBC-UNIT-NR          TO WS-XCTE-UNIT-NUMBER
MOVE UNITMST-UNIT-PROFILE-ID      TO WS-XCTE-UNIT-PROFILE-ID
MOVE UNITMST-UNIT-DEVICE-ID       TO WS-XCTE-UNIT-DEVICE-ID
MOVE CDN-CUST-ACCT-CODE           TO WS-XCTE-ACCOUNT-CODE
MOVE CDN-CUST-NUMBER              TO WS-XCTE-CUSTOMER-ID
PERFORM GET-CURRENT-TIMESTAMP
MOVE WS-CURRENT-TIMESTAMP         TO WS-XCTE-TRANS-TS
MOVE WS-CURXMN                    TO WS-XCTE-AMT-ACTUAL
MOVE WS-USERID                    TO WS-XCTE-USERID
MOVE 'C'                          TO WS-XCTE-PROCESS-NW-IND
IF THIS-BE-A-POS-AUTH
OR THIS-BE-AN-UNATTENDED-PRE-AUTH
OR THIS-BE-A-SMART-FUEL-PRE-AUTH
MOVE 'Y'                        TO WS-XCTE-PRE-AUTH-POST
ELSE
MOVE 'N'                        TO WS-XCTE-PRE-AUTH-POST
END-IF
MOVE HLD-CUSTOMER-RECORD           TO WS-XCTE-CDNCUST-ACCOUNT
MOVE CDN-CUSTOMER-RECORD           TO WS-XCTE-CDNCUST-CUST
MOVE UNITMST-UNIT-MASTER-RECORD    TO WS-XCTE-UNITMST
MOVE SERVICE-CENTER-MASTER-RECORD  TO WS-XCTE-SCMSTR

EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-PRE-AUTH
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH
SET WS-XCTE-PRE-AUTH    TO TRUE
MOVE WS-AUTO-GAS-AVAIL-QTY-NR2     TO WS-XCTE-NR2-GALLONS
MOVE WS-AUTO-GAS-AVAIL-QTY-NR1     TO WS-XCTE-NR1-GALLONS
MOVE WS-AUTO-GAS-AVAIL-QTY-OTH     TO WS-XCTE-OTR-GALLONS
WHEN THIS-IS-NOT-A-POS-TRANS
WHEN THIS-BE-A-POS-AUTH
SET WS-XCTE-POST        TO TRUE
MOVE WS-UIWA-NR2-QTY               TO WS-XCTE-NR2-GALLONS
MOVE WS-UIWA-NR1-QTY               TO WS-XCTE-NR1-GALLONS
MOVE WS-UIWA-OTH-QTY               TO WS-XCTE-OTR-GALLONS
END-EVALUATE
.


209922-READ-MASTER-UNIT.


MOVE '209922-READ-MASTER-UNIT'   TO CXUTS0ML-PARAGRAPH.

MOVE CDN-UNIT-POOL-MASTER    TO UNITMST-UBC-CUST-ID
EXEC CICS READ
DATASET ('UNITMST')
INTO    (WS-MASTER-UNIT)
RIDFLD  (UNITMST-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE UNITMST-KEY                 TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
.


20992-LINK-TO-CXXCO0TE.

MOVE '20992-LINK-TO-CXXCO0TE'    TO CXUTS0ML-PARAGRAPH.

EXEC CICS LINK
PROGRAM  ('CXXCO0TE')
COMMAREA (WS-CXXCW0TE-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCW0TE-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP

IF WSR-XCTE-RESP-CODE NOT = +0000
MOVE WSR-XCTE-RESP-CODE       TO POS-ERROR-NUMBER
MOVE WSR-XCTE-RESP-MSG        TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
.

IF THIS-BE-A-POS-AUTH
OR THIS-BE-AN-UNATTENDED-PRE-AUTH
OR THIS-BE-A-SMART-FUEL-PRE-AUTH

IF WSR-XCTE-RTN-MAX-GALLONS > 0
IF WS-UIWA-NR1-QTY > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-NR1-QTY
END-IF
IF WS-UIWA-NR2-QTY > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-NR2-QTY
END-IF
IF WS-UIWA-OTH-QTY > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-OTH-QTY
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-NR1 > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO
WS-AUTO-GAS-AVAIL-QTY-NR1
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-NR2 > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO
WS-AUTO-GAS-AVAIL-QTY-NR2
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-OTH > WSR-XCTE-RTN-MAX-GALLONS
MOVE WSR-XCTE-RTN-MAX-GALLONS TO
WS-AUTO-GAS-AVAIL-QTY-OTH
END-IF
END-IF
END-IF
.



21010-CHECK-UNATTENDED-EXIT.


IF THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH
IF WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE WS-HOLD-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
MOVE WS-HOLD-POS-ERROR-MSG    TO POS-MESSAGE
END-IF
MOVE ZEROES           TO POS-ERROR-NUMBER.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
IF THIS-BE-A-PRODUCT-PRE-AUTH
IF CDN-FLEET-LIMIT-FLAG = 'Y'
PERFORM 21015-REPOPULATE-SP14
ELSE
PERFORM 21017-BUILD-SP14-REPLY
END-IF
END-IF
IF WS-UIWA-RFID-NBR > SPACES
PERFORM RFID-ADJUSTMENT-TO-SP14
END-IF
PERFORM ADD-TO-PRE-AUTH-TBL
MOVE ZEROES TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21015-REPOPULATE-SP14.

MOVE WS-AUTO-GAS-AVAIL
TO WS-SP14-MAX-PUR-AMT
IF WS-AUTO-GAS-AVAIL = ZERO
MOVE ZERO TO WS-SP14-MAX-PUR-QTY
ELSE
IF COM-CONVERT-TO-SC-CURR
MOVE WS-SP14-MAX-PUR-QTY TO WS-AUTO-GAS-AVAIL-QTY-WRK
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK
TO WS-SP14-MAX-PUR-QTY
END-IF
END-IF






IF WS-USE-FLEET-LIMITS = 'Y'
IF COM-RMR-MAXIMUM-GALLONS < WS-SP14-MAX-NR2-QTY
MOVE COM-RMR-MAXIMUM-GALLONS TO WS-SP14-MAX-NR2-QTY
END-IF
IF COM-RMR-MAXIMUM-GALLONS < WS-SP14-MAX-NR1-QTY
MOVE COM-RMR-MAXIMUM-GALLONS TO WS-SP14-MAX-NR1-QTY
END-IF
IF COM-RMR-MAX-RFR-GALLONS < WS-SP14-MAX-REF-QTY
MOVE COM-RMR-MAX-RFR-GALLONS TO WS-SP14-MAX-REF-QTY
END-IF
IF COM-RMR-MAX-OTH-GALLONS < WS-SP14-MAX-OTH-QTY
MOVE COM-RMR-MAX-OTH-GALLONS TO WS-SP14-MAX-OTH-QTY
END-IF
IF COM-RMR-MAXIMUM-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-NR2-AMT
WS-SP14-MAX-NR1-AMT
END-IF
IF COM-RMR-MAX-RFR-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-REF-AMT
END-IF
IF COM-RMR-MAX-OTH-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-OTH-AMT
END-IF

ELSE
MOVE COM-RMR-MAXIMUM-GALLONS
TO WS-SP14-MAX-NR2-QTY
IF COM-RMR-MAXIMUM-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-NR2-AMT
END-IF
MOVE COM-RMR-MAXIMUM-GALLONS
TO WS-SP14-MAX-NR1-QTY
IF COM-RMR-MAXIMUM-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-NR1-AMT
END-IF
MOVE COM-RMR-MAX-RFR-GALLONS
TO WS-SP14-MAX-REF-QTY
IF COM-RMR-MAX-RFR-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-REF-AMT
END-IF
MOVE COM-RMR-MAX-OTH-GALLONS
TO WS-SP14-MAX-OTH-QTY
IF COM-RMR-MAX-OTH-GALLONS = ZERO
MOVE ZERO TO WS-SP14-MAX-OTH-AMT
END-IF
END-IF.

MOVE WS-AUTO-GAS-AVAIL-QTY-OIL
TO WS-SP14-MAX-OIL-QTY
IF WS-AUTO-GAS-AVAIL-QTY-OIL = ZERO
MOVE ZERO TO WS-SP14-MAX-OIL-AMT
END-IF
MOVE WS-AUTO-GAS-AVAIL-AMT-CSH
TO WS-SP14-MAX-CASH-AVAIL


IF WSR-XCTE-RTN-MAX-GALLONS > 0
IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-NR1-QTY
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-NR1-QTY
END-IF
IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-NR2-QTY
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-NR2-QTY
END-IF
IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-REF-QTY
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-REF-QTY
END-IF
IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-OTH-QTY
MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-OTH-QTY
END-IF

PERFORM VARYING WS-PAC-SUB FROM +1 BY +1
UNTIL   WS-PAC-SUB > 10
IF WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20001'
OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20002'
OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20003'
OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20004'
IF WSR-XCTE-RTN-MAX-GALLONS <
WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
MOVE WSR-XCTE-RTN-MAX-GALLONS
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
END-IF
END-IF
END-PERFORM

END-IF



IF COM-CONVERT-TO-SC-CURR
PERFORM 21016-CONVERT-OIL
PERFORM 21016-CONVERT-AMTS
PERFORM 21016-CONVERT-PRODS
VARYING WS-PAC-SUB FROM 1 BY 1
UNTIL WS-PAC-SUB > 10
END-IF.


21016-CONVERT-OIL.

IF WS-SP14-MAX-OIL-AMT NUMERIC
AND WS-SP14-MAX-OIL-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-OIL-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-OIL-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-OIL-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-OIL-AMT
END-IF
END-IF.

21016-CONVERT-AMTS.

IF WS-SP14-MAX-NR2-AMT NUMERIC
AND WS-SP14-MAX-NR2-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-NR2-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-NR2-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-NR2-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-NR2-AMT
END-IF
END-IF
IF WS-SP14-MAX-NR1-AMT NUMERIC
AND WS-SP14-MAX-NR1-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-NR1-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-NR1-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-NR1-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-NR1-AMT
END-IF
END-IF
IF WS-SP14-MAX-REF-AMT NUMERIC
AND WS-SP14-MAX-REF-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-REF-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-REF-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-REF-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-REF-AMT
END-IF
END-IF
IF WS-SP14-MAX-OTH-AMT NUMERIC
AND WS-SP14-MAX-OTH-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-OTH-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-OTH-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-OTH-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-OTH-AMT
END-IF
END-IF
IF WS-SP14-MAX-PRD-AMT NUMERIC
AND WS-SP14-MAX-PRD-AMT > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-PRD-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-SP14-MAX-PRD-AMT
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-PRD-AMT TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-PRD-AMT
END-IF
END-IF.

21016-CONVERT-PRODS.

IF WS-SP14-MAX-PROD-QTY (WS-PAC-SUB) NUMERIC
AND WS-SP14-MAX-PROD-QTY (WS-PAC-SUB) > ZERO
MOVE WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-AUTO-GAS-AVAIL-QTY-WRK
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
END-IF
IF WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) NUMERIC
AND WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) > ZERO
IF COM-CN-COMP-US-SC
MOVE WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
END-IF
IF COM-US-COMP-CN-SC
MOVE WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS
TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
END-IF
END-IF.

21017-BUILD-SP14-REPLY.

INITIALIZE   WS-SP14-REPLY
WS-POPULATED-SW
MOVE 'N'  TO WS-PRE-AUTH-CODES
MOVE ZERO TO WS-PAC-SUB
PERFORM PROCESS-SUB-PROD-CODES
UNTIL WS-PAC-SUB = 10
IF WS-PRE-AUTH-CODES = 'N'
PERFORM PROCESS-DEFLT-SUB-PROD-CODES
END-IF
PERFORM PROCESS-CASH-OIL-ALL-PROD.

PROCESS-SUB-PROD-CODES.

ADD 1 TO WS-PAC-SUB
IF (WS-UIWA-SUB-PRD-IND (WS-PAC-SUB) = 'P' OR 'C')
AND WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) > SPACES
MOVE 'Y' TO WS-PRE-AUTH-CODES
IF WS-UIWA-SUB-PRD-IND (WS-PAC-SUB) = 'P'
PERFORM TRANSLATE-PCAT-CODE
ELSE
PERFORM TRANSLATE-CDN-CODE
MOVE 'XX' TO FL-TYP OF DSBPRDXL
END-IF
IF WS-SUB-PROD-FIND = 'Y'
MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB)
TO WS-XCPL-PROD (3:3)
IF COM-USE-FMRM-SP14-QTYS = 'Y'
PERFORM POPULATE-SP14-REPLY-FMRM
ELSE
PERFORM POPULATE-SP14-REPLY
END-IF
END-IF
ELSE
MOVE 10 TO WS-PAC-SUB
END-IF.

TRANSLATE-PCAT-CODE.

MOVE 'TRANSLATE-PCAT-CODE' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT'              TO CXUTS0ML-COMMAND
INITIALIZE DSBPRDXL
MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB)
TO IN-SUB-PROD-CD OF DSBPRDXL
MOVE 'P' TO CD-TYP         OF DSBPRDXL
MOVE 'Y' TO WS-SUB-PROD-FIND
EXEC SQL
SELECT FL_TYP,
CDN_SUB_PROD_CD
INTO :DSBPRDXL.FL-TYP,
:DSBPRDXL.CDN-SUB-PROD-CD
FROM  DBO.SUB_PROD_XLATE
WHERE DBO.SUB_PROD_XLATE.CD_TYP =
:DSBPRDXL.CD-TYP
AND DBO.SUB_PROD_XLATE.IN_SUB_PROD_CD =
:DSBPRDXL.IN-SUB-PROD-CD
END-EXEC
IF SQLCODE = +100
MOVE 'N' TO WS-SUB-PROD-FIND
MOVE 10  TO WS-PAC-SUB
MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
PERFORM CHECK-NOTFND-SQL
END-IF.

TRANSLATE-CDN-CODE.


IF WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) (3:1) > SPACE
MOVE 'N' TO WS-SUB-PROD-FIND
MOVE 10  TO WS-PAC-SUB
MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE 'TRANSLATE-CDN-CODE' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT'             TO CXUTS0ML-COMMAND
INITIALIZE DSBPRDXL
MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) (1:2)
TO FL-TYP OF DSBPRDXL
MOVE 'B' TO CD-TYP OF DSBPRDXL
MOVE 'Y' TO WS-SUB-PROD-FIND
EXEC SQL
SELECT FL_TYP
INTO :DSBPRDXL.FL-TYP
FROM  DBO.SUB_PROD_XLATE
WHERE DBO.SUB_PROD_XLATE.CD_TYP =
:DSBPRDXL.CD-TYP
AND DBO.SUB_PROD_XLATE.FL_TYP =
:DSBPRDXL.FL-TYP
END-EXEC
IF SQLCODE = +100
MOVE 'N' TO WS-SUB-PROD-FIND
MOVE 10  TO WS-PAC-SUB
MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
PERFORM CHECK-NOTFND-SQL
END-IF
END-IF.

PROCESS-DEFLT-SUB-PROD-CODES.

PERFORM 87520-GET-ALL-DFLT-SUB-PROD
MOVE 1                       TO WS-PAC-SUB
MOVE 'D2'                    TO FL-TYP OF DSBPRDXL
MOVE WS-DFLT-NR2-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
PERFORM POPULATE-SP14-REPLY
ADD  1                       TO WS-PAC-SUB
MOVE 'D1'                    TO FL-TYP OF DSBPRDXL
MOVE WS-DFLT-NR1-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
PERFORM POPULATE-SP14-REPLY
ADD  1                       TO WS-PAC-SUB
MOVE 'RF'                    TO FL-TYP OF DSBPRDXL
MOVE WS-DFLT-REF-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
PERFORM POPULATE-SP14-REPLY
ADD  1                       TO WS-PAC-SUB
MOVE 'OT'                    TO FL-TYP OF DSBPRDXL
MOVE WS-DFLT-OTH-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
PERFORM POPULATE-SP14-REPLY.

POPULATE-SP14-REPLY.

EVALUATE FL-TYP OF DSBPRDXL
WHEN 'D2'
MOVE '20001' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE WS-AUTO-GAS-AVAIL-QTY-NR2
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'D1'
MOVE '20002' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE WS-AUTO-GAS-AVAIL-QTY-NR1
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'RF'
MOVE '20003' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE WS-AUTO-GAS-AVAIL-QTY-REF
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'OT'
MOVE '20004' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE WS-AUTO-GAS-AVAIL-QTY-OTH
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'XX'
MOVE '20005' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE 99999.99
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
END-EVALUATE
MOVE WS-XCPL-PROD (3:3)
TO WS-SP14-SUB-PROD-CD (WS-PAC-SUB)
EVALUATE FL-TYP OF DSBPRDXL
WHEN 'XX'
ADD WS-XCLP-PROD-NUM +1 GIVING WS-PRD-SUB
IF WS-PRD-MAX-DAILY(WS-PRD-SUB) NOT NUMERIC
MOVE ZEROS TO WS-PRD-MAX-DAILY(WS-PRD-SUB)
END-IF
IF WS-PRD-MAX-DAILY(WS-PRD-SUB) = ZEROS
MOVE 99999.99 TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
ELSE
IF WS-PRD-MAX-DAILY(WS-PRD-SUB) = -1
MOVE ZEROS TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
ELSE
MOVE WS-PRD-MAX-DAILY(WS-PRD-SUB)
TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
ADD WS-PRD-MAX-DAILY(WS-PRD-SUB)
TO WS-SP14-MAX-PRD-AMT
WS-SP14-MAX-PUR-AMT
END-IF
END-IF
WHEN OTHER
MOVE WS-AUTO-GAS-AVAIL
TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
END-EVALUATE
EVALUATE FL-TYP OF DSBPRDXL ALSO TRUE
WHEN 'D2' ALSO WS-MAX-NR2-POPULATED = 'Y'
WHEN 'D1' ALSO WS-MAX-NR1-POPULATED = 'Y'
WHEN 'RF' ALSO WS-MAX-REF-POPULATED = 'Y'
WHEN 'OT' ALSO WS-MAX-OTH-POPULATED = 'Y'
WHEN 'XX' ALSO ANY
CONTINUE
WHEN OTHER
PERFORM POPULATE-SP14-REPLY2
END-EVALUATE.


POPULATE-SP14-REPLY-FMRM.

EVALUATE FL-TYP OF DSBPRDXL
WHEN 'D2'
MOVE '20001' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'D1'
MOVE '20002' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'RF'
MOVE '20003' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'OT'
MOVE '20004' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
WHEN 'XX'
MOVE '20005' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
MOVE 99999.99
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
END-EVALUATE
MOVE WS-XCPL-PROD (3:3)
TO WS-SP14-SUB-PROD-CD (WS-PAC-SUB)
MOVE WS-AUTO-GAS-AVAIL
TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
EVALUATE FL-TYP OF DSBPRDXL ALSO TRUE
WHEN 'D2' ALSO WS-MAX-NR2-POPULATED = 'Y'
WHEN 'D1' ALSO WS-MAX-NR1-POPULATED = 'Y'
WHEN 'RF' ALSO WS-MAX-REF-POPULATED = 'Y'
WHEN 'OT' ALSO WS-MAX-OTH-POPULATED = 'Y'
WHEN 'XX' ALSO ANY
CONTINUE
WHEN OTHER
PERFORM POPULATE-SP14-REPLY2
END-EVALUATE.


POPULATE-SP14-REPLY2.

EVALUATE FL-TYP OF DSBPRDXL
WHEN 'D2'
MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-NR2-AMT
IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
MOVE WS-AUTO-GAS-AVAIL-QTY-NR2 TO WS-SP14-MAX-NR2-QTY
ELSE
MOVE COM-RMR-MAXIMUM-GALLONS   TO WS-SP14-MAX-NR2-QTY
END-IF
ADD WS-SP14-MAX-NR2-QTY        TO WS-SP14-MAX-PUR-QTY
MOVE 'Y' TO WS-MAX-NR2-POPULATED
WHEN 'D1'
MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-NR1-AMT
IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
MOVE WS-AUTO-GAS-AVAIL-QTY-NR1 TO WS-SP14-MAX-NR1-QTY
ELSE
MOVE COM-RMR-MAXIMUM-GALLONS   TO WS-SP14-MAX-NR1-QTY
END-IF
ADD WS-SP14-MAX-NR1-QTY        TO WS-SP14-MAX-PUR-QTY
MOVE 'Y' TO WS-MAX-NR1-POPULATED
WHEN 'RF'
MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-REF-AMT
IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
MOVE WS-AUTO-GAS-AVAIL-QTY-REF TO WS-SP14-MAX-REF-QTY
ELSE
MOVE COM-RMR-MAX-RFR-GALLONS   TO WS-SP14-MAX-REF-QTY
END-IF
ADD WS-SP14-MAX-REF-QTY        TO WS-SP14-MAX-PUR-QTY
MOVE 'Y' TO WS-MAX-REF-POPULATED
WHEN 'OT'
MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-OTH-AMT
IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
MOVE WS-AUTO-GAS-AVAIL-QTY-OTH TO WS-SP14-MAX-OTH-QTY
ELSE
MOVE COM-RMR-MAX-OTH-GALLONS   TO WS-SP14-MAX-OTH-QTY
END-IF
ADD WS-SP14-MAX-OTH-QTY        TO WS-SP14-MAX-PUR-QTY
MOVE 'Y' TO WS-MAX-OTH-POPULATED
END-EVALUATE.

PROCESS-CASH-OIL-ALL-PROD.

IF WS-AUTO-GAS-AVAIL = ZEROS
IF WS-AUTO-GAS-AVAIL-PURC NUMERIC
IF WS-BALANCE-BASED
IF WS-SP14-MAX-PUR-AMT > WS-AUTO-GAS-AVAIL-PURC
MOVE WS-AUTO-GAS-AVAIL-PURC
TO WS-SP14-MAX-PUR-AMT
END-IF
END-IF
ELSE
MOVE ZEROS TO WS-SP14-MAX-PUR-AMT
ELSE
MOVE WS-AUTO-GAS-AVAIL TO WS-SP14-MAX-PUR-AMT
END-IF

MOVE ZERO TO WS-PAC-SUB
PERFORM UNTIL WS-PAC-SUB = 10
OR WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) = 99999.99
ADD +1 TO WS-PAC-SUB
IF WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) = 99999.99
MOVE 99999.99 TO WS-SP14-MAX-PRD-AMT
END-IF
END-PERFORM.

IF WS-SP14-MAX-PUR-AMT = ZEROS
MOVE 99999.99 TO WS-SP14-MAX-PUR-AMT
IF WS-BALANCE-BASED
IF WS-SP14-MAX-PUR-AMT > WS-AUTO-GAS-AVAIL-PURC
MOVE WS-AUTO-GAS-AVAIL-PURC TO WS-SP14-MAX-PUR-AMT
END-IF
END-IF
END-IF.

MOVE WS-AUTO-GAS-AVAIL-AMT-CSH TO WS-SP14-MAX-CASH-AVAIL
MOVE WS-AVAIL-AMT-OIL          TO WS-SP14-MAX-OIL-AMT
IF COM-CONVERT-TO-SC-CURR
PERFORM 21016-CONVERT-OIL
END-IF
MOVE WS-AUTO-GAS-AVAIL-QTY-OIL TO WS-SP14-MAX-OIL-QTY.

RFID-ADJUSTMENT-TO-SP14.

EVALUATE WS-UIWA-RFID-TAG-TYP(1:1)
WHEN 'U'
PERFORM RFID-ADJ-TO-SP14-FOR-UNIT
WHEN 'T'
PERFORM RFID-ADJ-TO-SP14-FOR-TRLR
END-EVALUATE.

RFID-ADJ-TO-SP14-FOR-UNIT.

MOVE ZERO TO WS-SP14-MAX-CASH-AVAIL
WS-SP14-MAX-REF-AMT
WS-SP14-MAX-REF-QTY
PERFORM
VARYING WS-SUB1 FROM 1 BY 1
UNTIL   WS-SUB1 > 10
IF WS-SP14-PUR-CATEGORY (WS-SUB1) = '20003'
MOVE ZERO TO WS-SP14-MAX-PROD-AMT (WS-SUB1)
WS-SP14-MAX-PROD-QTY (WS-SUB1)
ELSE
IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT > SPACES
MOVE 11 TO WS-SUB1
END-IF
END-IF
END-PERFORM.

RFID-ADJ-TO-SP14-FOR-TRLR.

MOVE ZERO TO WS-SP14-MAX-CASH-AVAIL
WS-SP14-MAX-OIL-AMT
WS-SP14-MAX-OIL-QTY
WS-SP14-MAX-NR2-AMT
WS-SP14-MAX-NR2-QTY
WS-SP14-MAX-NR1-AMT
WS-SP14-MAX-NR1-QTY
WS-SP14-MAX-OTH-AMT
WS-SP14-MAX-OTH-QTY
WS-SP14-MAX-PRD-AMT
IF WS-SP14-MAX-REF-AMT < WS-SP14-MAX-PUR-AMT
MOVE WS-SP14-MAX-REF-AMT TO WS-SP14-MAX-PUR-AMT
END-IF
IF WS-SP14-MAX-REF-QTY < WS-SP14-MAX-PUR-QTY
MOVE WS-SP14-MAX-REF-QTY TO WS-SP14-MAX-PUR-QTY
END-IF
PERFORM
VARYING WS-SUB1 FROM 1 BY 1
UNTIL   WS-SUB1 > 10
IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT = '20003'
MOVE ZERO TO WS-SP14-MAX-PROD-AMT (WS-SUB1)
WS-SP14-MAX-PROD-QTY (WS-SUB1)
ELSE
IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT > SPACES
MOVE 11 TO WS-SUB1
END-IF
END-IF
END-PERFORM.


21020-COMPUTE-MANUAL-FEE.




IF NOT THIS-IS-A-SETTLEMENT-ITEM AND
NOT THIS-BE-TERMINAL-FUEL
PERFORM 21021-CALC-NON-SET-FEE.


IF COM-FP-SC-CODE > 'YA000'
IF SCM-COUNTRY-CODE = 'C'
MOVE SCPM-YCODE-FEE-CAN TO WS-MANUAL-FEE
ELSE
MOVE SCPM-YCODE-FEE     TO WS-MANUAL-FEE.


21021-CALC-NON-SET-FEE.

PERFORM 21022-CALC-TOTAL-FACE-SC.
IF THIS-IS-A-POS-TRANS OR
COM-DOWN-ENTRY-FLAG = 'Y'
MOVE COM-SCM-AUTO-CALL-FEE   TO WS-MANUAL-FEE
IF SCM-AUTO-FUEL-FEE-TYPE = 'P' AND
COM-SCM-AUTO-CALL-FEE > ZEROS
IF WS-TOTAL-FACE-SC > ZEROS
COMPUTE WS-MANUAL-FEE ROUNDED =
WS-TOTAL-FACE-SC *
COM-SCM-AUTO-CALL-FEE / 100
COMPUTE WS-MANUAL-FEE = WS-MANUAL-FEE +
WS-SC-AUTO-CASH-ADD-ON
ELSE
MOVE WS-SC-AUTO-CASH-ADD-ON TO WS-MANUAL-FEE
END-IF
END-IF
ELSE
MOVE COM-SCM-MANUAL-CALL-FEE TO WS-MANUAL-FEE
IF SCM-MAN-FUEL-FEE-TYPE = 'P' AND
COM-SCM-MANUAL-CALL-FEE > ZEROS
IF WS-TOTAL-FACE-SC > ZEROS
COMPUTE WS-MANUAL-FEE ROUNDED =
WS-TOTAL-FACE-SC *
COM-SCM-MANUAL-CALL-FEE / 100
COMPUTE WS-MANUAL-FEE = WS-MANUAL-FEE +
WS-SC-MAN-CASH-ADD-ON
ELSE
MOVE WS-SC-MAN-CASH-ADD-ON TO WS-MANUAL-FEE
END-IF
END-IF
END-IF.


21022-CALC-TOTAL-FACE-SC.

IF WS-TOTAL-FACE-SC NOT > ZEROS
COMPUTE WS-TOTAL-FACE-SC =
WS-UIWA-NR2-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC.
MOVE ZEROS TO WS-SC-AUTO-CASH-ADD-ON,
WS-SC-MAN-CASH-ADD-ON.
IF WS-UIWA-CASH-AMT-SC > ZEROS
PERFORM 21023-CALC-SC-CASH-ADD-ON
END-IF.


21023-CALC-SC-CASH-ADD-ON.

IF SCM-AUTO-CASH-ADD-ON-FEE > 0
IF SCM-AUTO-CASH-FEE-TYPE = 'P'
COMPUTE WS-SC-AUTO-CASH-ADD-ON ROUNDED =
WS-UIWA-CASH-AMT-SC *
SCM-AUTO-CASH-ADD-ON-FEE / 100
ELSE
MOVE SCM-AUTO-CASH-ADD-ON-FEE TO
WS-SC-AUTO-CASH-ADD-ON
END-IF
END-IF.
IF SCM-MAN-CASH-ADD-ON-FEE > 0
IF SCM-MAN-CASH-FEE-TYPE = 'P'
COMPUTE WS-SC-MAN-CASH-ADD-ON ROUNDED =
WS-UIWA-CASH-AMT-SC *
SCM-MAN-CASH-ADD-ON-FEE / 100
ELSE
MOVE SCM-MAN-CASH-ADD-ON-FEE TO
WS-SC-MAN-CASH-ADD-ON
END-IF
END-IF.


21025-ADJUST-MANUAL-FEE.

IF (COM-DOWN-ENTRY-FLAG = 'Y')   OR
(INHIBIT-SETTLEMENT-REQUESTS)
MOVE ZEROES TO WS-MANUAL-FEE.


COMPUTE WS-TOTAL-GALLONS = WS-UIWA-NR2-QTY-SC +
WS-UIWA-REF-QTY-SC +
WS-UIWA-OTH-QTY-SC +
WS-UIWA-NR1-QTY-SC.

IF COM-FP-SC-CODE > 'YA000'
CONTINUE
ELSE
IF WS-MANUAL-FEE    > ZEROES AND
WS-TOTAL-GALLONS = ZEROES
MOVE ZEROES TO WS-MANUAL-FEE.

IF WS-MANUAL-FEE NOT < WS2-BILLABLE
MOVE ZEROES TO WS-MANUAL-FEE.


21030-SEND-MANUAL-FEE-MESSAGE.


IF WS-MANUAL-FEE > ZEROES
IF (COM-ADJUSTMENT-FLAG = 'S' OR 'C') OR
(THIS-IS-A-POS-TRANS)
MOVE 'C' TO COM-ADJUSTMENT-FLAG
CONTINUE
ELSE
PERFORM 21031-SEND-MANUAL-FEE-MESSAGE.


21031-SEND-MANUAL-FEE-MESSAGE.


MOVE '21031-SEND-MANUAL-FEE-MESSAGE'
TO CXUTS0ML-PARAGRAPH.



INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-CONTROL-INFORMATION
MOVE WS-UIWA-SC-CODE TO SIR-SERVICE-CENTER-CODE
MOVE 'A'          TO SIR-RECORD-TYPE
EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY              TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF SIR-CI-CYCLE-STATUS-PENDING
MOVE 'N'               TO WS-UPDT-FLAG
PERFORM 85011-CYCLE-SETTLEMENT
END-IF.
IF EIBRESP                    = DFHRESP (NOTFND) OR
SIR-CI-PAYMENT-ITEM-NUMBER = ZEROES
INITIALIZE SIR-GROUP-INFORMATION
ELSE
MOVE SIR-CI-PAYMENT-GROUP-ID    TO WS-PAYMENT-GROUP-ID
INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'P'                        TO SIR-PALT-GROUP-TYPE
MOVE WS-UIWA-SC-CODE            TO SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID        TO SIR-PALT-GROUP-ID
MOVE ZEROES                     TO SIR-PALT-ITEM-NUMBER
EXEC CICS READ
DATASET ('SETPAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-PAYMENT-ALT-INDEX-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-PAYMENT-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP.



IF SIR-GI-TOTAL-AMOUNT > ZEROES
MOVE 'SETTLEMENT HAS A PREVIOUS BALANCE.      PLEASE CORRE
-            'CT BEFORE CONTINUING WITH THIS TRANSACTION' TO
OUT-COMENT
MOVE '*' TO ERROR-FLAG
MOVE -1 TO FPINVNRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
MOVE 'S' TO COM-ADJUSTMENT-FLAG.
COMPUTE CHECK-ADJUSTMENT-AMT =
WS2-BILLABLE                         -
WS-MANUAL-FEE                        -
SIR-GI-TOTAL-DISCOUNT                -
SIR-GI-TOTAL-CHARGES.
COMPUTE CHECK-ADJUSTMENT-FEE = WS-MANUAL-FEE.
COMPUTE CHECK-ADJUSTMENT-OT-FEE = SIR-GI-TOTAL-DISCOUNT +
SIR-GI-TOTAL-CHARGES.
MOVE CHECK-ADJUSTMENT-MSG TO OUT-COMENT.
MOVE -1 TO FPINVNRL.
MOVE 'N'                  TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


21040-CHECK-FOR-RESTORE.


IF WS-THIS-BE-A-RESTORE = 'Y'
MOVE 'RESTORE COMPLETE, VERIFY INFO AND PRESS ENTER'
TO FP1MSG1O, OUT-COMENT
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21045-CHECK-FOR-NATS-PRE-AUTH.

MOVE 'N' TO WS-NATS-PRE-AUTH-FLAG.
IF COM-RMR-NATS-FLAG = 'Y'
MOVE 'Y'            TO WS-NATS-PRE-AUTH-FLAG.


IF THIS-BE-A-NATS-AUTH
MOVE 'N' TO WS-NATS-PRE-AUTH-FLAG.


21047-CHECK-FOR-ATM.

IF TSXCO0AT-TRAN-TYPE-ASI
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF.

IF THIS-BE-AN-ATM-XTN
PERFORM 21047-CHECK-FOR-ATM-EXIT.


21047-CHECK-FOR-ATM-EXIT.



IF WS-HOLD-POS-ERROR-NUMBER > ZEROES AND
TSXCO0AT-REVERSAL-XTN    = 'Y'
MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.



IF WS-HOLD-POS-ERROR-NUMBER > ZEROES AND
(TSXCO0AT-TRAN-TYPE-PURC-SI-F OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F)
MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.


IF TSXCO0AT-TRAN-TYPE-INQUIRY AND
WS-HOLD-POS-ERROR-NUMBER = +77
MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.



IF TSXCO0AT-TRAN-TYPE-INQUIRY OR
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE ZEROES TO WS-UIWA-CASH-AMT
WS-UIWA-CASH-AMT-SC
WS-UIWA-CASH-AMT-US
WS-BILLABLE
WS2-BILLABLE
WS3-BILLABLE
ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
WS-CURXMN
WS2-CURXMN
WS3-CURXMN
WS-TOTAL-REQUEST
WS2-TOTAL-REQUEST
WS3-TOTAL-REQUEST
OUT-NETXMN
END-IF.
IF WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE ZEROES          TO WS-BASE-FUEL-RATE
WS-MIXED-FUEL-RATE
IF TSXCO0AT-TRAN-TYPE-PURCHASE OR
TSXCO0AT-TRAN-TYPE-P-SAV-CR
IF TSXCO0AT-IN-NETW-PURC
CONTINUE
ELSE
MOVE CDN-MAESTRO-DECL-FEE
TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
ELSE
IF TSXCO0AT-IN-NETW-CASH-OUT
CONTINUE
ELSE
MOVE CDN-ATM-DEC-FEE
TO WS-BASE-ADVANCE-RATE
WS-MIXED-ADVANCE-RATE
END-IF
END-IF
PERFORM 209XX-COMPLETE-FEE-PROCESS
PERFORM 20960-CHECK-DEDUCT-FEE
END-IF.


21048-CHECK-FOR-FUELUP.

SET FUELUP-YES TO TRUE.
MOVE ZEROS TO FUELUP-CASH-PRICE.

IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF.
IF XCP-FUEL-DAYS-SINCE-LAST-UPDT NOT NUMERIC
MOVE 2 TO XCP-FUEL-DAYS-SINCE-LAST-UPDT
END-IF.

IF COM-CO-IS-CANADIAN  OR
COM-SC-IS-CANADIAN  OR
WS-BALANCE-BASED    OR

WS-CALC-DAYS > XCP-FUEL-DAYS-SINCE-LAST-UPDT
SET FUELUP-NO TO TRUE
END-IF

IF FUELUP-YES
IF WS-UIWA-SERVICE-TYPE = 'F'
IF SCM-HAS-FULL-SERV-CASH
MOVE SCM-FULL-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
END-IF
END-IF
IF WS-UIWA-SERVICE-TYPE = 'S'
IF SCM-HAS-SELF-SERV-CASH
MOVE SCM-SELF-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
END-IF
END-IF
IF WS-UIWA-SERVICE-TYPE = 'M'
IF SCM-HAS-MINI-SERV-CASH
MOVE SCM-MINI-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
END-IF
END-IF
IF FUELUP-CASH-PRICE NOT > ZERO
SET FUELUP-NO TO TRUE
END-IF
END-IF

IF FUELUP-YES
IF WS-UIWA-NR2-QTY-SC > ZERO
IF FUELUP-CASH-PRICE NOT < WS-UIWA-NR2-PPU-SC
SET FUELUP-NO TO TRUE
END-IF
ELSE
SET FUELUP-NO TO TRUE
END-IF
END-IF



IF FUELUP-YES
SUBTRACT FUELUP-CASH-PRICE FROM WS-UIWA-NR2-PPU-SC
GIVING FUELUP-PRICE-DIFF ROUNDED
ADD WS-DC-FEE-AMT-FUEL, WS-DC-FEE-AMT-RETAIN
GIVING FUELUP-RETAIN-FEE
IF FUELUP-PRICE-DIFF > FUELUP-RETAIN-FEE
SET FUELUP-NO TO TRUE
END-IF
END-IF.


21050-BUILD-ORDRFIL.

MOVE 'D' TO ODR-RECD-ID IN ORDRFIL-DETAIL-RECD.
MOVE WS-UIWA-DRV-NAME TO ODR-NAME IN ORDRFIL-DETAIL-RECD,
ODR-NAME-SEARCH IN ORDRFIL-DETAIL-RECD,
WS-HOLD-ODR-NAME.

MOVE CUST-RGE-SMLNM      TO ODR-SMALL-NAME IN
ORDRFIL-DETAIL-RECD
MOVE SYS-TIMIN           TO ODR-TIME-IN    IN
ORDRFIL-DETAIL-RECD,
I-TIMIN
MOVE WS-UIWA-SC-CODE     TO ODR-SRVC-CENTER IN
ORDRFIL-DETAIL-RECD

MOVE 'P'                 TO ODR-PLUS-LESS IN
ORDRFIL-DETAIL-RECD
MOVE WS-ID-NR            TO ODR-FP-CARD-NR IN
ORDRFIL-DETAIL-RECD
MOVE FPNAMEI             TO ODR-NAME IN
ORDRFIL-DETAIL-RECD
ODR-NAME-SEARCH IN
ORDRFIL-DETAIL-RECD
WS-HOLD-ODR-NAME.
MOVE 0                   TO ODR-FP-NR-RECDS IN
ORDRFIL-DETAIL-RECD
ODR-FP-1ST-RRN  IN
ORDRFIL-DETAIL-RECD
ODR-RMT-RRN     IN
ORDRFIL-DETAIL-RECD
ODR-FMLOG-RRN   IN
ORDRFIL-DETAIL-RECD
MOVE WS-FP-ACCT-CODE TO ODR-ACCT-CODE IN ORDRFIL-DETAIL-RECD.
MOVE CICS-PRIOR-DAY-JULIAN-DATE-OL
TO ODR-DATE IN ORDRFIL-DETAIL-RECD.
COMPUTE ODR-TIME IN ORDRFIL-DETAIL-RECD = EIBTIME / 100.
MOVE EIBTRMID TO ODR-FULL-TERM IN ORDRFIL-DETAIL-RECD.
MOVE 'FP'     TO  ODR-TRANS-ID IN ORDRFIL-DETAIL-RECD.
MOVE 0        TO  ODR-DISC-AMT IN ORDRFIL-DETAIL-RECD.
MOVE 'P'             TO ODR-SYS-BYTE IN
ORDRFIL-DETAIL-RECD (2).
MOVE 'Y'             TO ODR-SKIP-AR-FLAG IN
ORDRFIL-DETAIL-RECD.
MOVE WS2-BILLABLE   TO ODR-DRAFT-AMT
IN ORDRFIL-DETAIL-RECD.
MOVE WS-TOTAL-PRCNTAGE TO WS-CDN-DISC.
PERFORM BLD-0010.
MOVE WS-TOTAL-PRCNTAGE TO WS-DISC.
SUBTRACT WS-CDN-PRCNTAGE FROM WS-DISC.
MULTIPLY WS-DISC-R1 BY INP-TOTAL-COST
GIVING WS-DISC-AMT-SAVE ROUNDED.

PERFORM 21050-BUILD-ORDRFIL-RATE.
PERFORM 21050-BUILD-ORDRFIL-SETTLE.
PERFORM 21050-BUILD-ORDRFIL-PRINTER.
PERFORM 21050-BUILD-ORDRFIL-STATUS.
PERFORM 21050-BUILD-ORDRFIL-TIMEOUT.
PERFORM 21050-BUILD-ORDRFIL-HUB.
PERFORM 21050-BUILD-ORDRFIL-POS.
PERFORM 21050-BUILD-ORDRFIL-CREDIT.
PERFORM 21050-BUILD-ORDRFIL-TERM-FUEL.
PERFORM 21050-BUILD-ORDRFIL-DB.
PERFORM 21050-BUILD-ORDRFIL-PREMIER.
PERFORM 21050-BUILD-ORDRFIL-CUSTID.
PERFORM 21050-BUILD-ORDRFIL-COUNTRY.
PERFORM 21050-BUILD-ORDRFIL-CASH-ONLY.
PERFORM 21050-BUILD-ORDRFIL-GUAR-DISC.

PERFORM GET-CNTL-NR-CREATE-ORDER-RECD.
IF WS-NATS-PRE-AUTH-FLAG NOT = 'Y'
PERFORM UPDATE-ORDRPTR-INFO
PERFORM LOG-TRNS-HIST.


21050-BUILD-ORDRFIL-RATE.

IF COM-ACCT-IS-BASE-CURRENCY
MOVE WS-TOTAL-RATE  TO ODR-XMIT-RATE
IN ORDRFIL-DETAIL-RECD
ELSE
MOVE WS-TOTAL-RATE2 TO ODR-XMIT-RATE
IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-SETTLE.

IF THIS-IS-A-SETTLEMENT-ITEM OR
WS-MANUAL-FEE > ZEROES
MOVE 'D' TO ODR-PRCS-FLAG IN ORDRFIL-DETAIL-RECD
MOVE 'S' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (4)
ELSE
MOVE 'F' TO ODR-PRCS-FLAG IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-PRINTER.

IF FPAUTOI IS EQUAL TO 'Y'
MOVE COM-FP-PRNT-FLAG
TO ODR-PRINTER-FLAG IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-STATUS.

MOVE SPACES TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.
IF FPAUTOI IS EQUAL TO 'N'
MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.

IF (THIS-BE-TERMINAL-FUEL                   ) OR
(THIS-IS-A-SETTLEMENT-ITEM               ) OR
(WS-MANUAL-FEE > ZEROES                  ) OR
(WS3-BILLABLE  = ZEROES                  ) OR
(WS-FP-ACCT-CODE IS EQUAL TO 'CD006'        )
MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD
MOVE SPACES TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-TIMEOUT.

IF ODR-IS-SENT IN ORDRFIL-DETAIL-RECD
MOVE SYS-TIMIN TO ODR-TIME-OUT  IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-HUB.













IF (COM-FP-CO-CODE   = '00109' OR '00115' OR '00238') OR
(WS-FP-ACCT-CODE = 'TR440' OR 'TR355' OR
'SC071' OR 'LE041')
MOVE FPHUBI TO ODR-FP-UNIT-NR IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-POS.

IF THIS-BE-A-PC-REQUEST
MOVE 'P' TO ODR-POS-FLAG IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-CREDIT.

IF ODR-IS-CREDIT-PROBLEM IN ORDRFIL-DETAIL-RECD
MOVE '*' TO ODR-ORDER-PROB-FLAG IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-TERM-FUEL.

IF THIS-BE-TERMINAL-FUEL
IF THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH
MOVE 'A' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1)
ELSE
MOVE 'T' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1).

IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE ZEROES TO ODR-DRAFT-AMT IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-DB.

IF MNX-TRANSACTION
OR WS-NON-BILLABLE IS GREATER THAN 0
MOVE 'D' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1).


21050-BUILD-ORDRFIL-PREMIER.

MOVE COM-PREMIER-CARD TO ODR-PREMIER-CARD IN
ORDRFIL-DETAIL-RECD
PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
MOVE 'E' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3)
ELSE
MOVE 'P' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3).


21050-BUILD-ORDRFIL-CUSTID.

MOVE COM-FP-CO-CODE TO INP-CO-CODE
ODR-FUEL-CODE   IN
ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-COUNTRY.


EVALUATE TRUE
WHEN COM-ACCT-IS-BASE-CURRENCY
IF COM-CO-IS-CANADIAN
MOVE 'C' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
END-IF
IF COM-CO-IS-US
MOVE 'U' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
END-IF
WHEN OTHER
IF COM-SC-IS-CANADIAN
MOVE 'C' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
END-IF
IF COM-SC-IS-US
MOVE 'U' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
END-IF
END-EVALUATE.
MOVE 'U' TO ODR-SC-COUNTRY IN ORDRFIL-DETAIL-RECD.
IF COM-SC-IS-CANADIAN
MOVE 'C' TO ODR-SC-COUNTRY IN ORDRFIL-DETAIL-RECD.

MOVE 'U' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD
IF WS-CANADIAN-CHK-FLAG = 'Y'
MOVE 'C' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD.
IF COM-SC-IS-CANADIAN
MOVE 'C' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-CASH-ONLY.


MOVE ' ' TO ODR-FP-XTN-TYPE IN ORDRFIL-DETAIL-RECD.
IF PGRM-FUNCTION-CASH-ONLY
MOVE 'C' TO ODR-FP-XTN-TYPE IN ORDRFIL-DETAIL-RECD.


21050-BUILD-ORDRFIL-GUAR-DISC.



IF (WS-CDN-GUAR-YN = 'Y') AND
(CDN-GUAR-START-DATE NOT > PD-YYDDD)
COMPUTE ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD =
ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD -
CDN-GUAR-DISC.


GET-CNTL-NR-CREATE-ORDER-RECD.

MOVE 'GET-CNTL-NR-CREATE-ORDER-RECD' TO CXUTS0ML-PARAGRAPH.
IF WS-LARGE-TRANS-SPLITS
PERFORM FP-0175-LTI-B
ELSE
MOVE 'N' TO WS-LOOP-FLAG
PERFORM FP-0175
UNTIL WS-LOOP-FLAG = 'Y'
END-IF
IF ODR-NAME-LINK IN DUP-ORDRFIL-RECD IS NUMERIC
MOVE ODR-NAME-LINK IN DUP-ORDRFIL-RECD
TO ODR-NAME-LINK IN ORDRFIL-DETAIL-RECD
ELSE
MOVE 0 TO ODR-NAME-LINK IN ORDRFIL-DETAIL-RECD.
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ODR-ORIG-CTL-NR IN ORDRFIL-DETAIL-RECD,
OUT-CTL-NR.
IF NOT WS-LARGE-TRANS-SPLITS
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO I-CTL-NR
END-IF
MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
IN ORDRFIL-DETAIL-RECD.
IF WS-NATS-PRE-AUTH-FLAG = 'Y'
EXEC CICS UNLOCK
DATASET ('ORDRFIL')
RESP    (EIBRESP)
END-EXEC
ELSE
EXEC CICS REWRITE
DATASET ('ORDRFIL')
FROM    (ORDRFIL-DETAIL-RECD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE ORDRFIL-DETAIL-RECD TO DUP-ORDRFIL-RECD, COM-FP-ORDRFIL.
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD TO DUP-CONTROL-NR.
ADD ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD, 2276
GIVING OUT-CK-AUTH-NR.


FP-0175.

MOVE 'FP-0175'                   TO CXUTS0ML-PARAGRAPH.
IF WS-UIWA-NATS-CTL-NR NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NATS-CTL-NR.
IF THIS-BE-A-NATS-AUTH AND
WS-UIWA-NATS-CTL-NR > ZEROES
MOVE WS-UIWA-NATS-CTL-NR TO CNRRA-1ST-CTRL-NR
MOVE ZEROES              TO WS-UIWA-NATS-CTL-NR
ELSE
SET CNRIA-RN-REQUEST      TO TRUE
MOVE 1                    TO CNRIA-QTY-REQUESTED
CALL WS-CXUTS400 USING DFHEIBLK,
DFHCOMMAREA,
CXUTW400-PARMS
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF CNRRA-RC-MAX-CTL-USED
MOVE CTL-NR-MAX TO OUT-COMENT
MOVE CTL-NR-MAX-N TO POS-ERROR-NUMBER
MOVE -1 TO FPINVNRL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
END-IF.
MOVE CNRRA-1ST-CTRL-NR TO
ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD,
WS-CONTROL-NR.
COMPUTE WS-CTR1 = ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD + 1
MOVE WS-CTR1 TO ORDRFIL-RRN.
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (DUP-ORDRFIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRFIL-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
EXEC CICS UNLOCK
DATASET ('ORDRFIL')
RESP    (EIBRESP)
END-EXEC
ELSE
IF ODR-VALID-DETAIL-RECD IN DUP-ORDRFIL-RECD
EXEC CICS UNLOCK
DATASET ('ORDRFIL')
RESP    (EIBRESP)
END-EXEC
ELSE
MOVE 'Y' TO WS-LOOP-FLAG.


FP-0175-LTI-B.

MOVE 'FP-0175-LTI-B'             TO CXUTS0ML-PARAGRAPH.

IF LTI-FIRST-PASS
MOVE WS-CONTROL-NR TO CNRRA-1ST-CTRL-NR
ELSE
ADD 1              TO CNRRA-1ST-CTRL-NR
END-IF
IF COM-ACCT-IS-BASE-CURRENCY
MOVE WS-CURXMN  TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
ELSE
MOVE WS2-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
END-IF

MOVE CNRRA-1ST-CTRL-NR TO
ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
WS-CONTROL-NR
COMPUTE WS-CTR1 = ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD + 1
MOVE WS-CTR1 TO ORDRFIL-RRN
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (DUP-ORDRFIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE ORDRFIL-RRN                 TO WS-NUM-7.
MOVE WS-NUM-7                    TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


UPDATE-ORDRPTR-INFO.

MOVE 'UPDATE-ORDRPTR-INFO'       TO CXUTS0ML-PARAGRAPH.

EXEC CICS READ
DATASET ('ORDRPTR')
INTO    (ORDRPTR-RECD)
RIDFLD  (ORDRPTR-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRPTR-RRN                 TO WS-NUM-7.
MOVE WS-NUM-7                    TO CXUTS0ML-COMMAND.

PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF OPT-LAST-RRN IS NUMERIC
MOVE OPT-LAST-RRN TO SAVE-RRN
ELSE
MOVE 0 TO SAVE-RRN
MOVE WS-CTR1 TO OPT-1ST-RRN.
MOVE WS-CTR1 TO OPT-LAST-RRN.
EXEC CICS REWRITE
DATASET ('ORDRPTR')
FROM    (ORDRPTR-RECD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF SAVE-RRN > ZEROES
MOVE SAVE-RRN TO ORDRFIL-RRN
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (DUP-ORDRFIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE ORDRFIL-RRN              TO WS-NUM-7
MOVE WS-NUM-7                 TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE WS-CTR1 TO ODR-NAME-LINK IN DUP-ORDRFIL-RECD
MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
IN DUP-ORDRFIL-RECD
EXEC CICS REWRITE
FROM    (DUP-ORDRFIL-RECD)
DATASET ('ORDRFIL')
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21055-CHECK-FOR-NATS-EXIT.

IF WS-NATS-PRE-AUTH-FLAG = 'Y'
PERFORM 21055-CHECK-FOR-DUP
PERFORM 21055-START-NATS-SEND
PERFORM 21195-SETUP-CHECK-ENTRY-AREA
PERFORM 21260-CHECK-SETTLE-EXIT.


21055-CHECK-FOR-DUP.

MOVE '21055-CHECK-FOR-DUP'       TO CXUTS0ML-PARAGRAPH.
MOVE SPACES TO NATS-RECORD.
INITIALIZE NATS-RECORD
PERFORM 21055-BUILD-NATS-KEY.
PERFORM WITH TEST AFTER
UNTIL NATS-AI-CARD-NR  NOT = WS-PRM-CARD-NUM OR
NATS-AI-LOCATION NOT = WS-TSCODE-COMP  OR
NATS-AI-STATUS   NOT = 'A'             OR
EIBRESP          NOT = DFHRESP(NORMAL)
EXEC CICS READ
DATASET ('NATSAIX')
INTO    (NATS-RECORD)
RIDFLD  (NATS-ALT-INDX)
GTEQ
RESP    (EIBRESP)
END-EXEC
IF EIBRESP = DFHRESP (NOTOPEN)
EXEC CICS READ
DATASET ('NATHAIX')
INTO    (NATS-RECORD)
RIDFLD  (NATS-ALT-INDX)
GTEQ
RESP    (EIBRESP)
END-EXEC
END-IF
MOVE NATS-ALT-INDX           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP          = DFHRESP(NORMAL)
PERFORM 21055-NUM-CHECKS
PERFORM 21055-NUM-CHECKS2
IF NATS-AI-CARD-NR  = WS-PRM-CARD-NUM AND
NATS-AI-LOCATION = WS-TSCODE-COMP  AND
NATS-AI-STATUS   = 'A'
PERFORM 21055-CHECK-POSSIBLE-DUP
COMPUTE NATS-TN-SEQ-NR = NATS-TN-SEQ-NR + 1
MOVE NATS-TRACKING-NUMBER TO NATS-AI-TRACKING-NR
END-IF
END-IF
END-PERFORM.


21055-NUM-CHECKS.

IF NATS-AI-CARD-NR NOT NUMERIC
MOVE ZEROS          TO NATS-AI-CARD-NR.
IF WS-AXIA-NR2-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-NR2-COST.
IF WS-AXIA-REF-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-REF-COST.
IF WS-AXIA-NR1-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-NR1-COST.
IF WS-AXIA-OTH-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-OTH-COST.
IF WS-AXIA-OIL-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-OIL-COST.


21055-NUM-CHECKS2.

IF WS-AXIA-PR1-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-PR1-COST.
IF WS-AXIA-PR2-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-PR2-COST.
IF WS-AXIA-PR3-COST NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-PR3-COST.
IF WS-AXIA-CASH-AMT NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-CASH-AMT.
IF WS-AXIA-TAX-AMT NOT NUMERIC
MOVE ZEROS          TO WS-AXIA-TAX-AMT.


21055-CHECK-POSSIBLE-DUP.

IF WS-AXIA-INVOICE-NR   = WS-UIWA-INVOICE-NR  AND
(WS-AXIA-NR2-COST       +
WS-AXIA-REF-COST       +
WS-AXIA-NR1-COST       +
WS-AXIA-OTH-COST       +
WS-AXIA-OIL-COST       +
WS-AXIA-PR1-COST       +
WS-AXIA-PR2-COST       +
WS-AXIA-PR3-COST       +
WS-AXIA-CASH-AMT       +
WS-AXIA-TAX-AMT) =
(WS-UIWA-NR2-COST-SC    +
WS-UIWA-REF-COST-SC    +
WS-UIWA-OIL-COST-SC    +
WS-UIWA-CASH-AMT-SC    +
WS-UIWA-OTH-COST-SC    +
WS-UIWA-PR1-COST-SC    +
WS-UIWA-PR2-COST-SC    +
WS-UIWA-PR3-COST-SC    +
WS-UIWA-NR1-COST-SC    +
WS-UIWA-TAX-AMT-SC)
IF EIBAID NOT = DFHPF3
MOVE DUPLICATE-NATS-PRE-AUTH   TO OUT-COMENT
MOVE DUPLICATE-NATS-PRE-AUTH-N TO POS-ERROR-NUMBER
MOVE 'Y'                       TO VCWS-ERROR-IND
MOVE -1                        TO FPINVNRL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21055-START-NATS-SEND.

INITIALIZE NATS-RECORD
PERFORM 21055-BUILD-NATS-KEY
PERFORM 21055-BUILD-NATS-DETAIL
PERFORM 21055-BUILD-NATS-REQUEST1
PERFORM 21055-BUILD-NATS-REQUEST-SWIPE.
PERFORM 21055-BUILD-NATS-REQUEST-NR2.
PERFORM 21055-BUILD-NATS-REQUEST-TR.
PERFORM 21055-BUILD-NATS-REQUEST-OTH.
PERFORM 21055-BUILD-NATS-REQUEST-NR1.
PERFORM 21055-BUILD-NATS-REQUEST-OIL.
PERFORM 21055-BUILD-NATS-REQUEST-CASH.
PERFORM 21055-BUILD-NATS-REQUEST-PROD.
PERFORM 21055-BUILD-NATS-REQUEST-TOTS.
PERFORM 21055-BUILD-NATS-POS-AREA.
PERFORM 21055-START-NATS-SEND-PGM.


21055-BUILD-NATS-KEY.

MOVE '0'                        TO NATS-RECORD-TYPE
MOVE WS-CURRENT-DATE-YYDDD      TO NATS-TN-DATE.
MOVE COM-PREMIER-CARD           TO WS-PRM-CARD-NR
MOVE PRM-CHECK-DIGIT            TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-NUM            TO NATS-AI-CARD-NR
IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SCM-MASTER-SVC-CTR-CODE TO NATS-AI-LOCATION,
WS-TSCODE-COMP
ELSE
MOVE COM-FP-SC-CODE         TO NATS-AI-LOCATION,
WS-TSCODE-COMP.
MOVE 'A'                       TO NATS-STATUS,
NATS-AI-STATUS.


21055-BUILD-NATS-DETAIL.

MOVE '0'                       TO NATS-ERROR-TYPE
MOVE CDN-CUST-ACCT-CODE        TO NATS-ACCOUNT-CODE.


21055-BUILD-NATS-REQUEST1.

MOVE SCM-NATS-ACCT-CODE        TO NATS-NRF-NATS-LOCATION
IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SCM-MASTER-SVC-CTR-CODE TO NATS-NRF-CDN-LOCATION
ELSE
MOVE COM-FP-SC-CODE         TO NATS-NRF-CDN-LOCATION.
MOVE CDN-UNOCAL-NUMBER         TO NATS-NRF-NATS-ACCOUNT


MOVE CDN-CUST-NUMBER           TO NATS-NRF-CDN-CUST-ID
MOVE COM-PREMIER-CARD          TO WS-PRM-CARD-NR
MOVE PRM-CHECK-DIGIT           TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-BASE-A        TO NATS-NRF-CARD-NUMBER
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO NATS-NRF-CDN-AUTH-NR.
MOVE 19                        TO NATS-NRF-TRAN-DATE(1:2).
IF PD-YY < 70
MOVE 20                     TO NATS-NRF-TRAN-DATE(1:2).
MOVE PD-YY                     TO NATS-NRF-TRAN-DATE(3:2).
MOVE PD-MM                     TO NATS-NRF-TRAN-DATE(5:2).
MOVE PD-DD                     TO NATS-NRF-TRAN-DATE(7:2),
NATS-NRF-CDN-AUTH-NR(1:2).
MOVE EIBTIME                   TO NATS-NRF-TRAN-TIME.
EVALUATE TRUE
WHEN COM-COMDATA-COMPLETE-FLAG = 'Y'
SET NATS-NRF-TRANS-LINK  TO TRUE
WHEN WS-BILLABLE     > ZEROES AND
WS-NON-BILLABLE > ZEROES
SET NATS-NRF-BILLING-SPLIT TO TRUE
WHEN WS-BILLABLE     > ZEROES
SET NATS-NRF-FUNDED      TO TRUE
WHEN OTHER
SET NATS-NRF-DIRECT-BILL TO TRUE
END-EVALUATE.
SET NATS-NRF-PURCHASE          TO TRUE.


21055-BUILD-NATS-REQUEST-SWIPE.

EVALUATE TRUE
WHEN NOT THIS-BE-A-PC-REQUEST
SET NATS-NRF-VOICE-CTR   TO TRUE
WHEN OTHER
SET NATS-NRF-MAN-KEYED   TO TRUE
IF WS-UIWA-SWIPED-KEYED = 'S'
SET NATS-NRF-ELEC-SWIPE TO TRUE
END-IF
END-EVALUATE.


21055-BUILD-NATS-REQUEST-NR2.

MOVE ZEROES TO WS-INDEX.
IF WS-UIWA-NR2-QTY-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-NR2-SUB-PROD TO WS-NATS-PROD-IN
PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE WS-UIWA-NR2-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-NR2-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) =
WS-UIWA-NR2-COST-SC / WS-UIWA-NR2-QTY-SC.


21055-BUILD-NATS-REQUEST-TR.

IF WS-UIWA-REF-QTY-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-REF-SUB-PROD TO WS-NATS-PROD-IN
PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE WS-UIWA-REF-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-REF-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) =
WS-UIWA-REF-COST-SC / WS-UIWA-REF-QTY-SC.


21055-BUILD-NATS-REQUEST-OTH.

IF WS-UIWA-OTH-QTY-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-OTH-SUB-PROD TO WS-NATS-PROD-IN
PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE WS-UIWA-OTH-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-OTH-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = WS-UIWA-OTH-COST-SC /
WS-UIWA-OTH-QTY-SC.


21055-BUILD-NATS-REQUEST-NR1.

IF WS-UIWA-NR1-QTY-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-NR1-SUB-PROD TO WS-NATS-PROD-IN
PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE WS-UIWA-NR1-QTY-SC   TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-NR1-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = WS-UIWA-NR1-COST-SC /
WS-UIWA-NR1-QTY-SC.


21055-BUILD-NATS-REQUEST-OIL.

IF WS-UIWA-OIL-COST-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE 070                  TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE WS-UIWA-OIL-QTY-SC   TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-OIL-COST-SC  TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = WS-UIWA-OIL-COST-SC /
WS-UIWA-OIL-QTY-SC.


21055-BUILD-NATS-REQUEST-CASH.

IF WS-UIWA-CASH-AMT-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE 200                  TO NATS-NRF-PROD-CODE (WS-INDEX)
MOVE ZEROES               TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-CASH-AMT-SC  TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = ZEROES.


21055-BUILD-NATS-REQUEST-PROD.

IF WS-UIWA-PR1-COST-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-PR1-CODE     TO WS-INDEX2
IF WS-INDEX2 > 35
MOVE SPACES            TO NATS-NRF-PROD-CODE (WS-INDEX)
ELSE
MOVE WS-NATS-PROD-TABLE (WS-INDEX2 + 1)
TO NATS-NRF-PROD-CODE (WS-INDEX)
END-IF
MOVE ZEROES               TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-PR1-COST-SC  TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG (WS-INDEX) = ZEROES.
IF WS-UIWA-PR2-COST-SC > ZEROES
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-PR2-CODE     TO WS-INDEX2
IF WS-INDEX2 > 35
MOVE SPACES            TO NATS-NRF-PROD-CODE (WS-INDEX)
ELSE
MOVE WS-NATS-PROD-TABLE (WS-INDEX2 + 1)
TO NATS-NRF-PROD-CODE (WS-INDEX)
END-IF
MOVE ZEROES               TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-PR2-COST-SC  TO NATS-NRF-PROD-NET  (WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG (WS-INDEX) = ZEROES.
IF WS-UIWA-PR3-COST-SC > ZEROES
IF WS-INDEX = 6
MOVE 116               TO NATS-NRF-PROD-CODE (WS-INDEX)
ADD WS-UIWA-PR3-COST-SC TO NATS-NRF-PROD-NET (WS-INDEX)
ELSE
COMPUTE WS-INDEX = WS-INDEX + 1
MOVE WS-UIWA-PR3-CODE TO WS-INDEX2
IF WS-INDEX2 > 35
MOVE SPACES         TO NATS-NRF-PROD-CODE (WS-INDEX)
ELSE
MOVE WS-NATS-PROD-TABLE (WS-INDEX2 + 1)
TO NATS-NRF-PROD-CODE (WS-INDEX)
END-IF
MOVE ZEROES            TO NATS-NRF-PROD-QTY  (WS-INDEX)
MOVE WS-UIWA-PR3-COST-SC TO NATS-NRF-PROD-NET(WS-INDEX)
COMPUTE NATS-NRF-PROD-PPG (WS-INDEX) = ZEROES.


21055-BUILD-NATS-REQUEST-TOTS.

COMPUTE NATS-NRF-TRAN-SUB-TOTAL = WS2-BILLABLE +
WS2-NON-BILLABLE
MOVE ZEROES                    TO NATS-NRF-SALES-TAX.
MOVE NATS-NRF-TRAN-SUB-TOTAL   TO NATS-NRF-TRAN-TOTAL.


21055-BUILD-NATS-POS-AREA.



INITIALIZE WS-AUTOMATED-XTN-INPUT-AREA
MOVE 'FX'                      TO WS-AXIA-XTN-ID
MOVE '*'                       TO WS-AXIA-XTN-TYPE
MOVE COM-PREMIER-CARD          TO WS-PRM-CARD-NR
MOVE PRM-CHECK-DIGIT           TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD               TO WS-AXIA-CARD-NR
MOVE COM-UNIT-NR               TO NATS-DD-UNIT-NR
MOVE PRM-CARD-EMPLOYEE-ID      TO NATS-DD-EMPL-NR
MOVE COM-FP-SC-CODE            TO WS-AXIA-SC-CODE
MOVE WS-UIWA-NR2-QTY-SC        TO WS-AXIA-NR2-QTY
MOVE WS-UIWA-NR2-COST-SC       TO WS-AXIA-NR2-COST
MOVE WS-UIWA-INVOICE-NR        TO WS-AXIA-INVOICE-NR,
NATS-DD-INVOICE-NR
MOVE WS-UIWA-TRIP-NR           TO WS-AXIA-TRIP-NR
MOVE WS-UIWA-REF-QTY-SC        TO WS-AXIA-REF-QTY
MOVE WS-UIWA-REF-COST-SC       TO WS-AXIA-REF-COST
MOVE WS-UIWA-OIL-QTY-SC        TO WS-AXIA-OIL-QTY
MOVE WS-UIWA-OIL-COST-SC       TO WS-AXIA-OIL-COST
MOVE WS-UIWA-HUB               TO WS-AXIA-HUB
MOVE WS-UIWA-CASH-AMT-SC       TO WS-AXIA-CASH-AMT
MOVE WS-UIWA-CHECK-NR1         TO WS-AXIA-CHK-NR
MOVE WS-UIWA-OTH-QTY-SC        TO WS-AXIA-OTH-QTY
MOVE WS-UIWA-OTH-COST-SC       TO WS-AXIA-OTH-COST
MOVE WS-UIWA-PR1-CODE          TO WS-AXIA-PR1-CODE
MOVE WS-UIWA-PR1-COST-SC       TO WS-AXIA-PR1-COST
MOVE WS-UIWA-PR2-CODE          TO WS-AXIA-PR2-CODE
MOVE WS-UIWA-PR2-COST-SC       TO WS-AXIA-PR2-COST
MOVE WS-UIWA-PR3-CODE          TO WS-AXIA-PR3-CODE
MOVE WS-UIWA-PR3-COST-SC       TO WS-AXIA-PR3-COST
MOVE COM-DL-NR                 TO WS-AXIA-DL-NR
MOVE COM-DL-STATE              TO WS-AXIA-DL-ST
MOVE WS-UIWA-TRAILER-NR        TO WS-AXIA-TRAILER-NR
MOVE WS-UIWA-TRAILER-HUB       TO WS-AXIA-TRAILER-HUB
MOVE WS-UIWA-PO-NR             TO WS-AXIA-PO-NR
MOVE COM-EMPL-NR               TO WS-AXIA-EMPLOYEE-NR
MOVE WS-UIWA-NR1-QTY-SC        TO WS-AXIA-NR1-QTY
MOVE WS-UIWA-NR1-COST-SC       TO WS-AXIA-NR1-COST
MOVE 'K'                       TO WS-AXIA-SWIPED-KEYED
MOVE WS-UIWA-TAX-AMT-SC        TO WS-AXIA-TAX-AMT
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO WS-AXIA-NATS-CTL-NR
IF THIS-BE-A-PC-REQUEST
MOVE 'Y'                    TO WS-AXIA-NATS-POS-FLAG
ELSE
MOVE 'N'                    TO WS-AXIA-NATS-POS-FLAG
END-IF
MOVE WS-CURRENT-DATE-YYDDD TO WS-AXIA-NATS-PRE-AUTH-DATE
MOVE WS-UIWA-NATS-PRE-AUTH-SEQ
TO WS-AXIA-NATS-PRE-AUTH-SEQ-NR
MOVE WS-UIWA-TRAILER-HRS       TO WS-AXIA-TRAILER-HRS
MOVE COM-UNIT-NR-EXPANDED      TO WS-AXIA-UNIT-NR
IF COM-CARD-EXP-DATE NOT NUMERIC
MOVE ZEROES                 TO COM-CARD-EXP-DATE
END-IF
MOVE COM-CARD-EXP-DATE         TO WS-AXIA-CARD-EXP-DATE

MOVE WS-HOLD-OTH-SUB-PROD-IN   TO WS-AXIA-OTH-SUB-PROD
MOVE WS-HOLD-NR2-SUB-PROD-IN   TO WS-AXIA-NR2-SUB-PROD
MOVE WS-HOLD-NR1-SUB-PROD-IN   TO WS-AXIA-NR1-SUB-PROD
MOVE WS-HOLD-REF-SUB-PROD-IN   TO WS-AXIA-RFR-SUB-PROD
MOVE WS-AUTOMATED-XTN-INPUT-AREA TO NATS-POS-LINKAGE-DATA.


21055-START-NATS-SEND-PGM.

MOVE '21055-START-NATS-SEND-PGM'   TO CXUTS0ML-PARAGRAPH
EXEC CICS START
TRANSID ('PSNS')
FROM    (NATS-RECORD)
LENGTH  (NATS-RECORD-LENGTH)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21060-BUILD-USILOG-RECD.

MOVE '21060-BUILD-USILOG-RECD'   TO CXUTS0ML-PARAGRAPH.

SUBTRACT 1 FROM WS-CTR1 GIVING WS-WORK-TRANS-NR.
MOVE WS-CURRENT-DATE-MMDDYY
TO WS-WORK-NW-DATE
MOVE WS-UIWA-NR2-QTY      TO WS-WORK-NR-OF-GALLONS.
MOVE 0                    TO WS-WORK-PRICE-PER-GLLN,
WS-WORK-TOTAL-COST.
IF NOT THIS-IS-REGULAR-TERMINAL-FUEL
MOVE WS-UIWA-NR2-PPU   TO WS-WORK-PRICE-PER-GLLN
MOVE WS-UIWA-NR2-COST  TO WS-WORK-TOTAL-COST
END-IF.
IF WS-UIWA-OTH-QTY > 0
ADD WS-UIWA-OTH-QTY    TO WS-WORK-NR-OF-GALLONS
IF NOT THIS-IS-REGULAR-TERMINAL-FUEL
ADD WS-UIWA-OTH-COST
TO WS-WORK-TOTAL-COST
IF WS-WORK-NR-OF-GALLONS > ZERO
DIVIDE WS-WORK-TOTAL-COST BY WS-WORK-NR-OF-GALLONS
GIVING WS-WORK-PRICE-PER-GLLN ROUNDED
END-IF
END-IF
END-IF.
IF WS-UIWA-NR1-QTY > 0
ADD WS-UIWA-NR1-QTY    TO WS-WORK-NR-OF-GALLONS
IF NOT THIS-IS-REGULAR-TERMINAL-FUEL
ADD WS-UIWA-NR1-COST
TO WS-WORK-TOTAL-COST
IF WS-WORK-NR-OF-GALLONS > ZERO
DIVIDE WS-WORK-TOTAL-COST BY WS-WORK-NR-OF-GALLONS
GIVING WS-WORK-PRICE-PER-GLLN ROUNDED
END-IF
END-IF
END-IF.
MOVE CDN-DEDUCT-CHARGE-FLAG
TO WS-WORK-LESS-CHARGE
IF THIS-BE-A-VRU-EXPRESS-CASH
IF CDN-LESS-PICKUP
MOVE 'Y'            TO WS-WORK-LESS-CHARGE
END-IF
END-IF.
MOVE WS-UIWA-SC-CODE      TO SCMSTR-KEY.
IF SCMSTR-KEY NOT = WS-LAST-SCMM-READ
MOVE SPACES            TO SERVICE-CENTER-MASTER-RECORD
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM 60200-CHECK-SCMSTR-NUMERICS
END-IF.
MOVE SCM-KEY        TO SCMSTR-KEY
MOVE SCMSTR-KEY     TO WS-LAST-SCMM-READ

MOVE LOW-VALUES     TO OPC-OP-ID

MOVE COM-FP-CO-CODE TO OPC-CTRL-DATA
EXEC CICS READ
DATASET (OPACSFL)
INTO    (OPC-DETAIL-RECD)
RIDFLD  (OPC-RECD-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE OPC-RECD-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.




MOVE ZEROES TO HLD-PURC-ONE-TIME
HLD-CASH-ONE-TIME.
PERFORM FIGURE-CASH-USED.
PERFORM FIGURE-PURC-USED.







IF WS-UIWA-NR2-QTY IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NR2-QTY.
IF WS-UIWA-OTH-QTY IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-OTH-QTY.
IF WS-UIWA-REF-QTY IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-REF-QTY.
IF WS-UIWA-NR1-QTY IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NR1-QTY.
IF WS-UIWA-NR2-COST IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NR2-COST.
IF WS-UIWA-OTH-COST IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-OTH-COST.
IF WS-UIWA-REF-COST IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-REF-COST.
IF WS-UIWA-NR1-COST IS NOT NUMERIC
MOVE ZEROES TO WS-UIWA-NR1-COST.

IF WS-FUEL-RATE IS NOT NUMERIC
MOVE ZEROES TO WS-FUEL-RATE.
IF WS-ADVANCE-RATE IS NOT NUMERIC
MOVE ZEROES TO WS-ADVANCE-RATE.


21080-BUILD-FMLOG-RECD.

MOVE '21080-BUILD-FMLOG-RECD'    TO CXUTS0ML-PARAGRAPH.

IF WS-LARGE-TRANS-SPLITS
AND LTI-FIRST-PASS
CONTINUE
ELSE
MOVE +1 TO FMLOG-RRN
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FMLOG-CONTROL-RECORD)
RIDFLD  (FMLOG-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN         TO WS-NUM-7
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
ADD 1 TO FML-NEXT-RRN
EXEC CICS REWRITE
DATASET ('FMLOG')
FROM    (FMLOG-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE FML-NEXT-RRN    TO FMLOG-RRN
END-IF
MOVE SPACES TO FUEL-MANAGEMENT-DAILY-LOG-RECD.
INITIALIZE     FUEL-MANAGEMENT-DAILY-LOG-RECD.
MOVE WS-BUSINESS-DATE-CYYMMDD TO FMDL-RK-TRANSACTION-DATE.
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO FMDL-RK-CONTROL-NUMBER.
MOVE 'FP'                  TO FMDL-RECORD-TYPE.
MOVE CDN-CUST-ACCT-CODE    TO FMDL-CUST-ACCOUNT-CODE.
MOVE CDN-CUST-NAME         TO FMDL-CUSTOMER-NAME.
MOVE CDN-EXPANDED-PRODUCTS-FLAG
TO FMDL-EXPANDED-PRODUCTS-FLAG.
PERFORM 2108X-BFR-BUILD-CUST-ID.

MOVE HLD-CORPORATE-CODE    TO FMDL-CUST-CORPORATE-CODE.
IF CDN-ALLIANCE-FLAG = 'Y'
MOVE 'Y'                TO FMDL-CUST-ALLIANCE-FLAG
ELSE
MOVE 'N'                TO FMDL-CUST-ALLIANCE-FLAG.
IF HLD-CUST-NAME > SPACES
MOVE HLD-CUST-NAME             TO FMDL-ACCOUNT-NAME
ELSE
MOVE CL-CO-FULL-NM OF DCREDITL TO FMDL-ACCOUNT-NAME.
MOVE SCM-PHONE-NUMBER             TO FMDL-SC-PHONE-NR.
MOVE CAR-CONTACT-NAME (1)         TO FMDL-SC-CONTACT-NAME.
IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SCM-MASTER-SVC-CTR-CODE  TO FMDL-SC-SRVC-CNTR-CODE
ELSE
MOVE WS-UIWA-SC-CODE          TO FMDL-SC-SRVC-CNTR-CODE.
MOVE SCM-CORPORATE-CODE   TO FMDL-SC-CORPORATE-CODE.
MOVE SCM-CHAIN-CODE       TO FMDL-SC-CHAIN-CODE.
MOVE SCM-LOCATION-NAME    TO FMDL-SC-NAME.
MOVE SCM-LOCATION-ADDRESS TO FMDL-SC-ADDRESS
MOVE SCM-LOCATION-ZIP     TO FMDL-SC-ZIP
MOVE SCM-KEY                TO  SCMSTR-KEY.
IF (SCM-KEY-NUM = '000'    OR SCM-KEY = 'TN333') AND
(COM-TS-STATE NOT = '??')
MOVE COM-TS-CITY        TO FMDL-SC-CITY
MOVE COM-TS-STATE       TO FMDL-SC-STATE
ELSE
MOVE SCM-LOCATION-CITY  TO FMDL-SC-CITY
MOVE SCM-LOCATION-STATE TO FMDL-SC-STATE.
MOVE SCM-RMS-ALLIANCE-FLAG TO FMDL-SC-ALLIANCE-FLAG.

IF COM-IN-NETWORK-FLAG NOT > SPACES
MOVE 'N'                 TO FMDL-IN-NETWORK-FLAG
ELSE
MOVE COM-IN-NETWORK-FLAG TO FMDL-IN-NETWORK-FLAG.

MOVE WS-UIWA-INVOICE-NR TO FMDL-TR-SC-INVOICE-NUMBER.

IF CTLA-MQ-TRAN-TIME NUMERIC AND
CTLA-MQ-TRAN-TIME > ZEROS
MOVE CTLA-MQ-TRAN-TIME   TO FMDL-TR-TRANSACTION-TIME
ELSE
MOVE EIBTIME             TO FMDL-TR-TRANSACTION-TIME
END-IF

MOVE 'N'                TO FMDL-TR-CANCELLATION-FLAG.
MOVE ZEROS              TO FMDL-TR-CANCELLATION-DATE
FMDL-TR-CANCELLATION-TIME
MOVE 'N'                TO FMDL-TR-CHEAPER-FUEL-FLAG.
IF PGRM-FUNCTION > 1
IF FPFSI = 'F'
IF COM-FP-MINI-PRICE > 0 OR
COM-FP-SELF-PRICE > 0
MOVE 'Y' TO FMDL-TR-CHEAPER-FUEL-FLAG
END-IF
ELSE
IF FPFSI = 'M'
IF COM-FP-SELF-PRICE > 0
MOVE 'Y' TO FMDL-TR-CHEAPER-FUEL-FLAG.
IF FPFSI = 'F' OR 'M' OR 'S' OR 'W'
MOVE FPFSI TO FMDL-TR-SERVICE-TYPE
ELSE
MOVE 'N' TO FMDL-TR-SERVICE-TYPE.





IF FUELUP-YES
MOVE WS-UIWA-NR2-COST-SC TO FUELUP-SC-TR-TRACTOR-COST
COMPUTE FUELUP-NEW-TRACTOR-COST =
WS-UIWA-NR2-QTY-SC * FUELUP-CASH-PRICE
END-IF.

MOVE WS-UIWA-NR2-QTY-US    TO FMDL-TR-TRACTOR-GALLONS.
MOVE WS-UIWA-NR2-PPU-US    TO FMDL-TR-TRACTOR-PPG.
MOVE WS-UIWA-NR2-COST-US   TO FMDL-TR-TRACTOR-COST.
MOVE WS-UIWA-REF-QTY-US    TO FMDL-TR-TRAILER-GALLONS.
MOVE WS-UIWA-REF-PPU-US    TO FMDL-TR-TRAILER-PPG.
MOVE WS-UIWA-REF-COST-US   TO FMDL-TR-TRAILER-COST.
MOVE WS-UIWA-OTH-QTY-US    TO FMDL-TR-OTHER-GALLONS.
MOVE WS-UIWA-OTH-PPU-US    TO FMDL-TR-OTHER-PPG.
MOVE WS-UIWA-OTH-COST-US   TO FMDL-TR-OTHER-COST.
MOVE WS-UIWA-NR1-QTY-US    TO FMDL-NR1-GALLONS.
MOVE WS-UIWA-NR1-PPU-US    TO FMDL-NR1-PPG.
MOVE WS-UIWA-NR1-COST-US   TO FMDL-NR1-COST.
MOVE WS-UIWA-CASH-AMT-US   TO FMDL-TR-CASH-ADVANCE-AMOUNT.
MOVE WS-UIWA-OIL-QTY-US    TO FMDL-TR-OIL-QUARTS.
MOVE WS-UIWA-OIL-COST-US   TO FMDL-TR-OIL-COST.
MOVE WS-UIWA-PR1-CODE      TO FMDL-TR-PRODUCT-CODE-1.
MOVE WS-UIWA-PR2-CODE      TO FMDL-TR-PRODUCT-CODE-2.
MOVE WS-UIWA-PR3-CODE      TO FMDL-TR-PRODUCT-CODE-3.
MOVE WS-UIWA-PR1-COST-US   TO FMDL-TR-PRODUCT-AMOUNT-1.
MOVE WS-UIWA-PR2-COST-US   TO FMDL-TR-PRODUCT-AMOUNT-2.
MOVE WS-UIWA-PR3-COST-US   TO FMDL-TR-PRODUCT-AMOUNT-3.
MOVE WS-UIWA-TAX-AMT-US    TO FMDL-CN-TAX-AMT-US
MOVE WS-UIWA-TAX-AMT-SC    TO FMDL-CN-TAX-AMT-CN
MOVE WS-UIWA-TAX-AMT-ORIG  TO FMDL-CN-TAX-AMT-ORIG-SC

MOVE WS-UIWA-NR2-QTY      TO FMDL-BC-TR-TRACTOR-GALLONS.
MOVE WS-UIWA-NR2-PPU      TO FMDL-BC-TR-TRACTOR-PPG.
MOVE WS-UIWA-NR2-COST     TO FMDL-BC-TR-TRACTOR-COST.
MOVE WS-UIWA-REF-QTY      TO FMDL-BC-TR-TRAILER-GALLONS.
MOVE WS-UIWA-REF-PPU      TO FMDL-BC-TR-TRAILER-PPG.
MOVE WS-UIWA-REF-COST     TO FMDL-BC-TR-TRAILER-COST.
MOVE WS-UIWA-OTH-QTY      TO FMDL-BC-TR-OTHER-GALLONS.
MOVE WS-UIWA-OTH-PPU      TO FMDL-BC-TR-OTHER-PPG.
MOVE WS-UIWA-OTH-COST     TO FMDL-BC-TR-OTHER-COST.
MOVE WS-UIWA-NR1-QTY      TO FMDL-BC-NR1-GALLONS.
MOVE WS-UIWA-NR1-COST     TO FMDL-BC-NR1-COST.
MOVE WS-UIWA-CASH-AMT     TO FMDL-BC-TR-CASH-ADVANCE-AMOUNT.
MOVE WS-UIWA-OIL-QTY      TO FMDL-BC-TR-OIL-QUARTS.
MOVE WS-UIWA-OIL-COST     TO FMDL-BC-TR-OIL-COST.
MOVE WS-UIWA-PR1-COST     TO FMDL-BC-TR-PRODUCT-AMOUNT-1.
MOVE WS-UIWA-PR2-COST     TO FMDL-BC-TR-PRODUCT-AMOUNT-2.
MOVE WS-UIWA-PR3-COST     TO FMDL-BC-TR-PRODUCT-AMOUNT-3.
IF COM-ACCOUNT-CURR-TYPE  NOT = 'M' AND
COM-US-COMP-CN-SC
MOVE WS-UIWA-TAX-AMT-US    TO FMDL-BC-TAX-AMT
ELSE
MOVE WS-UIWA-TAX-AMT-SC   TO FMDL-BC-TAX-AMT.

MOVE WS-UIWA-NR2-QTY-SC    TO FMDL-SC-TR-TRACTOR-GALLONS.
MOVE WS-UIWA-NR2-PPU-SC    TO FMDL-SC-TR-TRACTOR-PPG.
MOVE WS-UIWA-NR2-COST-SC   TO FMDL-SC-TR-TRACTOR-COST.
MOVE WS-UIWA-REF-QTY-SC    TO FMDL-SC-TR-TRAILER-GALLONS.
MOVE WS-UIWA-REF-PPU-SC    TO FMDL-SC-TR-TRAILER-PPG.
MOVE WS-UIWA-REF-COST-SC   TO FMDL-SC-TR-TRAILER-COST.
MOVE WS-UIWA-OTH-QTY-SC    TO FMDL-SC-TR-OTHER-GALLONS.
MOVE WS-UIWA-OTH-PPU-SC    TO FMDL-SC-TR-OTHER-PPG.
MOVE WS-UIWA-OTH-COST-SC   TO FMDL-SC-TR-OTHER-COST.
MOVE WS-UIWA-NR1-QTY-SC    TO FMDL-SC-NR1-GALLONS.
MOVE WS-UIWA-NR1-COST-SC   TO FMDL-SC-NR1-COST.
MOVE WS-UIWA-CASH-AMT-SC   TO FMDL-SC-TR-CASH-ADVANCE-AMOUNT.
MOVE WS-UIWA-OIL-QTY-SC    TO FMDL-SC-TR-OIL-QUARTS.
MOVE WS-UIWA-OIL-COST-SC   TO FMDL-SC-TR-OIL-COST.
MOVE WS-UIWA-PR1-COST-SC   TO FMDL-SC-TR-PRODUCT-AMOUNT-1.
MOVE WS-UIWA-PR2-COST-SC   TO FMDL-SC-TR-PRODUCT-AMOUNT-2.
MOVE WS-UIWA-PR3-COST-SC   TO FMDL-SC-TR-PRODUCT-AMOUNT-3.
MOVE WS-UIWA-TAX-AMT-SC    TO FMDL-SC-TAX-AMT.

IF FUELUP-YES
MOVE FUELUP-CASH-PRICE       TO FMDL-TR-TRACTOR-PPG
FMDL-BC-TR-TRACTOR-PPG
FMDL-SC-TR-TRACTOR-PPG
MOVE FUELUP-NEW-TRACTOR-COST TO FMDL-TR-TRACTOR-COST
FMDL-BC-TR-TRACTOR-COST
FMDL-SC-TR-TRACTOR-COST
SUBTRACT FUELUP-NEW-TRACTOR-COST
FROM FUELUP-SC-TR-TRACTOR-COST
GIVING FMDL-FUEL-UP-AMOUNT
ELSE
MOVE ZEROS TO FMDL-FUEL-UP-AMOUNT
END-IF.













MOVE 'N' TO FMDL-COMDATA-COMPLETE-TYPE.
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE CDN-COMDATA-COMPLETE-FLAG
TO FMDL-COMDATA-COMPLETE-TYPE.
MOVE COM-COMDATA-COMPLETE-STATUS
TO FMDL-COMDATA-COMPLETE-STATUS.
IF (THIS-BE-AN-UNATTENDED-AUTH AND
NOT THIS-BE-A-PETRO-RECEIVABLE)
OR FORCE-POST-FROM-PRE-AUTH
MOVE 'Y' TO FMDL-AUTO-GAS-FLAG
ELSE
MOVE 'N' TO FMDL-AUTO-GAS-FLAG.

MOVE WS-HLD-CAR-TAX-ID      TO FMDL-CANADIAN-TAX-ID.

IF SCSR-TAX-APPLICATION = '1'
MOVE 'Y' TO FMDL-TAX-PAID-FLAG
ELSE
IF SCSR-TAX-APPLICATION = '2'
MOVE 'N' TO FMDL-TAX-PAID-FLAG.
IF (SCSR-TAX-EITHER) AND (COM-SCM-TAX-IN-POSTED)
IF WS-TAX-TRIED = 'Y'
MOVE 'N'         TO FMDL-TAX-PAID-FLAG
ELSE
MOVE 'Y'         TO FMDL-TAX-PAID-FLAG.
IF (SCSR-TAX-EITHER AND COM-SCM-TAX-NOT-IN-POSTED)
IF WS-TAX-TRIED = 'Y'
MOVE 'Y'         TO FMDL-TAX-PAID-FLAG
ELSE
MOVE 'N'         TO FMDL-TAX-PAID-FLAG.

MOVE ZEROS TO FMDL-DT-COMCHEK-CARD-NUMBER.
IF COM-PREMIER-CARD NOT NUMERIC
MOVE ZEROES TO COM-PREMIER-CARD.
IF TSXCO0LM-SECONDARY-CARD-YES
MOVE TSXCO0LM-PRIMARY-CARD-NR TO
FMDL-DT-COMCHEK-CARD-NUMBER
MOVE TSXCO0LM-PRIMARY-EMPL-NR TO
FMDL-DT-EMPLOYEE-NUMBER
MOVE COM-PREMIER-CARD         TO
FMDL-SECONDARY-CARD-NR
ELSE
MOVE COM-PREMIER-CARD TO FMDL-DT-COMCHEK-CARD-NUMBER
MOVE COM-EMPL-NR      TO FMDL-DT-EMPLOYEE-NUMBER
MOVE ZEROES           TO FMDL-SECONDARY-CARD-NR
END-IF.
MOVE WS-ID-NR-NUM TO FMDL-DT-FPMSTR-CARD-NUMBER.


MOVE WS-UIWA-DRV-NAME TO FMDL-DT-DRIVER-NAME.
MOVE PRM-NAME     TO FMDL-CARD-DRIVER-NAME.
MOVE COM-DL-NR    TO FMDL-DT-DRIVER-LIC-NUMBER.
MOVE COM-DL-STATE TO FMDL-DT-DRIVER-LIC-STATE.


IF CSR-DRIVER-NR-VEHICLE
MOVE COM-EMPL-NR TO FP1DNRI,
WS-UIWA-EMPLOYEE-NR
PERFORM VALIDATE-VEHICLE-CARD
MOVE SPACES TO FMDL-DT-DRIVER-NAME
STRING DRVR-LAST-NM  DELIMITED BY '  ',
', '          DELIMITED BY SIZE,
DRVR-FIRST-NM DELIMITED BY '  ',
INTO FMDL-DT-DRIVER-NAME
MOVE DRVR-LIC-NBR  TO FMDL-DT-DRIVER-LIC-NUMBER
COM-DL-NR
MOVE DRVR-STATE-CD TO FMDL-DT-DRIVER-LIC-STATE
COM-DL-STATE
MOVE DRVR-LAST-NM  TO FMDL-CARD-DRIVER-NAME-LAST
MOVE DRVR-FIRST-NM TO FMDL-CARD-DRIVER-NAME-FIRST
END-IF.

MOVE COM-UNIT-NR          TO FMDL-DT-UNIT-NUMBER.
MOVE COM-UNIT-NR-EXPANDED TO FMDL-DT-UNIT-NUMBER-EXPANDED.
MOVE COM-UNIT-NR-EXPANDED (1:4)
TO FMDL-DT-UNIT-NUMBER-TEMP.

COMPUTE WS-TRANS-GALLONS =
FMDL-BC-TR-TRACTOR-GALLONS +
FMDL-BC-TR-OTHER-GALLONS   +
FMDL-BC-NR1-GALLONS
END-COMPUTE

IF WS-LARGE-TRANS-SPLITS
AND WS-LTI-SUB1 > 0
AND (WS-UIWA-HUB > 0 OR WS-LTIH-HUB > 0)
PERFORM 21082-SPLIT-HUB-READING
END-IF

IF (COM-FP-CO-CODE = '00109' OR '00115' OR '00238') OR
(WS-FP-ACCT-CODE = 'TR440' OR 'TR355' OR
'SC071' OR 'LE041')
MOVE FPHUBI TO FMDL-DT-SPECIAL-UNIT-NUMBER
MOVE ZEROS  TO FMDL-DT-CURR-HUB-READING
ELSE
IF (TRACTOR-PURCHASE = 1) OR
(PRODUCT-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'P')
OR
(TRAILER-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'R')
OR
(EIBTRNID = 'FMMP'    AND
((FMDL-TR-TRAILER-GALLONS > 0) OR
(FMDL-TR-TRAILER-PPG > 0)     OR
(FMDL-TR-TRAILER-COST > 0)))
MOVE WS-UIWA-HUB   TO FMDL-DT-CURR-HUB-READING
MOVE WS-UIWA-HUB   TO FMDL-DT-CURR-HUB-READING
ELSE
MOVE ZEROES        TO FMDL-DT-CURR-HUB-READING.
MOVE UNITMST-LAST-HUB    TO FMDL-DT-PREV-HUB-READING
MOVE ZEROS               TO FMDL-DT-YTD-MPG
FMDL-DT-CURRENT-MPG


IF (FMDL-DT-CURR-HUB-READING   > 0) AND
(UNITMST-STARTING-HUB       > 0) AND
(TRACTOR-PURCHASE           = 1) AND
(UNITMST-PTD-NR-GALS        +
UNITMST-CURR-DAY-NR-GALS   +
UNITMST-PREV-DAY-NR-GALS   +
WS-TRANS-GALLONS           > 0)
IF FMDL-DT-CURR-HUB-READING > UNITMST-STARTING-HUB
COMPUTE FMDL-DT-YTD-MPG =
(FMDL-DT-CURR-HUB-READING   -
UNITMST-STARTING-HUB)      /
(UNITMST-PTD-NR-GALS        +
UNITMST-CURR-DAY-NR-GALS   +
UNITMST-PREV-DAY-NR-GALS   +
WS-TRANS-GALLONS)
ELSE
COMPUTE FMDL-DT-YTD-MPG =
((FMDL-DT-CURR-HUB-READING   -
UNITMST-STARTING-HUB)      + 1000000) /
(UNITMST-PTD-NR-GALS         +
UNITMST-CURR-DAY-NR-GALS    +
UNITMST-PREV-DAY-NR-GALS    +
WS-TRANS-GALLONS).
IF (FMDL-DT-CURR-HUB-READING                  > 0) AND
(WS-TRANS-GALLONS                          > 0) AND
(UNITMST-LAST-HUB                          > 0)
IF FMDL-DT-CURR-HUB-READING > UNITMST-LAST-HUB
COMPUTE FMDL-DT-CURRENT-MPG             =
(FMDL-DT-CURR-HUB-READING       -
UNITMST-LAST-HUB)              /
WS-TRANS-GALLONS
ELSE
COMPUTE FMDL-DT-CURRENT-MPG             =
((FMDL-DT-CURR-HUB-READING      -
UNITMST-LAST-HUB) + 1000000) /
WS-TRANS-GALLONS.

MOVE WS-UIWA-TRIP-NR TO FMDL-DT-TRIP-NUMBER.
MOVE WS-UIWA-TRAILER-NR TO FMDL-DT-TRAILER-NUMBER.
IF WS-UIWA-PO-NR = '$TERM$'
MOVE SPACES           TO FMDL-DT-PURCH-ORDER-NUMBER
ELSE
MOVE WS-UIWA-PO-NR    TO FMDL-DT-PURCH-ORDER-NUMBER.
MOVE WS-UIWA-TRAILER-HUB TO FMDL-DT-TRAILER-HUB.
MOVE WS-UIWA-TRAILER-HRS TO FMDL-TRAILER-HOURS.
MOVE WS-PREV-HOURS       TO FMDL-TRAILER-HOURS-PREV.
MOVE WS-REEFER-HPG       TO FMDL-TRAILER-HR-PER-GAL.
PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
MOVE 'Y' TO FMDL-DT-EXPRESS-CASH-FLAG
ELSE
MOVE 'N' TO FMDL-DT-EXPRESS-CASH-FLAG.
MOVE ZEROS TO FMDL-TF-TRACTOR-FUEL,
FMDL-TF-TRAILER-FUEL,
FMDL-TF-OTHER-FUEL,
FMDL-TF-CASH,
FMDL-TF-OIL,
FMDL-TF-PRODUCT-1,
FMDL-TF-PRODUCT-2,
FMDL-TF-PRODUCT-3.
IF TRACTOR-PURCHASE = 1
EVALUATE TRUE
WHEN COM-DIRECT-BILLING-FUEL = '1'
MOVE +1 TO FMDL-TF-TRACTOR-FUEL
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-TRACTOR-FUEL
WHEN OTHER
MOVE +2 TO FMDL-TF-TRACTOR-FUEL
END-EVALUATE.
IF TRAILER-PURCHASE = 1
EVALUATE TRUE
WHEN COM-DIRECT-BILLING-FUEL = '1'
MOVE +1 TO FMDL-TF-TRAILER-FUEL
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-TRAILER-FUEL
WHEN OTHER
MOVE +2 TO FMDL-TF-TRAILER-FUEL
END-EVALUATE.
IF WS-UIWA-OTH-QTY > 0
EVALUATE TRUE
WHEN COM-DIRECT-BILLING-FUEL = '1'
MOVE +1 TO FMDL-TF-OTHER-FUEL
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-OTHER-FUEL
WHEN OTHER
MOVE +2 TO FMDL-TF-OTHER-FUEL
END-EVALUATE.
IF OIL-PURCHASE = 1
EVALUATE TRUE
WHEN COM-DIRECT-BILLING-OIL  = '1'
MOVE +1 TO FMDL-TF-OIL
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-OIL
WHEN OTHER
MOVE +2 TO FMDL-TF-OIL
END-EVALUATE.
IF WS-UIWA-CASH-AMT > 0
EVALUATE TRUE
WHEN COM-DIRECT-BILLING-CASH = '1'
MOVE +1 TO FMDL-TF-CASH
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-CASH
WHEN OTHER
MOVE +2 TO FMDL-TF-CASH
END-EVALUATE.
IF THIS-BE-AN-ATM-XTN
MOVE +2 TO FMDL-TF-CASH.
IF WS-UIWA-PR1-COST > ZEROES
EVALUATE TRUE
WHEN INP-PROD-BILL-1 = 'D'
MOVE +1 TO FMDL-TF-PRODUCT-1
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-PRODUCT-1
WHEN OTHER
MOVE +2 TO FMDL-TF-PRODUCT-1
END-EVALUATE.
IF WS-UIWA-PR2-COST > ZEROES
EVALUATE TRUE
WHEN INP-PROD-BILL-2 = 'D'
MOVE +1 TO FMDL-TF-PRODUCT-2
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-PRODUCT-2
WHEN OTHER
MOVE +2 TO FMDL-TF-PRODUCT-2
END-EVALUATE.
IF WS-UIWA-PR3-COST > ZEROES
EVALUATE TRUE
WHEN INP-PROD-BILL-3 = 'D'
MOVE +1 TO FMDL-TF-PRODUCT-3
WHEN THIS-BE-TERMINAL-FUEL
MOVE +3 TO FMDL-TF-PRODUCT-3
WHEN OTHER
MOVE +2 TO FMDL-TF-PRODUCT-3
END-EVALUATE.

MOVE WS-FUEL-RATE3    TO FMDL-RD-FUEL-RATE.
MOVE WS-ADVANCE-RATE3 TO FMDL-RD-CASH-ADVANCE-RATE.
MOVE WS-FUEL-RATE     TO FMDL-BC-RD-FUEL-RATE.
MOVE WS-ADVANCE-RATE  TO FMDL-BC-RD-CASH-ADVANCE-RATE.
MOVE WS-FUEL-RATE2    TO FMDL-SC-RD-FUEL-RATE.
MOVE WS-ADVANCE-RATE2 TO FMDL-SC-RD-CASH-ADVANCE-RATE.

MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
IF WS-CONVERT-CURR-TYPE = 'B' OR
COM-COMP-SC-CURR-SAME
MOVE WS-CDN-ALL-HANDLING-ADD-ON     TO WS-CONVERT-AMOUNT
ELSE

MOVE WS-CDN-ALL-HANDLING-ADD-ON-AC  TO WS-CONVERT-AMOUNT
END-IF.
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1 TO FMDL-BC-RD-COMP-HANDLING-CHG.
MOVE WS-CONVERT-AMOUNT2 TO FMDL-SC-RD-COMP-HANDLING-CHG.
MOVE WS-CONVERT-AMOUNT3 TO FMDL-RD-COMP-HANDLING-CHG.

COMPUTE WS-TOTAL-GALLONS = FMDL-TR-TRACTOR-GALLONS +
FMDL-TR-TRAILER-GALLONS +
FMDL-TR-OTHER-GALLONS   +
FMDL-NR1-GALLONS.
COMPUTE WS-TOTAL-FACE    = FMDL-TR-TRACTOR-COST     +
FMDL-TR-TRAILER-COST     +
FMDL-TR-OTHER-COST       +
FMDL-NR1-COST            +
FMDL-TR-OIL-COST         +
FMDL-TR-PRODUCT-AMOUNT-1 +
FMDL-TR-PRODUCT-AMOUNT-2 +
FMDL-TR-PRODUCT-AMOUNT-3.
COMPUTE WS-TOTAL-OTHER   = FMDL-TR-OIL-COST +
FMDL-TR-PRODUCT-AMOUNT-1 +
FMDL-TR-PRODUCT-AMOUNT-2 +
FMDL-TR-PRODUCT-AMOUNT-3.


IF (FMDL-TF-TRACTOR-FUEL = +1 OR +4) OR
(FMDL-TF-TRAILER-FUEL = +1 OR +4) OR
(FMDL-TF-OTHER-FUEL   = +1 OR +4) OR
(FMDL-TF-CASH         = +1 OR +4) OR
(FMDL-TF-OIL          = +1 OR +4) OR
(FMDL-TF-PRODUCT-1    = +1 OR +4) OR
(FMDL-TF-PRODUCT-2    = +1 OR +4) OR
(FMDL-TF-PRODUCT-3    = +1 OR +4)
IF NOT FMDL-PAID-AT-LOAD
MOVE 'D' TO WS-SETTLE-DIRECT-BILL-FLAG
END-IF.

MOVE 'N' TO FMDL-POS-FLAG.
IF THIS-IS-A-POS-TRANS
MOVE 'Y' TO FMDL-POS-FLAG
MOVE WS-UIWA-DEVICE-TYPE TO FMDL-POS-DEVICE-TYPE.


IF THIS-BE-A-NATS-AUTH
MOVE WS-UIWA-NATS-POS-FLAG      TO FMDL-POS-FLAG
MOVE WS-UIWA-NATS-PRE-AUTH-DATE TO FMDL-NATS-PRE-AUTH-DATE
MOVE WS-UIWA-NATS-PRE-AUTH-SEQ  TO
FMDL-NATS-PRE-AUTH-SEQ-NR
IF WS-UIWA-NATS-FEE NOT NUMERIC
MOVE ZEROS                  TO WS-UIWA-NATS-FEE
END-IF
MOVE WS-UIWA-NATS-FEE           TO FMDL-NATS-FEE
IF WS-UIWA-NATS-AUTH-NR NOT NUMERIC
MOVE ZEROS                  TO WS-UIWA-NATS-AUTH-NR
END-IF
MOVE WS-UIWA-NATS-AUTH-NR       TO FMDL-NATS-NATS-AUTH-NR
END-IF.

IF THIS-IS-A-SETTLEMENT-ITEM OR
WS-MANUAL-FEE > ZEROES
MOVE 'Y'               TO FMDL-SETTLED-XTN-FLAG
MOVE WS-SETTLE-TS-CODE TO FMDL-SETTLEMENT-SC-CODE
ELSE
MOVE 'N' TO FMDL-SETTLED-XTN-FLAG.

IF CDN-DEDUCT-CHARGE-FLAG = 'Y'
MOVE 'L' TO FMDL-PC-EXP-CASH-CHRG-FLAG
ELSE
MOVE ' ' TO FMDL-PC-EXP-CASH-CHRG-FLAG.


MOVE ZEROES            TO FMDL-PC-PURCH-1-AMT-USED
FMDL-PC-CASH-1-AMT-USED.

MOVE SCM-PREMIER-LEVEL TO FMDL-PREMIER-LEVEL.
MOVE WS-PERCENTAGES    TO FMDL-PERCENTAGES.

MOVE ZEROS TO FMDL-GOLD-DISCOUNT.
IF WS-WORK-TOTAL-AR NUMERIC
MOVE WS-WORK-TOTAL-AR TO FMDL-TOTAL-SC-AR.
MOVE 'P'              TO FMDL-PREMIER-FLAG.
MOVE WS-FUEL-RATE3    TO FMDL-FUEL-RATE.
MOVE WS-ADVANCE-RATE3 TO FMDL-ADVANCE-RATE.
MOVE INP-CO-SMLNAME   TO FMDL-ACCT-SMALL-NAME.
MOVE ZEROS            TO FMDL-CHECK-NUMBER.
MOVE WS-FL-TRIP-FLAG TO FMDL-TRIP-FLAG.
MOVE 'P'             TO FMDL-FP-GOLD-FLAG.
IF FMDL-TF-TRAILER-FUEL > 0
MOVE 'R' TO FMDL-REFER-FLAG.
MOVE 'US014' TO FMDL-TS-ACCOUNT-CODE.

IF HUB-READING-REQUIRED
MOVE 'H'                    TO FMDL-HUB-FLAG
END-IF.
MOVE UNITMST-CO-DISPLAY-TYPE   TO FMDL-CO-DISPLAY-TYPE.
MOVE WS-FL-DRIVER-NAME-FLAG    TO FMDL-CO-DRIVER-FLAG.
IF OPC-ACCESS-CONTROL-BYTE > SPACES
MOVE OPC-ACCESS-CONTROL-BYTE TO FMDL-OPAC-CTRL-BYTE.

MOVE SPACES TO FMDL-BRIDGE-FIELDS.
MOVE 'N'    TO FMDL-BR-TRANSACTION-FLAG,
FMDL-BR-LIMIT-FLAG,
FMDL-BULK-FUEL-FLAG.
MOVE ZEROES TO FMDL-BR-SRVC-CNTR-FEE,
FMDL-BR-CUSTOMER-FEE,
FMDL-BR-CASH-ADD-FEE,
FMDL-BR-VOICE-SURCHG-FEE.
IF COM-PNET-BRIDGE-FLAG-YES
MOVE 'Y' TO FMDL-BR-TRANSACTION-FLAG.

PERFORM 2108X-BFR-CUSTOM-FEE

IF COM-PNET-BULK-FUEL-YES
MOVE 'Y' TO FMDL-BULK-FUEL-FLAG.

PERFORM 2108X-BFR-MANUAL-ADD-ON.

MOVE CDN-TERM-FUEL-OVR-FLAG TO FMDL-TERM-FUEL-OVR-FLAG.

PERFORM 2108X-CHECK-PAY-AT-LOAD

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
AND CDN-EXPRESS-CASH-YES
AND CDN-MONEY-INVOICE-NO-FUEL-BILL
MOVE 'N' TO FMDL-BILLING-FLAG
ELSE
MOVE 'Y' TO FMDL-BILLING-FLAG.




MOVE COM-COUNTRY-FLAG      TO FMDL-TRANSACTION-COUNTRY-FLAG.
MOVE COM-ACCOUNT-CURR-TYPE TO FMDL-CURRENCY-FLAG.
MOVE ZEROES                TO FMDL-CANADIAN-CONVERSION-RATE
FMDL-CONVERSION-GET-BACK-RATE.
IF COM-CN-COMP-US-SC
MOVE US-TO-CAN-RATE TO FMDL-CANADIAN-CONVERSION-RATE
MOVE CAN-TO-US-RATE TO FMDL-CONVERSION-GET-BACK-RATE.
IF COM-US-COMP-CN-SC
MOVE CAN-TO-US-RATE TO FMDL-CANADIAN-CONVERSION-RATE
MOVE US-TO-CAN-RATE TO FMDL-CONVERSION-GET-BACK-RATE.
IF COM-BATCH-PROCESS-DATE NOT NUMERIC
MOVE ZEROES TO COM-BATCH-PROCESS-DATE.
MOVE COM-BATCH-PROCESS-DATE TO FMDL-BATCH-PROCESSING-DATE.

IF COM-BATCH-FUELING-TIME NOT NUMERIC
MOVE ZEROES TO COM-BATCH-FUELING-TIME.
MOVE COM-BATCH-FUELING-TIME TO FMDL-BATCH-PROCESSING-TIME.

IF COM-ADJ-ORIG-DATE NOT NUMERIC
MOVE ZEROES TO COM-ADJ-ORIG-DATE.
IF COM-ADJ-ORIG-XTN-NR NOT NUMERIC
MOVE ZEROES TO COM-ADJ-ORIG-XTN-NR.

MOVE COM-ADJ-ORIG-DATE      TO FMDL-ADJ-DATE.
MOVE COM-ADJ-ORIG-XTN-NR    TO FMDL-ADJ-CONTROL-NR.

MOVE ZEROS TO FMDL-MINIMUM-FEE FMDL-GALLON-UP-FEE

IF WS-LARGE-TRANS-SPLITS
AND WS-LTI-SUB1 > 1
NEXT SENTENCE
ELSE
IF WS-MIN-FUEL-FEE-DIFF > ZERO
MOVE WS-MIN-FUEL-FEE-DIFF TO FMDL-MINIMUM-FEE
END-IF
IF WS-GALUP-FUEL-FEE > ZERO
MOVE WS-GALUP-FUEL-FEE TO FMDL-GALLON-UP-FEE
END-IF
END-IF.

PERFORM 2108X-LOG-DISCOUNT-INFO.

MOVE 'N'                   TO FMDL-GD-FLAG
MOVE WS-COST-PLUS-USED     TO FMDL-COST-PLUS-USED
IF THIS-IS-A-SETTLEMENT-ITEM OR
WS-MANUAL-FEE         > ZEROES
MOVE 'S' TO FMDL-SETTLEMENT-TYPE-FLAG
IF SCM-SETTLE-LOC-STATUS = 'Y' OR
WS-MANUAL-FEE         > ZEROES
MOVE 'F' TO FMDL-SETTLEMENT-TYPE-FLAG.

MOVE EIBTRMID                 TO FMDL-TERMID
MOVE WS-OPERID                TO FMDL-OPID
MOVE COM-COMFUEL-FLAG         TO FMDL-COMFUEL-FLAG.
IF THIS-BE-AN-UNATTENDED-XTN
MOVE WS-UIWA-REQUEST-FLAG  TO FMDL-UNATTENDED-XTN-FLAG.
MOVE COM-FUEL-PRICE-FLAG      TO FMDL-FUEL-PRICE-FLAG.


MOVE COM-PREFERRED-FLAG TO FMDL-PREFERRED-LEVEL-FLAG
IF NOT FMDL-TRANS-IS-PREFERRED
MOVE 'N' TO FMDL-PREFERRED-LEVEL-FLAG
END-IF

IF THIS-BE-AN-UNATTENDED-AUTH
OR THIS-BE-AN-ATM-XTN
OR FORCE-POST-FROM-PRE-AUTH
MOVE WS-HOLD-POS-ERROR-NUMBER TO FMDL-AUTO-GAS-ERROR-NR
END-IF.

IF THIS-BE-AN-ATM-XTN
MOVE 'ATM -'               TO FMDL-SC-NAME
MOVE TSXCO0AT-BANK-NAME    TO FMDL-SC-NAME (5:)
MOVE TSXCO0AT-TERMINAL-LOC TO FMDL-SC-CITY
MOVE TSXCO0AT-STATE        TO FMDL-SC-STATE
EVALUATE TRUE
WHEN TSXCO0AT-TRAN-TYPE-INQUIRY
WHEN TSXCO0AT-TRAN-TYPE-ASI
SET FMDL-ATM-TRANSACTION-INQUIRE  TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW
SET FMDL-ATM-TRANSACTION-WITHDRAW TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-PURCHASE
SET FMDL-ATM-TRANSACTION-PURCHASE TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-SAV-CRED
WHEN TSXCO0AT-TRAN-TYPE-P-SAV-CR
SET FMDL-ATM-TRANSACTION-WITHDRAW TO TRUE
END-EVALUATE
PERFORM 21081-ATM-MAESTRO-RESP-CODE
END-IF.


MOVE COM-RMF-FLAG               TO FMDL-RMF-FLAG.
IF COM-RMF-FLAG = 'Y'
MOVE COM-RMF-PPG             TO FMDL-RMF-CONTRACT-PPG
MOVE COM-RMF-FMRELAT-KEY (4:10) TO FMDL-RMF-CONTRACT-NR
MOVE CDN-RMF-CURR-VOL-COMM   TO FMDL-RMF-MO-VOL-COMMIT
COMPUTE FMDL-RMF-MO-VOL-USAGE = CDN-RMF-CURR-VOL-ACT
+ FMDL-TR-TRACTOR-GALLONS
+ FMDL-TR-OTHER-GALLONS
+ FMDL-NR1-GALLONS
END-COMPUTE
END-IF.


MOVE SPACES TO FMDL-NETW-BY-CARD-KEY.
IF COM-NETWORK-BY-CARD = 'Y' AND

COM-NBC-KEY (17:10) NOT = 'DEFAULT'
MOVE COM-NBC-KEY TO FMDL-NETW-BY-CARD-KEY.


MOVE CDN-CREDIT-PRICED-FLAG  TO FMDL-CO-CREDIT-FL.
MOVE CDN-TEXACO-FLAG         TO FMDL-CO-TEXACO-CO-BRAND-FL.
MOVE SCM-CREDIT-PROGRAM-FLAG TO FMDL-SC-CREDIT-FL.
MOVE SCM-TEXACO-FLAG         TO FMDL-SC-TEXACO-FL.
MOVE ' '                     TO FMDL-TEXACO-CREDIT-XTN-FL.
EVALUATE TRUE
WHEN CDN-CREDIT-PRICED-TEXACO
EVALUATE TRUE
WHEN SCM-CREDIT-PROGRAM-TEXACO
MOVE 'A'            TO FMDL-TEXACO-CREDIT-XTN-FL
WHEN SCM-CREDIT-PROGRAM-NORMAL
MOVE 'B'            TO FMDL-TEXACO-CREDIT-XTN-FL
END-EVALUATE
WHEN CDN-CREDIT-PRICED-GENERIC
WHEN CDN-CREDIT-PRICED-FUELUP
MOVE 'G'                  TO FMDL-TEXACO-CREDIT-XTN-FL
WHEN OTHER
IF CDN-TEXACO-CO-BRANDED
EVALUATE TRUE
WHEN SCM-TEXACO-NORMAL
MOVE 'C'         TO FMDL-TEXACO-CREDIT-XTN-FL
WHEN SCM-TEXACO-PLUS
MOVE 'D'         TO FMDL-TEXACO-CREDIT-XTN-FL
END-EVALUATE
END-IF
END-EVALUATE.


MOVE 'N' TO FMDL-PASSAGE-PLUS-FLAG.
IF COM-FOCUS-CPG-REBATE > +0 OR
COM-FOCUS-POF-REBATE > +0 OR
COM-FOCUS-FLT-REBATE > +0 OR
COM-DISCOUNT-METHOD  = 'R'
MOVE COM-PASSAGE-PLUS-FLAG TO FMDL-PASSAGE-PLUS-FLAG.

MOVE WS-SAVE-POS-SUB-ID       TO FMDL-SC-SUB-ID.
MOVE WS-SAVE-COM-SITE-ACCT    TO FMDL-COM-SITE-ACCT.
MOVE CDN-PRIVATE-LABEL        TO FMDL-PRIVATE-LABEL.


IF COM-ACCOUNT-CURR-TYPE = 'B'
MOVE WS-RETAIL-PPG-NR2        TO FMDL-RETAIL-PPG-NR2
MOVE WS-RETAIL-PPG-NR1        TO FMDL-RETAIL-PPG-NR1
MOVE WS-RETAIL-PPG-TRAILER    TO FMDL-RETAIL-PPG-TRAILER
ELSE
MOVE WS2-RETAIL-PPG-NR2       TO FMDL-RETAIL-PPG-NR2
MOVE WS2-RETAIL-PPG-NR1       TO FMDL-RETAIL-PPG-NR1
MOVE WS2-RETAIL-PPG-TRAILER   TO FMDL-RETAIL-PPG-TRAILER
END-IF.

IF FUELUP-YES
MOVE FMDL-SC-TR-TRACTOR-PPG   TO FMDL-RETAIL-PPG-NR2
END-IF.

IF THIS-BE-A-FLEET-XTN
MOVE 'Y'                      TO FMDL-FLEET-CARD-XTN
EVALUATE WS-UIWA-FLEET-PROD
WHEN 30000
MOVE 'FLTP'             TO FMDL-FLEET-MCC
WHEN 10000
MOVE 'CDNP'             TO FMDL-FLEET-MCC
WHEN OTHER
MOVE WS-UIWA-FLEET-PROD (2:) TO FMDL-FLEET-MCC
END-EVALUATE
END-IF.
MOVE WS-OFF-HOURS-WARNING-FLAG   TO FMDL-OFF-HOURS-WARNING
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
EVALUATE CSR-VIN-FLAG
WHEN 'C'
MOVE PIR-VIN          TO FMDL-CI-VIN
WHEN 'U'
MOVE UNITMST-VIN      TO FMDL-CI-VIN
END-EVALUATE
EVALUATE CSR-VEHICLE-DESC-FLAG
WHEN 'C'
MOVE PIR-VEHICLE-DESC      TO FMDL-CI-VEHICLE-DESC
WHEN 'U'
MOVE UNITMST-VEHICLE-DESC TO FMDL-CI-VEHICLE-DESC
END-EVALUATE
EVALUATE CSR-PLATE-FLAG
WHEN 'C'
MOVE PIR-PLATE-NR          TO FMDL-CI-PLATE
WHEN 'U'
MOVE UNITMST-LICENSE-NBR   TO FMDL-CI-PLATE
END-EVALUATE
EVALUATE CSR-REG-EXP-FLAG
WHEN 'C'
IF PIR-REG-EXP-DATE NOT NUMERIC
MOVE '0000'             TO PIR-REG-EXP-DATE
END-IF
MOVE PIR-REG-EXP-DATE      TO FMDL-CI-REG-EXP
WHEN 'U'
MOVE UNITMST-EXP-DATE      TO FMDL-CI-REG-EXP
END-EVALUATE
EVALUATE CSR-MISC-NR1-FLAG
WHEN 'C'
MOVE PIR-MISC-NR1          TO FMDL-CI-MISC1
WHEN 'U'
MOVE UNITMST-MISC1         TO FMDL-CI-MISC1
END-EVALUATE
EVALUATE CSR-MISC-NR2-FLAG
WHEN 'C'
MOVE PIR-MISC-NR2          TO FMDL-CI-MISC2
WHEN 'U'
MOVE UNITMST-MISC2         TO FMDL-CI-MISC2
END-EVALUATE.

EVALUATE CSR-MISC-NR3-FLAG
WHEN 'C'
MOVE PIR-MISC-NR3          TO FMDL-CI-MISC3
WHEN 'U'
MOVE UNITMST-MISC3         TO FMDL-CI-MISC3
END-EVALUATE.

EVALUATE CSR-VEH-TANK-CAP-FLAG
WHEN 'C'
MOVE PIR-VEH-TANK-CAP      TO FMDL-VEH-TANK-CAP
WHEN 'U'
MOVE UNITMST-VEH-TANK-CAP  TO FMDL-VEH-TANK-CAP
END-EVALUATE.

IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID         TO FMDL-HIERARCHY-ID
ELSE
MOVE SPACES                   TO FMDL-HIERARCHY-ID
END-IF
IF ON-HIERARCHY
AND PIR-NODE-ID > SPACES
MOVE PIR-NODE-ID              TO FMDL-NODE-ID
ELSE
MOVE SPACES                   TO FMDL-NODE-ID
END-IF
IF WS-LARGE-TRANS-SPLITS
MOVE WS-LTIH-CONTROL-NR       TO FMDL-ST-CONTROL-NUMBER
MOVE WS-LTI-SPLIT-COUNT       TO FMDL-ST-NO-OF-RECORDS
END-IF
IF THIS-BE-A-FLEET-XTN
IF WS-UIWA-FLEET-XTN-DATE NOT NUMERIC
MOVE ZEROES                TO WS-UIWA-FLEET-XTN-DATE
END-IF
MOVE WS-UIWA-FLEET-NAME       TO FMDL-SC-NAME
MOVE WS-UIWA-FLEET-ADDR       TO FMDL-SC-ADDRESS
MOVE WS-UIWA-FLEET-CITY       TO FMDL-SC-CITY
MOVE WS-UIWA-FLEET-STATE      TO FMDL-SC-STATE
MOVE WS-UIWA-FLEET-ZIP        TO FMDL-SC-ZIP
MOVE WS-UIWA-FLEET-KEY        TO FMDL-MC-INTERCHANGE-KEY
MOVE WS-UIWA-FLEET-XTN-DATE   TO FMDL-MC-DTL-XTN-DATE
MOVE WS-UIWA-FLEET-XTN-TIME   TO FMDL-MC-DTL-XTN-TIME
END-IF.

IF PRM-LIM-NETW-BY-CARD      = 'G' AND
CDN-LIM-NETW-BY-CARD      = 'G'
MOVE PRM-SUB-NETWORK-GROUP-ID TO FMDL-SUB-NETWORK-GROUP-ID
END-IF.

IF COM-PAC-PRIDE-FLAG = 'Y'
MOVE WS-PPRIDE-TRANSFER-PPG   TO FMDL-PP-TRANSFER-PRICE
MOVE WS-SCPM-PP-PAC-MARKUP    TO FMDL-PP-MARKUP
MOVE WS-PPRIDE-MARKUP-SC      TO FMDL-PP-CDN-MARKUP
END-IF.


EVALUATE TRUE
WHEN EIBTRNID = 'FMMP'
MOVE WS-UIWA-BATCH-XTN-TYPE-FLAG TO
FMDL-BATCH-XTN-TYPE-FLAG
MOVE WS-UIWA-PROD9-DESC-1 TO FMDL-BATCH-PROD9-DESC-1
MOVE WS-UIWA-PROD9-DESC-2 TO FMDL-BATCH-PROD9-DESC-2
MOVE WS-UIWA-PROD9-DESC-3 TO FMDL-BATCH-PROD9-DESC-3
MOVE WS-UIWA-PROD9-QTY-1  TO FMDL-BATCH-PROD9-QTY-1
MOVE WS-UIWA-PROD9-QTY-2  TO FMDL-BATCH-PROD9-QTY-2
MOVE WS-UIWA-PROD9-QTY-3  TO FMDL-BATCH-PROD9-QTY-3
MOVE WS-UIWA-PROD9-PPU-1  TO FMDL-BATCH-PROD9-PPU-1
MOVE WS-UIWA-PROD9-PPU-2  TO FMDL-BATCH-PROD9-PPU-2
MOVE WS-UIWA-PROD9-PPU-3  TO FMDL-BATCH-PROD9-PPU-3
WHEN THIS-BE-A-FLEET-XTN AND
WS-AXIA-FLEET-XTN-TYPE > SPACES
MOVE WS-AXIA-FLEET-XTN-TYPE   TO
FMDL-BATCH-XTN-TYPE-FLAG
WHEN OTHER
MOVE ' '    TO FMDL-BATCH-XTN-TYPE-FLAG
MOVE SPACES TO FMDL-BATCH-PROD9-DESC-1,
FMDL-BATCH-PROD9-DESC-2,
FMDL-BATCH-PROD9-DESC-3
MOVE ZEROES TO FMDL-BATCH-PROD9-QTY-1,
FMDL-BATCH-PROD9-QTY-2,
FMDL-BATCH-PROD9-QTY-3,
FMDL-BATCH-PROD9-PPU-1,
FMDL-BATCH-PROD9-PPU-2,
FMDL-BATCH-PROD9-PPU-3,
END-EVALUATE.


EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
MOVE WS-AXIA-FORCE-POST     TO FMDL-FORCE-POSTED-FLAG
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE 'Y'                    TO FMDL-FORCE-POSTED-FLAG
WHEN OTHER
MOVE 'N'                    TO FMDL-FORCE-POSTED-FLAG
END-EVALUATE.


IF THIS-BE-A-FLEET-XTN AND
WS-AXIA-FLEET-XTN-TYPE = 'V'
IF FMLP-LA-CYC-XTN NUMERIC
AND FMLP-LA-CYC-XTN = 1
MOVE 'N'    TO FMDL-VIRTUAL-FULL-AMT-USED
IF FMLP-LA-CYC-AMT NUMERIC
AND FMLP-LA-CYC-AMT = WS-UIWA-INVOICE-AMT
MOVE 'Y' TO FMDL-VIRTUAL-FULL-AMT-USED.


IF THIS-BE-A-FLEET-XTN
MOVE WS-AXIA-AUTH-AMT-DIFF TO FMDL-FLEET-AUTH-AMT-DIFF
END-IF.


IF SCM-BUSINESS-TYPE-CODE = 'WH'
MOVE 'W' TO FMDL-TR-SERVICE-TYPE.
IF WS-UIWA-SC-CITY > SPACES
MOVE WS-UIWA-SC-CITY TO FMDL-SC-CITY.
IF WS-UIWA-SC-STATE > SPACES
MOVE WS-UIWA-SC-STATE TO FMDL-SC-STATE.
IF WS-UIWA-SC-ZIP > SPACES
MOVE WS-UIWA-SC-ZIP TO FMDL-SC-ZIP.
IF WS-UIWA-SC-NAME > SPACES
MOVE WS-UIWA-SC-NAME TO FMDL-SC-NAME.
IF WS-UIWA-SC-ADDR-1 > SPACES
MOVE WS-UIWA-SC-ADDR-1 TO FMDL-SC-ADDRESS.
IF WS-UIWA-FUELING-DATE NUMERIC AND
WS-UIWA-FUELING-DATE > ZEROES
MOVE WS-UIWA-FUELING-DATE TO FMDL-BATCH-PROCESSING-DATE.
IF WS-UIWA-FUELING-TIME NUMERIC
MOVE WS-UIWA-FUELING-TIME TO FMDL-BATCH-PROCESSING-TIME
ELSE
MOVE ZEROES              TO FMDL-BATCH-PROCESSING-TIME.
IF WS-UIWA-BASE-PPG NUMERIC
MOVE WS-UIWA-BASE-PPG TO FMDL-BASE-PPG
ELSE
MOVE ZEROES          TO FMDL-BASE-PPG.
IF WS-UIWA-DELIVERY-FEE-PPG NUMERIC
MOVE WS-UIWA-DELIVERY-FEE-PPG TO FMDL-DELIVERY-FEE-PPG
ELSE
MOVE ZEROES                   TO FMDL-DELIVERY-FEE-PPG.
IF WS-UIWA-TOTAL-TAX-PPG NUMERIC
MOVE WS-UIWA-TOTAL-TAX-PPG TO FMDL-TOTAL-TAX-PPG
ELSE
MOVE ZEROES                TO FMDL-TOTAL-TAX-PPG.

MOVE WS-UIWA-MERCH-REF-NMBR      TO FMDL-MERCH-REF-NMBR.
MOVE WS-UIWA-USFLEET-MISC-NR     TO FMDL-USFLEET-MISC-NUMBER.
MOVE WS-UIWA-PR1-TYPE            TO FMDL-PROD-9-TYPE-1.
MOVE WS-UIWA-PR2-TYPE            TO FMDL-PROD-9-TYPE-2.
MOVE WS-UIWA-PR3-TYPE            TO FMDL-PROD-9-TYPE-3.
IF WS-UIWA-OTH-COST > ZEROS
MOVE WS-UIWA-OTH-TYPE         TO FMDL-OTHER-FUEL-TYPE.
IF WS-UIWA-NR2-COST > ZEROS
MOVE WS-UIWA-NR2-SUB-PROD     TO FMDL-NR2-SUB-PROD-CODE.
IF WS-UIWA-NR1-COST > ZEROS
MOVE WS-UIWA-NR1-SUB-PROD     TO FMDL-NR1-SUB-PROD-CODE.
IF WS-UIWA-REF-COST > ZEROS
MOVE WS-UIWA-REF-SUB-PROD     TO FMDL-RFR-SUB-PROD-CODE.


MOVE CSR-FLEETCARD-PROMPTING TO FMDL-FLEETCARD-PROMPTING.
MOVE CSR-FLEETCARD-RESTRICT  TO FMDL-FLEETCARD-RESTRICT.
MOVE CSR-DRIVER-VEHICLE-FLAG TO FMDL-DRIVER-VEHICLE-FLAG.


IF CSR-MASTER-ACCT-CODE > ' '
MOVE CSR-MASTER-ACCT-CODE TO FMDL-REPORTING-LEVEL-MASTER
PERFORM VARYING WS-SUB1 FROM 1 BY 1
UNTIL WS-SUB1 > 15
IF CSR-MAC-LDT-DESC-NBR      (WS-SUB1) NOT NUMERIC
MOVE 0            TO FMDL-REPORTING-LEVEL
(WS-SUB1)
ELSE
MOVE CSR-MAC-LDT-DESC-NBR (WS-SUB1)
TO FMDL-REPORTING-LEVEL
(WS-SUB1)
END-IF
END-PERFORM
ELSE
PERFORM VARYING WS-SUB1 FROM 1 BY 1
UNTIL WS-SUB1 > 15
IF CSR-LDT-DESC-NBR          (WS-SUB1) NOT NUMERIC
MOVE 0            TO FMDL-REPORTING-LEVEL
(WS-SUB1)
ELSE
MOVE CSR-LDT-DESC-NBR     (WS-SUB1)
TO FMDL-REPORTING-LEVEL
(WS-SUB1)
END-IF
END-PERFORM
END-IF.

IF THIS-BE-AN-ATM-XTN
MOVE TSXCO0AT-TRAN-TYPE       TO FMDL-ATM-TRAN-TYPE
END-IF.
MOVE WS-FMDL-PRODUCT-FEE-INFO TO FMDL-PRODUCT-FEE-INFO.


IF  FMDL-TR-CASH-ADVANCE-AMOUNT = ZEROS
MOVE ZEROS TO WS-XBORDER-ASSMT-AMT
END-IF
IF  TSXCO0AT-XBORDER-XTN = 'Y'
COMPUTE FMDL-TR-CASH-ADVANCE-AMOUNT =
FMDL-TR-CASH-ADVANCE-AMOUNT - WS-XBORDER-ASSMT-AMT
END-COMPUTE
IF  FMDL-TR-PRODUCT-AMOUNT-1 = ZEROS
MOVE WS-XBORDER-ASSMT-AMT TO FMDL-TR-PRODUCT-AMOUNT-1
MOVE '09'                 TO FMDL-TR-PRODUCT-CODE-1
MOVE 'R14'                TO FMDL-PROD-9-TYPE-1
ELSE
MOVE WS-XBORDER-ASSMT-AMT TO FMDL-TR-PRODUCT-AMOUNT-2
MOVE '09'                 TO FMDL-TR-PRODUCT-CODE-2
MOVE 'R14'                TO FMDL-PROD-9-TYPE-2
END-IF
MOVE TSXCO0AT-XBORDER-XTN TO FMDL-XBORDER-XTN
MOVE TSXCO0AT-XBORDER-CUR TO FMDL-XBORDER-CUR
MOVE WS-XBORDER-ASSMT-AMT TO FMDL-XBORDER-ASS
MOVE ZEROS                TO FMDL-CURR-CONV-ASS
ELSE
MOVE SPACES TO FMDL-XBORDER-XTN
FMDL-XBORDER-CUR
MOVE ZEROS  TO FMDL-XBORDER-ASS
FMDL-CURR-CONV-ASS
END-IF.
EVALUATE WS-UIWA-SWIPED-KEYED
WHEN 'A'
WHEN 'S'
MOVE 'S'                TO FMDL-SWIPED-KEYED
WHEN 'R'
MOVE 'R'                TO FMDL-SWIPED-KEYED
WHEN 'E'
MOVE 'E'                TO FMDL-SWIPED-KEYED
WHEN 'M'
MOVE 'M'                TO FMDL-SWIPED-KEYED
WHEN 'C'
MOVE 'C'                TO FMDL-SWIPED-KEYED
WHEN OTHER
MOVE 'K'                TO FMDL-SWIPED-KEYED
END-EVALUATE.
IF CXXCW170-CIR-IRIS-RETURN-CODE > SPACES
MOVE CXXCW170-CIR-IRIS-RETURN-CODE
TO FMDL-IRIS-FLG
END-IF.
IF COM-NET-PRICING-USED
OR (WS-DNETPRCG-PFID-CD NOT = SPACES)
PERFORM 2108X-BFR-BUILD-DNETPRCG
ELSE
IF COM-NET-PRICING-FLAG = 'P'
MOVE 'P'                   TO FMDL-COST-PLUS-TYPE-FLAG
MOVE ' '                   TO FMDL-DISCOUNT-TYPE-FLAG
MOVE 'F'                   TO FMDL-SELECT-OR-FOCUS-DISC
END-IF
END-IF
MOVE WS-UIWA-SPLIT-TRN-IND       TO FMDL-SPLIT-TRN-IND
IF WS-UIWA-SPLIT-CNTL > ZEROS
MOVE WS-UIWA-SPLIT-CNTL       TO FMDL-ST-CONTROL-NUMBER
END-IF.
IF WS-UIWA-SPLIT-TRN-IND = '1'
MOVE FMDL-RK-CONTROL-NUMBER   TO FMDL-ST-CONTROL-NUMBER
END-IF.
IF RFID-UNIT-TRLR-NBR OF DRFIDXRF > SPACES
MOVE RFID-UNIT-TRLR-NBR OF DRFIDXRF
TO FMDL-RFID-UNIT-TRLR-NBR
END-IF
MOVE WS-UIWA-RFID-TAG-TYP        TO FMDL-RFID-TAG-TYP.



2108X-BFR-BUILD-CUST-ID.

MOVE COM-FP-CO-CODE        TO FMDL-CUST-CUSTOMER-ID.


CALL 'CXUTS200' USING
FMDL-CUST-CUSTOMER-ID,
WS-CXUTS200-AREA,
BY CONTENT LENGTH OF FMDL-CUST-CUSTOMER-ID.
MOVE WS-CXUTS200-CUST-4-OR-5
TO WS-FMDL-CUST-ID-FIXED.


2108X-BFR-CUSTOM-FEE.

IF COM-PNET-BRIDGE-FLAG-YES OR CDN-RELATIONSHIP-FLAG = 'Y'
MOVE COM-PNET-PAYMENT-CODE TO FMDL-BR-PAYMENT-CODE-FLAG
PERFORM 2108X-BFR-CUSTOM-FEE-CALC
IF COM-PNET-CHAIN-CODE > SPACES
MOVE COM-PNET-CHAIN-CODE TO FMDL-BR-CHAIN-CODE
END-IF.

IF COM-PNET-BRIDGE-FLAG = 'X'
MOVE 'Y'                TO FMDL-BR-LIMIT-FLAG
IF COM-PNET-CHAIN-CODE > SPACES
MOVE COM-PNET-CHAIN-CODE TO FMDL-BR-CHAIN-CODE.


2108X-BFR-CUSTOM-FEE-CALC.

MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
MOVE COM-PNET-CO-FEE       TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO FMDL-BC-BR-CUSTOMER-FEE
MOVE WS-CONVERT-AMOUNT2    TO FMDL-SC-BR-CUSTOMER-FEE
MOVE WS-CONVERT-AMOUNT3    TO FMDL-BR-CUSTOMER-FEE.

MOVE COM-PNET-CASH-ADD-ON  TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO FMDL-BC-BR-CASH-ADD-FEE
MOVE WS-CONVERT-AMOUNT2    TO FMDL-SC-BR-CASH-ADD-FEE
MOVE WS-CONVERT-AMOUNT3    TO FMDL-BR-CASH-ADD-FEE.

MOVE 'M'                TO WS-CONVERT-CURR-TYPE.
MOVE COM-PNET-SC-FEE    TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT.
MOVE WS-CONVERT-AMOUNT1 TO FMDL-BC-BR-SRVC-CNTR-FEE
MOVE WS-CONVERT-AMOUNT2 TO FMDL-SC-BR-SRVC-CNTR-FEE
MOVE WS-CONVERT-AMOUNT3 TO FMDL-BR-SRVC-CNTR-FEE

MOVE 'M'                TO WS-CONVERT-CURR-TYPE
MOVE COM-PNET-VOICE-SURCHARGE TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT.
MOVE WS-CONVERT-AMOUNT1 TO FMDL-BC-BR-VOICE-SURCHG-FEE
MOVE WS-CONVERT-AMOUNT2 TO FMDL-SC-BR-VOICE-SURCHG-FEE
MOVE WS-CONVERT-AMOUNT3 TO FMDL-BR-VOICE-SURCHG-FEE.


2108X-BFR-MANUAL-ADD-ON.

EVALUATE TRUE
WHEN THIS-IS-A-POS-TRANS
CONTINUE
WHEN WS-UIWA-NATS-POS-FLAG = 'Y'
CONTINUE
WHEN PGRM-FUNCTION-CASH-ONLY
CONTINUE
WHEN OTHER
MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
MOVE WS-CDN-MANUAL-ADD-ON  TO WS-CONVERT-AMOUNT
PERFORM CONVERT-AMOUNT
MOVE WS-CONVERT-AMOUNT1    TO FMDL-BC-CUST-MANUAL-FEE
MOVE WS-CONVERT-AMOUNT2    TO FMDL-SC-CUST-MANUAL-FEE
MOVE WS-CONVERT-AMOUNT3    TO FMDL-CUST-MANUAL-FEE
END-EVALUATE.


2108X-CHECK-PAY-AT-LOAD.

PERFORM DETERMINE-IF-BALANCE-BASED
IF (WS-BALANCE-BASED AND CDN-BILL-AT-LOAD)
MOVE 'Y' TO FMDL-PAY-AT-LOAD-FLAG
MOVE 'Y' TO ODR-PAY-AT-LOAD IN ORDRFIL-DETAIL-RECD
ELSE
IF ((CDN-EXPRESS-CASH-YES) AND
CDN-BILL-AT-LOAD AND
THIS-BE-A-VRU-EXPRESS-CASH)
MOVE 'Y' TO ODR-PAY-AT-LOAD IN ORDRFIL-DETAIL-RECD
MOVE 'Y' TO FMDL-PAY-AT-LOAD-FLAG.

IF FMDL-PAY-AT-LOAD-FLAG = 'Y'
IF TRACTOR-PURCHASE = 1
MOVE +1 TO FMDL-TF-TRACTOR-FUEL
END-IF
IF TRAILER-PURCHASE = 1
MOVE +1 TO FMDL-TF-TRAILER-FUEL
END-IF
IF WS-UIWA-OTH-QTY > 0
MOVE +1 TO FMDL-TF-OTHER-FUEL
END-IF
IF OIL-PURCHASE = 1
MOVE +1 TO FMDL-TF-OIL
END-IF
IF WS-UIWA-CASH-AMT > 0
MOVE +1 TO FMDL-TF-CASH
END-IF
IF WS-UIWA-PR1-COST > ZEROES
MOVE +1 TO FMDL-TF-PRODUCT-1
END-IF
IF WS-UIWA-PR2-COST > ZEROES
MOVE +1 TO FMDL-TF-PRODUCT-2
END-IF
IF WS-UIWA-PR3-COST > ZEROES
MOVE +1 TO FMDL-TF-PRODUCT-3
END-IF.



IF THIS-BE-A-VRU-EXPRESS-CASH AND
CDN-BILL-AT-LOAD AND
HOLD-BALLIM-FLAG = 'L'
MOVE 'X' TO FMDL-PAY-AT-LOAD-FLAG.


2108X-LOG-DISCOUNT-INFO.










IF WS-BYPASS-LOG-DISCOUNT NOT = 'Y'
MOVE 'F' TO FMCD-REQ-TYPE
PERFORM TSFMO0CD-ROUTINE
END-IF.


2108X-BFR-BUILD-DNETPRCG.

MOVE WS-DNETPRCG-PRD-CD      TO FMDL-DNETPRCG-PRD-CD
MOVE WS-DNETPRCG-PFID-CD     TO FMDL-DNETPRCG-PFID-CD
IF WS-DNETPRCG-NR2-USED = 'Y'
MOVE 'Y'                  TO FMDL-DNETPRCG-NR2-USED
MOVE WS-DNETPRCG-NR2-DISC TO FMDL-DNETPRCG-NR2-DISC
ELSE
MOVE 'N'                  TO FMDL-DNETPRCG-NR2-USED
END-IF
IF WS-DNETPRCG-NR1-USED = 'Y'
MOVE 'Y'                  TO FMDL-DNETPRCG-NR1-USED
MOVE WS-DNETPRCG-NR1-DISC TO FMDL-DNETPRCG-NR1-DISC
ELSE
MOVE 'N'                  TO FMDL-DNETPRCG-NR1-USED
END-IF
IF WS-DNETPRCG-REF-USED = 'Y'
MOVE 'Y'                  TO FMDL-DNETPRCG-REF-USED
MOVE WS-DNETPRCG-REF-DISC TO FMDL-DNETPRCG-REF-DISC
ELSE
MOVE 'N'                  TO FMDL-DNETPRCG-REF-USED
END-IF
IF WS-DNETPRCG-OTH-USED = 'Y'
MOVE 'Y'                  TO FMDL-DNETPRCG-OTH-USED
MOVE WS-DNETPRCG-OTH-DISC TO FMDL-DNETPRCG-OTH-DISC
ELSE
MOVE 'N'                  TO FMDL-DNETPRCG-OTH-USED
END-IF

MOVE WS-DNETPRCG-EFFCTV-DT   TO FMDL-DNETPRCG-EFFCTV-DT

MOVE WS-DNETPRCG-PFID-FILE-SW TO FMDL-PFID-FILE-SWITCH.

IF (PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y')
AND ((WS-DNETPRCG-PFID-CD NOT = SPACES)
OR (WS-DNETPRCG-PFID-PRC-VALID-FLG = 'Y'))
CONTINUE
ELSE
MOVE 'P'                     TO FMDL-COST-PLUS-TYPE-FLAG
MOVE WS-DNETPRCG-TYP-CD      TO FMDL-COST-PLUS-MAX-ALLOW
MOVE 'F'                     TO FMDL-SELECT-OR-FOCUS-DISC

IF COM-NET-PRICING-FLAG = 'C'

MOVE 'C'                 TO FMDL-DISCOUNT-TYPE-FLAG
MOVE 'Y'                 TO FMDL-COST-PLUS-USED
END-IF
END-IF.


21081-ATM-MAESTRO-RESP-CODE.

MOVE WS-HOLD-POS-ERROR-NUMBER TO TSXCO0AT-APP-RETURN-CODE.
EVALUATE TRUE
WHEN TSXCO0AT-APP-RETURN-CODE = ZERO
MOVE '00'           TO FMDL-ATM-RESPONSE-CODE
WHEN TSXCO0AT-APP-LIMIT-EXCEEDED
IF TSXCO0AT-TRAN-TYPE = '10'
MOVE '00'        TO FMDL-ATM-RESPONSE-CODE
ELSE
MOVE '51'        TO FMDL-ATM-RESPONSE-CODE
END-IF
WHEN TSXCO0AT-APP-INVALID-PIN
MOVE '55'           TO FMDL-ATM-RESPONSE-CODE
WHEN TSXCO0AT-APP-EXCESSIVE-PIN
MOVE '75'           TO FMDL-ATM-RESPONSE-CODE
WHEN TSXCO0AT-APP-INVALID-TRANS
MOVE '57'           TO FMDL-ATM-RESPONSE-CODE
WHEN OTHER
MOVE '62'           TO FMDL-ATM-RESPONSE-CODE
END-EVALUATE.


21082-SPLIT-HUB-READING.



IF WS-TRANS-GALLONS > ZERO
IF UNITMST-LAST-HUB NOT NUMERIC
OR UNITMST-LAST-HUB NOT > ZERO


IF LTI-LAST-PASS
MOVE WS-LTIH-HUB TO WS-UIWA-HUB
ELSE
MOVE ZERO        TO WS-UIWA-HUB
END-IF
ELSE


COMPUTE WS-LTI-PERCENT ROUNDED =
WS-TRANS-GALLONS / WS-LTIH-TRANS-GALLONS
END-COMPUTE
COMPUTE WS-UIWA-HUB ROUNDED =
(WS-LTI-PERCENT * WS-LTIH-HUB)
END-COMPUTE
SUBTRACT WS-TRANS-GALLONS FROM WS-LTIH-TRANS-GALLONS
SUBTRACT WS-UIWA-HUB      FROM WS-LTIH-HUB
ADD UNITMST-LAST-HUB        TO WS-UIWA-HUB
END-IF
ELSE
MOVE ZERO TO WS-UIWA-HUB
END-IF
CONTINUE.



21083-BUILD-PRDDIS-RECD.


PERFORM VARYING WS-SUB1 FROM +1 BY +1
UNTIL WS-SUB1 > 4

MOVE WS-PD-PROD-DISC-INFO (WS-SUB1)
TO PD-PROD-DISC-INFO (WS-SUB1)
END-PERFORM

MOVE FMDL-RK-TRANSACTION-DATE TO PD-TRANSACTION-DATE
MOVE FMDL-RK-CONTROL-NUMBER   TO PD-CONTROL-NUMBER
.


21084-INITIALIZE-PRDDIS.

PERFORM VARYING WS-SUB1 FROM +1 BY +1
UNTIL WS-SUB1 > 4
MOVE ZEROES           TO WS-PD-NET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-NET-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-REB-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-REB-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-RET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-RET-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-NET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-NET-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-REB-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-REB-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-RET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-BC-RET-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-NET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-NET-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-REB-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-REB-DISC-PPG (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-RET-DISC-AMT (WS-SUB1)
MOVE ZEROES           TO WS-PD-SC-RET-DISC-PPG (WS-SUB1)
END-PERFORM.


21085-LINK-TO-TSFMO0DI.

MOVE '21085-LINK-TO-TSFMO0DI'    TO CXUTS0ML-PARAGRAPH.
MOVE CDN-CUSTOMER-RECORD    TO CDL-CDN-CUSTOMER-RECORD.
MOVE HLD-CUSTOMER-RECORD    TO CDL-CDN-ACCOUNT-RECORD.
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO CDL-FUEL-MNG-DAILY-LOG-RECD.

EXEC CICS LINK
PROGRAM  ('TSFMO0DI')
COMMAREA (COMDATA-DISCOUNT-LINK-AREA)
LENGTH   (LENGTH OF COMDATA-DISCOUNT-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE CDL-FUEL-MNG-DAILY-LOG-RECD
TO FUEL-MANAGEMENT-DAILY-LOG-RECD.

MOVE SCM-BUSINESS-TYPE-CODE TO FMDL-BUSINESS-TYPE-CODE.


21090-LOG-TO-SETTLE-NEW.

IF (THIS-IS-A-SETTLEMENT-ITEM
AND SCM-SETTLE-LOC-STATUS = 'Y')
OR WS-MANUAL-FEE > ZEROES
OR (WS-LARGE-TRANS-SPLITS
AND NOT THIS-BE-TERMINAL-FUEL)
IF THIS-BE-AN-ATM-XTN
PERFORM 84000-LOG-TO-BTCHSET
ELSE
PERFORM 85000-LOG-TO-SETINFO
END-IF
END-IF.


21110-UPDATE-ORDER-FILE.


MOVE '21110-UPDATE-ORDER-FILE'   TO CXUTS0ML-PARAGRAPH.


ADD 1, ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
GIVING ORDRFIL-RRN.
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (ORDRFIL-DETAIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRFIL-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE 1 TO ODR-FP-NR-RECDS IN ORDRFIL-DETAIL-RECD.
MOVE 1
TO ODR-FP-1ST-RRN IN ORDRFIL-DETAIL-RECD.
MOVE FMLOG-RRN
TO ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD.
MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
IN ORDRFIL-DETAIL-RECD.
MOVE SCM-RMS-ALLIANCE-FLAG TO ODR-SYS-BYTE IN
ORDRFIL-DETAIL-RECD (2).
MOVE WS-DC-FEE-AMT         TO ODR-DISC-AMT
IN ORDRFIL-DETAIL-RECD.
IF  FMDL-PAID-AT-LOAD
MOVE 'Y' TO ODR-PAY-AT-LOAD IN ORDRFIL-DETAIL-RECD.
EXEC CICS REWRITE
DATASET ('ORDRFIL')
FROM    (ORDRFIL-DETAIL-RECD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE ORDRFIL-DETAIL-RECD TO DUP-ORDRFIL-RECD
COM-FP-ORDRFIL.



21120-UPDATE-CREDIT.



IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
WS-NON-BILLABLE           > ZEROES
PERFORM 21121-UPDATE-CC-CREDIT
PERFORM 21122-UPDATE-CC-RELATIONSHIP.

PERFORM 21125-UPDATE-NORMAL-CREDIT.


21121-UPDATE-CC-CREDIT.

MOVE SPACES
TO CL-CO-CD OF DCREDITL
IF COM-CC-FUNDED OR COM-CC-FUNDED-OVERRIDE
MOVE CDN-COMDATA-CMPLT-ACCT-CODE
TO CL-CO-CD OF DCREDITL
PERFORM 21121-UPDATE-CC-CREDIT-FILE.
IF COM-CC-RECOURSE
MOVE SCM-COMDATA-COMPLETE-ACCT
TO CL-CO-CD OF DCREDITL
PERFORM 21121-UPDATE-CC-CREDIT-FILE.


21121-UPDATE-CC-CREDIT-FILE.

INITIALIZE                   CA-CXACO0UD-COMMAREA
MOVE CL-CO-CD OF DCREDITL TO CA-CXACO0UD-CO-CD
MOVE 'A'                  TO CA-CUR-DY-XMIT-IND
IF HLD-CURR-CD > SPACES
AND HLD-CURR-CD NOT = 'USD'
MOVE WS-NON-BILLABLE   TO CA-CUR-DY-XMIT
ELSE
MOVE WS3-NON-BILLABLE  TO CA-CUR-DY-XMIT
END-IF
IF COM-ACCOUNT-CURR-TYPE = 'B'
EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE 'A'              TO CA-CUR-DY-XMIT-US-IND
MOVE WS-NON-BILLABLE  TO CA-CUR-DY-XMIT-US
WHEN COM-CO-IS-CANADIAN
MOVE 'A'              TO CA-CUR-DY-XMIT-CAN-IND
MOVE WS-NON-BILLABLE  TO CA-CUR-DY-XMIT-CAN
END-EVALUATE
ELSE
EVALUATE TRUE
WHEN COM-SC-IS-US
MOVE 'A'              TO CA-CUR-DY-XMIT-US-IND
MOVE WS2-NON-BILLABLE TO CA-CUR-DY-XMIT-US
WHEN COM-SC-IS-CANADIAN
MOVE 'A'              TO CA-CUR-DY-XMIT-CAN-IND
MOVE WS2-NON-BILLABLE TO CA-CUR-DY-XMIT-CAN
END-EVALUATE
END-IF.
PERFORM UPDATE-CREDITL.























21121B-LOG-ERR.



MOVE 'E'           TO CXUTS0ML-SEVERITY-ID
CXUTS0ML-LOG-ID
MOVE 'C'           TO CXUTS0ML-FUNCTION-ID
MOVE 'Y'           TO CXUTS0ML-RETURN-SW
MOVE EIBRESP       TO CXUTS0ML-MESSAGE-ID
MOVE SPACES        TO CXUTS0ML-PRODUCT-AREA
PERFORM Z999-LINK-TO-CXUTS0ML.


21121C-LINK-TO-MSG-HANDLER.

EXEC CICS LINK
PROGRAM    ('CXXCO0OH')
COMMAREA   (CXXCO0OH-COMMUNICATIONS-AREA)
LENGTH     (CXXCO0OH-COMM-AREA-LENGTH)
DATALENGTH (CXXCO0OH-COMM-AREA-DATA-LENGTH)
RESP       (EIBRESP)
END-EXEC.

IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE '21121C-LINK-TO-MSG-HANDLER' TO CXUTS0ML-PARAGRAPH
MOVE 'LINK CXXCO0OH'              TO CXUTS0ML-COMMAND
PERFORM 21121B-LOG-ERR
END-IF.


21121G-PRMCARD-NUMERIC-CHECKS.

IF PRB-PURC-ONE-TIME NOT NUMERIC
MOVE ZEROES TO PRB-PURC-ONE-TIME.
IF PRB-FP-CARD-NO NOT NUMERIC
MOVE ZEROES TO PRB-FP-CARD-NO.
IF PRB-NUMB-OF-CARDS NOT NUMERIC
MOVE ZEROES TO PRB-NUMB-OF-CARDS.
IF PRB-FREE-XTN-COUNT NOT NUMERIC
MOVE ZEROES TO PRB-FREE-XTN-COUNT.
IF PRB-CASH-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRB-CASH-LAST-DATE-USED.
IF PRB-PURC-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRB-PURC-LAST-DATE-USED.
IF PRB-EXPENSE-BALANCE NOT NUMERIC
MOVE ZEROES TO PRB-EXPENSE-BALANCE.
IF PRB-CASH-ONE-TIME NOT NUMERIC
MOVE ZEROES TO PRB-CASH-ONE-TIME.
IF PRB-CASH-INITIAL NOT NUMERIC
MOVE ZEROES TO PRB-CASH-INITIAL.
IF PRB-CASH-USED NOT NUMERIC
MOVE ZEROES TO PRB-CASH-USED.
IF PRB-CASH-RESET NOT NUMERIC
MOVE ZEROES TO PRB-CASH-RESET.
IF PRB-PURC-INITIAL NOT NUMERIC
MOVE ZEROES TO PRB-PURC-INITIAL.
IF PRB-PURC-USED NOT NUMERIC
MOVE ZEROES TO PRB-PURC-USED.
IF PRB-PURC-RESET NOT NUMERIC
MOVE ZEROES TO PRB-PURC-RESET.
IF PRB-LAST-TRANS-NR NOT NUMERIC
MOVE ZEROES TO PRB-LAST-TRANS-NR.
IF PRB-LAST-DATE NOT NUMERIC
MOVE ZEROES TO PRB-LAST-DATE.
IF PRB-LAST-TIME NOT NUMERIC
MOVE ZEROES TO PRB-LAST-TIME.
IF PRB-DIRECTORY-NUMB NOT NUMERIC
MOVE ZEROES TO PRB-DIRECTORY-NUMB.
IF PRB-LAST-REFERENCE-NR NOT NUMERIC
MOVE ZEROES TO PRB-LAST-REFERENCE-NR.
IF PRB-MAX-CALLS NOT NUMERIC
MOVE ZEROES TO PRB-MAX-CALLS.
IF PRB-CALLS-REMAINING NOT NUMERIC
MOVE ZEROES TO PRB-CALLS-REMAINING.
IF PRB-LAST-PT-CALL-DATE NOT NUMERIC
MOVE ZEROES TO PRB-LAST-PT-CALL-DATE.
IF PRB-CALL-DOLLAR-LIMIT NOT NUMERIC
MOVE ZEROES TO PRB-CALL-DOLLAR-LIMIT.
IF PRB-CALL-DOLLARS-USED NOT NUMERIC
MOVE ZEROES TO PRB-CALL-DOLLARS-USED.
IF PRB-FREE-CALL-COUNT NOT NUMERIC
MOVE ZEROES TO PRB-FREE-CALL-COUNT.
IF PRB-LOST-STATUS-UPDATE-DATE NOT NUMERIC
MOVE ZEROES TO PRB-LOST-STATUS-UPDATE-DATE.
IF PRB-LL-DATE NOT NUMERIC
MOVE ZEROES TO PRB-LL-DATE.
IF PRB-LL-TIME NOT NUMERIC
MOVE ZEROES TO PRB-LL-TIME.
IF PRB-LL-AMOUNT NOT NUMERIC
MOVE ZEROES TO PRB-LL-AMOUNT.
IF PRB-VRU-ACTIVATION-DATE NOT NUMERIC
MOVE ZEROES TO PRB-VRU-ACTIVATION-DATE.
IF PRB-LAST-EXP-DATE NOT NUMERIC
MOVE ZEROES TO PRB-LAST-EXP-DATE.
IF PRB-VRU-PIN-ATTEMPTS NOT NUMERIC
MOVE ZEROES TO PRB-VRU-PIN-ATTEMPTS.
IF PRB-VRU-ACCESS-DATE NOT NUMERIC
MOVE ZEROES TO PRB-VRU-ACCESS-DATE.
IF PRB-PURC-ONE-TIME-MCC-CODE NOT NUMERIC
MOVE ZEROES TO PRB-PURC-ONE-TIME-MCC-CODE.
IF PRB-PURC-ONE-TIME-EXP-DATE NOT NUMERIC
MOVE ZEROES TO PRB-PURC-ONE-TIME-EXP-DATE.
IF PRB-CASH-ONE-TIME-EXP-DATE NOT NUMERIC
MOVE ZEROES TO PRB-CASH-ONE-TIME-EXP-DATE.
IF PRB-LAST-FP-AMOUNT NOT NUMERIC
MOVE ZEROES TO PRB-LAST-FP-AMOUNT.
IF PRB-LAST-FP-GALLONS NOT NUMERIC
MOVE ZEROES TO PRB-LAST-FP-GALLONS.
IF PRB-EXPENSE-BALANCE-HOLD NOT NUMERIC
MOVE ZEROES TO PRB-EXPENSE-BALANCE-HOLD.
IF PRB-LAST-PRMHST-YY-MM-DD NOT NUMERIC
MOVE ZEROES TO PRB-LAST-PRMHST-YY-MM-DD.
IF PRB-LAST-PRMHST-TIME NOT NUMERIC
MOVE ZEROES TO PRB-LAST-PRMHST-TIME.
IF PRB-LAST-PRMHST-REF-NR NOT NUMERIC
MOVE ZEROES TO PRB-LAST-PRMHST-REF-NR.
IF PRB-MAXIMUM-TRANSACTION-COUNT NOT NUMERIC
MOVE ZEROES TO PRB-MAXIMUM-TRANSACTION-COUNT.
IF PRB-DIESEL-LIMIT NOT NUMERIC
MOVE ZEROES TO PRB-DIESEL-LIMIT.
IF PRB-DIESEL-USED NOT NUMERIC
MOVE ZEROES TO PRB-DIESEL-USED.
IF PRB-DIESEL-LAST-DATE NOT NUMERIC
MOVE ZEROES TO PRB-DIESEL-LAST-DATE.
IF PRB-REEFER-LIMIT NOT NUMERIC
MOVE ZEROES TO PRB-REEFER-LIMIT.
IF PRB-REEFER-USED NOT NUMERIC
MOVE ZEROES TO PRB-REEFER-USED.
IF PRB-REEFER-LAST-DATE NOT NUMERIC
MOVE ZEROES TO PRB-REEFER-LAST-DATE.
IF PRB-CASH-PER-GALLON-LIMIT NOT NUMERIC
MOVE ZEROES TO PRB-CASH-PER-GALLON-LIMIT.
IF PRB-PEN-FCS-CARD-NR NOT NUMERIC
MOVE ZEROES TO PRB-PEN-FCS-CARD-NR.
IF PRB-PHONE-CARD-BASED-LIMIT NOT NUMERIC
MOVE ZEROES TO PRB-PHONE-CARD-BASED-LIMIT.
IF PRB-PHONE-CARD-BASED-USED NOT NUMERIC
MOVE ZEROES TO PRB-PHONE-CARD-BASED-USED.
IF PRB-PHONE-CARD-RESET NOT NUMERIC
MOVE ZEROES TO PRB-PHONE-CARD-RESET.
IF PRB-PHONE-CARD-LAST-USED-DATE NOT NUMERIC
MOVE ZEROES TO PRB-PHONE-CARD-LAST-USED-DATE.
IF PRB-PHONE-CARD-LAST-USED-TIME NOT NUMERIC
MOVE ZEROES TO PRB-PHONE-CARD-LAST-USED-TIME.
IF PRB-PRIMARY-CARD-NR NOT NUMERIC
MOVE ZEROES TO PRB-PRIMARY-CARD-NR.
IF PRB-OIL-INITIAL-DOLLARS NOT NUMERIC
MOVE ZEROES TO PRB-OIL-INITIAL-DOLLARS.
IF PRB-OIL-INITIAL-QUARTS NOT NUMERIC
MOVE ZEROES TO PRB-OIL-INITIAL-QUARTS.
IF PRB-OIL-USED-DOLLARS NOT NUMERIC
MOVE ZEROES TO PRB-OIL-USED-DOLLARS.
IF PRB-OIL-USED-QUARTS NOT NUMERIC
MOVE ZEROES TO PRB-OIL-USED-QUARTS.
IF PRB-OIL-RESET NOT NUMERIC
MOVE ZEROES TO PRB-OIL-RESET.
IF PRB-OIL-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRB-OIL-LAST-DATE-USED.


GET-ALL-DYNAM-BIN-FLAGS.


INITIALIZE TSXCS007-COMMAREA
MOVE PRM-CARD-NUMB    TO S007-CARD-NR-15
MOVE PRM-CARD-TYPE-FIELD (1:1)
TO S007-INPUT-CARD-TYPE
MOVE PRM-CARD-TYPE-FIELD (2:1)
TO S007-INPUT-CARD-TYPE-FMT
MOVE '1'              TO S007-INPUT-CALL-TYPE
PERFORM LINK-TO-TSXCO0FR.
IF (S007-ERROR-CODE NOT = 0)
MOVE 'GET-ALL-DYNAM-BIN-FLAGS' TO CXUTS0ML-PARAGRAPH
MOVE 'CARD:'                   TO CXUTS0ML-COMMAND (01:05)
MOVE S007-CARD-NR-15           TO CXUTS0ML-COMMAND (06:15)
MOVE ' TYPE:'                  TO CXUTS0ML-COMMAND (21:06)
MOVE PRM-CARD-TYPE-FIELD       TO CXUTS0ML-COMMAND (27:02)
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.

MOVE S007-PROPRIETARY-CARD        TO WS-PROPRIETARY-CARD.
IF S007-MASTERCARD-CARD = 'Y'
MOVE S007-MC-BIN-USES-PROP-LIM TO WS-PROPRIETARY-CARD
END-IF.


LINK-TO-TSXCO0FR.


EXEC CICS LINK
PROGRAM   ('TSXCO0FR')
COMMAREA  (TSXCS007-COMMAREA)
LENGTH    (LENGTH OF TSXCS007-COMMAREA)
RESP      (EIBRESP)
END-EXEC.
IF (EIBRESP NOT = DFHRESP(NORMAL))
MOVE 'LINK-TO-TSXCO0FR' TO CXUTS0ML-PARAGRAPH
MOVE 'LINK            ' TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.


GET-ICA-INFO.

IF SCM-COUNTRY-CODE <= SPACES
MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY
PERFORM 10340-READ-SCMSTR
END-IF.

IF SCM-IS-IN-CANADA
MOVE 'CA' TO WS-SCM-CNTRY-LOC-SW
ELSE
MOVE 'US' TO WS-SCM-CNTRY-LOC-SW
END-IF.

IF S007-INPUT-CARD-NR <= SPACES
PERFORM GET-ALL-DYNAM-BIN-FLAGS
END-IF.

INITIALIZE TSXCS008-COMMAREA.
MOVE WS-PRM-CARD-PREFIX TO S008-INPUT-BIN.

PERFORM LINK-TO-TSXCO0FI.

IF (S008-ERROR-CODE NOT = 0)
MOVE 'GET-ICA-INFO'       TO CXUTS0ML-PARAGRAPH
MOVE 'LINK TSXCO0FI'      TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.

IF S008-ALPHA2-CNTRY-CD = WS-SCM-CNTRY-LOC-SW
CONTINUE
ELSE
IF S007-ALLOW-US-PROPRIETARY = 'Y'
CONTINUE
ELSE
MOVE INVALID-CARD-CNTRY-CD   TO OUT-COMENT
MOVE INVALID-CARD-CNTRY-CD-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-IF.


LINK-TO-TSXCO0FI.


EXEC CICS LINK
PROGRAM   ('TSXCO0FI')
COMMAREA  (TSXCS008-COMMAREA)
LENGTH    (LENGTH OF TSXCS008-COMMAREA)
RESP      (EIBRESP)
END-EXEC.
IF (EIBRESP NOT = DFHRESP(NORMAL))
MOVE 'LINK-TO-TSXCO0FI' TO CXUTS0ML-PARAGRAPH
MOVE 'LINK            ' TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.


56600-LINK-TO-TSXCS060.


MOVE '56600-LINK-TO-TSXCS060'    TO CXUTS0ML-PARAGRAPH.
MOVE 'SELECT'                    TO CXUTS0ML-COMMAND.

EXEC CICS LINK
PROGRAM  ('TSXCS060')
COMMAREA (WS-TSXCS060-AREA)
LENGTH   (LENGTH OF WS-TSXCS060-AREA)
RESP     (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NORMAL-EIBRESP.

IF TSXCS060-OK
MOVE WS-TSXCS060-RET-ID-MTCH-NBR
TO AUTH-ID-MTCH-NBR
ELSE
MOVE 'E'                     TO CXUTS0ML-SEVERITY-ID
CXUTS0ML-LOG-ID
MOVE WS-TSXCS060-SQLCODE     TO CXUTS0ML-MESSAGE-ID
MOVE 'D'                     TO CXUTS0ML-FUNCTION-ID
MOVE WS-TSXCS060-ABEND-PARAGRAPH
TO CXUTS0ML-PARAGRAPH
MOVE WS-TSXCS060-ABEND-STATEMENT
TO CXUTS0ML-COMMAND
MOVE WS-TSXCS060-ERR-MSG     TO CXUTS0ML-PRODUCT-AREA
MOVE 'TSXCS060'              TO CXUTS0ML-PROGRAM-NAME
PERFORM Z999-LINK-TO-CXUTS0ML
END-IF.


21122-UPDATE-CC-RELATIONSHIP.

MOVE '21122-UPDATE-CC-RELATIONSHIP' TO CXUTS0ML-PARAGRAPH.

IF (COM-CC-RECOURSE OR COM-CC-NON-FUNDED) OR
(COM-CC-STATUS-NEW > SPACES)
MOVE COM-CC-RMR-KEY TO RMR-KEY
EXEC CICS READ
DATASET ('FMRELAT')
INTO    (RELATIONSHIP-MAINT-RECORD)
RIDFLD  (RMR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE RMR-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF RMR-CC-CREDIT-USED-DAILY NOT NUMERIC
MOVE ZEROES TO RMR-CC-CREDIT-USED-DAILY.
IF (COM-CC-RECOURSE OR COM-CC-NON-FUNDED)
ADD  WS3-NON-BILLABLE TO RMR-CC-CREDIT-USED-DAILY.
IF (COM-CC-STATUS-NEW > SPACES)
MOVE COM-CC-STATUS-NEW TO RMR-CC-STATUS
MOVE SPACES            TO RMR-CC-STATUS-NEW
MOVE ZEROES            TO RMR-CC-STATUS-NEW-DATE.
IF (COM-CC-RECOURSE OR COM-CC-NON-FUNDED) OR
(COM-CC-STATUS-NEW > SPACES)
EXEC CICS REWRITE
DATASET ('FMRELAT')
FROM    (RELATIONSHIP-MAINT-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21125-UPDATE-NORMAL-CREDIT.

PERFORM DETERMINE-IF-BALANCE-BASED
MOVE WS-FP-ACCT-CODE TO CL-CO-CD OF DCREDITL
IF (CDN-CUST-ACCT-CODE = 'BR000')                    OR
(COM-PNET-BRIDGE-FLAG-YES AND WS-BILLABLE = ZERO) OR
(WS-BALANCE-BASED AND CDN-BILL-AT-LOAD)           OR
(COM-COMDATA-COMPLETE-FLAG = 'Y' AND WS-BILLABLE = 0) OR
(THIS-BE-TERMINAL-FUEL)
CONTINUE
ELSE
PERFORM 21126-UPDATE-NORMAL-CREDIT.


21126-UPDATE-NORMAL-CREDIT.

INITIALIZE                   CA-CXACO0UD-COMMAREA
MOVE CL-CO-CD OF DCREDITL TO CA-CXACO0UD-CO-CD
MOVE 'A'                  TO CA-CUR-DY-XMIT-IND

IF HLD-CURR-CD > SPACES
AND HLD-CURR-CD NOT = 'USD'
MOVE WS-BILLABLE       TO CA-CUR-DY-XMIT
ELSE
MOVE WS3-BILLABLE      TO CA-CUR-DY-XMIT
END-IF

IF FMDL-FUEL-UP-AMOUNT NOT NUMERIC
MOVE ZEROS TO FMDL-FUEL-UP-AMOUNT
END-IF

SUBTRACT FMDL-FUEL-UP-AMOUNT FROM CA-CUR-DY-XMIT

IF COM-ACCOUNT-CURR-TYPE = 'B'
EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE 'A'           TO CA-CUR-DY-XMIT-US-IND
MOVE WS-BILLABLE   TO CA-CUR-DY-XMIT-US
WHEN COM-CO-IS-CANADIAN
MOVE 'A'           TO CA-CUR-DY-XMIT-CAN-IND
MOVE WS-BILLABLE   TO CA-CUR-DY-XMIT-CAN
END-EVALUATE
ELSE
EVALUATE TRUE
WHEN COM-SC-IS-US
MOVE 'A'           TO CA-CUR-DY-XMIT-US-IND
MOVE WS2-BILLABLE  TO CA-CUR-DY-XMIT-US
WHEN COM-SC-IS-CANADIAN
MOVE 'A'           TO CA-CUR-DY-XMIT-CAN-IND
MOVE WS2-BILLABLE  TO CA-CUR-DY-XMIT-CAN
END-EVALUATE
END-IF.

IF COM-CO-IS-US OR
COM-SC-IS-US
SUBTRACT FMDL-FUEL-UP-AMOUNT FROM CA-CUR-DY-XMIT-US
END-IF.

MOVE 'A'      TO CA-OVR-LMT-CNT-IND
MOVE OCR-FLAG TO CA-OVR-LMT-CNT

PERFORM DETERMINE-IF-BALANCE-BASED

IF THIS-BE-A-FLEET-XTN AND
WS-UIWA-FLEET-AMT-ORIG > ZERO
MOVE 'A' TO CA-PREAUTH-AMT-IND
COMPUTE     CA-PREAUTH-AMT =
WS-UIWA-FLEET-AMT-ORIG * -1
END-COMPUTE
END-IF

PERFORM UPDATE-CREDITL.


READ-CREDITL.

EVALUATE WS-CREDITL-READ-SW
WHEN 'A'
PERFORM CREDITL-SELECT-A
WHEN 'B'
PERFORM CREDITL-SELECT-B
WHEN 'C'
PERFORM CREDITL-SELECT-C
END-EVALUATE
EVALUATE SQLCODE
WHEN ZERO
CONTINUE
WHEN OTHER
MOVE 'READ-CREDITL '      TO CXUTS0ML-PARAGRAPH (01:13)
MOVE WS-CREDITL-READ-SW   TO CXUTS0ML-PARAGRAPH (14:01)
MOVE 'SELECT DBO.CR_LMTS' TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE

IF CL-RLSHP-FLG OF DCREDITL = 'G'
PERFORM READ-CREDITL-GLOBAL
ELSE
MOVE CL-XMIT-LMT     OF DCREDITL TO WS-CREDIT-LIMIT
MOVE CL-UPD          OF DCREDITL TO WS-UPDATE-OR-AR-BAL
MOVE CL-CSH-RCVD     OF DCREDITL TO WS-CASH-RECEIVED
MOVE CL-CUR-DY-XMIT  OF DCREDITL TO WS-CURRENT-DAY
END-IF.




CREDITL-SELECT-A.

EXEC SQL
SELECT CL_TIE_CD,
CL_CO_FULL_NM,
CL_XMIT_LMT,
CL_UPD,
CL_CUR_DY_XMIT,
CL_CSH_RCVD,
CL_RLSHP_FLG
INTO   :DCREDITL.CL-TIE-CD,
:DCREDITL.CL-CO-FULL-NM,
:DCREDITL.CL-XMIT-LMT,
:DCREDITL.CL-UPD,
:DCREDITL.CL-CUR-DY-XMIT,
:DCREDITL.CL-CSH-RCVD,
:DCREDITL.CL-RLSHP-FLG
FROM   DBO.CR_LMTS
WHERE  DBO.CR_LMTS.CL_CO_CD =
:DCREDITL.CL-CO-CD
END-EXEC.

CREDITL-SELECT-B.

EXEC SQL
SELECT CL_TIE_CD,
CL_CO_FULL_NM,
CL_XMIT_LMT,
CL_UPD,
CL_CUR_DY_XMIT,
CL_CSH_RCVD,
CL_OVRD_CD,
CL_FP_OVRD,
CL_RLSHP_FLG
INTO   :DCREDITL.CL-TIE-CD,
:DCREDITL.CL-CO-FULL-NM,
:DCREDITL.CL-XMIT-LMT,
:DCREDITL.CL-UPD,
:DCREDITL.CL-CUR-DY-XMIT,
:DCREDITL.CL-CSH-RCVD,
:DCREDITL.CL-OVRD-CD,
:DCREDITL.CL-FP-OVRD,
:DCREDITL.CL-RLSHP-FLG
FROM   DBO.CR_LMTS
WHERE  DBO.CR_LMTS.CL_CO_CD =
:DCREDITL.CL-CO-CD
END-EXEC.

CREDITL-SELECT-C.

EXEC SQL
SELECT CL_TIE_CD,
CL_CO_FULL_NM,
CL_XMIT_LMT,
CL_UPD,
CL_CUR_DY_XMIT,
CL_XMIT_CD,
CL_CSH_RCVD,
CL_OVRD_CD,
CL_FP_OVRD,
CL_OVR_LMT_CNT,
CL_HARD_CR_HOLD,
CL_RLSHP_FLG
INTO   :DCREDITL.CL-TIE-CD,
:DCREDITL.CL-CO-FULL-NM,
:DCREDITL.CL-XMIT-LMT,
:DCREDITL.CL-UPD,
:DCREDITL.CL-CUR-DY-XMIT,
:DCREDITL.CL-XMIT-CD,
:DCREDITL.CL-CSH-RCVD,
:DCREDITL.CL-OVRD-CD,
:DCREDITL.CL-FP-OVRD,
:DCREDITL.CL-OVR-LMT-CNT,
:DCREDITL.CL-HARD-CR-HOLD,
:DCREDITL.CL-RLSHP-FLG
FROM   DBO.CR_LMTS
WHERE  DBO.CR_LMTS.CL_CO_CD =
:DCREDITL.CL-CO-CD
END-EXEC.

READ-CREDITL-GLOBAL.

INITIALIZE DCRDLMTS
MOVE CL-TIE-CD OF DCREDITL TO CL-TIE-CD OF DCRDLMTS

EXEC SQL
SELECT CL_SUM_GLOBAL_CR_LMT  ,
CL_SUM_GLOBAL_AR_BAL  ,
CL_SUM_GLOBAL_CSH_RCVD,
CL_SUM_GLOBAL_CUR_DY
INTO :DCRDLMTS.CL-SUM-GLOBAL-CR-LMT  ,
:DCRDLMTS.CL-SUM-GLOBAL-AR-BAL  ,
:DCRDLMTS.CL-SUM-GLOBAL-CSH-RCVD,
:DCRDLMTS.CL-SUM-GLOBAL-CUR-DY
FROM DBO.CR_LMTS_SUM
WHERE CL_TIE_CD = :DCRDLMTS.CL-TIE-CD
END-EXEC

EVALUATE SQLCODE
WHEN ZERO
MOVE CL-SUM-GLOBAL-CR-LMT   OF DCRDLMTS
TO WS-CREDIT-LIMIT
MOVE CL-SUM-GLOBAL-AR-BAL   OF DCRDLMTS
TO WS-UPDATE-OR-AR-BAL
MOVE CL-SUM-GLOBAL-CSH-RCVD OF DCRDLMTS
TO WS-CASH-RECEIVED
MOVE CL-SUM-GLOBAL-CUR-DY   OF DCRDLMTS
TO WS-CURRENT-DAY
WHEN +100
CONTINUE
WHEN OTHER
MOVE 'READ-CREDITL-GLOBAL'    TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.CR_LMTS_SUM' TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.


UPDATE-CREDITL.

MOVE 'UPDATE-CREDITL'            TO CXUTS0ML-PARAGRAPH.

MOVE 'U'   TO CA-CXACO0UD-FUNC
MOVE ZEROS TO CA-CXACO0UD-RC
MOVE 'US'  TO CA-CXACO0UD-UPDPGM
EXEC CICS LINK
PROGRAM  ('CXACO0UD')
COMMAREA (CA-CXACO0UD-COMMAREA)
LENGTH   (LENGTH OF CA-CXACO0UD-COMMAREA)
RESP     (EIBRESP)
END-EXEC

IF CA-CXACO0UD-RC NOT = ZEROS
MOVE +104 TO EIBRESP
END-IF
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21130-CHECK-CC-RECOURSE-LOG.


IF COM-CC-FUNDED-OVERRIDE AND
SCM-RECOURSE-FLAG-CARD-REQ
PERFORM LOG-SECURITY-TO-CDAUDIT.


21140-UPDATE-UNITMST.


PERFORM 21141-GET-UNITMST.


IF WS-LARGE-TRANS-SPLITS
IF LTI-LAST-PASS
MOVE 'Y' TO WS-PERFORM-SW
ELSE
MOVE 'N' TO WS-PERFORM-SW
END-IF
ELSE
MOVE 'Y'    TO WS-PERFORM-SW
END-IF
IF HUB-READING-REQUIRED AND
UNITMST-STARTING-HUB = ZEROES AND
TRACTOR-PURCHASE = 1
IF WS-PERFORM-SW = 'Y'
PERFORM 21142-NEW-HUB
END-IF
ELSE
PERFORM 21142-OLD-HUB.

PERFORM 21143-UPDATE-UNITMST.
IF COM-PUR-OPTIONS-PROD = '1'
PERFORM 21145-UPDATE-PRODUCT-USED
VARYING INDX FROM 1 BY 1
UNTIL   INDX > 3
END-IF.


21141-GET-UNITMST.


PERFORM 83100-READ-UNITMST-UPD.




MOVE 'Y' TO READY-TO-UPDATE-UNITMST.
PERFORM READ-CDNCUST.
MOVE 'N' TO READY-TO-UPDATE-UNITMST.

IF NOT CO-INPUTS-DRIVER-NAME
MOVE FPNAMEI                TO UNITMST-DRVR-NAME.
IF UNITMST-LAST-UPDATE-DATE = 0
MOVE UNITMST-DATE-LAST-XTN TO UNITMST-LAST-UPDATE-DATE.


21142-NEW-HUB.


MOVE WS-UIWA-HUB TO UNITMST-STARTING-HUB,
UNITMST-PREV-DAY-HUB
MOVE 0 TO UNITMST-CURR-DAY-REQ-AMT,
UNITMST-PREV-DAY-REQ-AMT,
UNITMST-PTD-TOTAL-REQ-AMT,
UNITMST-CURR-DAY-AMT-REF,
UNITMST-PREV-DAY-AMT-REF,
UNITMST-PTD-AMT-REF,
UNITMST-CURR-DAY-GALS-REF,
UNITMST-PREV-DAY-GALS-REF,
UNITMST-PTD-GALS-REF,
UNITMST-CURR-DAY-QTS-OIL,
UNITMST-CURR-DAY-OIL-COST,
UNITMST-PREV-DAY-QTS-OIL,
UNITMST-PREV-DAY-OIL-COST,
UNITMST-PTD-QTS-OIL,
UNITMST-PTD-OIL-COST,
UNITMST-CURR-DAY-CHGS,
UNITMST-PREV-DAY-CHGS,
UNITMST-PTD-CHGS,
UNITMST-CURR-DAY-DISC,
UNITMST-CURR-DAY-NR-GALS,
UNITMST-PREV-DAY-DISC,
UNITMST-PREV-DAY-NR-GALS,
UNITMST-PTD-DISC,
UNITMST-PTD-NR-GALS.


21142-OLD-HUB.







IF (UNITMST-LAST-UPDATE-DATE NOT = WS-CURRENT-DATE-YYDDD)
ADD UNITMST-PREV-DAY-REQ-AMT   TO
UNITMST-PTD-TOTAL-REQ-AMT
ADD UNITMST-PREV-DAY-CHGS      TO UNITMST-PTD-CHGS
ADD UNITMST-PREV-DAY-DISC      TO UNITMST-PTD-DISC
ADD UNITMST-PREV-DAY-NR-GALS   TO UNITMST-PTD-NR-GALS
ADD UNITMST-PREV-DAY-QTS-OIL   TO UNITMST-PTD-QTS-OIL
ADD UNITMST-PREV-DAY-OIL-COST TO UNITMST-PTD-OIL-COST
ADD UNITMST-PREV-DAY-AMT-REF   TO UNITMST-PTD-AMT-REF
ADD UNITMST-PREV-DAY-GALS-REF TO UNITMST-PTD-GALS-REF

MOVE UNITMST-CURR-DAY-REQ-AMT   TO
UNITMST-PREV-DAY-REQ-AMT
MOVE UNITMST-CURR-DAY-NR-GALS   TO
UNITMST-PREV-DAY-NR-GALS
MOVE UNITMST-CURR-DAY-AMT-REF   TO
UNITMST-PREV-DAY-AMT-REF
MOVE UNITMST-CURR-DAY-GALS-REF TO
UNITMST-PREV-DAY-GALS-REF
MOVE UNITMST-CURR-DAY-QTS-OIL   TO
UNITMST-PREV-DAY-QTS-OIL
MOVE UNITMST-CURR-DAY-OIL-COST TO
UNITMST-PREV-DAY-OIL-COST
MOVE UNITMST-CURR-DAY-CHGS      TO UNITMST-PREV-DAY-CHGS
MOVE UNITMST-CURR-DAY-DISC      TO UNITMST-PREV-DAY-DISC
MOVE UNITMST-LAST-HUB           TO UNITMST-PREV-DAY-HUB

MOVE ZEROS TO UNITMST-CURR-DAY-REQ-AMT,
UNITMST-CURR-DAY-NR-GALS,
UNITMST-CURR-DAY-AMT-REF,
UNITMST-CURR-DAY-GALS-REF,
UNITMST-CURR-DAY-QTS-OIL,
UNITMST-CURR-DAY-OIL-COST,
UNITMST-CURR-DAY-CHGS,
UNITMST-CURR-DAY-DISC
END-IF.

ADD WS-UIWA-NR2-COST TO UNITMST-CURR-DAY-REQ-AMT.
ADD WS-UIWA-OTH-COST TO UNITMST-CURR-DAY-REQ-AMT.
ADD WS-UIWA-NR1-COST TO UNITMST-CURR-DAY-REQ-AMT.
ADD WS-UIWA-REF-COST TO UNITMST-CURR-DAY-AMT-REF.
ADD WS-UIWA-OIL-COST TO UNITMST-CURR-DAY-OIL-COST.
ADD WS-FUEL-RATE     TO UNITMST-CURR-DAY-CHGS.
ADD WS-UIWA-NR2-QTY  TO UNITMST-CURR-DAY-NR-GALS.
ADD WS-UIWA-OTH-QTY  TO UNITMST-CURR-DAY-NR-GALS.
ADD WS-UIWA-NR1-QTY  TO UNITMST-CURR-DAY-NR-GALS.
ADD WS-UIWA-REF-QTY  TO UNITMST-CURR-DAY-GALS-REF.
ADD WS-UIWA-OIL-QTY  TO UNITMST-CURR-DAY-QTS-OIL.
ADD WS-DISC-AMT-SAVE TO UNITMST-CURR-DAY-DISC.


21143-UPDATE-UNITMST.



IF TRIP-ALLOWANCE-SET
COMPUTE UNITMST-TRIP-ALLOW-USED =
UNITMST-TRIP-ALLOW-USED + WS-UIWA-NR2-COST
+ WS-UIWA-REF-COST
+ WS-UIWA-OIL-COST
+ WS-UIWA-OTH-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-PR1-COST
+ WS-UIWA-PR2-COST
+ WS-UIWA-PR3-COST
+ WS-UIWA-TAX-AMT.

MOVE SYS-TIME           TO UNITMST-TIME-LAST-XTN.

IF WS-PERFORM-SW = 'Y'
IF UNITMST-STATE-CODE = SCM-KEY-ST
ADD 1             TO UNITMST-REPEAT-ST-COUNT
ELSE
MOVE 0            TO UNITMST-REPEAT-ST-COUNT
END-IF
END-IF.
MOVE SCM-LOCATION-STATE TO UNITMST-STATE-CODE.

IF WS-PERFORM-SW = 'Y'
IF WS-UIWA-SC-CODE = UNITMST-LAST-TS-CODE
ADD 1             TO UNITMST-REPEAT-TS-COUNT
ELSE
MOVE 0            TO UNITMST-REPEAT-TS-COUNT
END-IF
END-IF.
MOVE WS-UIWA-SC-CODE    TO UNITMST-LAST-TS-CODE.

IF THERE-IS-A-MESSAGE-PENDING
MOVE DFHBMASK              TO MSGQRYA
MOVE 'A'                   TO MSGSTSA
MOVE UNITMST-MESSAGE-LINE TO FPMSG1O, OUT-GOLD-MESSAGE,
POS-DRV-MESSAGE
IF MSGSTSI = 'Y'
MOVE SPACES             TO UNITMST-MESSAGE-FLAG
END-IF
END-IF.

IF WS-UIWA-HUB > 0
IF TRACTOR-PURCHASE = 1

OR (TRAILER-PURCHASE = 1 AND WS-FL-HUBOMETER-FLAG = 'R')
MOVE WS-UIWA-HUB        TO UNITMST-LAST-HUB
END-IF
END-IF.
IF WS-PERFORM-SW = 'Y'
IF WS-FL-CASH-ADV-FLAG = 'A'
PERFORM ACCUM-CASH-TOTALS
END-IF
IF CSR-CASH-IS-ON-THE-CARD
OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
PERFORM PREMIER-CARD-CASH-LIMIT
END-IF
IF UNITMST-LAST-UPDATE-DATE NOT = WS-CURRENT-DATE-YYDDD AND
WS-FL-CASH-ADV-STATUS NOT < '0'
MOVE 0                TO UNITMST-DLY-CASH-ADV-USED
END-IF
END-IF
IF WS-UIWA-CASH-AMT > ZEROES AND HOLD-BALLIM-FLAG NOT = 'L'
ADD WS-UIWA-CASH-AMT     TO UNITMST-CASH-ADV-USED,
UNITMST-DLY-CASH-ADV-USED.
MOVE WS-CURRENT-DATE-YYDDD  TO UNITMST-DATE-LAST-XTN,
UNITMST-LAST-UPDATE-DATE.
MOVE I-CTL-NR               TO UNITMST-LAST-XTN-NR.
MOVE FPNAMEI                TO UNITMST-DRVR-NAME.
PERFORM 83200-REWRITE-UNITMST.


21145-UPDATE-PRODUCT-USED.

IF WS-UIWA-PR-CODE (INDX) > SPACES
MOVE WS-UIWA-PR-CODE (INDX) TO WORK-PROD-CODE
COMPUTE INDX-1 = WORK-PROD-CODE-NUM + 1
IF (CDN-PURCHASE-ORDER-POOL-LIMIT)   AND
(WS-UIWA-PO-NR > SPACES       )   AND
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS OR
(FMPO-PRODUCT-CODE  = WORK-PROD-CODE AND
FMPO-MAX-AMOUNT > ZEROS))
CONTINUE
ELSE
PERFORM 21145-PROCESS-UPDATE
END-IF
END-IF.


21145-PROCESS-UPDATE.

MOVE '21145-PROCESS-UPDATE'      TO CXUTS0ML-PARAGRAPH.




INITIALIZE     PRODUCT-CODE-USED
IF ON-HIERARCHY
MOVE '2'                   TO PCU-UBH-KEY-TYPE
MOVE PIR-HIERARCHY-ID      TO PCU-UBH-HIERARCHY-ID
MOVE UNIT-GRP-ID OF DUNITNOD
TO PCU-UBH-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBH-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBH-PRODUCT-CODE
ELSE
MOVE '1'                   TO PCU-UBC-KEY-TYPE
MOVE COM-UNIT-POOL-CUST-ID TO PCU-UBC-CUST-ID
MOVE 'DEFAULT'             TO PCU-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBC-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBC-PRODUCT-CODE
END-IF.

EXEC CICS READ
DATASET ('PRDUSED')
INTO    (PRODUCT-CODE-USED)
RIDFLD  (PCU-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE PCU-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


IF PCU-DATE-LAST-TRANS NOT = WS-CURRENT-DATE-YYDDD AND
PCU-PRD-CUR-DAY         > ZEROES
MOVE ZEROES               TO PCU-PRD-CUR-DAY
END-IF.


ADD WS-UIWA-PR-COST (INDX)   TO PCU-PRD-CUR-DAY,
PCU-PRD-YTD
IF PCL-PRD-ALLOW-ORIG (INDX-1) > ZEROES
ADD WS-UIWA-PR-COST(INDX) TO PCU-PRD-ALLOW-USED
END-IF.
MOVE WS-CURRENT-DATE-YYDDD   TO PCU-DATE-LAST-TRANS.

IF EIBRESP = DFHRESP(NORMAL)
EXEC CICS REWRITE
DATASET ('PRDUSED')
FROM    (PRODUCT-CODE-USED)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
EXEC CICS WRITE
DATASET ('PRDUSED')
FROM    (PRODUCT-CODE-USED)
RIDFLD  (PCU-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PCU-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


21150-PREMIER-UPDATES.

MOVE COM-PREMIER-CARD TO PRM-CARD-NUMB
PERFORM PREMIER-UPDATES
IF TSXCO0LM-SECONDARY-CARD-YES
MOVE PRM-CARD-RECORD         TO WS-HOLD-PRM-CARD-RECORD
MOVE TSXCO0LM-PRIMARY-CARD-NR TO PRM-CARD-NUMB
PERFORM PREMIER-UPDATES
MOVE WS-HOLD-PRM-CARD-RECORD TO PRM-CARD-RECORD.


21155-WRITE-LOG-FILES.

MOVE '21155-WRITE-LOG-FILES'     TO CXUTS0ML-PARAGRAPH.

MOVE HLD-PURC-ONE-TIME-PRI TO FMDL-PC-PURCH-1-AMT-USED
MOVE HLD-PURC-ONE-TIME-SEC TO FMDL-PC-PURCH-1-AMT-USED-SEC

MOVE HLD-CASH-ONE-TIME-PRI TO FMDL-PC-CASH-1-AMT-USED
MOVE HLD-CASH-ONE-TIME-SEC TO FMDL-PC-CASH-1-AMT-USED-SEC

MOVE 'N'                   TO FMDL-TAX-EXEMPT-STATUS.
PERFORM 21220-VALIDATE-TAX-EXEMPT.

EXEC CICS WRITE
DATASET ('FMLOG')
FROM    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RIDFLD  (FMLOG-RRN) RRN
RESP    (EIBRESP)
END-EXEC.
MOVE FMLOG-RRN         TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-DUPREC-EIBRESP.
IF EIBRESP = DFHRESP(DUPREC)
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FMLOG-CONTROL-RECORD)
RIDFLD  (FMLOG-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN         TO WS-NUM-7
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
EXEC CICS REWRITE
DATASET ('FMLOG')
FROM    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


EXEC CICS WRITE
DATASET ('PRDDIS')
FROM    (PRDDIS-FILE-AREA)
RIDFLD  (PD-RECORD-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE PD-RECORD-KEY     TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21160-ONE-TIME-UPDATE.

IF CDN-RELATIONSHIP-FLAG = 'Y'     AND
CDN-NETWORK-SET                 AND
COM-RMR-KEY > SPACES
PERFORM CHECK-RMR-ONE-TIME.


21165-RMF-UPDATE.

MOVE '21165-RMF-UPDATE'          TO CXUTS0ML-PARAGRAPH.

IF COM-RMF-FLAG = 'Y' AND
COM-RMF-FMRELAT-UPDATE = 'Y'
EXEC CICS READ
DATASET ('FMRELAT ')
INTO    (RELATIONSHIP-MAINT-RECORD)
RIDFLD  (COM-RMF-FMRELAT-KEY)
RESP    (EIBRESP)
UPDATE
END-EXEC
MOVE COM-RMF-FMRELAT-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
PERFORM 71195-CHECK-RMF-PENDING
EXEC CICS REWRITE
DATASET ('FMRELAT ')
FROM   (RELATIONSHIP-MAINT-RECORD)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


IF COM-RMF-FLAG = 'Y'
MOVE CDN-CUSTOMER-RECORD TO WS-WORK-FIELD

MOVE COM-FP-CO-CODE      TO CDN-CUST-KEY
EXEC CICS READ
DATASET ('CDNCUST')
INTO    (CDN-CUSTOMER-RECORD)
RIDFLD  (CDN-CUST-KEY)
RESP    (EIBRESP)
UPDATE
END-EXEC
MOVE CDN-CUST-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM 60196-CHECK-RMF-NUMERIC
PERFORM 60196-CHECK-RMF-PENDING
COMPUTE CDN-RMF-CURR-VOL-ACT = CDN-RMF-CURR-VOL-ACT    +
FMDL-TR-TRACTOR-GALLONS +
FMDL-TR-OTHER-GALLONS   +
FMDL-NR1-GALLONS
EXEC CICS REWRITE
DATASET ('CDNCUST')
FROM   (CDN-CUSTOMER-RECORD)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE WS-WORK-FIELD       TO CDN-CUSTOMER-RECORD.


21170-BRIDGE-UPDATE.

IF CDN-RELATIONSHIP-FLAG = 'Y'
IF COM-BRIDGE-KEY > SPACES AND
COM-PNET-DAILY-LIMIT > ZEROES
PERFORM UPDATE-RMR-BRIDGE-LIMITS
END-IF
END-IF.




21175-CARD-NETW-UPDT-I.

IF CDN-LIM-NETW-BY-CARD = 'Y' AND
PRM-LIM-NETW-BY-CARD = 'Y'
IF WS-MULTI-PART-PURCHASE = 'Y'
AND WS-NBC-KEY > SPACES
PERFORM UPDATE-CARDNET-REC-I
MOVE 'Y' TO WS-BYPASS-CARD-NETW-UPDT
END-IF
END-IF.

21180-CARD-NETWORK-UPDATE.

IF WS-BYPASS-CARD-NETW-UPDT NOT = 'Y'
IF CDN-LIM-NETW-BY-CARD = 'Y' AND
PRM-LIM-NETW-BY-CARD = 'Y'
IF COM-NETWORK-BY-CARD = 'Y' AND

COM-NBC-KEY  NOT = 'DEFAULT'
PERFORM UPDATE-CARDNET-RECORD.


21190-PO-UPDATE.

IF CDN-PURCHASE-ORDER-POOL AND
WS-UIWA-PO-NR > SPACES  AND
WS-UIWA-PO-NR NOT = '$TERM$'
PERFORM UPDATE-FMPOMST.

IF CDN-PURCHASE-ORDER-NON-POOL
IF WS-UIWA-PO-NR > SPACES AND
WS-UIWA-PO-NR NOT = '$TERM$'
PERFORM LOG-TO-FMPOMST.


21192-FMPOOL-UPDATE.

MOVE '21192-FMPOOL-UPDATE'       TO CXUTS0ML-PARAGRAPH.

IF CDN-VERIFY-TRAILER-HOURS = 'V' AND
TRAILER-PURCHASE = 1
PERFORM READ-FMPOOL-UPDATE
MOVE WS-UIWA-TRAILER-HRS TO FMP-HOUR-METER-READING
MOVE WS-BUSINESS-DATE-CYYMMDD TO FMP-LAST-ACTIVITY
EXEC CICS REWRITE
DATASET ('FMPOOL')
FROM    (FMPOOL-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


READ-FMPOOL-UPDATE.

MOVE 'READ-FMPOOL-UPDATE'        TO CXUTS0ML-PARAGRAPH.
IF CDN-TRAILER-POOL-MSTR > SPACES

MOVE CDN-TRAILER-POOL-MSTR TO FMP-CUSTOMER-ID
ELSE

MOVE PRM-SUB-ACCT-NUMB     TO FMP-CUSTOMER-ID
END-IF.

MOVE '01'               TO FMP-RECORD-ID.
MOVE WS-UIWA-TRAILER-NR TO FMP-POOL-DATA.
EXEC CICS READ
DATASET ('FMPOOL')
RIDFLD  (FMP-KEY)
INTO    (FMPOOL-RECORD)
RESP    (EIBRESP)
UPDATE
END-EXEC.
MOVE FMP-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


21193-RESET-ATP-SWITCH.


IF UNITMST-ADHERE-TO-PROFILE = '1'
PERFORM 83100-READ-UNITMST-UPD
MOVE 'Y' TO UNITMST-ADHERE-TO-PROFILE
PERFORM 83200-REWRITE-UNITMST
END-IF
.


21195-SETUP-CHECK-ENTRY-AREA.

MOVE I-PRMPT-WORK TO CHECK-ENTRY-COMMON-AREA
MOVE SPACES       TO COM-CHECK-DATA-AREA
MOVE 'CHK NTRY'   TO COM-FP-CHECK-FLAG
MOVE CHECK-ENTRY-DATA TO COM-FP-I-DATA.


21200-SETUP-CC-RESPONSE.


IF (COM-COMDATA-COMPLETE-FLAG = 'Y') AND
(COM-CC-RECOURSE)
MOVE 'RC ' TO WS-DB-MSG
MOVE 'RCF' TO WS-DBF-MSG.


21210-SETUP-DB-TF-RESPONSE.


IF FMDL-XTN-TO-BE-SETTLED
PERFORM 21213-SETUP-EXPANDED-MSG-FLAGS
END-IF.

EVALUATE TRUE
WHEN WS-EXPAND-BOTH-MSG = 'Y'
PERFORM 21214-SETUP-EXPANDED-RESPONSE
WHEN WS-EXPAND-DISCOUNT-MSG = 'Y'
PERFORM 21215-SETUP-DISCOUNT-RESPONSE
WHEN WS-EXPAND-FEE-MSG = 'Y'
PERFORM 21216-SETUP-FEE-RESPONSE
WHEN MNX-TRANSACTION AND WS-UIWA-CASH-AMT NOT > ZEROES
WHEN WS-NON-BILLABLE > ZERO AND WS-BILLABLE = ZEROES
PERFORM 21211-SETUP-DB-RESPONSE
WHEN THIS-BE-A-SMART-FUEL-AUTH
IF THIS-BE-TERMINAL-FUEL
PERFORM 21212-SETUP-TF-RESPONSE
ELSE
CONTINUE
END-IF
WHEN THIS-BE-TERMINAL-FUEL
WHEN THIS-BE-AN-UNATTENDED-AUTH
PERFORM 21212-SETUP-TF-RESPONSE
END-EVALUATE.


21211-SETUP-DB-RESPONSE.

PERFORM MOVE-OUTPUT-OK-OUT
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE '0' TO VR-TRANS-FLAG

MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE WS-CONTROL-NR    TO POS-OKGL-CTL
MOVE POS-OKG-LARGE TO POS-MESSAGE
MOVE -1 TO FPCMT1L
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1.


21212-SETUP-TF-RESPONSE.

PERFORM MOVE-OUTPUT-OK-OUT

MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE PD-DD            TO POS-OKT-CTL-DD
MOVE WS-CONTROL-NR    TO POS-OKT-CTL
COMPUTE POS-OKT-GALLONS = FMDL-SC-TR-TRACTOR-GALLONS     +
FMDL-SC-TR-TRAILER-GALLONS     +
FMDL-SC-TR-OTHER-GALLONS       +
FMDL-SC-NR1-GALLONS
COMPUTE POS-OKT-AMOUNT  = FMDL-SC-TR-TRACTOR-COST        +
FMDL-SC-TR-TRAILER-COST        +
FMDL-SC-TR-OTHER-COST          +
FMDL-SC-NR1-COST               +
FMDL-SC-TR-OIL-COST            +
FMDL-SC-TR-CASH-ADVANCE-AMOUNT +
FMDL-SC-TR-PRODUCT-AMOUNT-1    +
FMDL-SC-TR-PRODUCT-AMOUNT-2    +
FMDL-SC-TR-PRODUCT-AMOUNT-3    +
FMDL-SC-TAX-AMT

MOVE PD-YY             TO POS-OKT-DATE (7:2).
MOVE PD-MM             TO POS-OKT-DATE (1:2).
MOVE PD-DD             TO POS-OKT-DATE (4:2).
MOVE '/'               TO POS-OKT-DATE (3:1),
POS-OKT-DATE (6:1).

MOVE EIBTIME           TO WS-TIME-1.
MOVE WS-HOURS-1        TO WS-HOURS-3.
MOVE WS-MINUTES-1      TO WS-MINUTES-3.
MOVE WS-SECONDS-1      TO WS-SECONDS-3.
MOVE WS-TIME-3         TO POS-OKT-TIME.

MOVE POS-OK-TERMINAL  TO POS-MESSAGE

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
MOVE SPACES TO OUTPUT-GOLD-HD-1
MOVE '====*' TO OUTPUT-GOLD-HD-2
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21213-SETUP-EXPANDED-MSG-FLAGS.

IF THIS-IS-A-POS-TRANS
PERFORM 10852-CHECK-FOR-TRENDAR-EQUIP
END-IF.
IF THIS-IS-NOT-A-POS-TRANS OR WS-TRENDAR-EQUIP-FOUND = 'Y'
IF COM-SEND-NET-AMT-MSG-FLAG = 'Y' AND
(FMDL-RD-SC-SELECT-DISCOUNT -
FMDL-REBATE-DISCOUNT-AMT) > 0
MOVE 'Y' TO WS-EXPAND-DISCOUNT-MSG
END-IF
IF WS-CO-FUEL-RATE-REDUCTION > 0
MOVE 'Y' TO WS-EXPAND-FEE-MSG
END-IF
END-IF.
IF WS-EXPAND-DISCOUNT-MSG = 'Y' AND
WS-EXPAND-FEE-MSG = 'Y'
MOVE 'Y' TO WS-EXPAND-BOTH-MSG
END-IF.


21214-SETUP-EXPANDED-RESPONSE.

PERFORM MOVE-OUTPUT-OK-OUT
EVALUATE TRUE
WHEN WS-BILLABLE = ZEROES
MOVE WS-DB-MSG TO POS-OKX-XTN-TYPE
WHEN WS-NON-BILLABLE > ZEROES
MOVE WS-DBF-MSG TO POS-OKX-XTN-TYPE
WHEN OTHER
MOVE '   ' TO POS-OKX-XTN-TYPE
END-EVALUATE.
MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE WS-CONTROL-NR    TO POS-OKX-CTL
COMPUTE POS-OKX-NET = FMDL-TR-TRACTOR-COST        +
FMDL-TR-TRAILER-COST        +
FMDL-TR-OTHER-COST          +
FMDL-NR1-COST               +
FMDL-TR-OIL-COST            +
FMDL-TR-CASH-ADVANCE-AMOUNT +
FMDL-TR-PRODUCT-AMOUNT-1    +
FMDL-TR-PRODUCT-AMOUNT-2    +
FMDL-TR-PRODUCT-AMOUNT-3    -
FMDL-RD-SC-SELECT-DISCOUNT  +
FMDL-REBATE-DISCOUNT-AMT
COMPUTE POS-OKX-FEE-DEDUCT = WS-CO-FUEL-RATE-REDUCTION
MOVE POS-OK-EXPANDED  TO POS-MESSAGE, OUT-COMENT-1

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
MOVE SPACES TO OUTPUT-GOLD-HD-1
MOVE '====*' TO OUTPUT-GOLD-HD-2
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21215-SETUP-DISCOUNT-RESPONSE.

PERFORM MOVE-OUTPUT-OK-OUT
EVALUATE TRUE
WHEN WS-BILLABLE = ZEROES
MOVE WS-DB-MSG TO POS-OKD-XTN-TYPE
WHEN WS-NON-BILLABLE > ZEROES
MOVE WS-DBF-MSG TO POS-OKD-XTN-TYPE
WHEN OTHER
MOVE '   ' TO POS-OKD-XTN-TYPE
END-EVALUATE.
MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE WS-CONTROL-NR    TO POS-OKD-CTL
COMPUTE POS-OKD-NET = FMDL-TR-TRACTOR-COST        +
FMDL-TR-TRAILER-COST        +
FMDL-TR-OTHER-COST          +
FMDL-NR1-COST               +
FMDL-TR-OIL-COST            +
FMDL-TR-CASH-ADVANCE-AMOUNT +
FMDL-TR-PRODUCT-AMOUNT-1    +
FMDL-TR-PRODUCT-AMOUNT-2    +
FMDL-TR-PRODUCT-AMOUNT-3    -
FMDL-RD-SC-SELECT-DISCOUNT  +
FMDL-REBATE-DISCOUNT-AMT
MOVE POS-OK-DISCOUNT  TO POS-MESSAGE, OUT-COMENT-1

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
MOVE SPACES TO OUTPUT-GOLD-HD-1
MOVE '====*' TO OUTPUT-GOLD-HD-2
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21216-SETUP-FEE-RESPONSE.

PERFORM MOVE-OUTPUT-OK-OUT
EVALUATE TRUE
WHEN WS-BILLABLE = ZEROES
MOVE WS-DB-MSG TO POS-OKF-XTN-TYPE
WHEN WS-NON-BILLABLE > ZEROES
MOVE WS-DBF-MSG TO POS-OKF-XTN-TYPE
WHEN OTHER
MOVE '   ' TO POS-OKF-XTN-TYPE
END-EVALUATE.
MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE WS-CONTROL-NR    TO POS-OKF-CTL
COMPUTE POS-OKF-FEE-DEDUCT = WS-CO-FUEL-RATE-REDUCTION
MOVE POS-OK-FEE       TO POS-MESSAGE, OUT-COMENT-1

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
MOVE SPACES TO OUTPUT-GOLD-HD-1
MOVE '====*' TO OUTPUT-GOLD-HD-2
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21220-VALIDATE-TAX-EXEMPT.

IF FMDL-OTHER-FUEL-TYPE > SPACES
OR FMDL-NR2-SUB-PROD-CODE > SPACES
OR FMDL-NR1-SUB-PROD-CODE > SPACES
OR FMDL-RFR-SUB-PROD-CODE > SPACES
PERFORM 21222-SELECT-TAX-EXEMPT-ACCT
IF SQLCODE = ZERO
MOVE 'P'               TO FMDL-TAX-EXEMPT-STATUS
PERFORM 21224-LINK-TSFMO0TX
END-IF
END-IF.


21222-SELECT-TAX-EXEMPT-ACCT.

INITIALIZE DTAXEXEA.
MOVE FMDL-CUST-ACCOUNT-CODE  TO WS-PROC-ACCT-NBR.
CALL 'CXUTS124' USING
WS-PROC-ACCT-NBR,
PROC-ACCT-NBR OF DTAXEXEA,
BY CONTENT LENGTH OF WS-PROC-ACCT-NBR,
BY CONTENT LENGTH OF PROC-ACCT-NBR OF DTAXEXEA
END-CALL.

EXEC SQL
SELECT PROC_ACCT_NBR
INTO :DTAXEXEA.PROC-ACCT-NBR
FROM DBO.TAX_EXEMPT_ACCNTS
WHERE PROC_ACCT_NBR     = :DTAXEXEA.PROC-ACCT-NBR
AND REMOVE_EXEMPT_FLG = 'N'
END-EXEC.

EVALUATE SQLCODE
WHEN +000
WHEN +100
CONTINUE
WHEN -811
MOVE +000              TO SQLCODE
WHEN OTHER
MOVE '21222-SELECT-TAX-EXEMPT-ACCT'
TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.TAX_EXEMPT_ACCNTS'
TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.


21224-LINK-TSFMO0TX.

MOVE '21224-LINK-TSFMO0TX'       TO CXUTS0ML-PARAGRAPH.
INITIALIZE WS-TSFMO0TX-COMM-AREA.
MOVE 'US      '              TO WS-TSFMO0TX-COMM-PGM.
MOVE 'O'                     TO WS-TSFMO0TX-COMM-PROCESS-TYPE
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO WS-TSFMO0TX-COMM-FMLOG.

EXEC CICS LINK
PROGRAM  ('TSFMO0TX')
COMMAREA (WS-TSFMO0TX-COMM-AREA)
LENGTH   (LENGTH OF WS-TSFMO0TX-COMM-AREA)
RESP     (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NORMAL-EIBRESP.


21230-LOG-TO-INTRADAY.


IF CDN-INTRA-DAY-FLAG = 'Y'
PERFORM INTRA-DAY-DOWNLOAD
PERFORM INTRA-DAY-DOWNLOAD-BF3
END-IF.


ADD-TO-PRE-AUTH-TBL.

INITIALIZE                                      DPRPPAUT
MOVE WS-UIWA-CARD-NR         TO CRD-NBR      OF DPRPPAUT
IF WS-UIWA-SC-CODE > SPACES
MOVE WS-UIWA-SC-CODE      TO MRCH-NBR     OF DPRPPAUT
ELSE
MOVE SCM-SERVICE-CENTER-CODE
TO MRCH-NBR     OF DPRPPAUT
END-IF
MOVE WS-CURRENT-YYYYMMDD-FMT TO PRE-AUTH-DT  OF DPRPPAUT
MOVE 'N'                     TO POST-FLG     OF DPRPPAUT
IF THIS-BE-A-PRODUCT-PRE-AUTH
PERFORM BUILD-SP14-PRE-AUTH
ELSE
PERFORM BUILD-SP08-PRE-AUTH
END-IF
MOVE +2                      TO CRT-USR-LEN  OF DPRPPAUT
MDY-USR-LEN  OF DPRPPAUT
MOVE 'US'                    TO CRT-USR-TEXT OF DPRPPAUT
MDY-USR-TEXT OF DPRPPAUT
MOVE WS-UIWA-SWIPED-KEYED    TO WCC-CD       OF DPRPPAUT

MOVE 'ADD-TO-PRE-AUTH-TBL' TO CXUTS0ML-PARAGRAPH
MOVE 'INSERT'              TO CXUTS0ML-COMMAND

IF WS-CURRENT-TIMESTAMP NOT > SPACES
PERFORM GET-CURRENT-TIMESTAMP
END-IF.

MOVE WS-CURRENT-TIMESTAMP        TO PRE-AUTH-TS OF DPRPPAUT.

PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
INSERT INTO DBO.PRP_PRE_AUTH
(CRD_NBR,
MRCH_NBR,
PRE_AUTH_DT,
PRE_AUTH_TS,
POST_FLG,
D1_QTY_LIM,
D1_AMT_LIM,
D2_QTY_LIM,
D2_AMT_LIM,
RFR_QTY_LIM,
RFR_AMT_LIM,
OTH_QTY_LIM,
OTH_AMT_LIM,
ALL_AMT_LIM,
OIL_QTY_LIM,
OIL_AMT_LIM,
CASH_AMT_LIM,
CRT_TS,
CRT_USR,
MDY_TS,
MDY_USR,
WCC_CD)
VALUES (:DPRPPAUT.CRD-NBR,
:MRCH-NBR,
:PRE-AUTH-DT,
:PRE-AUTH-TS,
:POST-FLG,
:D1-QTY-LIM,
:D1-AMT-LIM,
:D2-QTY-LIM,
:D2-AMT-LIM,
:RFR-QTY-LIM,
:RFR-AMT-LIM,
:OTH-QTY-LIM,
:OTH-AMT-LIM,
:ALL-AMT-LIM,
:OIL-QTY-LIM,
:OIL-AMT-LIM,
:CASH-AMT-LIM,
:WS-CURRENT-TIMESTAMP,

:DPRPPAUT.CRT-USR,
:WS-CURRENT-TIMESTAMP,

:DPRPPAUT.MDY-USR,
:WCC-CD)
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM
PERFORM CHECK-NORMAL-SQL.

IF SCM-ALLOW-BLOCK-TERMINAL-FLAG = 'Y'
PERFORM 21231-START-FMTB
END-IF.


21231-START-FMTB.


MOVE SPACES                      TO WS-FMTB-COMMAREA.
MOVE CRD-NBR OF DPRPPAUT         TO WS-FMTB-CRD-NBR.
MOVE MRCH-NBR OF DPRPPAUT        TO WS-FMTB-MRCH-NBR.
MOVE PRE-AUTH-DT OF DPRPPAUT     TO WS-FMTB-PRE-AUTH-DT.
MOVE PRE-AUTH-TS OF DPRPPAUT     TO WS-FMTB-PRE-AUTH-TS.
MOVE POST-FLG OF DPRPPAUT        TO WS-FMTB-POST-FLG.

MOVE 'TSFMO0TB'                  TO CODES-PGM.
MOVE '001'                       TO CODES-SEQ.

PERFORM 21232-READ-CODES.

PERFORM 21233-START-FMTB.


21232-READ-CODES.



MOVE '21232-READ-CODES'          TO CXUTS0ML-PARAGRAPH.
MOVE CODES-KEY                   TO CXUTS0ML-COMMAND.

EXEC CICS READ
DATASET  ('CODES')
RIDFLD   (CODES-KEY)
INTO     (PROGRAM-CODES)
RESP     (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NOTFND-EIBRESP.

EVALUATE EIBRESP
WHEN DFHRESP(NORMAL)
MOVE CODES-DATA(1:6) TO WS-INTERVAL-CONTROL-X
WHEN OTHER
MOVE 010000          TO WS-INTERVAL-CONTROL
END-EVALUATE.

MOVE WS-INTERVAL-CONTROL   TO WS-INTERVAL-CONTROL-PACKED.


21233-START-FMTB.


MOVE '21233-START-FMTB'          TO CXUTS0ML-PARAGRAPH.
MOVE 'START'                     TO CXUTS0ML-COMMAND.

EXEC CICS START
TRANSID ('FMTB')
INTERVAL (WS-INTERVAL-CONTROL-PACKED)
FROM    (WS-FMTB-COMMAREA)
LENGTH  (LENGTH OF WS-FMTB-COMMAREA)
RESP    (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NORMAL-EIBRESP.


BUILD-SP08-PRE-AUTH.

MOVE WS-AUTO-GAS-AVAIL-QTY-NR1 TO D1-QTY-LIM   OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL-QTY-NR2 TO D2-QTY-LIM   OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL-QTY-REF TO RFR-QTY-LIM  OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL-QTY-OTH TO OTH-QTY-LIM  OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL         TO ALL-AMT-LIM  OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL-QTY-OIL TO OIL-QTY-LIM  OF DPRPPAUT
MOVE WS-AUTO-GAS-AVAIL-AMT-CSH TO CASH-AMT-LIM OF DPRPPAUT.

BUILD-SP14-PRE-AUTH.

MOVE WS-SP14-MAX-NR1-QTY       TO D1-QTY-LIM   OF DPRPPAUT
MOVE WS-SP14-MAX-NR1-AMT       TO D1-AMT-LIM   OF DPRPPAUT
MOVE WS-SP14-MAX-NR2-QTY       TO D2-QTY-LIM   OF DPRPPAUT
MOVE WS-SP14-MAX-NR2-AMT       TO D2-AMT-LIM   OF DPRPPAUT
MOVE WS-SP14-MAX-REF-QTY       TO RFR-QTY-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-REF-AMT       TO RFR-AMT-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-OTH-QTY       TO OTH-QTY-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-OTH-AMT       TO OTH-AMT-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-PRD-AMT       TO ALL-AMT-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-OIL-QTY       TO OIL-QTY-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-OIL-AMT       TO OIL-AMT-LIM  OF DPRPPAUT
MOVE WS-SP14-MAX-CASH-AVAIL    TO CASH-AMT-LIM OF DPRPPAUT.

UPDT-RFID-XREF-BUILD.

MOVE WS-UIWA-CARD-NR    TO LST-USE-CRD-NBR       OF DRFIDXRF
MOVE WS-UIWA-SC-CODE    TO LST-USE-LOC-ID        OF DRFIDXRF

CALL 'CXUTS124' USING
WS-UIWA-PROMPTED-DRIVER-ID,
LST-USE-DRVR-NBR OF DRFIDXRF,
BY CONTENT LENGTH OF WS-UIWA-PROMPTED-DRIVER-ID,
BY CONTENT LENGTH OF LST-USE-DRVR-NBR OF DRFIDXRF
END-CALL
CALL 'CXUTS124' USING
WS-UIWA-TRAILER-NR,
LST-USE-TRLR-NBR OF DRFIDXRF,
BY CONTENT LENGTH OF WS-UIWA-TRAILER-NR,
BY CONTENT LENGTH OF LST-USE-TRLR-NBR OF DRFIDXRF
END-CALL
IF WS-UIWA-HUB NUMERIC
MOVE WS-UIWA-HUB      TO LST-USE-HUB-LO-VAL   OF DRFIDXRF
LST-USE-HUB-HI-VAL   OF DRFIDXRF
ELSE
MOVE ZERO             TO LST-USE-HUB-LO-VAL   OF DRFIDXRF
LST-USE-HUB-HI-VAL   OF DRFIDXRF
END-IF
IF WS-UIWA-TRAILER-HUB NUMERIC
MOVE WS-UIWA-TRAILER-HUB
TO LST-USE-TRLR-HUB-VAL OF DRFIDXRF
ELSE
MOVE ZERO             TO LST-USE-TRLR-HUB-VAL OF DRFIDXRF
END-IF
IF WS-UIWA-TRAILER-HRS NUMERIC
MOVE WS-UIWA-TRAILER-HRS TO LST-USE-TRLR-HRS  OF DRFIDXRF
ELSE
MOVE ZERO                TO LST-USE-TRLR-HRS  OF DRFIDXRF
END-IF
CALL 'CXUTS124' USING
WS-UIWA-TRIP-NR,
LST-USE-TRIP-NBR OF DRFIDXRF,
BY CONTENT LENGTH OF WS-UIWA-TRIP-NR,
BY CONTENT LENGTH OF LST-USE-TRIP-NBR OF DRFIDXRF
END-CALL
CALL 'CXUTS124' USING
WS-UIWA-DL-NR,
LST-USE-DL-NBR OF DRFIDXRF,
BY CONTENT LENGTH OF WS-UIWA-DL-NR,
BY CONTENT LENGTH OF LST-USE-DL-NBR   OF DRFIDXRF
END-CALL
MOVE WS-UIWA-DL-ST      TO LST-USE-DL-ST         OF DRFIDXRF
CALL 'CXUTS124' USING
WS-UIWA-PO-NR,
LST-USE-PO-NBR OF DRFIDXRF,
BY CONTENT LENGTH OF WS-UIWA-PO-NR,
BY CONTENT LENGTH OF LST-USE-PO-NBR OF DRFIDXRF
END-CALL
CALL 'CXUTS124' USING
PRM-LAST-NAME,
LST-USE-LST-NM OF DRFIDXRF,
BY CONTENT LENGTH OF PRM-LAST-NAME,
BY CONTENT LENGTH OF LST-USE-LST-NM OF DRFIDXRF
END-CALL
CALL 'CXUTS124' USING
PRM-FIRST-NAME,
LST-USE-FST-NM OF DRFIDXRF,
BY CONTENT LENGTH OF PRM-FIRST-NAME,
BY CONTENT LENGTH OF LST-USE-FST-NM OF DRFIDXRF
END-CALL
MOVE WS-UIWA-UNIT-NR-10 TO LST-USE-UNIT-NBR      OF DRFIDXRF
MOVE +2                 TO MDY-USR-LEN           OF DRFIDXRF
MOVE 'US'               TO MDY-USR-TEXT          OF DRFIDXRF
CONTINUE.

UPDT-RFID-XREF-UPDATE.

MOVE 'UPDT-RFID-XREF-UPDATE' TO CXUTS0ML-PARAGRAPH
MOVE 'UPDATE DBO.RFID_XREF'  TO CXUTS0ML-COMMAND
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
UPDATE DBO.RFID_XREF
SET LST_USE_TS         = CURRENT TIMESTAMP,
LST_USE_CRD_NBR    = :DRFIDXRF.LST-USE-CRD-NBR,
LST_USE_LOC_ID     = :DRFIDXRF.LST-USE-LOC-ID,
LST_USE_DRVR_NBR   = :DRFIDXRF.LST-USE-DRVR-NBR,
LST_USE_TRLR_NBR   = :DRFIDXRF.LST-USE-TRLR-NBR,
LST_USE_HUB_LO_VAL = :DRFIDXRF.LST-USE-HUB-LO-VAL,
LST_USE_HUB_HI_VAL = :DRFIDXRF.LST-USE-HUB-HI-VAL,
LST_USE_TRLR_HUB_VAL
= :DRFIDXRF.LST-USE-TRLR-HUB-VAL,
LST_USE_TRLR_HRS   = :DRFIDXRF.LST-USE-TRLR-HRS,
LST_USE_TRIP_NBR   = :DRFIDXRF.LST-USE-TRIP-NBR,
LST_USE_DL_NBR     = :DRFIDXRF.LST-USE-DL-NBR,
LST_USE_DL_ST      = :DRFIDXRF.LST-USE-DL-ST,
LST_USE_PO_NBR     = :DRFIDXRF.LST-USE-PO-NBR,
LST_USE_LST_NM     = :DRFIDXRF.LST-USE-LST-NM,
LST_USE_FST_NM     = :DRFIDXRF.LST-USE-FST-NM,
LST_USE_UNIT_NBR   = :DRFIDXRF.LST-USE-UNIT-NBR,
MDY_TS             = CURRENT TIMESTAMP,
MDY_USR            = :DRFIDXRF.MDY-USR
WHERE RFID_NBR         = :WS-UIWA-RFID-NBR
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM
PERFORM CHECK-NORMAL-SQL.

21240-CHECK-MANUAL-FEE-EXIT.

IF WS-MANUAL-FEE > ZEROES
IF PC-HAS-ATTACHED-PRINT
PERFORM FP-1150
ELSE
MOVE SAVE-AMOUNT     TO OUT-NETXMN
MOVE WS-CONTROL-NR   TO OUT-CTL-NR
ADD WS-CONTROL-NR-SETTLE, 2276 GIVING OUT-CK-AUTH-NR
MOVE OUTPUT-DATA-OK  TO OUT-COMENT-1
MOVE OUTPUT-2ND-LINE TO OUT-COMENT-2

MOVE +80 TO WS-FIELD-LEN-1
MOVE +38 TO WS-FIELD-LEN-2
MOVE +80 TO WS-FIELD-LEN-3
MOVE 'YNN'         TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
OUT-COMENT-2,
WS-FIELD-LEN-2,
SETTLEMENT-DISPLAY-MSG,
WS-FIELD-LEN-3,
WS-FIELD-83
WS-CXUTSJON-OPTIONS
MOVE WS-FIELD-83 TO OUT-COMENT-2

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21250-CHECK-DB-EXIT.

IF (MNX-TRANSACTION AND WS-UIWA-CASH-AMT NOT > ZEROES) OR
(WS-NON-BILLABLE > ZEROES AND WS-BILLABLE = ZEROES)
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21260-CHECK-SETTLE-EXIT.

IF THIS-IS-A-SETTLEMENT-ITEM
PERFORM MOVE-OUTPUT-OK-OUT

MOVE TRANSACTION-RECORDED TO OUT-COMENT-2
MOVE ZEROES TO POS-ERROR-NUMBER

MOVE WS-CONTROL-NR    TO POS-OKGL-CTL
MOVE POS-OKG-LARGE TO POS-MESSAGE

MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
IF NOT THIS-BE-A-PC-REQUEST
MOVE 'G' TO GOLD-OK-FLAG
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE OUT-COMENT-1 TO OUT-COMENT-2
MOVE OK-G TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


21270-CHECK-ATTACHED-PRNT-EXIT.

IF FPAUTOI = 'N' OR
PC-HAS-ATTACHED-PRINT
PERFORM FP-1100.


21280-GET-SC-INFO.

MOVE '21280-GET-SC-INFO'         TO CXUTS0ML-PARAGRAPH.
IF WS-UIWA-SC-CODE IS NOT EQUAL TO SCM-KEY
MOVE WS-UIWA-SC-CODE      TO  SCMSTR-KEY-TEMP
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY-TEMP)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY-TEMP   TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE SCMSTR-KEY-TEMP TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS .


21290-LOAD-TO-SENDING-QUE.

MOVE WS-CTR1 TO ORDRFIL-RRN.

MOVE 00                     TO  WS-ORWA-FUNCTION.
MOVE SCM-AUTOMATION-OUTPUT-STATUS
TO  WS-ORWA-AUTO-OUT-STATUS.
MOVE CL-CO-FULL-NM OF DCREDITL
TO  WS-ORWA-CR-CO-FULL-NAME.
MOVE ORDRFIL-RRN            TO  WS-ORWA-ORDRFIL-RRN.
PERFORM LOAD-TO-SENDING-QUEUES.
MOVE ORDRFIL-DETAIL-RECD    TO  COM-FP-ORDRFIL.

IF THIS-BE-A-PC-REQUEST
MOVE THANK-YOU TO POS-MESSAGE
MOVE OK-MSG2 TO OUT-COMENT-1
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE '0' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.
PERFORM MOVE-OUTPUT-OK-OUT.
MOVE AUTO-DIAL-MESSAGE TO OUT-COMENT-2.
MOVE -1 TO FPCMT1L.
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO.
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO.
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


FP-1100.

MOVE 'FP-1100'                   TO CXUTS0ML-PARAGRAPH.

MOVE COM-FP-TRANS-AMT  TO CHECK-AMOUNT.
MOVE 'L2'              TO CHECK-ENTRY-CONTROL.
MOVE WS-UIWA-CHECK-NRX TO CHECK-NR-AREA.
PERFORM VALIDATE-CHECK-NR.

MOVE WS-CICS-CONTROL-RECORD TO CHECK-ENTRY-ONLRCD.
MOVE COM-FP-ORDRFIL         TO  CHECK-ENTRY-ORDRFIL
ORDRFIL-DETAIL-RECD.
IF ODR-DRAFT-AMT IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-DRAFT-AMT IN ORDRFIL-DETAIL-RECD TO
CHECK-ENTRY-CANADIAN-AMT,
HLD-EXPECTED-AMOUNT.
MOVE 'FP' TO CHECK-ENTRY-TRAN-ID.
MOVE 1ST-10-BYTES           TO  WS-CHECK-HOLD
WS-UIWA-CHECK-NR1
WS-UIWA-CHECK-NR2.



IF WS-FP-ACCT-CODE IS NOT EQUAL TO 'CD006' THEN
EXEC CICS LINK
PROGRAM  ('I')
COMMAREA (CHECK-ENTRY-COMMON-AREA)
LENGTH   (562)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE 'Y' TO WS-LINK-TO-I-SW
ELSE
MOVE LOW-VALUES TO CHECK-ENTRY-MESSAGE-1.

IF CHECK-ENTRY-MESSAGE-1 IS NOT > SPACES AND
PC-HAS-ATTACHED-PRINT
PERFORM FP-1150.

EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
EVALUATE EIBRESP
WHEN DFHRESP(NORMAL)
PERFORM 60200-CHECK-SCMSTR-NUMERICS
MOVE SCM-KEY                TO SCMSTR-KEY
MOVE SCMSTR-KEY             TO WS-LAST-SCMM-READ
MOVE WS-CHECK-HOLD          TO SCM-LAST-CHECK-NUMBER
EXEC CICS REWRITE
DATASET ('SCMSTR')
FROM    (SERVICE-CENTER-MASTER-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
WHEN OTHER
EXEC CICS UNLOCK DATASET ('SCMSTR') END-EXEC
END-EVALUATE.

IF CHECK-ENTRY-MESSAGE-1 = SPACES OR LOW-VALUES
PERFORM MOVE-OUTPUT-OK-OUT
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE POS-OK TO POS-MESSAGE

MOVE '0' TO VR-TRANS-FLAG
MOVE -1 TO FPCMT1L
MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
ELSE
MOVE CHECK-ENTRY-ERROR-N TO POS-ERROR-NUMBER
MOVE CHECK-ENTRY-ERROR   TO POS-MESSAGE
MOVE CHECK-ENTRY-MESSAGE-1 TO OUT-COMENT-1
MOVE CHECK-ENTRY-MESSAGE-2 TO OUT-COMENT-2
MOVE '4' TO VR-TRANS-FLAG
MOVE -1 TO FPCHKL.

PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


FP-1150.



PERFORM UPDATE-CDEQUIP.

MOVE WS-CONTROL-NR TO ATT-CTL-NUMBER.
COMPUTE ATT-AUTH-NUMBER =
(WS-CONTROL-NR + 2276).
IF WS-MANUAL-FEE > ZEROES
MOVE SAVE-AMOUNT TO ATT-TOTAL-ORDER-AMT,
ATT-INCREMENT-AMT
ELSE
MOVE WS2-CURXMN        TO ATT-TOTAL-ORDER-AMT,
ATT-INCREMENT-AMT.

MOVE WS-CURRENT-DATE-MMDDYY TO WS-DATE-1
MOVE WS-MONTH-1    TO WS-MONTH-3.
MOVE WS-DAY-1      TO WS-DAY-3.
MOVE WS-YEAR-1     TO WS-YEAR-3.
MOVE WS-DATE-3     TO ATT-DATE.
MOVE EIBTIME       TO WS-TIME-1.
MOVE WS-HOURS-1    TO WS-HOURS-3.
MOVE WS-MINUTES-1  TO WS-MINUTES-3.
MOVE WS-SECONDS-1  TO WS-SECONDS-3.
MOVE WS-TIME-3     TO ATT-TIME.


IF WS-MANUAL-FEE > ZEROES
MOVE WS-HOLD-ODR-NAME TO ODR-NAME IN ORDRFIL-DETAIL-RECD.
IF ODR-NAME IN ORDRFIL-DETAIL-RECD IS GREATER THAN SPACES
MOVE ODR-NAME IN ORDRFIL-DETAIL-RECD
TO WS-SAVE-NAME-11
ELSE
MOVE WS-UIWA-UNIT-NR TO WS-SAVE-NAME-6.
MOVE SCM-LOCATION-NAME     TO WS-SAVE-NAME-44.
MOVE WS-SAVE-NAME TO WS-FIELD-60.
MOVE WS-CHAR-3 TO WS-FIELD-3.
MOVE 60 TO WS-FIELD-LEN-1.
MOVE 3  TO WS-FIELD-LEN-2.
MOVE 63 TO WS-FIELD-LEN-3.
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1, WS-FIELD-60,
WS-FIELD-LEN-2, WS-FIELD-3,
WS-FIELD-LEN-3, WS-FIELD-63,
WS-CXUTSJON-OPTIONS
MOVE CL-CO-FULL-NM OF DCREDITL TO WS-FIELD-20.
MOVE 63 TO WS-FIELD-LEN-1.
MOVE 20 TO WS-FIELD-LEN-2.
MOVE 83 TO WS-FIELD-LEN-3.
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1, WS-FIELD-63,
WS-FIELD-LEN-2, WS-FIELD-20,
WS-FIELD-LEN-3, WS-FIELD-83,
WS-CXUTSJON-OPTIONS
MOVE WS-CHAR-3 TO WS-FIELD-3.
MOVE 83 TO WS-FIELD-LEN-1.
MOVE 3  TO WS-FIELD-LEN-2.
MOVE 86 TO WS-FIELD-LEN-3.
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1, WS-FIELD-83,
WS-FIELD-LEN-2, WS-FIELD-3,
WS-FIELD-LEN-3, WS-FIELD-86,
WS-CXUTSJON-OPTIONS
MOVE 86 TO WS-FIELD-LEN-1.
MOVE 39 TO WS-FIELD-LEN-2.
MOVE 125 TO WS-FIELD-LEN-3.
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1, WS-FIELD-86,
WS-FIELD-LEN-2, WS-FIELD-39,
WS-FIELD-LEN-3, WS-FIELD-125
WS-CXUTSJON-OPTIONS
MOVE WS-FIELD-125 TO ATT-REMAINDER.

MOVE ZEROES TO POS-ERROR-NUMBER.
MOVE ATTACHED-PRINT-RESPONSE TO POS-MESSAGE.
MOVE POS-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.


SEND-FUEL-PRICE-ERROR-COMPUTE.

EVALUATE SCM-LOCATION-STATE
WHEN 'NF'
WHEN 'NB'
WHEN 'NS'
WHEN 'PE'

COMPUTE WS-TAX-PPL-WORK ROUNDED =
WS-TAX-PPL + (WS-TAX-PPL * .15)

WHEN OTHER
MOVE WS-TAX-PPL TO WS-TAX-PPL-WORK
IF SCM-LOCATION-STATE = 'PQ' OR 'QU' OR 'QC'

COMPUTE WS-TAX-PPL-WORK ROUNDED =
WS-TAX-PPL-WORK + (WS-TAX-PPL * .075)
END-IF

COMPUTE WS-TAX-PPL-WORK ROUNDED =
WS-TAX-PPL-WORK + (WS-TAX-PPL * .07)
END-EVALUATE.

MOVE WS-TAX-PPL-WORK TO WS-TAX-PPL.


SEND-FUEL-PRICE-ERROR.

IF COM-FUEL-PRICE-CREDIT
MOVE 'CREDIT' TO PRICE-ERROR-TYPE
PRICE-ERROR-TYPE-TAX.
EVALUATE FPFSI
WHEN 'F'
MOVE COM-FP-FULL-PRICE TO PRICE-ERROR-AMT
WS-TAX-PPL
WHEN 'M'
MOVE COM-FP-MINI-PRICE TO PRICE-ERROR-AMT
WS-TAX-PPL
WHEN OTHER
MOVE COM-FP-SELF-PRICE TO PRICE-ERROR-AMT
WS-TAX-PPL
END-EVALUATE.

IF WS-TAX-COMPUTED-FLAG = 'Y'
PERFORM SEND-FUEL-PRICE-ERROR-COMPUTE
MOVE WS-TAX-PPL         TO PRICE-ERROR-AMT-TAX
MOVE '*INCLUDE TAX AMT' TO PRICE-ERROR-TAX-MSG
PRICE-ERROR-TAX-MSG-TAX.
MOVE COM-FP-PRICE-TIME TO SYS-TIME.
PERFORM TIM-0020.

MOVE +025 TO CALENDAR-OPTIONS.
MOVE COM-FP-PRICE-DATE TO CALENDAR-JULIAN-DATE.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-MMDDYY   TO SYS-DATE.
PERFORM DAT-0000.
MOVE EDITED-DATE TO PRICE-ERROR-DATE
PRICE-ERROR-DATE-TAX.
IF WS-TAX-COMPUTED-FLAG = 'Y'
MOVE FUEL-PRICE-ERROR-TAX   TO OUT-COMENT
MOVE FUEL-PRICE-ERROR-TAX-N TO POS-ERROR-NUMBER
ELSE
MOVE FUEL-PRICE-ERROR       TO OUT-COMENT
MOVE FUEL-PRICE-ERROR-N     TO POS-ERROR-NUMBER.
MOVE -1 TO FPCOSTL
MOVE 'I' TO FPCOSTA.
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


40000-CHECK-FOR-TRI-STATE.

IF COM-FP-CO-CODE   = ('00109' OR '00115' OR '00238') OR
WS-FP-ACCT-CODE = ('TR440' OR 'TR335' OR
'SC071' OR 'LE041')
SET WS-TRI-STATE-ACCT     TO TRUE
ELSE
SET WS-TRI-STATE-ACCT-NOT TO TRUE
END-IF.


BLD-0010.

MOVE 'BLD-0010'                  TO CXUTS0ML-PARAGRAPH.
MOVE PD-MDY             TO WS-WORK-NW-DATE.
IF SCM-SERVICE-CENTER-CODE NOT > SPACES AND
EIBTRNID NOT = 'FP'
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS
END-IF
END-IF.
MOVE SCM-KEY                TO  SCMSTR-KEY.


DISPLAY-MAP-DATA.

PERFORM DISPLAY-MAP-DATA-EXPECTED.
PERFORM DISPLAY-MAP-DATA-TRACTOR-FUEL.
PERFORM DISPLAY-MAP-DATA-OTHER-FUEL.
PERFORM DISPLAY-MAP-DATA-TRAILER-FUEL
PERFORM DISPLAY-MAP-DATA-NR1-FUEL.
PERFORM DISPLAY-MAP-DATA-OIL.
PERFORM DISPLAY-MAP-DATA-TAX.
PERFORM DISPLAY-MAP-DATA-OTHER.


DISPLAY-MAP-DATA-EXPECTED.

MOVE WS-UIWA-INVOICE-AMT-SC TO OUT-TOTAL-COST
MOVE OUT-TOTAL-COST         TO FPXPAMTO.


DISPLAY-MAP-DATA-TRACTOR-FUEL.


IF WS-UIWA-NR2-QTY-SC > ZEROS
MOVE WS-UIWA-NR2-QTY-SC TO OUT-NR-GALLONS
MOVE OUT-NR-GALLONS TO FPGLNSO.

IF WS-UIWA-NR2-PPU-SC > ZEROES
MOVE WS-UIWA-NR2-PPU-SC TO OUT-PRICE-GALLON
MOVE OUT-PRICE-GALLON TO FPCOSTO.

IF WS-UIWA-NR2-COST-SC > ZEROES


MOVE WS-UIWA-NR2-COST-SC TO OUT-TOTAL-COST
MOVE OUT-TOTAL-COST      TO FPTTLO.


DISPLAY-MAP-DATA-OTHER-FUEL.


IF WS-UIWA-OTH-QTY-SC > ZEROS
MOVE WS-UIWA-OTH-QTY-SC TO OUT-NR-GALLONS
MOVE OUT-NR-GALLONS TO FPGLNSBO.

IF WS-UIWA-OTH-PPU-SC > ZEROES
MOVE WS-UIWA-OTH-PPU-SC TO OUT-PRICE-GALLON
MOVE OUT-PRICE-GALLON TO FPCOSTBO.

IF WS-UIWA-OTH-COST > ZEROES


MOVE WS-UIWA-OTH-COST-SC TO OUT-TOTAL-COST
MOVE OUT-TOTAL-COST     TO FPTTLBO.


DISPLAY-MAP-DATA-TRAILER-FUEL.


IF WS-UIWA-REF-QTY-SC > ZEROS
MOVE WS-UIWA-REF-QTY-SC TO OUT-NR-GALLONS
MOVE OUT-NR-GALLONS TO TRGLNO.

IF WS-UIWA-REF-PPU-SC > ZEROES
MOVE WS-UIWA-REF-PPU-SC TO OUT-PRICE-GALLON
MOVE OUT-PRICE-GALLON TO TRCOSTO.

IF WS-UIWA-REF-COST-SC > ZEROES


MOVE WS-UIWA-REF-COST-SC TO OUT-TOTAL-COST
MOVE OUT-TOTAL-COST     TO TRTOTALO.


DISPLAY-MAP-DATA-NR1-FUEL.


IF WS-UIWA-NR1-QTY-SC > ZEROS
MOVE WS-UIWA-NR1-QTY-SC TO OUT-NR-GALLONS
MOVE OUT-NR-GALLONS TO NR1GLNSO.

IF WS-UIWA-NR1-PPU-SC > ZEROES
MOVE WS-UIWA-NR1-PPU-SC TO OUT-PRICE-GALLON
MOVE OUT-PRICE-GALLON TO NR1COSTO.

IF WS-UIWA-NR1-COST-SC > ZEROES


MOVE WS-UIWA-NR1-COST-SC TO OUT-TOTAL-COST
MOVE OUT-TOTAL-COST     TO NR1TTLO.


DISPLAY-MAP-DATA-OIL.


IF WS-UIWA-OIL-COST-SC > ZEROS
MOVE WS-UIWA-OIL-COST-SC TO OILCSTO.
IF WS-UIWA-OIL-QTY > ZEROS
MOVE WS-UIWA-OIL-QTY-SC TO OILQTSO.


DISPLAY-MAP-DATA-TAX.


IF WS-UIWA-TAX-AMT-SC > ZEROES
MOVE WS-UIWA-TAX-AMT-SC TO CTAXO.


DISPLAY-MAP-DATA-OTHER.


MOVE COM-UNIT-NR-EXPANDED TO FPUNITO (01:10)
MOVE '.'                  TO FPUNITO (11:01)
MOVE 11 TO FIELD-LENGTH.
CALL 'CXUTSSPL' USING FIELD-LENGTH, FPUNITO, FILL-CHAR.


VERIFY-PRICE.

MOVE SPACES TO ERROR-FLAG, ERROR-TYPE.
IF INP2-NR-GALLONS   < .01 OR
INP2-PRICE-GALLON < .01 OR
INP2-TOTAL-COST   < .01
MOVE '*' TO ERROR-FLAG
MOVE ZERO-OR-NEG TO ERROR-TYPE
MOVE ZERO-OR-NEG-N TO POS-ERROR-NUMBER
MOVE ERROR-TYPE TO OUT-COMENT
END-IF.



IF SCM-IS-IN-CANADA       AND
SCM-AUTO-CALC-TAX-YES  AND
SCPM-AUTO-CALC-TAX-YES
PERFORM SPR-GET-SERVICE-TYPE.

IF ERROR-FLAG = '*'
CONTINUE
ELSE
MULTIPLY INP2-NR-GALLONS BY INP2-PRICE-GALLON
GIVING WS-TOTAL-PRICE ROUNDED
PERFORM VERIFY-PRICE-COMP
END-IF.


VERIFY-PRICE-COMP.

MULTIPLY SCPM-CALC-VARIANCE BY WS-TOTAL-PRICE GIVING
WS-DEVIATION ROUNDED
EVALUATE TRUE
WHEN WS-TOTAL-PRICE < INP2-TOTAL-COST
ADD WS-DEVIATION TO WS-TOTAL-PRICE
IF WS-TOTAL-PRICE < INP2-TOTAL-COST
PERFORM VERIFY-PRICE-ERROR
END-IF
WHEN WS-TOTAL-PRICE > INP2-TOTAL-COST
SUBTRACT WS-DEVIATION FROM WS-TOTAL-PRICE
IF WS-TOTAL-PRICE > INP2-TOTAL-COST
PERFORM VERIFY-PRICE-ERROR
END-IF
END-EVALUATE.


VERIFY-PRICE-ERROR.

DIVIDE INP2-TOTAL-COST BY INP2-NR-GALLONS GIVING
INP2-PRICE-GALLON ROUNDED
IF WS-TAX-COMPUTED-FLAG = 'Y'
MOVE INP2-PRICE-GALLON TO WS-TAX-PPL
PERFORM SEND-FUEL-PRICE-ERROR-COMPUTE
MOVE WS-TAX-PPL        TO INP2-PRICE-GALLON.

MOVE INP2-PRICE-GALLON TO CALC-ERROR-SUGGESTED,
CALC-ERROR-SUGGESTED-3.
IF COM-US-COMP-CN-SC OR
COM-CN-COMP-CN-SC
MOVE FP-CALC-ERR-MESSAGE3 TO OUT-COMENT
ELSE
MOVE FP-CALC-ERR-MESSAGE2 TO OUT-COMENT.
MOVE '*' TO ERROR-FLAG
MOVE 'PRICE AND COST ERROR' TO ERROR-TYPE.


DISCOUNT-CALCULATIONS.

MOVE SPACES TO ERROR-FLAG, ERROR-TYPE.
IF INP-F-SRVC-DISC = ZERO AND
INP-S-SRVC-DISC = ZERO
MOVE 0 TO WS-TOTAL-PRCNTAGE,
WS-WORK-TOTAL-AR,
WS-CDN-DISC
ELSE
PERFORM DISCOUNT-CALCULATIONS2
IF ERROR-FLAG = SPACES
PERFORM DISCOUNT-CALCULATIONS3
END-IF
END-IF.


DISCOUNT-CALCULATIONS2.

IF FULL-SRVC AND INP-F-SRVC-DISC IS POSITIVE
MOVE INP-F-SRVC-DISC TO WS-DISC, WS-TOTAL-PRCNTAGE
MOVE 2.00 TO WS-CDN-DISC
ELSE
IF SELF-SRVC AND INP-S-SRVC-DISC IS POSITIVE
MOVE INP-S-SRVC-DISC TO WS-DISC, WS-TOTAL-PRCNTAGE
MOVE 1.00 TO WS-CDN-DISC
ELSE
MOVE SRVC-TYPE-ERROR-MESSAGE TO OUT-COMENT
MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE 'DISCOUNT CALCULATIONS' TO ERROR-TYPE
END-IF
END-IF.


DISCOUNT-CALCULATIONS3.

MULTIPLY WS-DISC-R1 BY INP-TOTAL-COST
GIVING WS-WORK-TOTAL-AR ROUNDED.
IF THE-DRIVER-GETS-NO-DISC
MOVE WS-DISC TO WS-CDN-DISC
ELSE
IF INP-CO-SMLNAME IS NOT EQUAL TO 'NAVL-IN'
DIVIDE WS-DISC BY 2 GIVING WS-CDN-DISC ROUNDED
ELSE
MOVE WS-DISC-DECIMAL TO WS-CDN-DISC-DEC
IF FULL-SRVC AND
WS-DISC < 3.00
SUBTRACT 1 FROM WS-CDN-DISC.
SUBTRACT WS-CDN-DISC FROM WS-DISC.
MULTIPLY WS-DISC-R1 BY INP-TOTAL-COST
GIVING WS-DISC-AMT ROUNDED.
MOVE WS-DISC-AMT-R TO US-CODE-NR.
IF THE-DRIVER-GETS-NO-DISC
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE OK-MSG1 TO OUT-COMENT
ELSE
MOVE ZEROES TO POS-ERROR-NUMBER
MOVE NORMAL-MESSAGE TO OUT-COMENT.


CALCULATE-CHECK-DIGIT.


MOVE SPACES      TO ERROR-FLAG.
MOVE ZEROS       TO WS-CKD-TOTAL.
SET ID-INDX TO 7.
MOVE 'Y'         TO WS-LOOP-FLAG
PERFORM CCD-CALCULATE-CHECK-DIGIT.


CCD-CALCULATE-CHECK-DIGIT.


PERFORM
UNTIL WS-LOOP-FLAG = 'N'
MOVE 'N' TO WS-LOOP-FLAG
MULTIPLY 2 BY WS-ID-CHAR (ID-INDX)
GIVING WS-CKD-MULT-BY-2
ADD WS-CKD-HI-ORDER, WS-CKD-LO-ORDER TO WS-CKD-TOTAL
IF ID-INDX > 1
ADD WS-ID-CHAR (ID-INDX - 1) TO WS-CKD-TOTAL
IF ID-INDX > 2
SET ID-INDX DOWN BY 2
MOVE 'Y' TO WS-LOOP-FLAG
END-IF
END-IF
END-PERFORM
SUBTRACT WS-CKD-TOTAL-LO FROM 10 GIVING WS-CKD-CALCULATED.


FP-ATM-CANCEL.

MOVE 'FP-ATM-CANCEL'             TO CXUTS0ML-PARAGRAPH.

MOVE UNFORMATTED-AREA (2:) TO WS-TSXCO0AT-COMM-AREA.
MOVE WS-TSXCO0AT-COMMAREA  TO TSXCO0AT-COMM-AREA.
MOVE 'Y'                   TO WS-ATM-REVERSAL-FLAG.


MOVE TSXCO0AT-LOCATION-CODE TO WS-CANCEL-SC-CODE
MOVE 'N'                   TO NON-PROD-FLAG
MOVE 'A'                   TO WS-PC-CANCEL-FLAG
MOVE SPACES                TO WS-INP-FP-CANCEL
MOVE 'CANCEL'              TO FP-CANCEL-REQ


MOVE TSXCO0AT-CARD-NUMBER  TO WS-PRM-CARD-NR
MOVE 15                    TO MOD10-SL
MOVE HIGH-VALUE            TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-BASE-A    TO FP-CANCEL-COMMON
FPCR-CTL7-CARD


MOVE TSXCO0AT-ATM-DATE       TO ATM-STAN-ATM-DATE.
MOVE TSXCO0AT-ATM-TIME       TO ATM-STAN-ATM-TIME.
MOVE TSXCO0AT-CARD-NUMBER    TO ATM-STAN-CARD-NR.
MOVE TSXCO0AT-ATM-STAN       TO ATM-STAN-TRACE-NR.
EXEC CICS READ
DATASET ('ATMSTAN')
INTO    (ATM-STAN-XREF-RECORD)
RIDFLD  (ATM-STAN-KEY)
NOHANDLE
END-EXEC.
MOVE ATM-STAN-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE INVALID-CANCEL-REQ   TO OUT-COMENT
MOVE INVALID-CANCEL-REQ-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.
EVALUATE TRUE
WHEN ATM-STAN-REVERSED-CONTROL-NR = ZERO AND
ATM-STAN-REVERSED-NO                AND
ATM-STAN-CONTROL-NR          > ZERO
MOVE ATM-STAN-CONTROL-NR          TO FPCR-CTL-7
WHEN ATM-STAN-SI-CONTROL-NR > ZERO AND
ATM-STAN-SI-REVERSED-NO
MOVE ATM-STAN-SI-CONTROL-NR       TO FPCR-CTL-7
MOVE 'Y'                     TO WS-STANDIN-REVERSE-FL
WHEN ATM-STAN-REVERSED-YES
MOVE ATM-STAN-REVERSED-CONTROL-NR TO FPCR-CTL-7
WHEN OTHER
MOVE ATM-STAN-CONTROL-NR          TO FPCR-CTL-7
END-EVALUATE.

PERFORM FP-5000.


FP-5000.

MOVE 'Y' TO CANCEL-FLAG.
PERFORM FP-CANCEL-FORMAT-INPUT-AREA.



MOVE 'Y'  TO WS-CONTINUE-CANCEL
MOVE ZERO TO WS-LTI-SUB1
WS-CANCEL-GALLONS
WS-CANCEL-COST
PERFORM
UNTIL WS-CONTINUE-CANCEL = 'N'
PERFORM FP-CANCEL-GET-ORDRFIL
PERFORM FP-CANCEL-CHECK-CARD-NR
PERFORM FP-CANCEL-CHECK-FP-RRN
PERFORM FP-CANCEL-GET-FMLOG
PERFORM FP-CANCEL-CHECK-FMLOG
PERFORM FP-CANCEL-CHECK-PC
PERFORM FP-CANCEL-CHK-LARGE-TRANS
PERFORM FP-CANCEL-ADJUST-FMLOG
PERFORM FP-CANCEL-GET-USILOG
PERFORM FP-CANCEL-ZERO-DRAFT
PERFORM FP-CANCEL-UPDATE-ORDER
PERFORM FP-CANCEL-UPDATE-FMLOG
PERFORM FP-CANCEL-UPDATE-PRMRLOG
PERFORM FP-CANCEL-COMPUTE-AMOUNTS
PERFORM FP-CANCEL-SETUP-CARD
PERFORM FP-CANCEL-GET-UNITMST
IF WS-UNITMST-RECD-SW NOT = 'N'
PERFORM FP-CANCEL-UPDATE-UNITMST1
PERFORM FP-CANCEL-UPDATE-UNITMST2
END-IF
PERFORM FP-CANCEL-CHECK-PROD-TOTALS
PERFORM FP-CANCEL-COMPUTE-NON-BILLABLE
PERFORM FP-CANCEL-COMPUTE-BILLABLE
PERFORM FP-CANCEL-CORRECT-CN-TAX
PERFORM FP-CANCEL-ADJUST-CDN-CREDIT
PERFORM FP-CANCEL-ADJUST-CC-CREDIT
PERFORM FP-CANCEL-UPDATE-PRMCARD
PERFORM FP-CANCEL-UPDATE-FLEET-USED
PERFORM FP-CANCEL-UPDATE-PO-NUMBER
PERFORM FP-CANCEL-UPDATE-FMPOOL
PERFORM FP-CANCEL-UPDATE-ORDRFIL2
IF NOT THIS-IS-AN-ATM-REVERSAL
PERFORM FP-CANCEL-UPDATE-SETTLE
END-IF
PERFORM FP-CANCEL-UPDATE-RMF
PERFORM FP-CANCEL-UPDATE-NETW-BY-CARD
MOVE 'N'    TO WS-CIX-RESP-REQUESTED
MOVE '0420' TO WS-CIX-MESSAGE-TYPE
MOVE FMDL-SC-SRVC-CNTR-CODE TO WS-UIWA-SC-CODE
PERFORM IRIS-CHECK-AND-NOTIFY
PERFORM FP-CANCEL-SEND-NATS-INFO
PERFORM FP-CANCEL-BUILD-RESPONSE
PERFORM FP-CANCEL-CHK-TO-CONTINUE
END-PERFORM
PERFORM FP-CANCEL-BUILD-RESPONSE2
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


FP-CANCEL-FORMAT-INPUT-AREA.

IF FPCR-CTL-7 NUMERIC
MOVE 'N' TO WS-CNL-6-SW
MOVE FPCR-CTL-7 TO WS-FP-CANCEL-CTL
MOVE FPCR-CTL7-CARD TO FP-CANCEL-COMMON
ELSE
MOVE 'Y' TO WS-CNL-6-SW
MOVE ZERO       TO WS-FP-CANCEL-CTL1
MOVE FPCR-CTL-6 TO WS-FP-CANCEL-CTLX
MOVE FPCR-CTL6-CARD TO FP-CANCEL-COMMON
END-IF.

EVALUATE TRUE
WHEN FP-CANCEL-CARD (1:16) NUMERIC
MOVE FP-CANCEL-CARD (7:)    TO INP-COMMON-AREAS
WHEN FP-CANCEL-CARD (1:10) NUMERIC
MOVE FP-CANCEL-CARD         TO INP-COMMON-AREAS
WHEN OTHER
MOVE FP-CANCEL-CARD         TO INP-COMMON-AREAS
END-EVALUATE.


FP-CANCEL-GET-ORDRFIL.

IF WS-FP-CANCEL-CTL NOT NUMERIC   OR
INP-CO-CODE       = SPACES     OR
INP-CO-CODE       = LOW-VALUES OR
WS-FP-CANCEL-CTL  > MAX-CONTROL-NUMBER
MOVE INVALID-CANCEL-REQ TO OUT-COMENT
MOVE INVALID-CANCEL-REQ-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.
IF WS-FP-CANCEL-CTL = ZEROES
MOVE INVALID-CANCEL-REQ TO OUT-COMENT
MOVE INVALID-CANCEL-REQ-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.

ADD 1, WS-FP-CANCEL-CTL   GIVING ORDRFIL-RRN.
PERFORM FP-CANCEL-READ-ORDRFIL.


FP-CANCEL-READ-ORDRFIL.

MOVE 'FP-CANCEL-READ-ORDRFIL'    TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (ORDRFIL-DETAIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRFIL-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
INITIALIZE ORDRFIL-DETAIL-RECD
END-IF.

MOVE ODR-FUEL-CODE   IN ORDRFIL-DETAIL-RECD
TO COM-FP-CO-CODE.


FP-CANCEL-CHECK-CARD-NR.

PERFORM FP-CANCEL-FMT-CARD.
MOVE 'N'              TO WS-CTRL-MATCH-SW.
IF WS-CNL-6-SW = 'Y'
MOVE 'Y'           TO WS-CTRL-LOOP-SW
ELSE
MOVE 'N'           TO WS-CTRL-LOOP-SW
END-IF.
PERFORM FP-CANCEL-CHECK-MATCH.
MOVE 1                      TO WS-LOOPS.
IF WS-CTRL-LOOP-SW = 'Y'
PERFORM FP-CANCEL-CHECK-POSS-TRUNC
END-IF
MOVE ORDRFIL-RRN            TO WRK-RRN
PERFORM FP-CANCEL-CTRL-NR-LOOP UNTIL
WS-CTRL-LOOP-SW = 'N'.
IF WS-CTRL-MATCH-SW = 'N'
IF WS-CTRL-MULT-SW = 'Y'
MOVE CALL-TO-CANCEL   TO OUT-COMENT
MOVE CALL-TO-CANCEL-N TO POS-ERROR-NUMBER
ELSE
MOVE INVALID-ID-NR    TO OUT-COMENT
MOVE INVALID-ID-NR-N  TO POS-ERROR-NUMBER
END-IF
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


FP-CANCEL-CHECK-MATCH.

IF WS-PRM-CARD-NR NUMERIC AND
ODR-PREMIER-CARD IN ORDRFIL-DETAIL-RECD NUMERIC AND
WS-PRM-CARD-NR = ODR-PREMIER-CARD IN ORDRFIL-DETAIL-RECD
MOVE 'Y' TO WS-CTRL-MATCH-SW
MOVE ORDRFIL-RRN           TO WS-RRN-MATCHED
ELSE
MOVE 'N' TO WS-CTRL-MATCH-SW
END-IF.


FP-CANCEL-CTRL-NR-LOOP.

MOVE WS-LOOPS                    TO WRK-RRN-1ST
MOVE WRK-RRN                     TO ORDRFIL-RRN.
PERFORM FP-CANCEL-READ-ORDRFIL.
PERFORM FP-CANCEL-FMT-CARD.
PERFORM FP-CANCEL-CHECK-MATCH.
IF WS-CTRL-MATCH-SW = 'Y'
IF WS-RRN-MATCHED > ZEROS AND
WS-RRN-MATCHED NOT = WRK-RRN
MOVE 'N'                TO WS-CTRL-LOOP-SW
MOVE 'N'                TO WS-CTRL-MATCH-SW
MOVE 'Y'                TO WS-CTRL-MULT-SW
END-IF
END-IF.
ADD 1                            TO WS-LOOPS
IF WS-LOOPS > WS-CTRL-LOOP-CTR
MOVE 'N'                      TO WS-CTRL-LOOP-SW
END-IF.
IF WS-CTRL-LOOP-SW = 'N' AND
WS-RRN-MATCHED > ZEROS AND
WS-RRN-MATCHED NOT = WRK-RRN AND
WS-CTRL-MULT-SW NOT = 'Y'
MOVE WS-RRN-MATCHED        TO ORDRFIL-RRN
PERFORM FP-CANCEL-READ-ORDRFIL
PERFORM FP-CANCEL-FMT-CARD
MOVE 'Y'                   TO WS-CTRL-MATCH-SW
END-IF.


FP-CANCEL-FMT-CARD.

MOVE ODR-FP-CARD-NR IN ORDRFIL-DETAIL-RECD TO WS-ID-NR
IF WS-ID-NR-NUM NOT NUMERIC
MOVE ZEROS                    TO WS-ID-NR-NUM
END-IF.
MOVE ZEROS                       TO WS-ID-NR-CK-DIG,
WS-CKD-CALCULATED
IF WS-ID-NR-NUM > ZEROS
PERFORM CALCULATE-CHECK-DIGIT
END-IF
MOVE WS-CKD-CALCULATED           TO WS-ID-NR-CK-DIG.
IF FP-CANCEL-COMMON (1:16) NUMERIC
MOVE FP-CANCEL-COMMON TO WS-PRM-CARD
ELSE
MOVE FP-CANCEL-COMMON TO WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
END-IF.


FP-CANCEL-CHECK-POSS-TRUNC.

MOVE 'FP-CANCEL-CHECK-POSS-TRUNC' TO CXUTS0ML-PARAGRAPH.
SET CNRIA-RN-REQUEST      TO TRUE
MOVE 0                    TO CNRIA-QTY-REQUESTED
CALL WS-CXUTS400 USING DFHEIBLK,
DFHCOMMAREA,
CXUTW400-PARMS
PERFORM CHECK-FOR-NORMAL-EIBRESP.
DIVIDE CNRRA-1ST-CTRL-NR BY 1000000 GIVING WS-CTRL-LOOP-CTR.
IF WS-CTRL-LOOP-CTR = 0
MOVE 'N'               TO WS-CTRL-LOOP-SW
END-IF.


FP-CANCEL-CHECK-FP-RRN.

MOVE ODR-FP-1ST-RRN IN ORDRFIL-DETAIL-RECD TO FND-RRN.
IF ODR-FP-1ST-RRN IN ORDRFIL-DETAIL-RECD NOT > ZEROES
MOVE MUST-USE-MMVC   TO OUT-COMENT
MOVE MUST-USE-MMVC-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


FP-CANCEL-GET-FMLOG.

MOVE 'FP-CANCEL-GET-FMLOG'       TO CXUTS0ML-PARAGRAPH.

IF ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD IS NOT NUMERIC
MOVE ZEROS TO ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD
END-IF.
MOVE ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD TO FMLOG-RRN.
IF FMLOG-RRN > 0
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RIDFLD  (FMLOG-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN         TO WS-NUM-7
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF FMDL-SETTLED-XTN-FLAG = 'Y' AND
FMDL-SETTLEMENT-TYPE-FLAG = 'F'
IF THIS-IS-AN-ATM-REVERSAL
PERFORM FP-CNCL-UPDATE-SETTLE-ATM
ELSE
PERFORM FP-5050-SEE-IF-PAID
END-IF
END-IF
IF FMDL-RECORD-TYPE = 'FC'
MOVE TRANS-ALREADY-CANCELLED
TO OUT-COMENT
MOVE TRANS-ALREADY-CANCELLED-N
TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-IF.


FP-CANCEL-CHECK-FMLOG.


IF (ODR-IS-DETAIL-SETTLE IN ORDRFIL-DETAIL-RECD) AND
(THIS-IS-NOT-A-POS-TRANS                    ) AND
(EIBAID IS NOT = DFHPF3                     ) AND
(FMDL-SETTLEMENT-TYPE-FLAG NOT = 'F'        )
MOVE CANCEL-SETTLE-MSG TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

IF FMDL-NATS-PRE-AUTH-DATE NOT NUMERIC
MOVE ZEROES TO FMDL-NATS-PRE-AUTH-DATE.


IF FMDL-UNATTENDED-XTN-YES OR
FMDL-ATM-TRANSACTION-YES
EVALUATE TRUE
WHEN FMDL-NATS-PRE-AUTH-DATE > ZEROES
CONTINUE
WHEN EIBAID = DFHPF24
CONTINUE

WHEN THIS-BE-AN-ATM-CANCEL
CONTINUE
WHEN OTHER
IF FMDL-TR-PRODUCT-CODE-1 = '13'
AND FMDL-TR-PRODUCT-CODE-2 = '  '
AND FMDL-TR-PRODUCT-CODE-3 = '  '
CONTINUE
ELSE
MOVE UNATTENDED-CANCEL-MSG TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-EVALUATE.


FP-CANCEL-CHK-LARGE-TRANS.

MOVE 'FP-CANCEL-CHK-LARGE-TRANS' TO CXUTS0ML-PARAGRAPH.


ADD 1 TO WS-LTI-SUB1
IF LTI-FIRST-PASS
IF FMDL-ST-CONTROL-NUMBER  NUMERIC
AND FMDL-ST-CONTROL-NUMBER > ZERO
AND FMDL-ST-NO-OF-RECORDS NUMERIC
AND FMDL-ST-NO-OF-RECORDS  > 1
MOVE 'Y'                    TO WS-LTI-SW
MOVE FMDL-ST-CONTROL-NUMBER TO WS-LTIH-CONTROL-NR
MOVE FMDL-ST-NO-OF-RECORDS  TO WS-LTI-SPLIT-COUNT

MOVE FMLOG-RRN              TO WS-LTI-HOLD-FMLOG-RRN
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO WS-LTIH-FMLOG

MOVE ZEROS                  TO WS-LTI-SKIP-FMLOG-RRN
IF FMDL-RK-CONTROL-NUMBER NOT = FMDL-ST-CONTROL-NUMBER
MOVE FMLOG-RRN           TO WS-LTI-SKIP-FMLOG-RRN
END-IF


MOVE +1 TO FMLOG-RRN
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FMLOG-CONTROL-RECORD)
RIDFLD  (FMLOG-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN         TO WS-NUM-7
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE FML-NEXT-RRN           TO WS-LTI-LAST-FMLOG-RRN

MOVE WS-LTI-HOLD-FMLOG-RRN  TO FMLOG-RRN
MOVE WS-LTIH-FMLOG
TO FUEL-MANAGEMENT-DAILY-LOG-RECD
ELSE

MOVE 'N'                    TO WS-LTI-SW
END-IF
END-IF
IF WS-LARGE-TRANS-SPLITS
IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
MOVE 'Y' TO WS-LTI-LAST-FLAG
END-IF
END-IF.


FP-CANCEL-ADJUST-FMLOG.

IF FMDL-CURRENCY-FLAG = 'B' OR 'M'
CONTINUE
ELSE
MOVE FMDL-TR-TRACTOR-GALLONS     TO
FMDL-BC-TR-TRACTOR-GALLONS
FMDL-SC-TR-TRACTOR-GALLONS
MOVE FMDL-TR-TRACTOR-PPG         TO
FMDL-BC-TR-TRACTOR-PPG
FMDL-SC-TR-TRACTOR-PPG
MOVE FMDL-TR-TRACTOR-COST        TO
FMDL-BC-TR-TRACTOR-COST
FMDL-SC-TR-TRACTOR-COST
MOVE FMDL-TR-TRAILER-GALLONS     TO
FMDL-BC-TR-TRAILER-GALLONS
FMDL-SC-TR-TRAILER-GALLONS
MOVE FMDL-TR-TRAILER-PPG         TO
FMDL-BC-TR-TRAILER-PPG
FMDL-SC-TR-TRAILER-PPG
MOVE FMDL-TR-TRAILER-COST        TO
FMDL-BC-TR-TRAILER-COST
FMDL-SC-TR-TRAILER-COST
MOVE FMDL-TR-OTHER-GALLONS       TO
FMDL-BC-TR-OTHER-GALLONS
FMDL-SC-TR-OTHER-GALLONS
MOVE FMDL-TR-OTHER-PPG           TO
FMDL-BC-TR-OTHER-PPG
FMDL-SC-TR-OTHER-PPG
MOVE FMDL-TR-OTHER-COST          TO
FMDL-BC-TR-OTHER-COST
FMDL-SC-TR-OTHER-COST
MOVE FMDL-TR-CASH-ADVANCE-AMOUNT TO
FMDL-BC-TR-CASH-ADVANCE-AMOUNT
FMDL-SC-TR-CASH-ADVANCE-AMOUNT
MOVE FMDL-TR-OIL-QUARTS          TO
FMDL-BC-TR-OIL-QUARTS
FMDL-SC-TR-OIL-QUARTS
MOVE FMDL-TR-OIL-COST            TO
FMDL-BC-TR-OIL-COST
FMDL-SC-TR-OIL-COST
MOVE FMDL-TR-PRODUCT-AMOUNT-1    TO
FMDL-BC-TR-PRODUCT-AMOUNT-1
FMDL-SC-TR-PRODUCT-AMOUNT-1
MOVE FMDL-TR-PRODUCT-AMOUNT-2    TO
FMDL-BC-TR-PRODUCT-AMOUNT-2
FMDL-SC-TR-PRODUCT-AMOUNT-2
MOVE FMDL-TR-PRODUCT-AMOUNT-3    TO
FMDL-BC-TR-PRODUCT-AMOUNT-3
FMDL-SC-TR-PRODUCT-AMOUNT-3
MOVE FMDL-SC-INVOICE-AMT           TO
FMDL-BC-SC-INVOICE-AMT
FMDL-SC-SC-INVOICE-AMT
MOVE FMDL-SC-SELECT-DISCOUNT    TO
FMDL-BC-SC-SELECT-DISCOUNT
FMDL-SC-SC-SELECT-DISCOUNT
MOVE FMDL-REBATE-DISCOUNT-AMT   TO
FMDL-BC-REBATE-DISCOUNT-AMT
FMDL-SC-REBATE-DISCOUNT-AMT
MOVE FMDL-RD-FUEL-RATE          TO
FMDL-BC-RD-FUEL-RATE
FMDL-SC-RD-FUEL-RATE
MOVE FMDL-RD-CASH-ADVANCE-RATE  TO
FMDL-BC-RD-CASH-ADVANCE-RATE
FMDL-SC-RD-CASH-ADVANCE-RATE
MOVE FMDL-RD-SC-SELECT-DISCOUNT TO
FMDL-BC-RD-SC-SELECT-DISCOUNT
FMDL-SC-RD-SC-SELECT-DISCOUNT
MOVE FMDL-RD-COMP-HANDLING-CHG  TO
FMDL-BC-RD-COMP-HANDLING-CHG
FMDL-SC-RD-COMP-HANDLING-CHG
MOVE FMDL-RD-SC-TRANSACTION-FEE TO
FMDL-BC-RD-SC-TRANSACTION-FEE
FMDL-SC-RD-SC-TRANSACTION-FEE
MOVE FMDL-GD-SC-REV             TO
FMDL-BC-GD-SC-REV
FMDL-SC-GD-SC-REV
MOVE FMDL-NR1-GALLONS           TO
FMDL-BC-NR1-GALLONS
FMDL-SC-NR1-GALLONS
MOVE FMDL-NR1-COST              TO
FMDL-BC-NR1-COST
FMDL-SC-NR1-COST
MOVE FMDL-BR-SC-FEE             TO
FMDL-BC-BR-SC-FEE
FMDL-SC-BR-SC-FEE
MOVE FMDL-BR-SRVC-CNTR-FEE      TO
FMDL-BC-BR-SRVC-CNTR-FEE
FMDL-SC-BR-SRVC-CNTR-FEE
MOVE FMDL-BR-CUSTOMER-FEE       TO
FMDL-BC-BR-CUSTOMER-FEE
FMDL-SC-BR-CUSTOMER-FEE
MOVE FMDL-BR-CASH-ADD-FEE       TO
FMDL-BC-BR-CASH-ADD-FEE
FMDL-SC-BR-CASH-ADD-FEE
MOVE FMDL-BR-VOICE-SURCHG-FEE   TO
FMDL-BC-BR-VOICE-SURCHG-FEE
FMDL-SC-BR-VOICE-SURCHG-FEE
MOVE FMDL-CUST-MANUAL-FEE       TO
FMDL-BC-CUST-MANUAL-FEE
FMDL-SC-CUST-MANUAL-FEE
MOVE FMDL-COST-PLUS-ADD-ON      TO
FMDL-BC-COST-PLUS-ADD-ON
FMDL-SC-COST-PLUS-ADD-ON.


FP-CANCEL-CHECK-PC.


IF (THIS-IS-A-PC-CANCEL)
IF (FMDL-SC-SRVC-CNTR-CODE  NOT = WS-CANCEL-SC-CODE) AND
(FMDL-SETTLEMENT-SC-CODE NOT = WS-CANCEL-SC-CODE)
IF WS-CNL-6-SW = 'Y'
MOVE CALL-TO-CANCEL    TO OUT-COMENT
MOVE CALL-TO-CANCEL-N  TO POS-ERROR-NUMBER
ELSE
MOVE RECORD-MISMATCH   TO OUT-COMENT
MOVE RECORD-MISMATCH-N TO POS-ERROR-NUMBER
END-IF
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.



















FP-CANCEL-GET-USILOG.

MOVE ZEROES TO OILQTSO,
WS-UIWA-OIL-QTY,
WS-UIWA-OIL-COST
WS-UIWA-NR2-QTY,
WS-UIWA-NR2-COST,
WS-DISC-AMT-SAVE,
WS-UIWA-REF-QTY,
WS-UIWA-REF-COST,
WS-UIWA-CASH-AMT,
WS-UIWA-TAX-AMT,
WS-UIWA-PR1-COST,
WS-UIWA-PR2-COST,
WS-UIWA-PR3-COST.



FP-CANCEL-ZERO-DRAFT.


IF ODR-LAST-CHECK IN ORDRFIL-DETAIL-RECD IS NUMERIC AND
ODR-LAST-CHECK IN ORDRFIL-DETAIL-RECD IS > ZERO
MOVE ODR-LAST-CHECK IN ORDRFIL-DETAIL-RECD TO
DRAFT-CHECK-NR
PERFORM ZERO-DRAFT THRU ZERO-DRAFT-EXIT
MOVE 'Y' TO WS-DRAFT-WAS-CANCELLED
END-IF.


FP-CANCEL-UPDATE-ORDER.

MOVE 'FP-CANCEL-UPDATE-ORDER'    TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (ORDRFIL-DETAIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRFIL-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE 'X' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (4).
MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.
MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
IN ORDRFIL-DETAIL-RECD.
EXEC CICS REWRITE
DATASET ('ORDRFIL')
FROM    (ORDRFIL-DETAIL-RECD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE ORDRFIL-DETAIL-RECD    TO  COM-FP-ORDRFIL.



FP-CANCEL-UPDATE-FMLOG.

MOVE 'FP-CANCEL-UPDATE-FMLOG'    TO CXUTS0ML-PARAGRAPH.
IF ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD IS NOT NUMERIC
MOVE ZEROS TO ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD
END-IF.
MOVE ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD TO FMLOG-RRN.
IF FMLOG-RRN > 0
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RIDFLD  (FMLOG-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN              TO WS-NUM-7
MOVE WS-NUM-7               TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE 'FC' TO FMDL-RECORD-TYPE
IF THIS-IS-A-ATM-CANCEL
MOVE 'AC' TO FMDL-RECORD-TYPE
END-IF
MOVE 'Y' TO FMDL-TR-CANCELLATION-FLAG
MOVE WS-BUSINESS-DATE-CYYMMDD TO FMDL-TR-CANCELLATION-DATE
MOVE EIBTIME               TO FMDL-TR-CANCELLATION-TIME
MOVE EIBTRMID              TO FMDL-CANCELLATION-TERMID
MOVE WS-OPERID             TO FMDL-CANCELLATION-OPERID
EXEC CICS REWRITE
DATASET ('FMLOG')
FROM    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


FP-CANCEL-UPDATE-PRMRLOG.

MOVE 'FP-CANCEL-UPDATE-PRMRLOG'  TO CXUTS0ML-PARAGRAPH.
IF FMDL-PRMLOG-RRN NUMERIC AND
FMDL-PRMLOG-RRN > 0
MOVE FMDL-PRMLOG-RRN TO PRMLOG-RRN
EXEC CICS READ
DATASET ('PRMRLOG')
INTO    (PRM-LOG-RECORD)
RIDFLD  (PRMLOG-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE PRMLOG-RRN           TO WS-NUM-7
MOVE WS-NUM-7             TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE ZEROS TO PRMLOG-INVOICE-AMT
MOVE 'N'   TO PRMLOG-INVOICE-ACT-FLAG
EXEC CICS REWRITE
DATASET ('PRMRLOG')
FROM    (PRM-LOG-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF
END-IF.


FP-CANCEL-COMPUTE-AMOUNTS.

MOVE FMDL-CUST-CUSTOMER-ID TO WS-FMDL-CUST-ID-FIXED.


COMPUTE WS-WORK-NR-OF-GALLONS = FMDL-BC-TR-TRACTOR-GALLONS +
FMDL-BC-TR-OTHER-GALLONS   +
FMDL-BC-NR1-GALLONS.
COMPUTE WS-WORK-TOTAL-COST =    FMDL-BC-TR-TRACTOR-COST +
FMDL-BC-TR-OTHER-COST   +
FMDL-BC-NR1-COST.
MOVE WS-WORK-NR-OF-GALLONS       TO WS-UIWA-NR2-QTY.
MOVE WS-WORK-TOTAL-COST          TO WS-UIWA-NR2-COST.


MOVE FMDL-BC-TR-TRAILER-GALLONS  TO WS-UIWA-REF-QTY.
MOVE FMDL-BC-TR-TRAILER-COST     TO WS-UIWA-REF-COST


MOVE FMDL-BC-TR-OIL-QUARTS       TO WS-UIWA-OIL-QTY.
MOVE FMDL-BC-TR-OIL-COST         TO WS-UIWA-OIL-COST.
MOVE FMDL-BC-TAX-AMT             TO WS-UIWA-TAX-AMT.


MOVE FMDL-BC-TR-CASH-ADVANCE-AMOUNT TO WS-UIWA-CASH-AMT.


IF FMDL-TR-PRODUCT-AMOUNT-1 NUMERIC
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-1 TO WS-UIWA-PR1-COST
END-IF.
IF FMDL-TR-PRODUCT-AMOUNT-2 NUMERIC
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-2 TO WS-UIWA-PR2-COST
END-IF.
IF FMDL-TR-PRODUCT-AMOUNT-3 NUMERIC
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-3 TO WS-UIWA-PR3-COST
END-IF.


MOVE FMDL-PERCENTAGES  TO WS-PERCENTAGES.
SUBTRACT WS-CDN-PRCNTAGE FROM WS-TOTAL-PRCNTAGE
GIVING WS-DISC.
MULTIPLY WS-UIWA-NR2-COST BY WS-DISC-R1
GIVING WS-DISC-AMT ROUNDED.
ADD WS-DISC-AMT TO WS-DISC-AMT-SAVE.
MULTIPLY WS-UIWA-REF-COST BY WS-DISC-R1
GIVING WS-DISC-AMT ROUNDED.
ADD WS-DISC-AMT TO WS-DISC-AMT-SAVE.


FP-CANCEL-SETUP-CARD.

MOVE 'FP-CANCEL-SETUP-CARD'      TO CXUTS0ML-PARAGRAPH.

MOVE FMDL-DT-COMCHEK-CARD-NUMBER  TO COM-PREMIER-CARD
PRM-CARD-NUMB.
EXEC CICS READ
DATASET ('PRMCARD')
INTO    (PRM-CARD-RECORD)
RIDFLD  (PRM-CARD-NUMB)
RESP    (EIBRESP)
END-EXEC.
MOVE PRM-CARD-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


FP-CANCEL-GET-UNITMST.


MOVE FMDL-CUST-CUSTOMER-ID        TO COM-FP-CO-CODE.



MOVE FMDL-DT-COMCHEK-CARD-NUMBER  TO COM-PREMIER-CARD
PERFORM READ-CDNCUST.
IF CDN-UNIT-POOL-MASTER > SPACES
MOVE CDN-UNIT-POOL-MASTER      TO COM-UNIT-POOL-CUST-ID
ELSE
MOVE CDN-CUST-NUMBER           TO COM-UNIT-POOL-CUST-ID
END-IF.

MOVE 'Y' TO WS-UNITMST-RECD-SW
MOVE 'F' TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST
IF EIBRESP = DFHRESP(NOTFND)
MOVE 'N' TO WS-UNITMST-RECD-SW
END-IF.


FP-CANCEL-UPDATE-UNITMST1.


PERFORM 83100-READ-UNITMST-UPD.

MOVE UNITMST-UBC-UNIT-NR          TO COM-UNIT-NR-EXPANDED.

SUBTRACT WS-UIWA-NR2-COST FROM UNITMST-CURR-DAY-REQ-AMT.
IF UNITMST-CURR-DAY-REQ-AMT < 0
MOVE 0                   TO UNITMST-CURR-DAY-REQ-AMT
END-IF.
SUBTRACT WS-UIWA-NR2-QTY  FROM UNITMST-CURR-DAY-NR-GALS.
IF UNITMST-CURR-DAY-NR-GALS < 0
MOVE 0                   TO UNITMST-CURR-DAY-NR-GALS
END-IF.
SUBTRACT WS-UIWA-REF-COST FROM UNITMST-CURR-DAY-AMT-REF.
IF UNITMST-CURR-DAY-AMT-REF < 0
MOVE 0                   TO UNITMST-CURR-DAY-AMT-REF
END-IF.
SUBTRACT WS-UIWA-REF-QTY  FROM UNITMST-CURR-DAY-GALS-REF.
IF UNITMST-CURR-DAY-GALS-REF < 0
MOVE 0                   TO UNITMST-CURR-DAY-GALS-REF
END-IF.
SUBTRACT WS-DISC-AMT-SAVE FROM UNITMST-CURR-DAY-DISC.
IF UNITMST-CURR-DAY-DISC      < 0
MOVE 0                   TO UNITMST-CURR-DAY-DISC
END-IF.
SUBTRACT WS-UIWA-OIL-COST FROM UNITMST-CURR-DAY-OIL-COST.
IF UNITMST-CURR-DAY-OIL-COST < 0
MOVE 0                   TO UNITMST-CURR-DAY-OIL-COST
END-IF.
SUBTRACT WS-UIWA-OIL-QTY  FROM UNITMST-CURR-DAY-QTS-OIL.
IF UNITMST-CURR-DAY-QTS-OIL < 0
MOVE 0                   TO UNITMST-CURR-DAY-QTS-OIL
END-IF.


FP-CANCEL-UPDATE-UNITMST2.



SUBTRACT WS-FUEL-RATE    FROM UNITMST-CURR-DAY-CHGS.
SUBTRACT WS-ADVANCE-RATE FROM UNITMST-CURR-DAY-CHGS.
IF UNITMST-CURR-DAY-CHGS < 0
MOVE 0                  TO UNITMST-CURR-DAY-CHGS
END-IF.



IF FMDL-DT-CURR-HUB-READING = UNITMST-LAST-HUB
IF WS-LARGE-TRANS-SPLITS
MOVE WS-LTIH-HUB     TO UNITMST-LAST-HUB
ELSE
MOVE FMDL-DT-PREV-HUB-READING
TO UNITMST-LAST-HUB
END-IF
ELSE
IF WS-LARGE-TRANS-SPLITS
AND LTI-FIRST-PASS
MOVE FMDL-DT-PREV-HUB-READING TO WS-LTIH-HUB
END-IF
END-IF.
IF WS-UIWA-CASH-AMT > 0
SUBTRACT WS-UIWA-CASH-AMT FROM UNITMST-CASH-ADV-USED
IF UNITMST-CASH-ADV-USED < .01
MOVE 0                   TO UNITMST-CASH-ADV-USED
END-IF
SUBTRACT WS-UIWA-CASH-AMT FROM UNITMST-DLY-CASH-ADV-USED
IF UNITMST-DLY-CASH-ADV-USED < .01
MOVE 0                   TO UNITMST-DLY-CASH-ADV-USED
END-IF
END-IF.
IF TRIP-ALLOWANCE-SET
COMPUTE UNITMST-TRIP-ALLOW-USED =
UNITMST-TRIP-ALLOW-USED - WS-UIWA-NR2-COST -
WS-UIWA-REF-COST -
WS-UIWA-OIL-COST -
WS-UIWA-PR1-COST -
WS-UIWA-PR2-COST -
WS-UIWA-PR3-COST -
WS-UIWA-TAX-AMT
IF UNITMST-TRIP-ALLOW-USED < 0
MOVE ZEROES TO UNITMST-TRIP-ALLOW-USED
END-IF
END-IF.
MOVE 0 TO UNITMST-LAST-XTN-NR.
PERFORM 83200-REWRITE-UNITMST.


FP-CANCEL-CHECK-PROD-TOTALS.


IF FMDL-TR-PRODUCT-CODE-1 > SPACES
MOVE FMDL-TR-PRODUCT-CODE-1   TO WORK-PROD-CODE
MOVE FMDL-TR-PRODUCT-AMOUNT-1 TO WS-PROD-AMOUNT
PERFORM FP-CANCEL-UPDATE-PROD-TOTALS
END-IF.
IF FMDL-TR-PRODUCT-CODE-2 > SPACES
MOVE FMDL-TR-PRODUCT-CODE-2   TO WORK-PROD-CODE
MOVE FMDL-TR-PRODUCT-AMOUNT-2 TO WS-PROD-AMOUNT
PERFORM FP-CANCEL-UPDATE-PROD-TOTALS
END-IF.
IF FMDL-TR-PRODUCT-CODE-3 > SPACES
MOVE FMDL-TR-PRODUCT-CODE-3   TO WORK-PROD-CODE
MOVE FMDL-TR-PRODUCT-AMOUNT-3 TO WS-PROD-AMOUNT
PERFORM FP-CANCEL-UPDATE-PROD-TOTALS
END-IF.


FP-CANCEL-UPDATE-PROD-TOTALS.

MOVE 'FP-CANCEL-UPDATE-PROD-TOTALS'
TO CXUTS0ML-PARAGRAPH.



INITIALIZE     PRODUCT-CODE-USED
IF ON-HIERARCHY
MOVE '2'                   TO PCU-UBH-KEY-TYPE
MOVE PIR-HIERARCHY-ID      TO PCU-UBH-HIERARCHY-ID
MOVE UNIT-GRP-ID OF DUNITNOD
TO PCU-UBH-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBH-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBH-PRODUCT-CODE
ELSE
MOVE '1'                   TO PCU-UBC-KEY-TYPE
MOVE COM-UNIT-POOL-CUST-ID TO PCU-UBC-CUST-ID
MOVE 'DEFAULT'             TO PCU-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBC-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBC-PRODUCT-CODE
END-IF.

EXEC CICS READ
DATASET ('PRDUSED')
INTO    (PRODUCT-CODE-USED)
RIDFLD  (PCU-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE PCU-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.

IF EIBRESP = DFHRESP(NORMAL)
SUBTRACT WS-PROD-AMOUNT FROM PCU-PRD-CUR-DAY,
PCU-PRD-YTD
IF PCU-PRD-ALLOW-USED > ZEROES
SUBTRACT WS-PROD-AMOUNT FROM PCU-PRD-ALLOW-USED
END-IF
EXEC CICS REWRITE
DATASET ('PRDUSED')
FROM    (PRODUCT-CODE-USED)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


FP-CANCEL-COMPUTE-NON-BILLABLE.


MOVE ZEROES TO ADF-TOTAL-AMT-DUE
WS-NON-BILLABLE
WS2-NON-BILLABLE
WS2-NON-BILLABLE-FUEL
WS3-NON-BILLABLE
WS-BILLABLE
WS2-BILLABLE
WS2-BILLABLE-FUEL
WS3-BILLABLE.
IF FMDL-TF-TRACTOR-FUEL-DB
ADD FMDL-BC-TR-TRACTOR-COST TO WS-NON-BILLABLE
ADD FMDL-BC-NR1-COST        TO WS-NON-BILLABLE
ADD FMDL-SC-TR-TRACTOR-COST TO WS2-NON-BILLABLE
ADD FMDL-SC-NR1-COST        TO WS2-NON-BILLABLE
ADD FMDL-SC-TR-TRACTOR-COST TO WS2-NON-BILLABLE-FUEL
ADD FMDL-SC-NR1-COST        TO WS2-NON-BILLABLE-FUEL
ADD FMDL-TR-TRACTOR-COST    TO WS3-NON-BILLABLE
ADD FMDL-NR1-COST           TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-TRAILER-FUEL-DB
ADD FMDL-BC-TR-TRAILER-COST TO WS-NON-BILLABLE
ADD FMDL-SC-TR-TRAILER-COST TO WS2-NON-BILLABLE
ADD FMDL-SC-TR-TRAILER-COST TO WS2-NON-BILLABLE-FUEL
ADD FMDL-TR-TRAILER-COST    TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-OTHER-FUEL-DB
ADD FMDL-BC-TR-OTHER-COST  TO WS-NON-BILLABLE
ADD FMDL-SC-TR-OTHER-COST  TO WS2-NON-BILLABLE
ADD FMDL-SC-TR-OTHER-COST  TO WS2-NON-BILLABLE-FUEL
ADD FMDL-TR-OTHER-COST     TO WS3-NON-BILLABLE
END-IF.

IF FMDL-TF-CASH-DB
ADD FMDL-BC-TR-CASH-ADVANCE-AMOUNT TO WS-NON-BILLABLE
ADD FMDL-SC-TR-CASH-ADVANCE-AMOUNT TO WS2-NON-BILLABLE
ADD FMDL-TR-CASH-ADVANCE-AMOUNT    TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-OIL-DB
ADD FMDL-BC-TR-OIL-COST    TO WS-NON-BILLABLE
ADD FMDL-SC-TR-OIL-COST    TO WS2-NON-BILLABLE
ADD FMDL-TR-OIL-COST       TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-1-DB
ADD FMDL-BC-TR-PRODUCT-AMOUNT-1 TO WS-NON-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-1 TO WS2-NON-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-1    TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-2-DB
ADD FMDL-BC-TR-PRODUCT-AMOUNT-2 TO WS-NON-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-2 TO WS2-NON-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-2    TO WS3-NON-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-3-DB
ADD FMDL-BC-TR-PRODUCT-AMOUNT-3 TO WS-NON-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-3 TO WS2-NON-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-3    TO WS3-NON-BILLABLE
END-IF.
MOVE WS-NON-BILLABLE TO ADF-TOTAL-AMT-DUE.


FP-CANCEL-COMPUTE-BILLABLE.

IF FMDL-TF-TRACTOR-FUEL-FN
ADD FMDL-BC-TR-TRACTOR-COST TO WS-BILLABLE
ADD FMDL-BC-NR1-COST        TO WS-BILLABLE
ADD FMDL-SC-TR-TRACTOR-COST TO WS2-BILLABLE
ADD FMDL-SC-NR1-COST        TO WS2-BILLABLE
ADD FMDL-SC-TR-TRACTOR-COST TO WS2-BILLABLE-FUEL
ADD FMDL-SC-NR1-COST        TO WS2-BILLABLE-FUEL
ADD FMDL-TR-TRACTOR-COST    TO WS3-BILLABLE
ADD FMDL-NR1-COST           TO WS3-BILLABLE
END-IF.
IF FMDL-TF-TRAILER-FUEL-FN
ADD FMDL-BC-TR-TRAILER-COST TO WS-BILLABLE
ADD FMDL-SC-TR-TRAILER-COST TO WS2-BILLABLE
ADD FMDL-SC-TR-TRAILER-COST TO WS2-BILLABLE-FUEL
ADD FMDL-TR-TRAILER-COST    TO WS3-BILLABLE
END-IF.
IF FMDL-TF-OTHER-FUEL-FN
ADD FMDL-BC-TR-OTHER-COST  TO WS-BILLABLE
ADD FMDL-SC-TR-OTHER-COST  TO WS2-BILLABLE
ADD FMDL-SC-TR-OTHER-COST  TO WS2-BILLABLE-FUEL
ADD FMDL-TR-OTHER-COST     TO WS3-BILLABLE
END-IF.

IF FMDL-TF-CASH-FN
ADD FMDL-BC-TR-CASH-ADVANCE-AMOUNT TO WS-BILLABLE
ADD FMDL-SC-TR-CASH-ADVANCE-AMOUNT TO WS2-BILLABLE
ADD FMDL-TR-CASH-ADVANCE-AMOUNT    TO WS3-BILLABLE
END-IF.
IF FMDL-TF-OIL-FN
ADD FMDL-BC-TR-OIL-COST    TO WS-BILLABLE
ADD FMDL-SC-TR-OIL-COST    TO WS2-BILLABLE
ADD FMDL-TR-OIL-COST       TO WS3-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-1-FN
ADD FMDL-BC-TR-PRODUCT-AMOUNT-1 TO WS-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-1 TO WS2-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-1    TO WS3-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-2-FN
ADD FMDL-BC-TR-PRODUCT-AMOUNT-2 TO WS-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-2 TO WS2-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-2    TO WS3-BILLABLE
END-IF.
IF FMDL-TF-PRODUCT-3-FN
ADD FMDL-BC-TR-PRODUCT-AMOUNT-3 TO WS-BILLABLE
ADD FMDL-SC-TR-PRODUCT-AMOUNT-3 TO WS2-BILLABLE
ADD FMDL-TR-PRODUCT-AMOUNT-3    TO WS3-BILLABLE
END-IF.


FP-CANCEL-CORRECT-CN-TAX.


IF WS-BILLABLE > ZEROS AND
WS-BILLABLE NOT = FMDL-BC-TR-CASH-ADVANCE-AMOUNT
ADD FMDL-BC-TAX-AMT    TO WS-BILLABLE
ADD FMDL-SC-TAX-AMT    TO WS2-BILLABLE
ADD FMDL-SC-TAX-AMT    TO WS2-BILLABLE-FUEL
ADD FMDL-CN-TAX-AMT-US TO WS3-BILLABLE
ELSE
ADD FMDL-BC-TAX-AMT    TO WS-NON-BILLABLE
ADD FMDL-SC-TAX-AMT    TO WS2-NON-BILLABLE
ADD FMDL-SC-TAX-AMT    TO WS2-NON-BILLABLE-FUEL
ADD FMDL-CN-TAX-AMT-US TO WS3-NON-BILLABLE
END-IF.


FP-CANCEL-ADJUST-CDN-CREDIT.

IF WS3-BILLABLE > ZEROES
INITIALIZE                 CA-CXACO0UD-COMMAREA
MOVE CDN-CUST-ACCT-CODE TO CA-CXACO0UD-CO-CD
PERFORM FP-CANCEL-ADJUST-CREDIT
PERFORM UPDATE-CREDITL
END-IF.


FP-CANCEL-ADJUST-CREDIT.

MOVE 'A'                  TO CA-CUR-DY-XMIT-IND
IF HLD-CURR-CD > SPACES
AND HLD-CURR-CD NOT = 'USD'
COMPUTE CA-CUR-DY-XMIT =
WS-BILLABLE * -1
END-COMPUTE
ELSE
COMPUTE CA-CUR-DY-XMIT =
WS3-BILLABLE * -1
END-COMPUTE
END-IF
MOVE FMDL-TRANSACTION-COUNTRY-FLAG TO COM-COUNTRY-FLAG
IF FMDL-CURRENCY-FLAG = 'B'
EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE 'A'              TO CA-CUR-DY-XMIT-US-IND
COMPUTE CA-CUR-DY-XMIT-US =
WS-BILLABLE * -1
END-COMPUTE
WHEN COM-CO-IS-CANADIAN
MOVE 'A'              TO CA-CUR-DY-XMIT-CAN-IND
COMPUTE CA-CUR-DY-XMIT-CAN =
WS-BILLABLE * -1
END-COMPUTE
END-EVALUATE
ELSE
EVALUATE TRUE
WHEN COM-SC-IS-US
MOVE 'A'              TO CA-CUR-DY-XMIT-US-IND
COMPUTE CA-CUR-DY-XMIT-US =
WS2-BILLABLE * -1
END-COMPUTE
WHEN COM-SC-IS-CANADIAN
MOVE 'A'              TO CA-CUR-DY-XMIT-CAN-IND
COMPUTE CA-CUR-DY-XMIT-CAN =
WS2-BILLABLE * -1
END-COMPUTE
END-EVALUATE
END-IF.


FP-CANCEL-ADJUST-CC-CREDIT.


IF FMDL-COMDATA-COMPLETE-YES AND
WS3-NON-BILLABLE > ZEROES
PERFORM FP-CANCEL-ADJUST-CC-CREDIT2
END-IF.


FP-CANCEL-ADJUST-CC-CREDIT2.

MOVE 'FP-CANCEL-ADJUST-CC-CREDIT2' TO CXUTS0ML-PARAGRAPH.

MOVE FMDL-COMDATA-COMPLETE-STATUS TO
COM-COMDATA-COMPLETE-STATUS.
IF (COM-CC-RECOURSE OR COM-CC-NON-FUNDED)
MOVE FMDL-SC-SRVC-CNTR-CODE TO SCM-KEY
IF SCM-KEY NOT = WS-LAST-SCMM-READ
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCM-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCM-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE SCM-KEY TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS
END-IF.

IF COM-CC-FUNDED OR COM-CC-FUNDED-OVERRIDE
INITIALIZE                 CA-CXACO0UD-COMMAREA
MOVE CDN-COMDATA-CMPLT-ACCT-CODE
TO CA-CXACO0UD-CO-CD
MOVE 'A'                TO CA-CUR-DY-XMIT-IND
IF HLD-CURR-CD > SPACES
AND HLD-CURR-CD NOT = 'USD'
COMPUTE CA-CUR-DY-XMIT =
WS-BILLABLE * -1
END-COMPUTE
ELSE
COMPUTE CA-CUR-DY-XMIT =
WS3-BILLABLE * -1
END-COMPUTE
END-IF
PERFORM UPDATE-CREDITL
END-IF.
IF COM-CC-RECOURSE
INITIALIZE                 CA-CXACO0UD-COMMAREA
MOVE SCM-COMDATA-COMPLETE-ACCT
TO CA-CXACO0UD-CO-CD
MOVE 'A'                TO CA-CUR-DY-XMIT-IND
IF HLD-CURR-CD > SPACES
AND HLD-CURR-CD NOT = 'USD'
COMPUTE CA-CUR-DY-XMIT =
WS-BILLABLE * -1
END-COMPUTE
ELSE
COMPUTE CA-CUR-DY-XMIT =
WS3-BILLABLE * -1
END-COMPUTE
END-IF
PERFORM UPDATE-CREDITL
END-IF.


IF (COM-CC-RECOURSE OR COM-CC-NON-FUNDED)
MOVE COM-CC-RMR-KEY TO RMR-KEY
EXEC CICS READ
DATASET ('FMRELAT')
INTO    (RELATIONSHIP-MAINT-RECORD)
RIDFLD  (RMR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE RMR-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
SUBTRACT WS3-NON-BILLABLE FROM RMR-CC-CREDIT-USED-DAILY
EXEC CICS REWRITE
DATASET ('FMRELAT')
FROM    (RELATIONSHIP-MAINT-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


FP-CANCEL-UPDATE-PRMCARD.

IF (ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'P') OR
(ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E')
PERFORM CANCEL-PREMIER-CARD
IF CDN-INTRA-DAY-FLAG = 'Y'
PERFORM INTRA-DAY-DOWNLOAD
PERFORM INTRA-DAY-DOWNLOAD-BF3
END-IF
END-IF.


FP-CANCEL-UPDATE-FLEET-USED.

IF CDN-FLEET-LIMIT-FLAG = 'Y'
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
IF WS-PROPRIETARY-CARD = 'Y'
PERFORM FP-CANCEL-PRODUCTS-USED
ELSE
PERFORM FP-CANCEL-UFU
END-IF
END-IF.


FP-CANCEL-UFU.

MOVE 'FP-CANCEL-UFU'             TO CXUTS0ML-PARAGRAPH.

MOVE SPACES                TO WS-CXXCO0PU-COMMAREA
INITIALIZE                    WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID   TO WS-CXXCO0PU-CUST
ELSE

MOVE CDN-CUST-NUMBER    TO WS-CXXCO0PU-CUST
END-IF
MOVE '2'                   TO WS-CXXCO0PU-TYPE
MOVE PRM-CARD-NUMB         TO WS-CXXCO0PU-STANDARD-ID-C
MOVE 10000                 TO WS-CXXCO0PU-PROD-ID
COMPUTE WS-CXXCO0PU-AMOUNT   = WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OIL-COST +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-TAX-AMT
COMPUTE WS-CXXCO0PU-QTY      = WS-UIWA-NR2-QTY  +
WS-UIWA-REF-QTY  +
(WS-UIWA-OIL-QTY / 4)
END-COMPUTE



EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'V'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'U'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'Y'                   TO WS-CXXCO0PU-REVERSAL
MOVE WS-CURRENT-YYYYMMDD-FMT TO WS-CXXCO0PU-ORIG-XTN-DATE

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF WS-CXXCO0PU-RETURN-CODE NOT = ZERO
MOVE WS-CXXCO0PU-RETURN-CODE TO
WS-CXXCO0PU-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-CXXCO0PU-ABEND)
END-EXEC.

IF CSR-GLOBAL-LIMIT-FLAG = 'Y'
MOVE SPACES               TO WS-CXXCO0PU-COMMAREA
INITIALIZE                   WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID   TO WS-CXXCO0PU-CUST
MOVE '99999'            TO WS-CXXCO0PU-STANDARD-ID
ELSE

MOVE CDN-CUST-NUMBER    TO WS-CXXCO0PU-CUST
MOVE 999                TO WS-CXXCO0PU-STANDARD-ID-P
END-IF
MOVE '1'                  TO WS-CXXCO0PU-TYPE
MOVE 10000                TO WS-CXXCO0PU-PROD-ID
COMPUTE WS-CXXCO0PU-AMOUNT   = WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OIL-COST +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-TAX-AMT
COMPUTE WS-CXXCO0PU-QTY      = WS-UIWA-NR2-QTY  +
WS-UIWA-REF-QTY  +
(WS-UIWA-OIL-QTY / 4)
END-COMPUTE
EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'V'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'U'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'Y'                  TO WS-CXXCO0PU-REVERSAL
MOVE WS-CURRENT-YYYYMMDD-FMT TO WS-CXXCO0PU-ORIG-XTN-DATE

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF WS-CXXCO0PU-RETURN-CODE NOT = ZERO
MOVE WS-CXXCO0PU-RETURN-CODE TO
WS-CXXCO0PU-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-CXXCO0PU-ABEND)
END-EXEC
END-IF.


FP-CANCEL-PRODUCTS-USED.

INITIALIZE                      WS-TSFMO0LP-COMMAREA
MOVE 'F'                     TO FMLP-LIM-PROCESS-IND
MOVE WS-HIER-SW              TO FMLP-HIER-SW
MOVE PIR-HIERARCHY-ID        TO FMLP-HIERARCHY-ID
MOVE CDN-CUST-NUMBER         TO FMLP-CUST-NUMBER
MOVE PRM-CARD-NUMB           TO FMLP-CARD-NUMB
MOVE WS-CURRENT-YYYYMMDD-FMT TO FMLP-CURR-DT
IF WS-LARGE-TRANS-SPLITS
AND NOT LTI-LAST-PASS
MOVE 'V'                  TO FMLP-UPDATE-TYPE
ELSE
MOVE 'U'                  TO FMLP-UPDATE-TYPE
END-IF
PERFORM PII-SETUP-FMLP-FLDS-IV
PERFORM PII-SETUP-FMLP-POSTING-II
PERFORM LINK-TO-TSFMO0LP.

PII-SETUP-FMLP-FLDS-IV.

MOVE FMDL-NR2-SUB-PROD-CODE  TO FMLP-IN-NR2-SUB-PROD
MOVE FMDL-NR1-SUB-PROD-CODE  TO FMLP-IN-NR1-SUB-PROD
MOVE FMDL-RFR-SUB-PROD-CODE  TO FMLP-IN-REF-SUB-PROD
MOVE FMDL-OTHER-FUEL-TYPE    TO FMLP-IN-OTH-SUB-PROD
MOVE FMDL-TR-PRODUCT-CODE-1  TO FMLP-IN-PR1-SUB-PROD
MOVE FMDL-TR-PRODUCT-CODE-2  TO FMLP-IN-PR2-SUB-PROD
MOVE FMDL-TR-PRODUCT-CODE-3  TO FMLP-IN-PR3-SUB-PROD.

PII-SETUP-FMLP-POSTING-II.

MOVE FMDL-BC-TR-TRACTOR-COST     TO FMLP-IN-NR2-COST
MOVE FMDL-BC-TR-TRACTOR-GALLONS  TO FMLP-IN-NR2-QTY
MOVE FMDL-BC-NR1-COST            TO FMLP-IN-NR1-COST
MOVE FMDL-BC-NR1-GALLONS         TO FMLP-IN-NR1-QTY
MOVE FMDL-BC-TR-TRAILER-COST     TO FMLP-IN-REF-COST
MOVE FMDL-BC-TR-TRAILER-GALLONS  TO FMLP-IN-REF-QTY
MOVE FMDL-BC-TR-OTHER-COST       TO FMLP-IN-OTH-COST
MOVE FMDL-BC-TR-OTHER-GALLONS    TO FMLP-IN-OTH-QTY
MOVE FMDL-BC-TR-OIL-COST         TO FMLP-IN-OIL-COST
MOVE FMDL-BC-TR-OIL-QUARTS       TO FMLP-IN-OIL-QTY
MOVE FMDL-BC-TR-CASH-ADVANCE-AMOUNT TO FMLP-IN-CSH-COST
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-1 TO FMLP-IN-PR1-COST
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-2 TO FMLP-IN-PR2-COST
MOVE FMDL-BC-TR-PRODUCT-AMOUNT-3 TO FMLP-IN-PR3-COST.

FP-CANCEL-UPDATE-PO-NUMBER.


MOVE 'N' TO WS-EXIT-FLAG.

IF CDN-PURCHASE-ORDER NOT > SPACES
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.
IF FMDL-DT-PURCH-ORDER-NUMBER NOT > SPACES
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM FP-CANCEL-UPDATE-PO-NUMBER2
PERFORM FP-CANCEL-UPDATE-PO-NUMBER3
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM FP-CANCEL-UPDATE-PO-NUMBER4
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM FP-CANCEL-UPDATE-PO-NUMBER5
END-IF.


FP-CANCEL-UPDATE-PO-NUMBER2.


MOVE FMDL-CUST-CUSTOMER-ID      TO FMPO-CUSTOMER-ID
WS-HOLD-CUSTOMER-ID.
MOVE 'C'                        TO FMPO-PO-STATUS.
MOVE FMDL-DT-PURCH-ORDER-NUMBER TO FMPO-PO-NUMBER.
MOVE ZEROS                      TO FMPO-DUP-COUNTER.


FP-CANCEL-UPDATE-PO-NUMBER3.

MOVE 'FP-CANCEL-UPDATE-PO-NUMBER3' TO CXUTS0ML-PARAGRAPH.
MOVE 'Y' TO WS-LOOP-FLAG
PERFORM UNTIL WS-LOOP-FLAG = 'N'
EXEC CICS READ
DATASET ('FMPOMST')
RIDFLD  (FMPO-KEY)
INTO    (FMPO-MASTER-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC
MOVE FMPO-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF FMPO-MAX-AMOUNT NOT NUMERIC
MOVE ZEROES TO FMPO-MAX-AMOUNT
END-IF
IF FMPO-CONTROL-NR NOT NUMERIC
MOVE ZEROES TO FMPO-CONTROL-NR
END-IF
EVALUATE TRUE
WHEN EIBRESP NOT = DFHRESP(NORMAL)
MOVE 'Y' TO WS-EXIT-FLAG
MOVE 'N' TO WS-LOOP-FLAG
WHEN WS-HOLD-CUSTOMER-ID NOT = FMPO-CUSTOMER-ID
MOVE 'Y' TO WS-EXIT-FLAG
MOVE 'N' TO WS-LOOP-FLAG
WHEN FMDL-DT-PURCH-ORDER-NUMBER NOT = FMPO-PO-NUMBER
MOVE 'Y' TO WS-EXIT-FLAG
MOVE 'N' TO WS-LOOP-FLAG
WHEN FMDL-RK-CONTROL-NUMBER NOT = FMPO-CONTROL-NR
ADD 1 TO FMPO-DUP-COUNTER
IF FMPO-DUP-COUNTER = ZEROES
MOVE 'Y' TO WS-EXIT-FLAG
MOVE 'N' TO WS-LOOP-FLAG
END-IF
WHEN OTHER
MOVE 'N' TO WS-LOOP-FLAG
END-EVALUATE
END-PERFORM.


FP-CANCEL-UPDATE-PO-NUMBER4.

MOVE 'FP-CANCEL-UPDATE-PO-NUMBER4' TO CXUTS0ML-PARAGRAPH.

EXEC CICS DELETE
DATASET ('FMPOMST')
RIDFLD  (FMPO-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE FMPO-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


IF NOT CDN-PURCHASE-ORDER-POOL
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


FP-CANCEL-UPDATE-PO-NUMBER5.

MOVE 'FP-CANCEL-UPDATE-PO-NUMBER5' TO CXUTS0ML-PARAGRAPH.
MOVE 'A'    TO FMPO-PO-STATUS.
MOVE ZEROES TO FMPO-DUP-COUNTER,
FMPO-DATE-USED,
FMPO-TIME-USED,
FMPO-AMOUNT-USED.

MOVE 'Y' TO WS-LOOP-FLAG
PERFORM UNTIL WS-LOOP-FLAG = 'N'
EXEC CICS WRITE
DATASET ('FMPOMST')
FROM    (FMPO-MASTER-RECORD)
RIDFLD  (FMPO-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE FMPO-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE 'N' TO WS-LOOP-FLAG
END-IF
IF EIBRESP = DFHRESP(DUPREC)
ADD 1 TO FMPO-DUP-COUNTER
IF FMPO-DUP-COUNTER = ZEROES
MOVE 'N' TO WS-LOOP-FLAG
END-IF
END-IF
END-PERFORM.


FP-CANCEL-UPDATE-FMPOOL.


MOVE 'N' TO WS-EXIT-FLAG.

IF NOT VERIFY-TRAILER-HOURS
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.
IF FMDL-DT-TRAILER-NUMBER NOT > SPACES
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.
IF FMDL-TR-TRAILER-COST NOT NUMERIC
MOVE ZEROS TO FMDL-TR-TRAILER-COST.
IF FMDL-TR-TRAILER-COST NOT > ZEROS
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM FP-CANCEL-UPDATE-FMPOOL2
END-IF.


FP-CANCEL-UPDATE-FMPOOL2.

MOVE 'FP-CANCEL-UPDATE-FMPOOL2'  TO CXUTS0ML-PARAGRAPH.
MOVE '01'                     TO FMP-RECORD-ID.
IF CDN-TRAILER-POOL-MSTR > SPACES

MOVE CDN-TRAILER-POOL-MSTR TO FMP-CUSTOMER-ID
ELSE

MOVE FMDL-CUST-CUSTOMER-ID TO FMP-CUSTOMER-ID
END-IF.
MOVE FMDL-DT-TRAILER-NUMBER   TO FMP-POOL-DATA.
EXEC CICS READ
DATASET ('FMPOOL')
RIDFLD  (FMP-KEY)
INTO    (FMPOOL-RECORD)
RESP    (EIBRESP)
UPDATE
END-EXEC.
MOVE FMP-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
EXEC CICS UNLOCK
DATASET ('FMPOOL')
RESP    (EIBRESP)
END-EXEC
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
IF FMP-LAST-ACTIVITY NOT NUMERIC
MOVE ZEROS TO FMP-LAST-ACTIVITY
END-IF
IF FMDL-RK-TRANSACTION-DATE NOT = FMP-LAST-ACTIVITY
EXEC CICS UNLOCK
DATASET ('FMPOOL')
RESP    (EIBRESP)
END-EXEC
MOVE 'Y' TO WS-EXIT-FLAG
END-IF
END-IF.
IF WS-EXIT-FLAG = 'N'
IF FMDL-TRAILER-HOURS-PREV NOT NUMERIC
MOVE ZEROS TO FMDL-TRAILER-HOURS-PREV
END-IF
MOVE FMDL-TRAILER-HOURS-PREV TO FMP-HOUR-METER-READING
EXEC CICS REWRITE
DATASET ('FMPOOL')
FROM    (FMPOOL-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


FP-CANCEL-UPDATE-ORDRFIL2.

MOVE 'FP-CANCEL-UPDATE-ORDRFIL2' TO CXUTS0ML-PARAGRAPH.
PERFORM COPY-TSFMP002.

EXEC CICS READ
DATASET ('ORDRFIL')
INTO    (ORDRFIL-DETAIL-RECD)
RIDFLD  (ORDRFIL-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE ORDRFIL-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE 'D' TO ODR-DRAFT-STATUS IN ORDRFIL-DETAIL-RECD.
MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.
MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
IN ORDRFIL-DETAIL-RECD.
EXEC CICS REWRITE
DATASET ('ORDRFIL')
FROM    (ORDRFIL-DETAIL-RECD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE ORDRFIL-DETAIL-RECD    TO  COM-FP-ORDRFIL.


FP-CANCEL-UPDATE-SETTLE.

IF FMDL-SETTLEMENT-TYPE-FLAG = 'F'
PERFORM FP-5060-CANCEL-SETTLE.


FP-CANCEL-UPDATE-RMF.

MOVE 'FP-CANCEL-UPDATE-RMF'      TO CXUTS0ML-PARAGRAPH.

IF FMDL-RMF-FLAG = 'Y'
MOVE CDN-CUSTOMER-RECORD TO WS-WORK-FIELD

MOVE COM-FP-CO-CODE      TO CDN-CUST-KEY
EXEC CICS READ
DATASET ('CDNCUST')
INTO    (CDN-CUSTOMER-RECORD)
RIDFLD  (CDN-CUST-KEY)
RESP    (EIBRESP)
UPDATE
END-EXEC
MOVE CDN-CUST-KEY       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM 60196-CHECK-RMF-NUMERIC
COMPUTE CDN-RMF-CURR-VOL-ACT = CDN-RMF-CURR-VOL-ACT    -
FMDL-TR-TRACTOR-GALLONS -
FMDL-TR-OTHER-GALLONS   -
FMDL-NR1-GALLONS
EXEC CICS REWRITE
DATASET ('CDNCUST')
FROM   (CDN-CUSTOMER-RECORD)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE WS-WORK-FIELD       TO CDN-CUSTOMER-RECORD.


FP-CANCEL-UPDATE-NETW-BY-CARD.

MOVE 'FP-CANCEL-UPDATE-NETW-BY-CARD' TO CXUTS0ML-PARAGRAPH.

IF FMDL-NETW-BY-CARD-KEY > SPACES

MOVE FMDL-NETW-BY-CARD-KEY   TO COM-NBC-KEY
PERFORM READ-CARDNET-UPDATE
MOVE COM-NBC-KEY  TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE ZEROES          TO NBC-DATE-USED
NBC-TIME-USED
PERFORM REWRITE-CARDNET
END-IF.


FP-CANCEL-SEND-NATS-INFO.

MOVE 'FP-CANCEL-SEND-NATS-INFO'  TO CXUTS0ML-PARAGRAPH.
IF FMDL-NATS-PRE-AUTH-DATE NUMERIC
IF FMDL-NATS-PRE-AUTH-DATE > ZEROES
INITIALIZE NATS-KEY
SET NATS-REQ-COMPLETE-RECORD TO TRUE
MOVE FMDL-NATS-PRE-AUTH-DATE TO NATS-TN-DATE
MOVE FMDL-NATS-PRE-AUTH-SEQ-NR TO NATS-TN-SEQ-NR
EXEC CICS READ
DATASET ('NATSLOG')
INTO    (NATS-RECORD)
RIDFLD  (NATS-KEY)
RESP    (EIBRESP)
END-EXEC
IF EIBRESP = DFHRESP(NOTOPEN)
EXEC CICS READ
DATASET ('NATSHLD')
INTO    (NATS-RECORD)
RIDFLD  (NATS-KEY)
RESP    (EIBRESP)
END-EXEC
END-IF
MOVE NATS-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
SET NATS-NRF-VOID TO TRUE
PERFORM 21055-START-NATS-SEND-PGM.


FP-CANCEL-CHK-TO-CONTINUE.

MOVE 'FP-CANCEL-CHK-TO-CONTINUE' TO CXUTS0ML-PARAGRAPH.
IF WS-LTI-SW = 'N'
OR LTI-LAST-PASS
MOVE 'N' TO WS-CONTINUE-CANCEL
ELSE


MOVE 'N' TO WS-LTI-FMLOG-FOUND
PERFORM
UNTIL WS-LTI-FMLOG-FOUND = 'Y'
OR WS-CONTINUE-CANCEL = 'N'


PERFORM FP-CANCEL-GET-FMLOG-RRN
EXEC CICS READ
DATASET ('FMLOG')
INTO    (FUEL-MANAGEMENT-DAILY-LOG-RECD)
RIDFLD  (FMLOG-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE FMLOG-RRN      TO WS-NUM-7
MOVE WS-NUM-7       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
EVALUATE TRUE
WHEN EIBRESP NOT = DFHRESP(NORMAL)
IF FMLOG-RRN > WS-LTI-LAST-FMLOG-RRN
MOVE 'N' TO WS-CONTINUE-CANCEL
END-IF
WHEN FMDL-ST-CONTROL-NUMBER NUMERIC
AND FMDL-ST-CONTROL-NUMBER = WS-LTIH-CONTROL-NR
MOVE 'Y' TO WS-LTI-FMLOG-FOUND

MOVE FMDL-RK-CONTROL-NUMBER TO WS-FP-CANCEL-CTL
END-EVALUATE
END-PERFORM
END-IF.


FP-CANCEL-GET-FMLOG-RRN.

IF WS-LTI-SKIP-FMLOG-RRN = FMLOG-RRN
ADD 1, WS-LTIH-CONTROL-NR GIVING ORDRFIL-RRN
PERFORM FP-CANCEL-READ-ORDRFIL
MOVE ODR-FMLOG-RRN IN ORDRFIL-DETAIL-RECD TO FMLOG-RRN
ELSE
ADD +1 TO FMLOG-RRN
IF FMLOG-RRN = WS-LTI-SKIP-FMLOG-RRN
ADD +1 TO FMLOG-RRN
END-IF
END-IF.


FP-CANCEL-BUILD-RESPONSE.

MOVE ZEROES TO POS-ERROR-NUMBER.
IF FMDL-CURRENCY-FLAG = 'B' OR 'M'



COMPUTE WS-CANCEL-GALLONS = WS-CANCEL-GALLONS            +
FMDL-SC-TR-TRACTOR-GALLONS     +
FMDL-SC-TR-TRAILER-GALLONS     +
FMDL-SC-TR-OTHER-GALLONS       +
FMDL-SC-NR1-GALLONS
COMPUTE WS-CANCEL-COST  = WS-CANCEL-COST                 +
FMDL-SC-TR-TRACTOR-COST        +
FMDL-SC-TR-TRAILER-COST        +
FMDL-SC-TR-OTHER-COST          +
FMDL-SC-NR1-COST               +
FMDL-SC-TR-OIL-COST            +
FMDL-SC-TR-CASH-ADVANCE-AMOUNT +
FMDL-SC-TR-PRODUCT-AMOUNT-1    +
FMDL-SC-TR-PRODUCT-AMOUNT-2    +
FMDL-SC-TR-PRODUCT-AMOUNT-3    +
FMDL-SC-TAX-AMT
ELSE
COMPUTE WS-CANCEL-GALLONS = WS-CANCEL-GALLONS           +
FMDL-TR-TRACTOR-GALLONS     +
FMDL-TR-TRAILER-GALLONS     +
FMDL-TR-OTHER-GALLONS       +
FMDL-NR1-GALLONS
COMPUTE WS-CANCEL-COST    = WS-CANCEL-COST              +
FMDL-TR-TRACTOR-COST        +
FMDL-TR-TRAILER-COST        +
FMDL-TR-OTHER-COST          +
FMDL-NR1-COST               +
FMDL-TR-OIL-COST            +
FMDL-TR-CASH-ADVANCE-AMOUNT +
FMDL-TR-PRODUCT-AMOUNT-1    +
FMDL-TR-PRODUCT-AMOUNT-2    +
FMDL-TR-PRODUCT-AMOUNT-3
END-IF.




FP-CANCEL-BUILD-RESPONSE2.



IF FMDL-CN-SC
MOVE 'LITERS.: '    TO CANCEL-GAL-LIT
ELSE
MOVE 'GALLONS: '    TO CANCEL-GAL-LIT
END-IF.
MOVE WS-CANCEL-GALLONS TO CANCEL-GALLONS.
MOVE WS-CANCEL-COST    TO CANCEL-COST.

MOVE TRANS-CANCELLED-2 TO OUT-COMENT.


FP-CNCL-UPDATE-SETTLE-ATM.

PERFORM FP-5070-GET-SCMSTR.
PERFORM 86001-GET-SETTLE-TS-4-CANCEL.

INITIALIZE SETTLEMENT-INFORMATION-RECORD.
MOVE WS-SETTLE-TS-CODE    TO SIR-SERVICE-CENTER-CODE.
MOVE WS-BUSINESS-DATE-YYYYMMDD-N
TO SIR-DATE.
MOVE FMDL-TR-TRANSACTION-TIME
TO SIR-TIME.
MOVE ZEROES               TO SIR-DUP-COUNTER.
MOVE 'T'                  TO SIR-RECORD-TYPE.
MOVE SPACES               TO SIR-DI-ACCOUNT-CODE.
MOVE FMDL-RK-CONTROL-NUMBER
TO SIR-DI-TRANSACTION-NUMBER.
MOVE ODR-SRVC-CENTER IN ORDRFIL-DETAIL-RECD
TO BSR-LOCATION-CODE.
MOVE '*C'                 TO BSR-SETTLE-PAYMENT-METHOD
MOVE SETTLEMENT-INFORMATION-RECORD
TO BSR-SETTLEMENT-INFO-RECORD.

PERFORM 84020-PUT-TO-BTCHSET.


FP-5050-SEE-IF-PAID.

PERFORM FP-5070-GET-SCMSTR.
PERFORM 86001-GET-SETTLE-TS-4-CANCEL.


PERFORM FP-5051-GET-CONTROL-RECORD


MOVE WS-SETTLE-TS-CODE        TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES                   TO SIR-DUP-COUNTER
MOVE 'T'                      TO SIR-RECORD-TYPE
MOVE SPACES                   TO SIR-DI-ACCOUNT-CODE
PERFORM FP-5052-GET-DETAIL-RECORD
WITH TEST AFTER
VARYING SIR-DUP-COUNTER FROM 0 BY 1
UNTIL WS-DI-TRANSACTION-NUMBER = FMDL-RK-CONTROL-NUMBER.

IF SIR-DI-TRANSACTION-CANCELLED
MOVE TRANS-ALREADY-CANCELLED-N TO POS-ERROR-NUMBER
MOVE TRANS-ALREADY-CANCELLED   TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
IF SIR-PALT-GROUP-ID < WS-PAYMENT-GROUP-ID AND
EIBAID NOT = DFHPF3                     AND
EIBAID NOT = DFHPF24
MOVE SETTLEMENT-ALREADY-PAID-N TO POS-ERROR-NUMBER
MOVE SETTLEMENT-ALREADY-PAID   TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


FP-5051-GET-CONTROL-RECORD.

MOVE 'FP-5051-GET-CONTROL-RECORD' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE WS-SETTLE-TS-CODE        TO SIR-SERVICE-CENTER-CODE
MOVE 'A'                      TO SIR-RECORD-TYPE
EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP (NOTFND)
INITIALIZE SIR-CONTROL-INFORMATION
MOVE +0           TO SIR-CI-BALANCE-GROUP-ID,
SIR-CI-CLOSING-GROUP-ID,
SIR-CI-PAYMENT-GROUP-ID
SIR-CI-PAYMENT-LST-CLOSING-ID
END-IF
IF SIR-CI-CYCLE-STATUS-PENDING
MOVE 'N'               TO WS-UPDT-FLAG
PERFORM 85011-CYCLE-SETTLEMENT
END-IF.
MOVE SIR-CI-BALANCE-GROUP-ID    TO WS-BALANCE-GROUP-ID
MOVE SIR-CI-CLOSING-GROUP-ID    TO WS-CLOSING-GROUP-ID
MOVE SIR-CI-PAYMENT-GROUP-ID    TO WS-PAYMENT-GROUP-ID.


FP-5052-GET-DETAIL-RECORD.

MOVE 'FP-5052-GET-DETAIL-RECORD' TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP (NOTFND)
MOVE SETTLEMENT-DETAIL-NOT-FOUND-N TO POS-ERROR-NUMBER
MOVE SETTLEMENT-DETAIL-NOT-FOUND   TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.
IF SIR-DI-TRANSACTION-NUMBER NUMERIC
MOVE SIR-DI-TRANSACTION-NUMBER TO
WS-DI-TRANSACTION-NUMBER
END-IF.


FP-5060-CANCEL-SETTLE.

MOVE 'N'        TO WS-SPLIT-SETTLE-FLAG.
MOVE SPACES TO COM-SPECIAL-SETTLEMENT.

PERFORM FP-5070-GET-SCMSTR.
PERFORM FP-5061-UPDATE-DETAIL
IF WS-SPLIT-SETTLE-FLAG = 'Y'
MOVE WS-HOLD-SIR-KEY TO SIR-KEY
COMPUTE SIR-DUP-COUNTER = SIR-DUP-COUNTER + 1
PERFORM FP-5061-UPDATE-DETAIL.

PERFORM FP-5062-UPDATE-BALANCE-GROUP.
PERFORM FP-5063-UPDATE-CLOSING-GROUP.
PERFORM FP-5064-UPDATE-PAYMENT-GROUP.


FP-5061-UPDATE-DETAIL.

MOVE 'FP-5061-UPDATE-DETAIL'     TO CXUTS0ML-PARAGRAPH.
MOVE SIR-KEY                     TO CXUTS0ML-COMMAND.

EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
UPDATE
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP

MOVE 'C'          TO SIR-DI-TRANSACTION-STATUS


IF FMDL-TEXACO-CREDIT-XTN OR
FMDL-NORMAL-CREDIT-XTN OR
FMDL-GENERIC-CREDIT-XTN
PERFORM FP-5061-CHECK-FEES.


IF THIS-BE-AN-ATM-CANCEL
MOVE SIR-DI-FEE-AMOUNT (1) TO WS-DC-FEE-AMT
MOVE ZEROES                TO SIR-DI-FEE-AMOUNT (1)
MOVE SPACES                TO SIR-DI-FEE-TYPE (1)
END-IF

EXEC CICS REWRITE
DATASET ('SETINFO')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP

IF SIR-DI-PAYMENT-TYPE-IS-SPECIAL
IF SIR-DI-PART-OF-SPLIT-FLAG = 'Y' AND
SIR-DI-PART-OF-SPLIT-PART = 1
CONTINUE
ELSE
MOVE 'Y' TO COM-SPECIAL-SETTLEMENT.

IF SIR-DI-PART-OF-SPLIT-FLAG = 'Y'
MOVE SIR-KEY TO WS-HOLD-SIR-KEY
MOVE 'Y'     TO WS-SPLIT-SETTLE-FLAG.

IF SIR-DI-TRANS-TYPE-IS-CC
MOVE 'Y' TO COM-COMDATA-COMPLETE-FLAG.

ADD SIR-DI-DISCOUNT-AMOUNT TO WS-DC-DISCOUNT-AMT.

MOVE SIR-BALT-GROUP-ID TO WS-BALANCE-GROUP-ID
MOVE SIR-CALT-GROUP-ID TO WS-CLOSING-GROUP-ID
MOVE SIR-PALT-GROUP-ID TO WS-PAYMENT-GROUP-ID.


FP-5061-CHECK-FEES.


MOVE ZEROES TO WS-DC-FEE-AMT-RETAIN.
PERFORM
VARYING TALLY FROM 1 BY 1
UNTIL   TALLY > 4
IF SIR-DI-FEE-TYPE (TALLY) = 'R' OR 'P' OR 'M'
ADD SIR-DI-FEE-AMOUNT (TALLY) TO WS-DC-FEE-AMT-RETAIN
MOVE ZEROES TO SIR-DI-FEE-AMOUNT (TALLY)
MOVE SPACES TO SIR-DI-FEE-TYPE (TALLY)
END-IF
END-PERFORM.


FP-5062-UPDATE-BALANCE-GROUP.

MOVE 'FP-5062-UPDATE-BALANCE-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'B'                 TO SIR-BALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-BALT-SC-CODE
MOVE WS-BALANCE-GROUP-ID TO SIR-BALT-GROUP-ID
MOVE ZEROES              TO SIR-BALT-ITEM-NUMBER


EXEC CICS READ
DATASET ('SETBAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-BALANCE-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-BALANCE-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP

PERFORM 5069-UPDATE-CONTROL-DATA

EXEC CICS REWRITE
DATASET ('SETBAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


FP-5063-UPDATE-CLOSING-GROUP.

MOVE 'FP-5063-UPDATE-CLOSING-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'C'                 TO SIR-CALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-CALT-SC-CODE
MOVE WS-CLOSING-GROUP-ID TO SIR-CALT-GROUP-ID
MOVE ZEROES              TO SIR-CALT-ITEM-NUMBER


EXEC CICS READ
DATASET ('SETCAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-CLOSING-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-CLOSING-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP

PERFORM 5069-UPDATE-CONTROL-DATA

EXEC CICS REWRITE
DATASET ('SETCAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


FP-5064-UPDATE-PAYMENT-GROUP.

MOVE 'FP-5064-UPDATE-PAYMENT-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'P'                 TO SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID TO SIR-PALT-GROUP-ID
MOVE ZEROES              TO SIR-PALT-ITEM-NUMBER


EXEC CICS READ
DATASET ('SETPAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-PAYMENT-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-PAYMENT-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP

PERFORM 5069-UPDATE-CONTROL-DATA.

EXEC CICS REWRITE
DATASET ('SETPAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


5069-UPDATE-CONTROL-DATA.

IF FMDL-PAID-AT-LOAD
COMPUTE WS2-BILLABLE = WS2-BILLABLE + WS2-NON-BILLABLE
MOVE ZEROS TO WS2-NON-BILLABLE
END-IF

IF FMDL-FUEL-UP-AMOUNT NOT NUMERIC
MOVE ZEROS TO FMDL-FUEL-UP-AMOUNT
END-IF

COMPUTE SIR-GI-TOTAL-AMOUNT = SIR-GI-TOTAL-AMOUNT -
WS2-BILLABLE        -
WS2-NON-BILLABLE    -
FMDL-FUEL-UP-AMOUNT


IF  TSXCO0AT-XBORDER-XTN = 'Y'
COMPUTE SIR-GI-TOTAL-AMOUNT =
SIR-GI-TOTAL-AMOUNT - WS-XBORDER-ASSMT-AMT
END-COMPUTE
END-IF

COMPUTE SIR-GI-TOTAL-DISCOUNT = SIR-GI-TOTAL-DISCOUNT -
WS-DC-DISCOUNT-AMT.

PERFORM 5069-CHECK-FOR-SPECIAL-OR-DB.
PERFORM 5069-CHECK-FOR-CREDIT.
PERFORM 5069-CHECK-FOR-STAR-PLUS.
PERFORM 5069-CHECK-FOR-PASSAGE-PLUS.


IF THIS-BE-AN-ATM-CANCEL
COMPUTE SIR-GI-TOTAL-CHARGES  = SIR-GI-TOTAL-CHARGES  -
WS-DC-FEE-AMT
END-IF.


5069-CHECK-FOR-SPECIAL-OR-DB.


EVALUATE TRUE
WHEN COM-SPECIAL-SETTLEMENT > SPACES AND
WS-SPLIT-SETTLE-FLAG NOT = 'Y'
COMPUTE SIR-GI-TOTAL-SPECIAL-AMOUNT =
SIR-GI-TOTAL-SPECIAL-AMOUNT -
WS2-NON-BILLABLE -
WS2-BILLABLE
COMPUTE SIR-GI-NUMBER-OF-SPECIAL-XTNS =
SIR-GI-NUMBER-OF-SPECIAL-XTNS - 1
COMPUTE SIR-GI-TOTAL-SPECIAL-DISCOUNT =
SIR-GI-TOTAL-SPECIAL-DISCOUNT -
WS-DC-DISCOUNT-AMT
WHEN COM-COMDATA-COMPLETE-FLAG = 'Y'
COMPUTE SIR-GI-TOTAL-CC-AMOUNT =
SIR-GI-TOTAL-CC-AMOUNT -
WS2-NON-BILLABLE
WHEN OTHER
COMPUTE SIR-GI-TOTAL-DB-AMOUNT =
SIR-GI-TOTAL-DB-AMOUNT -
WS2-NON-BILLABLE
END-EVALUATE.



5069-CHECK-FOR-CREDIT.

IF FMDL-TEXACO-CREDIT-XTN
IF COM-SPECIAL-SETTLEMENT > SPACES
COMPUTE SIR-GI-TOTAL-SPECIAL-CHARGES =
SIR-GI-TOTAL-SPECIAL-CHARGES - WS-DC-FEE-AMT-RETAIN
END-IF

COMPUTE SIR-GI-TOTAL-CHARGES = SIR-GI-TOTAL-CHARGES -
WS-DC-FEE-AMT-RETAIN
COMPUTE SIR-GI-TEXACO-CREDIT-XTNS =
SIR-GI-TEXACO-CREDIT-XTNS - 1
COMPUTE SIR-GI-TEXACO-CREDIT-AMT =
SIR-GI-TEXACO-CREDIT-AMT -
WS2-NON-BILLABLE - WS2-BILLABLE
COMPUTE SIR-GI-TEXACO-CREDIT-DISC =
SIR-GI-TEXACO-CREDIT-DISC -
WS-DC-DISCOUNT-AMT
COMPUTE SIR-GI-TEXACO-CREDIT-CHGS =
SIR-GI-TEXACO-CREDIT-CHGS -
WS-DC-FEE-AMT-RETAIN
END-IF.



IF FMDL-NORMAL-CREDIT-XTN OR
FMDL-GENERIC-CREDIT-XTN
IF COM-SPECIAL-SETTLEMENT > SPACES
COMPUTE SIR-GI-TOTAL-SPECIAL-CHARGES =
SIR-GI-TOTAL-SPECIAL-CHARGES - WS-DC-FEE-AMT-RETAIN
END-IF
COMPUTE SIR-GI-TOTAL-CHARGES = SIR-GI-TOTAL-CHARGES -
WS-DC-FEE-AMT-RETAIN
COMPUTE SIR-GI-OTHER-CREDIT-XTNS =
SIR-GI-OTHER-CREDIT-XTNS - 1
COMPUTE SIR-GI-OTHER-CREDIT-AMT =
SIR-GI-OTHER-CREDIT-AMT -
WS2-NON-BILLABLE - WS2-BILLABLE
COMPUTE SIR-GI-OTHER-CREDIT-DISC =
SIR-GI-OTHER-CREDIT-DISC -
WS-DC-DISCOUNT-AMT
COMPUTE SIR-GI-OTHER-CREDIT-CHGS =
SIR-GI-OTHER-CREDIT-CHGS -
WS-DC-FEE-AMT-RETAIN
END-IF.


5069-CHECK-FOR-STAR-PLUS.

IF FMDL-TEXACO-STAR-PLUS-XTN
COMPUTE SIR-GI-TEXACO-STAR-XTNS =
SIR-GI-TEXACO-STAR-XTNS - 1
COMPUTE SIR-GI-TEXACO-STAR-AMT =
SIR-GI-TEXACO-STAR-AMT -
WS2-NON-BILLABLE + WS2-BILLABLE
COMPUTE SIR-GI-TEXACO-STAR-DISC =
SIR-GI-TEXACO-STAR-DISC -
WS-DC-DISCOUNT-AMT
END-IF.


5069-CHECK-FOR-PASSAGE-PLUS.

IF WS-SPLIT-SETTLE-FLAG = 'Y'
COMPUTE SIR-GI-TOTAL-PAYTO-XTNS =
SIR-GI-TOTAL-PAYTO-XTNS - 1
COMPUTE SIR-GI-TOTAL-PAYTO-AMT  =
SIR-GI-TOTAL-PAYTO-AMT - WS2-NON-BILLABLE-FUEL -
WS2-BILLABLE-FUEL
COMPUTE SIR-GI-TOTAL-PAYTO-DISC =
SIR-GI-TOTAL-PAYTO-DISC - WS-DC-DISCOUNT-AMT.

IF WS-SPLIT-SETTLE-FLAG = 'Y'
COMPUTE SIR-GI-NUMBER-OF-SPECIAL-XTNS =
SIR-GI-NUMBER-OF-SPECIAL-XTNS - 1
COMPUTE SIR-GI-TOTAL-SPECIAL-DISCOUNT =
SIR-GI-TOTAL-SPECIAL-DISCOUNT -
WS-DC-DISCOUNT-AMT
IF COM-SPECIAL-SETTLEMENT = 'Y'
COMPUTE SIR-GI-TOTAL-SPECIAL-AMOUNT =
SIR-GI-TOTAL-SPECIAL-AMOUNT
- WS2-NON-BILLABLE
- WS2-BILLABLE
ELSE
COMPUTE SIR-GI-TOTAL-SPECIAL-AMOUNT =
SIR-GI-TOTAL-SPECIAL-AMOUNT
- WS2-NON-BILLABLE-FUEL
- WS2-BILLABLE-FUEL.


FP-5070-GET-SCMSTR.

MOVE 'FP-5070-GET-SCMSTR'        TO CXUTS0ML-PARAGRAPH.

MOVE FMDL-SC-SRVC-CNTR-CODE TO SCM-KEY.
IF SCM-KEY NOT = WS-LAST-SCMM-READ
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCM-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCM-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE SCM-KEY  TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS
END-IF.


FP-7000.

MOVE 'FP-7000'                   TO CXUTS0ML-PARAGRAPH.

IF INITIATED-VIA-START
NEXT SENTENCE
ELSE
MOVE SPACES TO OPAC-TERMINAL-CHECK-FLAG
MOVE 'FPMASTR' TO OPCKEY-SECURITY-DATA
PERFORM TERMINAL-ACCESS-CHECK
MOVE 'T' TO OPAC-TERMINAL-CHECK-FLAG.
MOVE 1 TO DT-KEY.
EXEC CICS READ
DATASET ('ONLNDF')
INTO    (WS-CICS-CONTROL-RECORD)
RIDFLD  (DT-KEY) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE DT-KEY            TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF FPM-REBUILD THEN
MOVE 'R' TO FPMASTR-STATUS-FLAG
ELSE
IF FPM-OPEN THEN
MOVE 'O' TO FPMASTR-STATUS-FLAG.
EXEC CICS REWRITE
DATASET (EIBDS)
FROM (WS-CICS-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
EXEC CICS LINK
PROGRAM ('ONLCTRL')
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE FUNCTION-COMPLETE TO OUT-COMENT.
MOVE FUNCTION-COMPLETE-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


UPDATE-CDEQUIP.

PERFORM UC-FIND-CDEQUIP.
IF EIBRESP = DFHRESP(NORMAL)
PERFORM UC-UPDATE-CDEQUIP.

EXEC CICS UNLOCK DATASET ('CDEQUIP') END-EXEC.
PERFORM UPDATE-SCMSTR.


UC-FIND-CDEQUIP.

MOVE 'UC-FIND-CDEQUIP'           TO CXUTS0ML-PARAGRAPH.
MOVE 'SC' TO CER-CUSTOMER-TYPE.
MOVE SCMSTR-KEY             TO  CER-CUSTOMER-CODE.
MOVE 'O' TO CER-DEVICE-MODE.
MOVE 'T' TO CER-DEVICE-CATAGORY.
IF PC-HAS-ATTACHED-PRINT
MOVE ODR-SRVC-CNTR-SUB-ID     IN ORDRFIL-DETAIL-RECD
TO  CER-SUB-ID
ELSE
MOVE ODR-SRVC-CNTR-SUB-ID-OUT IN ORDRFIL-DETAIL-RECD
TO  CER-SUB-ID.
MOVE CER-KEY TO CDEQUIP-KEY.
EXEC CICS READ
DATASET ('CDEQUIP')
INTO    (COMDATA-EQUIPMENT-RECORD)
RIDFLD  (CDEQUIP-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE CDEQUIP-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


UC-UPDATE-CDEQUIP.

MOVE 'UC-UPDATE-CDEQUIP'         TO CXUTS0ML-PARAGRAPH.

MOVE WS-UIWA-CHECK-NR1 TO CER-LAST-CHECK-NUMBER.
IF CER-LAST-XTN-DATE NOT = WS-CURRENT-DATE-YYDDD
MOVE CER-CUR-DAY-XTN-COUNT   TO CER-PRV-DAY-XTN-COUNT
MOVE CER-CUR-DAY-ERROR-COUNT TO CER-PRV-DAY-ERROR-COUNT
MOVE 0 TO CER-CUR-DAY-XTN-COUNT, CER-CUR-DAY-ERROR-COUNT.
ADD 1 TO CER-XTN-COUNT.
ADD 1 TO CER-CUR-DAY-XTN-COUNT.
MOVE WS-CURRENT-DATE-YYDDD TO CER-LAST-XTN-DATE.
EXEC CICS REWRITE
DATASET ('CDEQUIP')
FROM    (COMDATA-EQUIPMENT-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


UPDATE-SCMSTR.

MOVE 'UPDATE-SCMSTR'             TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
PERFORM 60200-CHECK-SCMSTR-NUMERICS
MOVE SCM-KEY                TO  SCMSTR-KEY
MOVE SCMSTR-KEY             TO  WS-LAST-SCMM-READ
MOVE WS-UIWA-CHECK-NR1 TO SCM-LAST-CHECK-NUMBER
EXEC CICS REWRITE
DATASET ('SCMSTR')
FROM    (SERVICE-CENTER-MASTER-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.

INIT-NEW-SCMSTR.
MOVE SPACES TO SERVICE-CENTER-MASTER-RECORD.
INITIALIZE SERVICE-CENTER-MASTER-RECORD.
MOVE SCMSTR-KEY TO SCM-KEY.
MOVE SCM-KEY-ST    TO SCM-LOCATION-STATE.
MOVE 'A'    TO  SCM-STATUS.
MOVE 'N'    TO  SCM-AUTOMATION-INPUT-STATUS
SCM-AUTOMATION-OUTPUT-STATUS.
MOVE 'C'    TO  SCM-DISCOUNT-BASIS
SCM-P2-DISC-BASIS.
MOVE 'F'    TO  SCM-P2-OTHER-DISC-BASIS.
MOVE 'N'    TO  SCM-SETTLE-LOC-STATUS
MOVE 'R'    TO  SCM-SETTLE-BALANCE-CYCLE
MOVE 'R'    TO  SCM-SETTLE-CLOSING-CYCLE
MOVE 'R'    TO  SCM-SETTLE-PAYMENT-CYCLE
MOVE +0 TO SCM-FULL-SERV-CASH-PRICE
SCM-MINI-SERV-CASH-PRICE
SCM-SELF-SERV-CASH-PRICE
SCM-FULL-SERV-CREDIT-PRICE
SCM-MINI-SERV-CREDIT-PRICE
SCM-SELF-SERV-CREDIT-PRICE
SCM-LAST-CHECK-NUMBER
SCM-OVER-RIDE-RATE
SCM-P2-SELF-DISC
SCM-P2-MINI-DISC
SCM-P2-FULL-DISC
SCM-P2-OTHER-DISC
SCM-P2-DISC-START-DATE
SCM-P2-DISC-END-DATE
SCM-P2-DISC-SET-UP-CHARGE
SCM-P2-DISC-REVISION-DATE
SCM-P2-DISC-REVISION-CHARGE
SCM-AUTOMATED-XTN-RATE
SCM-AUTO-UP-MANUAL-XTN-RATE
SCM-AUTO-EXPRESS-XTN-RATE
SCM-ELECT-AD-REFERENCE-NR
SCM-ELECT-AD-CHARGE
SCM-LAST-UPDATE-DATE
SCM-MANUAL-EXPRESS-XTN-RATE
SCM-LAST-SETTLE-DATE
SCM-SETTLE-COUNT
SCM-EQUIP-BILL-AMT
SCM-EQUIP-BILL-DATE
SCM-EQUIP-SETTLE-DATE
SCM-AUTOMATION-LEVEL (1)
SCM-AUTOMATION-LEVEL (2)
SCM-MANUAL-CALL-FEE
SCM-AUTOMATED-CALL-FEE
SCM-PREFERRED-FEE
SCM-MANUAL-PREFERRED-FEE.

INS-9999.
EXIT.


PREMIER-UPDATES.

PERFORM PU-READ-PRMCARD.
IF PRM-USE-COMPANY-STANDARDS
PERFORM PU-CHECK-COMPANY-STANDARDS
END-IF.
PERFORM PU-CHECK-DRIVER-CHARGE.
PERFORM PU-CHECK-FOR-FREEBIE.
PERFORM PU-COMPUTE-DISC-TO-SUBTRACT.
IF WS-BALANCE-BASED
PERFORM PU-FIGURE-XTN-AMOUNT
PERFORM PU-ADJUST-CARD-BALANCE
END-IF.
PERFORM FIGURE-CASH-USED.
PERFORM FIGURE-PURC-USED.
PERFORM PU-PRMINFO-READ
MOVE PRM-DIESEL-LIMIT TO WS-SAVE-DIESEL-LIMIT
MOVE PRM-REEFER-LIMIT TO WS-SAVE-REEFER-LIMIT
PERFORM PU-UPDATE-FUEL-USED.
IF CDN-LOAD-PAY-NETWORK = 'C'
PERFORM CHECK-COMCHEK-MOB-FUEL-RESET
PERFORM FIGURE-COMCHEK-MOB-FUEL-USED
END-IF
PERFORM PU-UPDATE-UNIT-NUMBER.
PERFORM PU-UPDATE-DL-INFO.
PERFORM PU-UPDATE-ONE-TIME.
PERFORM PU-UPDATE-PRMCARD.
PERFORM PU-UPDATE-FLEET-LIMITS.



PU-READ-PRMCARD.

MOVE 'PU-READ-PRMCARD'           TO CXUTS0ML-PARAGRAPH.

EXEC CICS READ
DATASET ('PRMCARD')
RIDFLD  (PRM-CARD-NUMB)
INTO    (PRM-CARD-RECORD)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE PRM-CARD-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
MOVE PRM-CARD-RECORD TO PRB-CARD-BEFORE-RECORD
PERFORM 21121G-PRMCARD-NUMERIC-CHECKS
END-IF.
PERFORM 60000-CHECK-PRMCARD
MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG.
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG.
IF THIS-BE-A-VRU-XTN
PERFORM VOICE-RESPONSE-OVERRIDE-RTN
END-IF.


PU-CHECK-COMPANY-STANDARDS.

MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG

MOVE CSR-PURC-INITIAL          TO PRM-PURC-INITIAL
MOVE CSR-PURC-RESET            TO PRM-PURC-RESET
MOVE CSR-CASH-INITIAL          TO PRM-CASH-INITIAL
MOVE CSR-CASH-RESET            TO PRM-CASH-RESET
MOVE CSR-CASH-PER-GALLON-LIMIT TO PRM-CASH-PER-GALLON-LIMIT.
MOVE CSR-OIL-INITIAL-DOLLARS   TO PRM-OIL-INITIAL-DOLLARS.
MOVE CSR-OIL-INITIAL-QUARTS    TO PRM-OIL-INITIAL-QUARTS.
MOVE CSR-OIL-RESET             TO PRM-OIL-RESET.


PU-CHECK-DRIVER-CHARGE.

MOVE ZEROS TO WS-CHARGE-RATE.
IF I-DEDUCT-CHARGE-FROM-DRIVER
MOVE WS-HOLD-RATE TO WS-CHARGE-RATE
END-IF.
IF (THIS-IS-AN-ALLIANCE-CUST) OR
(COM-PREFERRED-CUSTOMER)
IF THIS-BE-A-VRU-EXPRESS-CASH
MOVE ZEROES          TO WS-CHARGE-RATE
IF CDN-LESS-PICKUP
MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-CHARGE-RATE
END-IF
END-IF
END-IF.


PU-CHECK-FOR-FREEBIE.


MOVE 'N' TO WS-EXIT-FLAG.
IF (NOT THIS-IS-AN-ALLIANCE-CUST) AND
(NOT COM-PREFERRED-CUSTOMER)
MOVE 'Y' TO WS-EXIT-FLAG
IF THIS-BE-A-VRU-EXPRESS-CASH
PERFORM VOICE-RESPONSE-RATE-RTN
MOVE 'Y' TO WS-EXIT-FLAG.

PERFORM DETERMINE-IF-BALANCE-BASED
IF NOT WS-BALANCE-BASED
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-TERMINAL-FUEL OR WS-BILLABLE = 0
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-AN-ATM-XTN
MOVE 'Y' TO WS-EXIT-FLAG.
IF PRM-PRIMARY-CARD-NR > ZEROES AND
TSXCO0LM-SECONDARY-CARD-YES
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N'
PERFORM CHECK-FREEBIE-COUNT.


PU-COMPUTE-DISC-TO-SUBTRACT.

MOVE ZEROS TO PRMLOG-TRANSACTION-AMOUNT,
WS-SUBTRACT-DISCOUNT.


PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
IF FMDL-CUST-DISCOUNT-METHOD = 'N'
COMPUTE WS-SUBTRACT-DISCOUNT =
FMDL-RD-SC-SELECT-DISCOUNT -
FMDL-REBATE-DISCOUNT-AMT
END-IF
END-IF.
IF WS-BALANCE-BASED
EVALUATE TRUE ALSO TRUE
WHEN CDN-NO-BALANCE-FOCUS ALSO
(COM-FOCUS-DISC-FLAG = 'Y'
OR COM-NET-PRICING-FLAG = 'C')
WHEN CDN-NO-BALANCE-SELECT ALSO
((COM-FOCUS-DISC-FLAG NOT = 'Y')
AND (COM-NET-PRICING-FLAG NOT = 'C'))
WHEN CDN-NO-BALANCE ALSO
ANY
MOVE ZEROES TO WS-SUBTRACT-DISCOUNT
END-EVALUATE
END-IF.


PU-FIGURE-XTN-AMOUNT.


IF FMDL-CUST-DISCOUNT-METHOD = 'N'
COMPUTE PRMLOG-TRANSACTION-AMOUNT = WS-TOTAL-REQUEST -
WS-SUBTRACT-DISCOUNT
ELSE
MOVE WS-TOTAL-REQUEST TO PRMLOG-TRANSACTION-AMOUNT
END-IF.


PU-ADJUST-CARD-BALANCE.


IF CDN-MONEY-INVOICE-NO-FUEL-BILL AND
CDN-EXPRESS-CASH-YES
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-PREVIOUS-BALANCE
IF CDN-BILL-AT-PICKUP
COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE -
PRMLOG-TRANSACTION-AMOUNT - WS-CHARGE-RATE
COMPUTE PRMLOG-INVOICE-AMT =
PRMLOG-TRANSACTION-AMOUNT +
ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-ADJUSTED-BALANCE
ELSE
COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE -
PRMLOG-TRANSACTION-AMOUNT
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-ADJUSTED-BALANCE
MOVE ZEROS TO PRMLOG-INVOICE-AMT
IF NOT I-DEDUCT-CHARGE-FROM-DRIVER
COMPUTE PRMLOG-INVOICE-AMT =
ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD
END-IF
END-IF
ELSE
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-PREVIOUS-BALANCE
COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE -
PRMLOG-TRANSACTION-AMOUNT - WS-CHARGE-RATE
COMPUTE PRMLOG-INVOICE-AMT =
PRMLOG-TRANSACTION-AMOUNT + WS-CHARGE-RATE
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-ADJUSTED-BALANCE
END-IF.

PERFORM DETERMINE-IF-BALANCE-BASED
IF CDN-FLEET-LIMIT-FLAG = 'Y'
IF THIS-BE-A-FLEET-XTN           AND
WS-UIWA-FLEET-AMT-ORIG > ZERO  AND
WS-BALANCE-BASED
COMPUTE PRM-EXPENSE-BALANCE-HOLD =
PRM-EXPENSE-BALANCE-HOLD - WS-UIWA-FLEET-AMT-ORIG
IF PRM-EXPENSE-BALANCE-HOLD < ZERO
MOVE ZEROES TO PRM-EXPENSE-BALANCE-HOLD.


IF PRM-PRIMARY-CARD-NR > ZEROES AND
TSXCO0LM-SECONDARY-CARD-YES
MOVE ZEROES TO PRM-EXPENSE-BALANCE.


PU-UPDATE-FUEL-USED.


PERFORM PREMIER-CARD-GALL-LIMIT.



IF CSR-DIESEL-LIMIT-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYDDD TO PRM-DIESEL-LAST-DATE
IF WS-LARGE-TRANS-SPLITS
EVALUATE TRUE
WHEN LTI-FIRST-PASS
ADD PRM-DIESEL-USED TO WS-LTIH-TRANS-GALLONS2
WHEN LTI-LAST-PASS
MOVE WS-LTIH-TRANS-GALLONS2 TO PRM-DIESEL-USED
END-EVALUATE
ELSE
COMPUTE PRM-DIESEL-USED = PRM-DIESEL-USED            +
FMDL-BC-TR-TRACTOR-GALLONS +
FMDL-BC-NR1-GALLONS
END-COMPUTE
END-IF
END-IF.

IF CSR-REEFER-LIMIT-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYDDD TO PRM-REEFER-LAST-DATE
COMPUTE PRM-REEFER-USED =  PRM-REEFER-USED         +
FMDL-BC-TR-TRAILER-GALLONS
END-IF.

IF CSR-OTHER-LIMIT-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYDDD TO PIR-OTHER-LAST-DATE
COMPUTE PIR-OTHER-USED   =  PIR-OTHER-USED
+  FMDL-BC-TR-OTHER-GALLONS
END-IF.


FIGURE-COMCHEK-MOB-FUEL-USED.

COMPUTE PIR-CMCK-FUEL-LIMIT-USED =
PIR-CMCK-FUEL-LIMIT-USED + WS-UIWA-NR2-COST
+ WS-UIWA-NR1-COST
+ WS-UIWA-REF-COST
+ WS-UIWA-OTH-COST.


PU-UPDATE-UNIT-NUMBER.

IF NOT THIS-BE-A-VRU-XTN
IF CSR-VERIFY-UNIT = 'P' OR 'G'
MOVE COM-UNIT-NR          TO PRM-UNIT-NUMBER
MOVE COM-UNIT-NR-EXPANDED TO PRM-UNIT-NUMBER-10
END-IF
END-IF.


PU-UPDATE-DL-INFO.

IF CDN-LICENSE-CAPTURE
MOVE COM-DL-STATE TO PRM-DRIVERS-STATE
MOVE COM-DL-NR    TO PRM-DRIVERS-LICENSE
END-IF.


PU-UPDATE-ONE-TIME.

IF COM-CARD-OFFNET-USED = 'Y'
MOVE 'N'          TO PRM-FUEL-OFFNET-FLAG
END-IF.


PU-UPDATE-PRMCARD.

MOVE 'PU-UPDATE-PRMCARD'         TO CXUTS0ML-PARAGRAPH.
IF POS-ERROR-NUMBER = ZEROES AND
WS-HOLD-POS-ERROR-NUMBER = ZEROES
MOVE ZEROES TO PRM-VRU-PIN-ATTEMPTS.
COMPUTE PRM-LAST-PURCHASE-TIME =
EIBTIME / 100.
MOVE WS-CURRENT-DATE-YYDDD TO PRM-LAST-PURCHASE-DATE.
IF TRACTOR-PURCHASE = 1
OR TRAILER-PURCHASE = 1
MOVE PRM-LAST-PURCHASE-DATE TO PRM-LAST-PURC-DATE-FUEL
MOVE PRM-LAST-PURCHASE-TIME TO PRM-LAST-PURC-TIME-FUEL
END-IF

MOVE WS-CONTROL-NR             TO PRM-LAST-TRANS-NR.
MOVE FMDL-TR-SC-INVOICE-NUMBER TO PRM-LAST-FP-INV-NR.

IF WS-LARGE-TRANS-SPLITS
MOVE WS-LTIH-TOTAL-REQUEST  TO PRM-LAST-FP-AMOUNT
MOVE WS-HOLD-TRANS-GALLONS  TO PRM-LAST-FP-GALLONS
ELSE
MOVE WS-TOTAL-REQUEST       TO PRM-LAST-FP-AMOUNT
COMPUTE PRM-LAST-FP-GALLONS = FMDL-TR-TRACTOR-GALLONS +
FMDL-TR-TRAILER-GALLONS +
FMDL-TR-OTHER-GALLONS   +
FMDL-NR1-GALLONS
END-IF



IF WS-MERCH-SURCHRG-TOTAL NUMERIC
IF WS-MERCH-SURCHRG-TOTAL > ZERO
SUBTRACT WS-MERCH-SURCHRG-TOTAL FROM PRM-LAST-FP-AMOUNT
END-IF
END-IF

MOVE ' ' TO PRM-LAST-TRANS-TYPE.

IF THIS-BE-A-VRU-EXPRESS-CASH
MOVE 'V' TO PRM-LAST-TRANS-TYPE
END-IF.
MOVE COM-FP-SC-CODE TO PRM-LAST-LOCATION.
IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SCM-MASTER-SVC-CTR-CODE TO PRM-LAST-LOCATION
END-IF.

IF PRM-LAST-EXP-DATE NOT NUMERIC
MOVE ZEROES            TO PRM-LAST-EXP-DATE
END-IF
IF COM-CARD-EXP-DATE NOT NUMERIC
MOVE ZEROES TO COM-CARD-EXP-DATE
END-IF.
IF COM-CARD-EXP-DATE > PRM-LAST-EXP-DATE AND
WS-EXP-DATE-ERR = 'N'
MOVE COM-CARD-EXP-DATE TO PRM-LAST-EXP-DATE
MOVE ZEROES            TO PRM-CARD-PRIOR-PRINT-DATE
END-IF.


IF PRM-1TIME-OFF-CSTAND-FLAG = 'Y'

IF WS-LTI-SW = 'N'
OR LTI-LAST-PASS
MOVE 'Y'                     TO PRM-ADHERE-TO-STANDARDS
MOVE PRM-1TIME-OFF-CSTAND-ID TO PRM-COMPANY-STANDARD-ID
MOVE 'N'                     TO PRM-1TIME-OFF-CSTAND-FLAG
MOVE ZERO                    TO PRM-1TIME-OFF-CSTAND-ID
END-IF
END-IF.

MOVE WS-SAVE-DIESEL-LIMIT TO PRM-DIESEL-LIMIT
MOVE WS-SAVE-REEFER-LIMIT TO PRM-REEFER-LIMIT

PERFORM PU-CHECK-FOR-CARD-RNWL
IF SQLCODE = +000
MOVE CRD-TYP-CD   IN DCRDTYUP  TO PRM-CARD-TYPE-FIELD
MOVE CRD-STYLE-CD IN DCRDTYUP  TO PRM-FLEET-CARD-TYPE
END-IF

EXEC CICS REWRITE
DATASET ('PRMCARD')
FROM    (PRM-CARD-RECORD)
RESP    (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP (NORMAL)
MOVE PRM-CARD-RECORD TO PRA-CARD-AFTER-RECORD
MOVE PRM-CARD-CHANGE-RECORD
TO XCOH-MSG-DATA
MOVE 2               TO XCOH-MSG-CODE
PERFORM 21121C-LINK-TO-MSG-HANDLER
END-IF.

PERFORM PU-CHK-FOR-PRMINFO-UPDT.

IF PRM-PRIMARY-CARD-NR = ZEROES OR
TSXCO0LM-SECONDARY-CARD-NO
PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
PERFORM UPDATE-EXPENSE-HISTORY
END-IF.


PU-UPDATE-FLEET-LIMITS.

IF CDN-FLEET-LIMIT-FLAG = 'Y'

IF NOT ONE-TIME-OFF-CSTAND-TRAN
IF WS-PROPRIETARY-CARD = 'Y'
PERFORM PU-UPDATE-PRODUCTS-USED
ELSE
PERFORM PU-UPDATE-FLEET-USED
IF THIS-BE-A-FLEET-XTN AND
WS-UIWA-FLEET-AMT-ORIG > ZERO
PERFORM PU-UPDATE-FLEET-HOLD
END-IF
END-IF
END-IF
END-IF.


PU-CHECK-FOR-CARD-RNWL.


INITIALIZE DCRDTYUP
MOVE WS-PRM-CARD            TO CRD-NBR    IN DCRDTYUP
MOVE COM-CARD-EXP-DATE      TO NEW-EXP-DT IN DCRDTYUP

EXEC SQL
SELECT
CRD_NBR
,NEW_EXP_DT
,CRD_TYP_CD
,CRD_STYLE_CD
INTO
:DCRDTYUP.CRD-NBR
,:DCRDTYUP.NEW-EXP-DT
,:DCRDTYUP.CRD-TYP-CD
,:DCRDTYUP.CRD-STYLE-CD
FROM
DBO.CRD_TYP_UPD
WHERE
CRD_NBR    = :DCRDTYUP.CRD-NBR
AND NEW_EXP_DT = :DCRDTYUP.NEW-EXP-DT
END-EXEC

PERFORM CHECK-NOTFND-SQL
.


PU-UPDATE-FLEET-USED.

MOVE 'PU-UPDATE-FLEET-USED'      TO CXUTS0ML-PARAGRAPH.
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
MOVE SPACES                TO WS-CXXCO0PU-COMMAREA
INITIALIZE                    WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID   TO WS-CXXCO0PU-CUST
ELSE

MOVE CDN-CUST-NUMBER    TO WS-CXXCO0PU-CUST
END-IF
MOVE '2'                   TO WS-CXXCO0PU-TYPE
MOVE PRM-CARD-NUMB         TO WS-CXXCO0PU-STANDARD-ID-C
MOVE 10000                 TO WS-CXXCO0PU-PROD-ID
IF THIS-BE-A-FLEET-XTN
MOVE WS-UIWA-FLEET-PROD TO WS-CXXCO0PU-PROD-ID.
COMPUTE WS-CXXCO0PU-AMOUNT   = WS-UIWA-NR2-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-OTH-COST   +
WS-UIWA-NR1-COST   +
WS-UIWA-TAX-AMT    +
WS-PO-PRODUCT-TOTAL
COMPUTE WS-CXXCO0PU-QTY      = WS-UIWA-NR2-QTY    +
WS-UIWA-REF-QTY    +
WS-UIWA-OTH-QTY    +
WS-UIWA-NR1-QTY    +
(WS-UIWA-OIL-QTY / 4)
END-COMPUTE
EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'V'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'U'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'N'                    TO WS-CXXCO0PU-REVERSAL
IF THIS-BE-A-FLEET-XTN
MOVE WS-UIWA-FLEET-DATE-ORIG  TO WS-CXXCO0PU-ORIG-XTN-DATE
ELSE
MOVE WS-CURRENT-YYYYMMDD-FMT  TO WS-CXXCO0PU-ORIG-XTN-DATE
END-IF

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF WS-CXXCO0PU-RETURN-CODE NOT = ZERO
MOVE WS-CXXCO0PU-RETURN-CODE TO
WS-CXXCO0PU-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-CXXCO0PU-ABEND)
END-EXEC.

IF CSR-GLOBAL-LIMIT-FLAG = 'Y'
MOVE SPACES               TO WS-CXXCO0PU-COMMAREA
INITIALIZE                   WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID   TO WS-CXXCO0PU-CUST
MOVE '99999'            TO WS-CXXCO0PU-STANDARD-ID
ELSE

MOVE CDN-CUST-NUMBER    TO WS-CXXCO0PU-CUST
MOVE 999                TO WS-CXXCO0PU-STANDARD-ID-P
END-IF
MOVE '1'                  TO WS-CXXCO0PU-TYPE
MOVE 10000                TO WS-CXXCO0PU-PROD-ID
IF THIS-BE-A-FLEET-XTN
MOVE WS-UIWA-FLEET-PROD TO WS-CXXCO0PU-PROD-ID
END-IF
COMPUTE WS-CXXCO0PU-AMOUNT   = WS-UIWA-NR2-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-OTH-COST   +
WS-UIWA-NR1-COST   +
WS-UIWA-TAX-AMT    +
WS-PO-PRODUCT-TOTAL
COMPUTE WS-CXXCO0PU-QTY      = WS-UIWA-NR2-QTY    +
WS-UIWA-REF-QTY    +
WS-UIWA-OTH-QTY    +
WS-UIWA-NR1-QTY    +
(WS-UIWA-OIL-QTY / 4)
END-COMPUTE
EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'V'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'U'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'N'                  TO WS-CXXCO0PU-REVERSAL

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
IF WS-CXXCO0PU-RETURN-CODE NOT = ZERO
MOVE WS-CXXCO0PU-RETURN-CODE TO
WS-CXXCO0PU-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-CXXCO0PU-ABEND)
END-EXEC
END-IF.


PU-UPDATE-FLEET-HOLD.

MOVE 'PU-UPDATE-FLEET-HOLD'      TO CXUTS0ML-PARAGRAPH.
MOVE SPACES                  TO WS-CXXCO0PU-COMMAREA
INITIALIZE                      WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID     TO WS-CXXCO0PU-CUST
ELSE

MOVE CDN-CUST-NUMBER      TO WS-CXXCO0PU-CUST
END-IF
MOVE '2'                     TO WS-CXXCO0PU-TYPE
MOVE PRM-CARD-NUMB           TO WS-CXXCO0PU-STANDARD-ID-C
MOVE WS-UIWA-FLEET-PROD      TO WS-CXXCO0PU-PROD-ID.
MOVE WS-UIWA-FLEET-AMT-ORIG  TO WS-CXXCO0PU-AMOUNT
MOVE ZEROES                  TO WS-CXXCO0PU-QTY
EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'I'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'H'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'Y'                     TO WS-CXXCO0PU-REVERSAL
MOVE WS-UIWA-FLEET-DATE-ORIG TO WS-CXXCO0PU-ORIG-XTN-DATE

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.

IF CSR-GLOBAL-LIMIT-FLAG = 'Y'
MOVE SPACES                  TO WS-CXXCO0PU-COMMAREA
INITIALIZE                      WS-CXXCO0PU-COMMAREA
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID     TO WS-CXXCO0PU-CUST
MOVE '99999'              TO WS-CXXCO0PU-STANDARD-ID
ELSE

MOVE CDN-CUST-NUMBER      TO WS-CXXCO0PU-CUST
MOVE 999                  TO WS-CXXCO0PU-STANDARD-ID-P
END-IF
MOVE '1'                     TO WS-CXXCO0PU-TYPE
MOVE WS-UIWA-FLEET-PROD      TO WS-CXXCO0PU-PROD-ID
MOVE WS-UIWA-FLEET-AMT-ORIG  TO WS-CXXCO0PU-AMOUNT
MOVE ZEROES                  TO WS-CXXCO0PU-QTY
EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'I'                TO WS-CXXCO0PU-UPDATE-TYPE
WHEN OTHER
MOVE 'H'                TO WS-CXXCO0PU-UPDATE-TYPE
END-EVALUATE
MOVE 'Y'                     TO WS-CXXCO0PU-REVERSAL
MOVE WS-UIWA-FLEET-DATE-ORIG TO WS-CXXCO0PU-ORIG-XTN-DATE

EXEC CICS LINK
PROGRAM  ('CXXCO0PU')
COMMAREA (WS-CXXCO0PU-COMMAREA)
LENGTH   (LENGTH OF WS-CXXCO0PU-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.

PU-UPDATE-PRODUCTS-USED.




EVALUATE TRUE
WHEN WS-LARGE-TRANS-SPLITS AND
NOT LTI-LAST-PASS
CONTINUE
WHEN WS-UIWA-SPLIT-TRN-IND = '2'
MOVE 'C'                     TO FMLP-LIM-PROCESS-IND
MOVE PRM-CARD-NUMB           TO FMLP-CARD-NUMB
MOVE WS-CURRENT-YYYYMMDD-FMT TO FMLP-CURR-DT
MOVE 'V'                     TO FMLP-UPDATE-TYPE
PERFORM PII-SETUP-FMLP-FLDS-IV
PERFORM PII-SETUP-FMLP-POSTING-II
PERFORM LINK-TO-TSFMO0LP
WHEN OTHER
MOVE 'C'                     TO FMLP-LIM-PROCESS-IND
MOVE PRM-CARD-NUMB           TO FMLP-CARD-NUMB
MOVE WS-CURRENT-YYYYMMDD-FMT TO FMLP-CURR-DT
MOVE 'U'                     TO FMLP-UPDATE-TYPE
PERFORM PII-SETUP-FMLP-FLDS-IV
PERFORM PII-SETUP-FMLP-POSTING-II
PERFORM LINK-TO-TSFMO0LP
END-EVALUATE.

PU-CHK-FOR-PRMINFO-UPDT.

PERFORM TLC-0045-GET-PROD

PERFORM PU-PRMINFO-CHANGES.
IF PRMINFO-REWRITE
PERFORM PU-PRMINFO-REWRITE
ELSE
PERFORM PU-PRMINFO-WRITE
END-IF.


PU-PRMINFO-READ.

MOVE 'PU-PRMINFO-READ'           TO CXUTS0ML-PARAGRAPH.
MOVE SPACES TO WS-PRMINFO-REWRITE-SW
WS-PRMINFO-WRITE-SW

INITIALIZE PRM-INFO-RECORD
MOVE PRM-CARD-NUMB TO PIR-CARD-NUMBER
EXEC CICS READ
DATASET ('PRMINFO')
INTO    (PRM-INFO-RECORD)
RIDFLD  (PIR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC

MOVE PIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP.

IF EIBRESP = DFHRESP(NORMAL)
SET PRMINFO-REWRITE TO TRUE
ELSE
IF EIBRESP NOT = DFHRESP(NORMAL)
SET PRMINFO-WRITE TO TRUE
END-IF
END-IF.

PU-PRMINFO-CHANGES.

IF PRMINFO-WRITE
MOVE PRM-CARD-NUMB TO PIR-CARD-NUMBER
END-IF

IF WS-UIWA-SC-CODE NOT > SPACES
MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
END-IF

IF WS-FUEL-PROD-PURCHASED > SPACES
MOVE WS-UIWA-SC-CODE        TO PIR-LAST-PURC-LOC-FUEL
MOVE WS-FUEL-PROD-PURCHASED TO PIR-LAST-PURC-PRD-FUEL
END-IF

IF WS-UIWA-RFID-NBR > SPACES
AND WS-UIWA-RFID-TAG-TYP (1:1) = 'U'
MOVE PRM-LAST-PURC-DATE-FUEL
TO PIR-LAST-PURC-DATE-RFID
MOVE PRM-LAST-PURC-TIME-FUEL
TO PIR-LAST-PURC-TIME-RFID
MOVE WS-UIWA-SC-CODE     TO PIR-LAST-PURC-LOC-RFID
COMPUTE PIR-LAST-PURC-QTY-RFID = WS-UIWA-NR2-QTY +
WS-UIWA-OTH-QTY +
WS-UIWA-NR1-QTY
EVALUATE TRUE
WHEN COM-US-COMP-CN-SC
MOVE PIR-LAST-PURC-QTY-RFID
TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS        TO PIR-LAST-PURC-QTY-RFID
WHEN COM-CN-COMP-US-SC
MOVE PIR-LAST-PURC-QTY-RFID
TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS         TO PIR-LAST-PURC-QTY-RFID
END-EVALUATE
END-IF.

IF WS-UIWA-RFID-NBR > SPACES
AND WS-UIWA-RFID-TAG-TYP (1:1) = 'T'
PERFORM 20544-CHECK-LST-RFID-TIME
IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
EVALUATE TRUE
WHEN COM-US-COMP-CN-SC
MOVE WS-UIWA-REF-QTY   TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS        TO WS-UIWA-REF-QTY
WHEN COM-CN-COMP-US-SC
MOVE WS-UIWA-REF-QTY   TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS         TO WS-UIWA-REF-QTY
END-EVALUATE
COMPUTE PIR-LAST-PURC-QTY-RFID =
(PIR-LAST-PURC-QTY-RFID + WS-UIWA-REF-QTY)
END-IF
END-IF.

IF WS-RESET-LAST-QTY-RFID = 'Y'
MOVE ZERO             TO PIR-LAST-PURC-QTY-RFID
END-IF.

IF PIR-LAST-MERCH-SURCHRG NOT NUMERIC
MOVE ZEROS TO PIR-LAST-MERCH-SURCHRG
END-IF.

IF WS-MERCH-SURCHRG-TOTAL NOT NUMERIC
MOVE ZEROS TO WS-MERCH-SURCHRG-TOTAL
END-IF.

MOVE WS-MERCH-SURCHRG-TOTAL  TO PIR-LAST-MERCH-SURCHRG.


PU-PRMINFO-REWRITE.

MOVE 'PU-PRMINFO-REWRITE'        TO CXUTS0ML-PARAGRAPH.
EXEC CICS REWRITE
DATASET ('PRMINFO')
FROM    (PRM-INFO-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.

PU-PRMINFO-WRITE.

MOVE 'PU-PRMINFO-WRITE'        TO CXUTS0ML-PARAGRAPH.
EXEC CICS WRITE
DATASET ('PRMINFO')
FROM    (PRM-INFO-RECORD)
RIDFLD  (PIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PIR-KEY            TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP.


AUTH-LOG.


MOVE COM-PREMIER-CARD              TO WS-PRM-CARD-NR
EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
CONTINUE
WHEN S007-MASTERCARD-CARD = 'Y'
PERFORM LOG-TO-AUTH
WHEN OTHER
CONTINUE
END-EVALUATE.


LOG-TO-AUTH.




INITIALIZE DMCAUTH

PERFORM 56600-LINK-TO-TSXCS060.

MOVE 'LOG-TO-AUTH             '    TO CXUTS0ML-PARAGRAPH.
MOVE COM-PREMIER-CARD              TO WS-PRM-CARD-NR
MOVE 15                            TO MOD10-SL
MOVE HIGH-VALUE                    TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-N                 TO AUTH-PAN
MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT TO AUTH-LOCAL-DT
MOVE WS-CONTROL-NR                 TO AUTH-APPROV-CD
MOVE '0001-01-01-00.00.00.000000'  TO STLMT-ID
MOVE ZEROES                        TO BTCH-ID
MRCH-ID
DTL-STLMT-ID
MOVE WS-BUSINESS-TIME-FMT          TO AUTH-LOCAL-TM
MOVE CDN-CUST-ACCT-CODE            TO AUTH-ACCT-NO

MOVE CDN-CUST-NUMBER               TO AUTH-CUST-ID
COMPUTE AUTH-TRAN-AMT   = FMDL-BC-TR-TRACTOR-COST        +
FMDL-BC-TR-TRAILER-COST        +
FMDL-BC-TR-OTHER-COST          +
FMDL-BC-NR1-COST               +
FMDL-BC-TR-OIL-COST            +
FMDL-BC-TR-CASH-ADVANCE-AMOUNT +
FMDL-BC-TR-PRODUCT-AMOUNT-1    +
FMDL-BC-TR-PRODUCT-AMOUNT-2    +
FMDL-BC-TR-PRODUCT-AMOUNT-3    +
FMDL-BC-TAX-AMT
MOVE AUTH-TRAN-AMT                 TO AUTH-TRAN-AMT-ACT
MOVE WS-EXP-DATE-YYYYMM (3:)       TO AUTH-EXP-DT
MOVE 'CDNP'                        TO AUTH-MCC
MOVE 'CDNP'                        TO AUTH-MCC-ORIG
MOVE 003030                        TO AUTH-PROC-CD
IF WS-POS-FLAG = 'Y' AND
WS-UIWA-SWIPED-KEYED = 'S'
MOVE '090'                      TO AUTH-POS-ENT-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'M'
MOVE '030'                   TO AUTH-POS-ENT-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'C'
MOVE '050'                TO AUTH-POS-ENT-MODE
ELSE
MOVE 010                  TO AUTH-POS-ENT-MODE
END-IF
END-IF
END-IF.
MOVE '999999999'                   TO AUTH-ACQ-INST-ID
MOVE EIBTRMID                      TO AUTH-TERM-ID
MOVE SCM-KEY                       TO AUTH-ACCEPT-ID
STRING SCM-LOCATION-NAME  DELIMITED BY '  ',
' '     DELIMITED  BY SIZE,
SCM-LOCATION-CITY  DELIMITED BY '  ',
' '     DELIMITED  BY SIZE,
SCM-LOCATION-STATE DELIMITED BY SIZE
INTO AUTH-ACCEPT-LOC
IF SCM-IS-IN-CANADA
MOVE 124                        TO AUTH-TRAN-CNTRY-CD
ELSE
MOVE 840                        TO AUTH-TRAN-CNTRY-CD
END-IF
IF POS-ERROR-NUMBER = ZERO
MOVE ZERO                       TO AUTH-RESPONSE-CD
ELSE
MOVE 05                         TO AUTH-RESPONSE-CD
END-IF
MOVE 080                           TO AUTH-REJECT-DESC-LEN
MOVE OUT-COMENT                    TO AUTH-REJECT-DESC-TEXT
MOVE 'N'                           TO AUTH-CBACK-STAT
MOVE 'N'                           TO AUTH-RETR-STAT
MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT TO AUTH-POSTED-DT
MOVE WS-BUSINESS-TIME-FMT          TO AUTH-POSTED-TM
MOVE AUTH-TRAN-AMT                 TO AUTH-POSTED-AMT
IF WS-POS-FLAG = 'Y'
MOVE 'E'                        TO AUTH-METH
ELSE
MOVE 'O'                        TO AUTH-METH
END-IF
MOVE WS-OFF-HOURS-WARNING-FLAG     TO AUTH-WARN-FLG
MOVE EIBTIME                       TO AUTH-STAN
MOVE 'N'                           TO AUTH-REVERSAL-FLG
MOVE SPACES                        TO AUTH-REVERSAL-RSN
MOVE 'N'                           TO AUTH-STAND-IN-FLG.
IF WS-UIWA-PROMPTED-DRIVER-ID > SPACES
MOVE WS-UIWA-PROMPTED-DRIVER-ID TO AUTH-PROMPTED-ID
ELSE
MOVE SPACES                     TO AUTH-PROMPTED-ID
END-IF
MOVE 'C'                           TO AUTH-SYSTEM-FLG.
MOVE POS-ERROR-NUMBER              TO AUTH-MSG-NO
MOVE WS-CONTROL-NR                 TO AUTH-POST-CNTL-NO,
XPND-CTL-NBR
MOVE POS-ERROR-NUMBER              TO AUTH-POST-MSG-NO.
MOVE ZEROES                        TO P105S1-FILE-TY
P105S2-FILE-R-DT
P105S3-PROC-ID
P105S4-FILE-SEQ-NO
D71-MSG-NO.
IF CXXCW170-CIR-IRIS-RETURN-CODE > SPACES
MOVE CXXCW170-CIR-IRIS-RETURN-CODE
TO AUTH-IRIS-FLG OF DMCAUTH
END-IF
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
IF PIR-HIERARCHY-ID > SPACES
MOVE PIR-HIERARCHY-ID           TO HIER-ID OF DMCAUTH
ELSE
MOVE SPACES                     TO HIER-ID OF DMCAUTH
END-IF
IF PIR-NODE-ID NOT > SPACES
MOVE SPACES TO PIR-NODE-ID
END-IF
CALL 'CXUTS124' USING
PIR-NODE-ID,
NODE-ID OF DMCAUTH,
BY CONTENT LENGTH OF PIR-NODE-ID,
BY CONTENT LENGTH OF NODE-ID OF DMCAUTH
END-CALL






MOVE 'SELECT CLUSTER'        TO CXUTS0ML-COMMAND.
MOVE 'CXXCOW.PARTITION_KEY'  TO WS-FMT-TABLENAME.
MOVE 8                       TO PART-NO
MOVE WS-BUSINESS-DATE-YYYYMM TO PART-DT
CXUTS0ML-COMMAND(16:)
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
SELECT
SUBSTR(DIGITS(PART_USE_NO),2,1)||CHAR(CURRENT TIMESTAMP)||'A'
INTO  :CLUSTER-KEY
FROM  CXXCOW.PARTITION_KEY
WHERE PART_DT = :PART-DT AND
PART_NO = :PART-NO
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM.
PERFORM CHECK-NORMAL-SQL.

MOVE 'SELECT GMT    '              TO CXUTS0ML-COMMAND.

EXEC SQL
SELECT DATE(CURRENT TIMESTAMP + :GMT-OFFSET-HOURS HOURS),
TIME(CURRENT TIMESTAMP + :GMT-OFFSET-HOURS HOURS)
INTO :AUTH-UT-DT,
:AUTH-UT-TM
FROM  CXXCOW.PARTITION_KEY
WHERE PART_DT = :PART-DT AND
PART_NO = :PART-NO
END-EXEC.


MOVE 'INSERT'                      TO CXUTS0ML-COMMAND.
MOVE AUTH-PAN                      TO CXUTS0ML-COMMAND(8:).
MOVE 'CXXCOW.MC_AUTHORIZATION'     TO WS-FMT-TABLENAME.
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
INSERT INTO CXXCOW.MC_AUTHORIZATION
(AUTH_PAN,
AUTH_LOCAL_DT,
AUTH_APPROV_CD,
AUTH_LOCAL_TS,
STLMT_ID,
BTCH_ID,
MRCH_ID,
DTL_STLMT_ID,
AUTH_UT_DT,
AUTH_UT_TM,
AUTH_LOCAL_TM,
AUTH_ACCT_NO,
AUTH_CUST_ID,
AUTH_TRAN_AMT,
AUTH_TRAN_AMT_ACT,
AUTH_EXP_DT,
AUTH_MCC,
AUTH_MCC_ORIG,
AUTH_PROC_CD,
AUTH_POS_ENT_MODE,
AUTH_ACQ_INST_ID,
AUTH_TERM_ID,
AUTH_ACCEPT_ID,
AUTH_ACCEPT_LOC,
AUTH_TRAN_CNTRY_CD,
AUTH_RESPONSE_CD,
AUTH_REJECT_DESC,
AUTH_CBACK_STAT,
AUTH_RETR_STAT,
AUTH_POSTED_DT,
AUTH_METH,
AUTH_WARN_FLG,
AUTH_STAN,
AUTH_REVERSAL_FLG,
AUTH_REVERSAL_RSN,
AUTH_STAND_IN_FLG,
CLUSTER_KEY,
AUTH_MSG_NO,
AUTH_POST_CNTL_NO,
XPND_CTL_NBR,
AUTH_POST_MSG_NO,
AUTH_PROMPTED_ID,
AUTH_POSTED_TM,
AUTH_POSTED_AMT,
AUTH_SYSTEM_FLG,
P105S1_FILE_TY,
P105S2_FILE_R_DT,
P105S3_PROC_ID,
P105S4_FILE_SEQ_NO,
D71_MSG_NO,
AUTH_IRIS_FLG,
HIER_ID,
NODE_ID
,AUTH_ID_MTCH_NBR)
VALUES (:AUTH-PAN,
:AUTH-LOCAL-DT,
:AUTH-APPROV-CD,
CURRENT TIMESTAMP,
CURRENT TIMESTAMP,
:BTCH-ID,
:MRCH-ID,
:DTL-STLMT-ID,
:AUTH-UT-DT,
:AUTH-UT-TM,
:AUTH-LOCAL-TM,
:AUTH-ACCT-NO,
:AUTH-CUST-ID,
:AUTH-TRAN-AMT,
:AUTH-TRAN-AMT-ACT,
:AUTH-EXP-DT,
:AUTH-MCC,
:AUTH-MCC-ORIG,
:AUTH-PROC-CD,
:AUTH-POS-ENT-MODE,
:AUTH-ACQ-INST-ID,
:AUTH-TERM-ID,
:AUTH-ACCEPT-ID,
:AUTH-ACCEPT-LOC,
:AUTH-TRAN-CNTRY-CD,
:AUTH-RESPONSE-CD,
:AUTH-REJECT-DESC,
:AUTH-CBACK-STAT,
:AUTH-RETR-STAT,
:AUTH-POSTED-DT,
:AUTH-METH,
:AUTH-WARN-FLG,
:AUTH-STAN,
:AUTH-REVERSAL-FLG,
:AUTH-REVERSAL-RSN,
:AUTH-STAND-IN-FLG,
:CLUSTER-KEY,
:AUTH-MSG-NO,
:AUTH-POST-CNTL-NO,
:XPND-CTL-NBR,
:AUTH-POST-MSG-NO,
:AUTH-PROMPTED-ID,
:AUTH-POSTED-TM,
:AUTH-POSTED-AMT,
:AUTH-SYSTEM-FLG,
:P105S1-FILE-TY,
:P105S2-FILE-R-DT,
:P105S3-PROC-ID,
:P105S4-FILE-SEQ-NO,
:D71-MSG-NO,
:AUTH-IRIS-FLG,
:DMCAUTH.HIER-ID,
:DMCAUTH.NODE-ID
,:DMCAUTH.AUTH-ID-MTCH-NBR)
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM.
PERFORM CHECK-NORMAL-SQL.


FIGURE-CASH-USED.

MOVE 'N'    TO WS-EXIT-FLAG
MOVE ZEROES TO WS-TOTAL-CASH-AMOUNT.
IF (CDN-PURCHASE-ORDER-POOL-LIMIT)   AND
(WS-UIWA-PO-NR      > SPACES  )   AND
(CSR-CASH-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'CA' AND
FMPO-MAX-AMOUNT > ZEROS))
MOVE 'Y' TO WS-EXIT-FLAG
END-IF

IF WS-EXIT-FLAG = 'N'
PERFORM FIGURE-CASH-USED-CALC
IF PRM-PRIMARY-CARD-NR = ZEROES OR
TSXCO0LM-SECONDARY-CARD-NO
MOVE HLD-CASH-ONE-TIME TO HLD-CASH-ONE-TIME-PRI
ELSE
MOVE HLD-CASH-ONE-TIME TO HLD-CASH-ONE-TIME-SEC.


FIGURE-CASH-USED-CALC.

IF CSR-CARD-CASH-AVAILABLE
OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
IF WS-UIWA-CASH-AMT > ZEROES
PERFORM PREMIER-CARD-CASH-LIMIT
MOVE WS-CURRENT-DATE-YYDDD TO PRM-CASH-LAST-DATE-USED
ADD WS-UIWA-CASH-AMT TO WS-TOTAL-CASH-AMOUNT.

IF CSR-CASH-IS-ON-THE-CARD AND WS-ONE-TIME-CASH-LIMIT-AVAIL
MOVE PRM-CASH-ONE-TIME TO HLD-CASH-ONE-TIME
IF WS-TOTAL-CASH-AMOUNT < PRM-CASH-ONE-TIME
SUBTRACT WS-TOTAL-CASH-AMOUNT FROM PRM-CASH-ONE-TIME
MOVE ZEROES TO WS-TOTAL-CASH-AMOUNT
SUBTRACT PRM-CASH-ONE-TIME FROM HLD-CASH-ONE-TIME
ELSE
SUBTRACT PRM-CASH-ONE-TIME FROM WS-TOTAL-CASH-AMOUNT
MOVE ZEROES TO PRM-CASH-ONE-TIME.

IF CSR-CARD-CASH-AVAILABLE
ADD WS-TOTAL-CASH-AMOUNT TO PRM-CASH-USED.


FIGURE-PURC-USED.

MOVE 'N' TO WS-EXIT-FLAG.
IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
(WS-UIWA-PO-NR > SPACES)        AND
(CSR-PURC-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'PU' AND FMPO-MAX-AMOUNT > ZEROES))
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.

IF WS-EXIT-FLAG = 'N'
PERFORM FPU-UPDATE-DATE
PERFORM FPU-SETUP-PRODUCT-AMOUNTS
PERFORM FPU-CHECK-PROD1
PERFORM FPU-CHECK-PROD2
PERFORM FPU-CHECK-PROD3
PERFORM FPU-COMPUTE-PURC-AMOUNT
PERFORM FPU-COMPUTE-OIL-AMOUNT
END-IF.

IF PRM-PRIMARY-CARD-NR = ZEROES OR
TSXCO0LM-SECONDARY-CARD-NO
MOVE HLD-PURC-ONE-TIME TO HLD-PURC-ONE-TIME-PRI
ELSE
MOVE HLD-PURC-ONE-TIME TO HLD-PURC-ONE-TIME-SEC.


FPU-UPDATE-DATE.

IF CSR-PURC-LIMIT-ON-CARD
PERFORM PREMIER-CARD-PURC-LIMIT
IF TRACTOR-PURCHASE = 1 OR
TRAILER-PURCHASE = 1 OR
OIL-PURCHASE     = 1 OR
PRODUCT-PURCHASE = 1
MOVE WS-CURRENT-DATE-YYDDD TO PRM-PURC-LAST-DATE-USED.

IF CSR-OIL-FLAG = 'Y'
PERFORM PREMIER-CARD-OIL-LIMIT
IF OIL-PURCHASE = 1
MOVE WS-CURRENT-DATE-YYDDD TO PRM-OIL-LAST-DATE-USED.


FPU-SETUP-PRODUCT-AMOUNTS.

MOVE ZEROES        TO WS-TOTAL-PURC-AMOUNT
COMPUTE WS-PO-PRODUCT-TOTAL = WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST
IF WS-UIWA-PR1-CODE > SPACES OR
WS-UIWA-PR2-CODE > SPACES OR
WS-UIWA-PR3-CODE > SPACES
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE ZEROS TO WS-PO-PRODUCT-TOTAL.


FPU-CHECK-PROD1.

IF WS-UIWA-PR1-CODE > SPACES
IF LIMITS-ALTERED-FOR-PO = 'Y'
COMPUTE INDX-1 = WS-UIWA-PR1-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR1-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
CONTINUE
ELSE
ADD WS-UIWA-PR1-COST   TO WS-PO-PRODUCT-TOTAL.


FPU-CHECK-PROD2.

IF WS-UIWA-PR2-CODE > SPACES
IF LIMITS-ALTERED-FOR-PO = 'Y'
COMPUTE INDX-1 = WS-UIWA-PR2-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR2-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
CONTINUE
ELSE
ADD WS-UIWA-PR2-COST   TO WS-PO-PRODUCT-TOTAL.


FPU-CHECK-PROD3.

IF WS-UIWA-PR3-CODE > SPACES
IF LIMITS-ALTERED-FOR-PO = 'Y'
COMPUTE INDX-1 = WS-UIWA-PR3-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR3-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
CONTINUE
ELSE
ADD WS-UIWA-PR3-COST   TO WS-PO-PRODUCT-TOTAL.


FPU-COMPUTE-PURC-AMOUNT.

IF CSR-PURC-LIMIT-ON-CARD
IF FUELUP-YES
IF FUELUP-NEW-TRACTOR-COST NOT NUMERIC
OR FUELUP-NEW-TRACTOR-COST = ZEROS
COMPUTE FUELUP-NEW-TRACTOR-COST = FUELUP-CASH-PRICE

END-IF
COMPUTE WS-TOTAL-PURC-AMOUNT = FUELUP-NEW-TRACTOR-COST +
WS-UIWA-REF-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-OTH-COST   +
WS-UIWA-NR1-COST +
WS-UIWA-TAX-AMT    +
WS-PO-PRODUCT-TOTAL
ELSE
COMPUTE WS-TOTAL-PURC-AMOUNT = WS-UIWA-NR2-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-OTH-COST   +
WS-UIWA-NR1-COST +
WS-UIWA-TAX-AMT    +
WS-PO-PRODUCT-TOTAL
END-IF
END-IF.

IF CSR-PURC-LIMIT-ON-CARD AND WS-ONE-TIME-PURC-LIMIT-AVAIL
MOVE PRM-PURC-ONE-TIME TO HLD-PURC-ONE-TIME
IF WS-TOTAL-PURC-AMOUNT < PRM-PURC-ONE-TIME
SUBTRACT WS-TOTAL-PURC-AMOUNT FROM PRM-PURC-ONE-TIME
MOVE ZEROES TO WS-TOTAL-PURC-AMOUNT
SUBTRACT PRM-PURC-ONE-TIME FROM HLD-PURC-ONE-TIME
ELSE
SUBTRACT PRM-PURC-ONE-TIME FROM WS-TOTAL-PURC-AMOUNT
MOVE ZEROES TO PRM-PURC-ONE-TIME
END-IF
END-IF.
IF CSR-PURC-LIMIT-ON-CARD
ADD WS-TOTAL-PURC-AMOUNT TO PRM-PURC-USED
END-IF.


FPU-COMPUTE-OIL-AMOUNT.

IF CSR-OIL-FLAG = 'Y' AND
OIL-PURCHASE = 1
ADD WS-UIWA-OIL-COST TO PRM-OIL-USED-DOLLARS
ADD WS-UIWA-OIL-QTY TO PRM-OIL-USED-QUARTS.



UPDATE-FMPOMST.

MOVE 'N' TO WS-EXIT-FLAG.
PERFORM UF-DELETE-OLD-PO.
PERFORM UF-SETUP-NEW-PO.
PERFORM UF-ADD-FUEL-AMT-TO-USED.
IF WS-EXIT-FLAG = 'N'
PERFORM UF-ADD-CASH-AMT-TO-USED
PERFORM UF-ADD-PROD1-AMT-TO-USED
PERFORM UF-ADD-PROD2-AMT-TO-USED
PERFORM UF-ADD-PROD3-AMT-TO-USED
END-IF
PERFORM UF-WRITE-NEW-FMPO-RECORD.


UF-DELETE-OLD-PO.

MOVE 'UF-DELETE-OLD-PO'          TO CXUTS0ML-PARAGRAPH.
EXEC CICS DELETE
DATASET ('FMPOMST')
RIDFLD  (FMPO-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE FMPO-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


UF-SETUP-NEW-PO.

MOVE WS-UIWA-PO-NR         TO FMPO-PO-NUMBER.
MOVE 'C'                   TO FMPO-PO-STATUS.
MOVE WS-CURRENT-DATE-YYDDD TO FMPO-DATE-USED.
MOVE EIBTIME               TO FMPO-TIME-USED.
MOVE ZEROS                 TO FMPO-AMOUNT-USED.


UF-ADD-FUEL-AMT-TO-USED.

IF CSR-PURC-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'PU' AND FMPO-MAX-AMOUNT > ZEROES)
COMPUTE FMPO-AMOUNT-USED = FMPO-AMOUNT-USED   +
WS-UIWA-NR2-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-OTH-COST   +
WS-UIWA-NR1-COST +
WS-UIWA-TAX-AMT    +
WS-UIWA-PR1-COST   +
WS-UIWA-PR2-COST   +
WS-UIWA-PR3-COST
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


UF-ADD-CASH-AMT-TO-USED.

IF CSR-CASH-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'CA' AND FMPO-MAX-AMOUNT > ZEROES)
COMPUTE FMPO-AMOUNT-USED = FMPO-AMOUNT-USED +
WS-UIWA-CASH-AMT
END-IF.


UF-ADD-PROD1-AMT-TO-USED.


IF WS-UIWA-PR1-CODE > SPACES AND
WS-UIWA-PR1-COST > ZEROS
COMPUTE INDX-1 = WS-UIWA-PR1-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR1-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR1-COST TO FMPO-AMOUNT-USED.


UF-ADD-PROD2-AMT-TO-USED.

IF WS-UIWA-PR2-CODE > SPACES AND
WS-UIWA-PR2-COST > ZEROS
COMPUTE INDX-1 = WS-UIWA-PR2-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR2-CODE AND
FMPO-MAX-AMOUNT > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR2-COST TO FMPO-AMOUNT-USED.


UF-ADD-PROD3-AMT-TO-USED.

IF WS-UIWA-PR3-CODE > SPACES AND
WS-UIWA-PR3-COST > ZEROS
COMPUTE INDX-1 = WS-UIWA-PR3-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR3-CODE AND
FMPO-MAX-AMOUNT > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR3-COST TO FMPO-AMOUNT-USED.


UF-WRITE-NEW-FMPO-RECORD.

MOVE 'UF-WRITE-NEW-FMPO-RECORD'  TO CXUTS0ML-PARAGRAPH.
IF WS-WORK-TRANS-NR NOT NUMERIC
MOVE ZEROS             TO WS-WORK-TRANS-NR
END-IF.
MOVE WS-WORK-TRANS-NR     TO FMPO-CONTROL-NR.

PERFORM WITH TEST AFTER
VARYING FMPO-DUP-COUNTER FROM 0 BY 1
UNTIL   FMPO-DUP-COUNTER = 999 OR
EIBRESP = DFHRESP(NORMAL)
EXEC CICS WRITE
DATASET ('FMPOMST')
FROM    (FMPO-MASTER-RECORD)
RIDFLD  (FMPO-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE FMPO-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
END-PERFORM.


LOG-TO-FMPOMST.

MOVE 'N' TO WS-EXIT-FLAG.
PERFORM LTF-SETUP-NEW-PO.
PERFORM LTF-ADD-FUEL-AMT-TO-USED.
IF WS-EXIT-FLAG = 'N'
PERFORM LTF-ADD-CASH-AMT-TO-USED
PERFORM LTF-ADD-PROD1-AMT-TO-USED
PERFORM LTF-ADD-PROD2-AMT-TO-USED
PERFORM LTF-ADD-PROD3-AMT-TO-USED
END-IF.
PERFORM LTF-WRITE-NEW-FMPO-RECORD.


LTF-SETUP-NEW-PO.



MOVE PRM-SUB-ACCT-NUMB     TO FMPO-CUSTOMER-ID
WS-HOLD-CUSTOMER-ID.
MOVE 'C'                   TO FMPO-PO-STATUS.
MOVE WS-UIWA-PO-NR         TO FMPO-PO-NUMBER.
MOVE ZEROS                 TO FMPO-DUP-COUNTER.
MOVE WS-CURRENT-DATE-YYDDD TO FMPO-DATE-USED.
MOVE EIBTIME               TO FMPO-TIME-USED.
MOVE ZEROS                 TO FMPO-AMOUNT-USED.


LTF-ADD-FUEL-AMT-TO-USED.

IF CSR-PURC-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'PU' AND FMPO-MAX-AMOUNT > ZEROES)
COMPUTE FMPO-AMOUNT-USED = FMPO-AMOUNT-USED   +
WS-UIWA-NR2-COST   +
WS-UIWA-REF-COST   +
WS-UIWA-NR1-COST +
WS-UIWA-OTH-COST   +
WS-UIWA-OIL-COST   +
WS-UIWA-PR1-COST   +
WS-UIWA-PR2-COST   +
WS-UIWA-PR3-COST   +
WS-UIWA-TAX-AMT
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


LTF-ADD-CASH-AMT-TO-USED.

IF CSR-CASH-PO-OVERRIDE > ZEROS OR
(FMPO-PRODUCT-CODE = 'CA' AND
FMPO-MAX-AMOUNT > ZEROS)
ADD WS-UIWA-CASH-AMT TO FMPO-AMOUNT-USED.


LTF-ADD-PROD1-AMT-TO-USED.

IF WS-UIWA-PR1-CODE > SPACES
COMPUTE INDX-1 = WS-UIWA-PR1-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR1-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR1-COST TO FMPO-AMOUNT-USED.


LTF-ADD-PROD2-AMT-TO-USED.

IF WS-UIWA-PR2-CODE > SPACES
COMPUTE INDX-1 = WS-UIWA-PR2-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR2-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR2-COST TO FMPO-AMOUNT-USED.


LTF-ADD-PROD3-AMT-TO-USED.

IF WS-UIWA-PR3-CODE > SPACES
COMPUTE INDX-1 = WS-UIWA-PR3-CODE-NUM + 1
IF (FMPO-PRODUCT-CODE = WS-UIWA-PR3-CODE AND
FMPO-MAX-AMOUNT   > ZEROS) OR
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROS)
ADD WS-UIWA-PR3-COST TO FMPO-AMOUNT-USED.


LTF-WRITE-NEW-FMPO-RECORD.

MOVE 'LTF-WRITE-NEW-FMPO-RECORD' TO CXUTS0ML-PARAGRAPH.
IF WS-WORK-TRANS-NR NOT NUMERIC
MOVE ZEROS            TO WS-WORK-TRANS-NR
END-IF.
MOVE WS-WORK-TRANS-NR     TO FMPO-CONTROL-NR.

PERFORM WITH TEST AFTER
VARYING FMPO-DUP-COUNTER FROM 0 BY 1
UNTIL   FMPO-DUP-COUNTER = 999 OR
EIBRESP = DFHRESP(NORMAL)
EXEC CICS WRITE
DATASET ('FMPOMST')
FROM    (FMPO-MASTER-RECORD)
RIDFLD  (FMPO-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE FMPO-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
END-PERFORM.


INTRA-DAY-DOWNLOAD.

IF THIS-BE-A-NO-VERIFY-XTN
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-FLAG = 'N'
MOVE ZERO TO POS-ERROR-NUMBER
END-IF
END-IF
PERFORM IDD-READ-CDREPRT.
IF ERROR-FLAG = ' '
EVALUATE TRUE
WHEN POS-ERROR-NUMBER = ZEROES
PERFORM IDD-NORMAL
WHEN OTHER
PERFORM IDD-ERROR
END-EVALUATE
END-IF.


IDD-NORMAL.

MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-HOLD-FMLOG.
PERFORM IDD-BUILD-ITDQ-RECORD.
PERFORM IDD-BUILD-DATA-RECORD-01.
PERFORM IDD-BUILD-DATA-RECORD-02.
PERFORM IDD-BUILD-DATA-RECORD-03.
PERFORM IDD-BUILD-COUNTRY-FLAG.
PERFORM IDD-COST-PLUS-ADJUST.
IF COM-ACCT-IS-MIXED-CURRENCY
PERFORM IDD-BUILD-AMOUNTS-MIXED1
PERFORM IDD-BUILD-AMOUNTS-MIXED2
PERFORM IDD-BUILD-AMOUNTS-MIXED3
ELSE
PERFORM IDD-BUILD-AMOUNTS-BASE1
PERFORM IDD-BUILD-AMOUNTS-BASE2
PERFORM IDD-BUILD-AMOUNTS-BASE3
END-IF
IF CRR-REPORT-CODE = SP-CRR-REPORT-CODE
PERFORM IDD-BUILD-SUB-PROD
END-IF
PERFORM IDD-WRITE-DATA-RECORD.

MOVE WS-HOLD-FMLOG TO FUEL-MANAGEMENT-DAILY-LOG-RECD.


IDD-BUILD-DATA-RECORD-01.

MOVE SPACES                    TO ADF-RECORD-TYPE-01.
MOVE '01'                      TO ADF-RECORD-ID-01.
IF FMDL-RT-FUEL-CANCELLATION
MOVE 'C1'                  TO ADF-RECORD-ID-01
END-IF.
MOVE WS-FP-ACCT-CODE           TO ADF-ACCT-CODE
ITLG-ACCT-CODE.
MOVE COM-FP-CO-CODE            TO ADF-FUEL-CODE.

IF CRR-STYLE (3:1) = '9'
OR CRR-STYLE (3:1) = '8'
MOVE SPACES    TO ADF-FUEL-CODE
EVALUATE TRUE
WHEN FMDL-DT-EXPRESS-CASH-FLAG = 'Y'
MOVE 'B' TO ADF-BASE
WHEN OTHER
MOVE 'L' TO ADF-BASE
END-EVALUATE
EVALUATE TRUE
WHEN FMDL-PAY-AT-LOAD-FLAG = 'Y'
MOVE 'L' TO ADF-BILL-FLAG
WHEN FMDL-PAY-AT-LOAD-FLAG = 'X'
MOVE 'L' TO ADF-BILL-FLAG
WHEN OTHER
MOVE 'P' TO ADF-BILL-FLAG
END-EVALUATE.

MOVE FMDL-RK-TRANSACTION-DATE  TO ADF-TRANSACTION-DATE
WS-DATE-MDY.

MOVE FMDL-RK-CONTROL-NUMBER    TO WS-TRANS-NR-WORK
MOVE WS-TRANS-NR-WORK-ROLL     TO WS-TRANS-ROLL
MOVE WS-DATE-YY                TO WS-TRANS-DD
MOVE WS-TRANS-NR-WORK-SEQ      TO WS-TRANS-SEQ
MOVE WS-TRANS-NR               TO ADF-TRANSACTION-NR.

MOVE FMDL-DT-UNIT-NUMBER       TO ADF-UNIT-NR.
MOVE FMDL-SC-SRVC-CNTR-CODE    TO ADF-SC-CODE.
MOVE FMDL-SC-NAME              TO ADF-SC-NAME.
MOVE FMDL-SC-CITY              TO ADF-SC-CITY.

MOVE FMDL-SC-STATE             TO ADF-SC-STATE.
MOVE FMDL-TR-SC-INVOICE-NUMBER TO ADF-SC-INVOICE-NR.
COMPUTE ADF-TRANSACTION-TIME = FMDL-TR-TRANSACTION-TIME /
100.

MOVE ' '                          TO ADF-CHEAPER-FUEL-AVAIL.
IF FMDL-TR-CHEAPER-FUEL-AVAILABLE
MOVE '*'                       TO ADF-CHEAPER-FUEL-AVAIL
END-IF.
MOVE FMDL-TR-SERVICE-TYPE         TO ADF-SERVICE-TYPE.
IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE 'T'                       TO ADF-SERVICE-TYPE
END-IF.

PERFORM IDD-BUILD-TRACTOR-BILL-FLAG.
PERFORM IDD-BUILD-TRL-OIL-BILL-FLAG.


IDD-BUILD-TRACTOR-BILL-FLAG.

MOVE ' '                       TO ADF-TRACTOR-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-TRACTOR-FUEL-DB
MOVE 'D'                 TO ADF-TRACTOR-BILL-FLAG
WHEN FMDL-TF-OTHER-FUEL-DB
MOVE 'D'                 TO ADF-TRACTOR-BILL-FLAG
WHEN FMDL-TF-TRACTOR-FUEL-FN
MOVE 'F'                 TO ADF-TRACTOR-BILL-FLAG
WHEN FMDL-TF-OTHER-FUEL-FN
MOVE 'F'                 TO ADF-TRACTOR-BILL-FLAG
WHEN FMDL-TF-TRACTOR-FUEL-TF
MOVE 'T'                 TO ADF-TRACTOR-BILL-FLAG
WHEN FMDL-TF-OTHER-FUEL-TF
MOVE 'T'                 TO ADF-TRACTOR-BILL-FLAG
END-EVALUATE.


IDD-BUILD-TRL-OIL-BILL-FLAG.

MOVE ' '                       TO ADF-TRAILER-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-TRAILER-FUEL-DB
MOVE 'D'                 TO ADF-TRAILER-BILL-FLAG
WHEN FMDL-TF-TRAILER-FUEL-FN
MOVE 'F'                 TO ADF-TRAILER-BILL-FLAG
WHEN FMDL-TF-TRAILER-FUEL-TF
MOVE 'T'                 TO ADF-TRAILER-BILL-FLAG
END-EVALUATE.

MOVE ' '                       TO ADF-OIL-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-OIL-DB
MOVE 'D'                 TO ADF-OIL-BILL-FLAG
WHEN FMDL-TF-OIL-FN
MOVE 'F'                 TO ADF-OIL-BILL-FLAG
WHEN FMDL-TF-OIL-TF
MOVE 'T'                 TO ADF-OIL-BILL-FLAG
END-EVALUATE.


IDD-BUILD-DATA-RECORD-02.


MOVE SPACES                      TO ADF-RECORD-TYPE-02.
MOVE '02'                        TO ADF-RECORD-ID-02.
IF FMDL-RT-FUEL-CANCELLATION
MOVE 'C2'                    TO ADF-RECORD-ID-02
END-IF.
MOVE FMDL-DT-DRIVER-NAME         TO ADF-DRIVER-NAME.

MOVE FMDL-DT-TRIP-NUMBER TO ADF-TRIP-NUMBER.

MOVE FMDL-DT-CURR-HUB-READING    TO ADF-HUB-READING.
MOVE FMDL-DT-YTD-MPG             TO ADF-YTD-MPG.
MOVE FMDL-DT-CURRENT-MPG         TO ADF-CUR-MPG.
IF WS-ID-NR-NUM NOT NUMERIC
MOVE ZEROS                    TO WS-ID-NR-NUM
END-IF.
MOVE ZEROS                       TO WS-ID-NR-CK-DIG,
WS-CKD-CALCULATED
IF WS-ID-NR-NUM > ZEROS
PERFORM CALCULATE-CHECK-DIGIT
END-IF
MOVE WS-CKD-CALCULATED           TO WS-ID-NR-CK-DIG.
MOVE WS-ID-NR                    TO ADF-FP-ID-NR.
IF FMDL-DT-COMCHEK-CARD-NUMBER > ZEROES
MOVE FMDL-PREMIER-LEVEL          TO ADF-GOLD-FLAG
MOVE FMDL-DT-COMCHEK-CARD-NUMBER TO WS-PRM-CARD-NR
MOVE 15                          TO MOD10-SL
MOVE HIGH-VALUE                  TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-BASE-A          TO ADF-COMCHEK-CARD-NR
ELSE
MOVE FMDL-FP-GOLD-FLAG           TO ADF-GOLD-FLAG
MOVE ZEROES                      TO ADF-COMCHEK-CARD-NR
END-IF.

MOVE FMDL-DT-EMPLOYEE-NUMBER       TO ADF-EMPLOYEE-NR.
PERFORM IDD-BUILD-NON-BILLABLE-FLAG1.
PERFORM IDD-BUILD-NON-BILLABLE-FLAG2.

MOVE ' '                           TO ADF-NETWORK-FLAG
IF FMDL-IN-NETWORK-FLAG NOT = 'Y'
MOVE '*'                        TO ADF-NETWORK-FLAG
END-IF.
MOVE FMDL-SC-ALLIANCE-FLAG         TO ADF-ALLIANCE-LOCATION.
PERFORM IDD-BUILD-CASH-BILL-FLAG.
PERFORM IDD-BUILD-PROD1-BILL-FLAG.
PERFORM IDD-BUILD-PROD2-BILL-FLAG.
PERFORM IDD-BUILD-PROD3-BILL-FLAG.


IDD-BUILD-NON-BILLABLE-FLAG1.

IF (FMDL-TF-TRACTOR-FUEL-DB) OR
(FMDL-TF-TRAILER-FUEL-DB) OR
(FMDL-TF-OTHER-FUEL-DB  ) OR
(FMDL-TF-CASH-DB        ) OR
(FMDL-TF-OIL-DB         ) OR
(FMDL-TF-PRODUCT-1-DB   ) OR
(FMDL-TF-PRODUCT-2-DB   ) OR
(FMDL-TF-PRODUCT-3-DB   )
MOVE '*'                     TO ADF-NON-BILLABLE-ITEM
END-IF.


IDD-BUILD-NON-BILLABLE-FLAG2.

IF (FMDL-TF-TRACTOR-FUEL-TF) OR
(FMDL-TF-TRAILER-FUEL-TF) OR
(FMDL-TF-OTHER-FUEL-TF  ) OR
(FMDL-TF-CASH-TF        ) OR
(FMDL-TF-OIL-TF         ) OR
(FMDL-TF-PRODUCT-1-TF   ) OR
(FMDL-TF-PRODUCT-2-TF   ) OR
(FMDL-TF-PRODUCT-3-TF   )
MOVE 'T'                     TO ADF-NON-BILLABLE-ITEM
END-IF.


IDD-BUILD-CASH-BILL-FLAG.

MOVE ' '                        TO ADF-CASH-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-CASH-DB
MOVE 'D'                  TO ADF-CASH-BILL-FLAG
WHEN FMDL-TF-CASH-FN
MOVE 'F'                  TO ADF-CASH-BILL-FLAG
WHEN FMDL-TF-CASH-TF
MOVE 'T'                  TO ADF-CASH-BILL-FLAG
END-EVALUATE.


IDD-BUILD-PROD1-BILL-FLAG.

MOVE ' '                        TO ADF-PRODUCT-1-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-PRODUCT-1-DB
MOVE 'D'                  TO ADF-PRODUCT-1-BILL-FLAG
WHEN FMDL-TF-PRODUCT-1-FN
MOVE 'F'                  TO ADF-PRODUCT-1-BILL-FLAG
WHEN FMDL-TF-PRODUCT-1-TF
MOVE 'T'                  TO ADF-PRODUCT-1-BILL-FLAG
END-EVALUATE.


IDD-BUILD-PROD2-BILL-FLAG.

MOVE ' '                        TO ADF-PRODUCT-2-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-PRODUCT-2-DB
MOVE 'D'                  TO ADF-PRODUCT-2-BILL-FLAG
WHEN FMDL-TF-PRODUCT-2-FN
MOVE 'F'                  TO ADF-PRODUCT-2-BILL-FLAG
WHEN FMDL-TF-PRODUCT-2-TF
MOVE 'T'                  TO ADF-PRODUCT-2-BILL-FLAG
END-EVALUATE.


IDD-BUILD-PROD3-BILL-FLAG.

MOVE ' '                        TO ADF-PRODUCT-3-BILL-FLAG.
EVALUATE TRUE
WHEN FMDL-TF-PRODUCT-3-DB
MOVE 'D'                  TO ADF-PRODUCT-3-BILL-FLAG
WHEN FMDL-TF-PRODUCT-3-FN
MOVE 'F'                  TO ADF-PRODUCT-3-BILL-FLAG
WHEN FMDL-TF-PRODUCT-3-TF
MOVE 'T'                  TO ADF-PRODUCT-3-BILL-FLAG
END-EVALUATE.



IDD-BUILD-DATA-RECORD-03.


MOVE SPACES                    TO ADF-RECORD-TYPE-03.
MOVE '03'                      TO ADF-RECORD-ID-03.
IF FMDL-RT-FUEL-CANCELLATION
MOVE 'C3'                  TO ADF-RECORD-ID-03
END-IF.
MOVE FMDL-DT-DRIVER-LIC-STATE  TO ADF-LICENSE-STATE.
MOVE FMDL-DT-DRIVER-LIC-NUMBER TO ADF-LICENSE-NR.
MOVE FMDL-DT-PURCH-ORDER-NUMBER TO ADF-PO-NR.
MOVE FMDL-DT-TRAILER-NUMBER    TO ADF-TRAILER-NR.
MOVE FMDL-DT-PREV-HUB-READING  TO ADF-STARTING-HUB.
IF THIS-IS-A-CANCEL-XTN OR
THIS-BE-AN-ATM-CANCEL
MOVE 'Y'                   TO ADF-CANCEL-FLAG
MOVE WS-DATE-MDY           TO ADF-CANCEL-DATE
END-IF.
MOVE FMDL-SC-CHAIN-CODE        TO ADF-SC-CHAIN-CODE.
MOVE FMDL-CUST-CUSTOMER-ID     TO ADF-EXPANDED-CUST-ID.

IF
(CDN-RELATIONSHIP-FLAG ='Y'     AND
COM-DIRECT-BILLING-FUEL = '1'  AND
FMDL-IS-FOCUS-DISC             AND
FMDL-BC-RD-SC-SELECT-DISCOUNT > 0)
OR
FMDL-COMDATA-COMPLETE-YES
THEN
MOVE 'R' TO ADF-REBATE-FLAG
ELSE
MOVE FMDL-CUST-DISCOUNT-METHOD TO ADF-REBATE-FLAG
END-IF

MOVE FMDL-SELECT-OR-FOCUS-DISC TO ADF-FOCUS-OR-SELECT-FLAG.
MOVE FMDL-CN-TAX-AMT-CN        TO ADF-CN-TAX-AMOUNT-CN.
MOVE FMDL-CN-TAX-AMT-US        TO ADF-CN-TAX-AMOUNT-US.
MOVE FMDL-TAX-PAID-FLAG        TO ADF-TAX-PAID-FLAG.
MOVE FMDL-DT-TRAILER-HUB       TO ADF-TRAILER-HUB.
IF FMDL-TRAILER-HOURS NUMERIC AND
FMDL-TRAILER-HOURS > ZEROES
MOVE FMDL-TRAILER-HOURS     TO ADF-REEFER-HRS.
IF FMDL-TRANSACTION-WAS-POS
MOVE 'Y'                    TO ADF-AUTOMATED-FLAG
END-IF.
MOVE 'N'                       TO ADF-CIR-MAESTRO-INTL-FLAG
IF FMDL-XBORDER-XTN = 'Y'
MOVE 'Y'                    TO ADF-CIR-MAESTRO-INTL-FLAG
END-IF.
MOVE 'N'                       TO ADF-SC-BRIDGE-TRANS-FLAG
IF FMDL-BR-BRIDGE-TRANSACTION
MOVE 'Y'                    TO ADF-SC-BRIDGE-TRANS-FLAG
END-IF.
MOVE FMDL-BC-TR-OTHER-GALLONS     TO ADF-OTHER-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-OTHER-FUEL-PPG.
MOVE FMDL-BC-TR-OTHER-COST        TO ADF-OTHER-FUEL-COST.
IF ADF-OTHER-FUEL-GALLONS > ZEROES
COMPUTE ADF-OTHER-FUEL-PPG ROUNDED = ADF-OTHER-FUEL-COST /
ADF-OTHER-FUEL-GALLONS.
MOVE FMDL-BC-NR1-GALLONS          TO ADF-NR1-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-NR1-FUEL-PPG.
MOVE FMDL-BC-NR1-COST             TO ADF-NR1-FUEL-COST.
IF ADF-NR1-FUEL-GALLONS > ZEROES
COMPUTE ADF-NR1-FUEL-PPG ROUNDED = ADF-NR1-FUEL-COST /
ADF-NR1-FUEL-GALLONS.



IDD-GET-SUB-PROD-DESC.


EXEC SQL
SELECT
SUB_PROD_DESC_6
INTO
:DSBPRDDS.SUB-PROD-DESC-6
FROM
DBO.CDN_SUB_PROD_DESC
WHERE
CDN_SUB_PROD_CD = :WS-SUB-PROD-CODE
END-EXEC

EVALUATE SQLCODE
WHEN +000
CONTINUE
WHEN +100
MOVE 'UNKNWN'                TO SUB-PROD-DESC-6
WHEN OTHER
MOVE 'IDD-GET-SUB-PROD-DESC' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.CDN_SUB_PROD_DESC'
TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE
.


IDD-BUILD-COUNTRY-FLAG.

IF COM-ACCT-IS-BASE-CURRENCY
EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE 'U' TO ADF-CURRENCY-TYPE
WHEN COM-CO-IS-CANADIAN
MOVE 'C' TO ADF-CURRENCY-TYPE
END-EVALUATE.
IF COM-ACCT-IS-MIXED-CURRENCY
EVALUATE TRUE
WHEN COM-SC-IS-US
MOVE 'U' TO ADF-CURRENCY-TYPE
WHEN COM-SC-IS-CANADIAN
MOVE 'C' TO ADF-CURRENCY-TYPE
END-EVALUATE.


IDD-COST-PLUS-ADJUST.

IF COM-COST-PLUS-TYPE = 'R'
PERFORM IDD-CHECK-COST-PLUS-USE-TR
PERFORM IDD-CHECK-COST-PLUS-USE-RF
PERFORM IDD-CHECK-COST-PLUS-USE-N1
END-IF.


IDD-CHECK-COST-PLUS-USE-TR.

IF FMDL-TR-TRACTOR-PPG > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
FMDL-TR-TRACTOR-PPG < FMDL-COST-PLUS-NR2-PPG) OR
(THIS-BE-TERMINAL-FUEL)                        OR
(COM-RMF-FLAG = 'Y'   )
COMPUTE FMDL-TR-TRACTOR-PPG  = FMDL-COST-PLUS-NR2-PPG
COMPUTE FMDL-TR-TRACTOR-COST =
FMDL-TR-TRACTOR-GALLONS * FMDL-TR-TRACTOR-PPG

COMPUTE FMDL-BC-TR-TRACTOR-PPG  = FMDL-BC-COST-PLUS-NR2-PPG
COMPUTE FMDL-BC-TR-TRACTOR-COST =
FMDL-BC-TR-TRACTOR-GALLONS * FMDL-BC-TR-TRACTOR-PPG

COMPUTE FMDL-SC-TR-TRACTOR-PPG  = FMDL-SC-COST-PLUS-NR2-PPG
COMPUTE FMDL-SC-TR-TRACTOR-COST =
FMDL-SC-TR-TRACTOR-GALLONS * FMDL-SC-TR-TRACTOR-PPG.


IDD-CHECK-COST-PLUS-USE-RF.

IF FMDL-TR-TRAILER-PPG > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
FMDL-TR-TRAILER-PPG < FMDL-COST-PLUS-REF-PPG) OR
(THIS-BE-TERMINAL-FUEL)                        OR
(COM-RMF-FLAG = 'Y'   )
COMPUTE FMDL-TR-TRAILER-PPG  = FMDL-COST-PLUS-REF-PPG
COMPUTE FMDL-TR-TRAILER-COST = FMDL-TR-TRAILER-GALLONS *
FMDL-TR-TRAILER-PPG
COMPUTE FMDL-BC-TR-TRAILER-PPG  = FMDL-BC-COST-PLUS-REF-PPG
COMPUTE FMDL-BC-TR-TRAILER-COST =
FMDL-BC-TR-TRAILER-GALLONS * FMDL-BC-TR-TRAILER-PPG

COMPUTE FMDL-SC-TR-TRAILER-PPG  = FMDL-SC-COST-PLUS-REF-PPG
COMPUTE FMDL-SC-TR-TRAILER-COST =
FMDL-SC-TR-TRAILER-GALLONS * FMDL-SC-TR-TRAILER-PPG.


IDD-CHECK-COST-PLUS-USE-N1.

IF FMDL-NR1-PPG > ZEROES
IF (COM-DIRECT-BILLING-IN-PROCESS AND
FMDL-NR1-PPG < FMDL-COST-PLUS-NR1-PPG) OR
(THIS-BE-TERMINAL-FUEL)                        OR
(COM-RMF-FLAG = 'Y'   )
COMPUTE FMDL-NR1-PPG         = FMDL-COST-PLUS-NR1-PPG
COMPUTE FMDL-NR1-COST        = FMDL-NR1-GALLONS *
FMDL-NR1-PPG
COMPUTE FMDL-BC-NR1-COST     = FMDL-BC-NR1-GALLONS *
FMDL-BC-COST-PLUS-NR1-PPG
COMPUTE FMDL-SC-NR1-COST     = FMDL-SC-NR1-GALLONS *
FMDL-SC-COST-PLUS-NR1-PPG.


IDD-BUILD-AMOUNTS-BASE1.

COMPUTE ADF-TOTAL-AMT-DUE = FMDL-BC-TR-TRACTOR-COST        +
FMDL-BC-TR-TRAILER-COST        +
FMDL-BC-TR-OTHER-COST          +
FMDL-BC-NR1-COST               +
FMDL-BC-TR-CASH-ADVANCE-AMOUNT +
FMDL-BC-TR-OIL-COST            +
FMDL-BC-TR-PRODUCT-AMOUNT-1    +
FMDL-BC-TR-PRODUCT-AMOUNT-2    +
FMDL-BC-TR-PRODUCT-AMOUNT-3    +
FMDL-BC-RD-FUEL-RATE           +
FMDL-BC-RD-COMP-HANDLING-CHG   +
FMDL-BC-RD-CASH-ADVANCE-RATE   +
FMDL-BC-TAX-AMT.
IF FMDL-CUST-DISCOUNT-METHOD = 'N'
SUBTRACT FMDL-BC-RD-SC-SELECT-DISCOUNT FROM
ADF-TOTAL-AMT-DUE
END-IF.

PERFORM IDD-BUILD-FUEL-CHARGES-BASE.

MOVE FMDL-BC-TR-TRACTOR-GALLONS   TO ADF-TRACTOR-GALS.
MOVE FMDL-BC-TR-TRACTOR-COST      TO ADF-TRACTOR-COST.
ADD  FMDL-BC-TR-OTHER-GALLONS     TO ADF-TRACTOR-GALS.
ADD  FMDL-BC-TR-OTHER-COST        TO ADF-TRACTOR-COST.
ADD  FMDL-BC-NR1-GALLONS          TO ADF-TRACTOR-GALS.
ADD  FMDL-BC-NR1-COST             TO ADF-TRACTOR-COST.
MOVE ZEROES                       TO ADF-TRACTOR-PPG.
IF ADF-TRACTOR-GALS > 0 AND ADF-TRACTOR-COST > 0
COMPUTE ADF-TRACTOR-PPG ROUNDED = ADF-TRACTOR-COST /
ADF-TRACTOR-GALS
END-IF.
MOVE FMDL-BC-TR-TRAILER-GALLONS   TO ADF-TRAILER-GALS.
MOVE FMDL-BC-TR-TRAILER-COST      TO ADF-TRAILER-COST.
MOVE ZEROES                       TO ADF-TRAILER-PPG.
IF ADF-TRAILER-GALS > 0 AND ADF-TRAILER-COST > 0
COMPUTE ADF-TRAILER-PPG ROUNDED = ADF-TRAILER-COST /
ADF-TRAILER-GALS
END-IF.
MOVE FMDL-BC-TR-OIL-QUARTS        TO ADF-OIL-QUARTS.
MOVE FMDL-BC-TR-OIL-COST          TO ADF-OIL-COST.



IDD-BUILD-FUEL-CHARGES-BASE.

COMPUTE ADF-CHARGES-FUEL-OIL = FMDL-BC-RD-FUEL-RATE.
MOVE FMDL-BC-RD-COMP-HANDLING-CHG TO WS-ADD-ON.
IF (FMDL-TF-TRACTOR-FUEL > ZEROES)  OR
(FMDL-TF-TRAILER-FUEL > ZEROES)  OR
(FMDL-TF-OTHER-FUEL   > ZEROES)  OR
(FMDL-TF-OIL          > ZEROES)  OR
(FMDL-TF-PRODUCT-1    > ZEROES)  OR
(FMDL-TF-PRODUCT-2    > ZEROES)  OR
(FMDL-TF-PRODUCT-3    > ZEROES)
ADD WS-ADD-ON TO ADF-CHARGES-FUEL-OIL
MOVE ZEROES TO WS-ADD-ON
END-IF.


IDD-BUILD-AMOUNTS-BASE2.

MOVE FMDL-BC-TR-CASH-ADVANCE-AMOUNT TO ADF-CASH-ADV-AMT.
MOVE FMDL-BC-RD-CASH-ADVANCE-RATE   TO ADF-CASH-ADV-CHG.
ADD WS-ADD-ON                    TO ADF-CASH-ADV-CHG.

IF FMDL-ACCT-SC-DIFF-CURRENCY
MOVE FMDL-DT-TRIP-NUMBER      TO WS-CANADIAN-FIRST-TEN
MOVE FMDL-CANADIAN-CONVERSION-RATE TO WS-UNPACK-CANADIAN
MOVE WS-CANADIAN-CONVERSION   TO ADF-TRIP-NUMBER
END-IF.

IF FMDL-TR-PRODUCT-CODE-1N NUMERIC
ADD FMDL-TR-PRODUCT-CODE-1N TO 1 GIVING WS-TABLE-CODE
MOVE WS-FMDL-TR-PRODUCT-CODE-A (WS-TABLE-CODE)
TO ADF-PRODUCT-CODE-1
ELSE
MOVE FMDL-TR-PRODUCT-CODE-1     TO ADF-PRODUCT-CODE-1
END-IF.

MOVE FMDL-BC-TR-PRODUCT-AMOUNT-1   TO ADF-PRODUCT-AMOUNT-1.

IF FMDL-TR-PRODUCT-CODE-2N NUMERIC
ADD FMDL-TR-PRODUCT-CODE-2N TO 1 GIVING WS-TABLE-CODE
MOVE WS-FMDL-TR-PRODUCT-CODE-A (WS-TABLE-CODE)
TO ADF-PRODUCT-CODE-2
ELSE
MOVE FMDL-TR-PRODUCT-CODE-2     TO ADF-PRODUCT-CODE-2
END-IF.

MOVE FMDL-BC-TR-PRODUCT-AMOUNT-2   TO ADF-PRODUCT-AMOUNT-2.

IF FMDL-TR-PRODUCT-CODE-3N NUMERIC
ADD FMDL-TR-PRODUCT-CODE-3N TO 1 GIVING WS-TABLE-CODE
MOVE WS-FMDL-TR-PRODUCT-CODE-A (WS-TABLE-CODE)
TO ADF-PRODUCT-CODE-3
ELSE
MOVE FMDL-TR-PRODUCT-CODE-3     TO ADF-PRODUCT-CODE-3
END-IF.

MOVE FMDL-BC-TR-PRODUCT-AMOUNT-3   TO ADF-PRODUCT-AMOUNT-3.

IF FMDL-CUST-DISCOUNT-METHOD = 'N'          AND
FMDL-BC-RD-SC-SELECT-DISCOUNT NUMERIC    AND
FMDL-BC-RD-SC-SELECT-DISCOUNT > ZERO     AND
FMDL-BC-REBATE-DISCOUNT-AMT NUMERIC      AND
FMDL-BC-REBATE-DISCOUNT-AMT > ZERO
MOVE FMDL-BC-RD-SC-SELECT-DISCOUNT TO ADF-SELECT-DISCOUNT
SUBTRACT FMDL-BC-REBATE-DISCOUNT-AMT FROM
ADF-SELECT-DISCOUNT
ELSE
MOVE FMDL-BC-RD-SC-SELECT-DISCOUNT TO ADF-SELECT-DISCOUNT
END-IF.


IDD-BUILD-AMOUNTS-BASE3.


MOVE FMDL-CN-TAX-AMT-CN           TO ADF-CN-TAX-AMOUNT-CN.
MOVE FMDL-CN-TAX-AMT-US           TO ADF-CN-TAX-AMOUNT-US.
MOVE FMDL-BC-TR-OTHER-GALLONS     TO ADF-OTHER-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-OTHER-FUEL-PPG.
MOVE FMDL-BC-TR-OTHER-COST        TO ADF-OTHER-FUEL-COST.
IF ADF-OTHER-FUEL-GALLONS > ZEROES
COMPUTE ADF-OTHER-FUEL-PPG ROUNDED = ADF-OTHER-FUEL-COST /
ADF-OTHER-FUEL-GALLONS.
MOVE FMDL-BC-NR1-GALLONS          TO ADF-NR1-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-NR1-FUEL-PPG.
MOVE FMDL-BC-NR1-COST             TO ADF-NR1-FUEL-COST.
IF ADF-NR1-FUEL-GALLONS > ZEROES
COMPUTE ADF-NR1-FUEL-PPG ROUNDED = ADF-NR1-FUEL-COST /
ADF-NR1-FUEL-GALLONS.


IF  CRR-REPORT-CODE = SP-CRR-REPORT-CODE
AND CRR-STYLE (3:1) = '8'
PERFORM IDD-BUILD-PROD-DISC-BASE
END-IF.


IDD-BUILD-PROD-DISC-BASE.


INITIALIZE WS-PRODUCT-DISCOUNT-AREA

MOVE WS-PD-BC-NET-DISC-AMT(4)    TO WS-PD-OTH-FUEL-DISC
MOVE WS-PD-BC-NET-DISC-AMT(3)    TO WS-PD-RFR-FUEL-DISC
MOVE WS-PD-BC-NET-DISC-AMT(1)    TO WS-PD-NR1-FUEL-DISC

MOVE FMDL-BC-TR-TRACTOR-GALLONS  TO WS-PD-NR2-FUEL-GAL
MOVE FMDL-BC-TR-TRACTOR-PPG      TO WS-PD-NR2-FUEL-PPG
MOVE FMDL-BC-TR-TRACTOR-COST     TO WS-PD-NR2-FUEL-COST
MOVE WS-PD-BC-NET-DISC-AMT(2)    TO WS-PD-NR2-FUEL-DISC

MOVE FMDL-OTHER-FUEL-TYPE     TO WS-SUB-PROD-CODE
PERFORM IDD-GET-SUB-PROD-DESC
EVALUATE SUB-PROD-DESC-6
WHEN 'GAS   '
MOVE FMDL-BC-TR-OTHER-COST    TO WS-PD-GAS-FUEL-COST
MOVE FMDL-BC-TR-OTHER-PPG     TO WS-PD-GAS-FUEL-PPG
MOVE FMDL-BC-TR-OTHER-GALLONS TO WS-PD-GAS-FUEL-GAL
MOVE WS-PD-BC-NET-DISC-AMT(4) TO WS-PD-GAS-FUEL-DISC
WHEN 'CNG   '
WHEN 'LPG   '
WHEN 'LNG   '
MOVE FMDL-BC-TR-OTHER-COST    TO WS-PD-CNG-FUEL-COST
MOVE FMDL-BC-TR-OTHER-PPG     TO WS-PD-CNG-FUEL-PPG
MOVE FMDL-BC-TR-OTHER-GALLONS TO WS-PD-CNG-FUEL-GAL
MOVE WS-PD-BC-NET-DISC-AMT(4) TO WS-PD-CNG-FUEL-DISC
WHEN 'DEF   '
MOVE FMDL-BC-TR-OTHER-COST    TO WS-PD-DEF-FUEL-COST
MOVE FMDL-BC-TR-OTHER-PPG     TO WS-PD-DEF-FUEL-PPG
MOVE FMDL-BC-TR-OTHER-GALLONS TO WS-PD-DEF-FUEL-GAL
MOVE WS-PD-BC-NET-DISC-AMT(4) TO WS-PD-DEF-FUEL-DISC
END-EVALUATE


IF SUB-PROD-DESC-6 = 'GAS   ' OR 'CNG   ' OR 'LPG   '
OR 'LNG   ' OR 'DEF   '
MOVE ZEROES                   TO ADF-OTHER-FUEL-GALLONS
ADF-OTHER-FUEL-PPG
ADF-OTHER-FUEL-COST
END-IF
.


IDD-BUILD-AMOUNTS-MIXED1.

COMPUTE ADF-TOTAL-AMT-DUE = FMDL-SC-TR-TRACTOR-COST +
FMDL-SC-TR-TRAILER-COST +
FMDL-SC-TR-OTHER-COST   +
FMDL-SC-NR1-COST        +
FMDL-SC-TR-CASH-ADVANCE-AMOUNT +
FMDL-SC-TR-OIL-COST     +
FMDL-SC-TR-PRODUCT-AMOUNT-1 +
FMDL-SC-TR-PRODUCT-AMOUNT-2 +
FMDL-SC-TR-PRODUCT-AMOUNT-3 +
FMDL-SC-RD-FUEL-RATE        +
FMDL-SC-RD-COMP-HANDLING-CHG +
FMDL-SC-RD-CASH-ADVANCE-RATE.
IF FMDL-CUST-DISCOUNT-METHOD = 'N'
SUBTRACT FMDL-SC-RD-SC-SELECT-DISCOUNT FROM
ADF-TOTAL-AMT-DUE
END-IF.

PERFORM IDD-BUILD-FUEL-CHARGES-MIXED.

MOVE FMDL-SC-TR-TRACTOR-GALLONS   TO ADF-TRACTOR-GALS.
MOVE FMDL-SC-TR-TRACTOR-COST      TO ADF-TRACTOR-COST.
ADD  FMDL-SC-TR-OTHER-GALLONS     TO ADF-TRACTOR-GALS.
ADD  FMDL-SC-TR-OTHER-COST        TO ADF-TRACTOR-COST.
ADD  FMDL-SC-NR1-GALLONS          TO ADF-TRACTOR-GALS.
ADD  FMDL-SC-NR1-COST             TO ADF-TRACTOR-COST.
MOVE ZEROES                       TO ADF-TRACTOR-PPG.
IF ADF-TRACTOR-GALS > 0 AND ADF-TRACTOR-COST > 0
COMPUTE ADF-TRACTOR-PPG ROUNDED = ADF-TRACTOR-COST /
ADF-TRACTOR-GALS
END-IF.
MOVE FMDL-SC-TR-TRAILER-GALLONS   TO ADF-TRAILER-GALS.
MOVE FMDL-SC-TR-TRAILER-COST      TO ADF-TRAILER-COST.
MOVE ZEROES                       TO ADF-TRAILER-PPG.
IF ADF-TRAILER-GALS > 0 AND ADF-TRAILER-COST > 0
COMPUTE ADF-TRAILER-PPG ROUNDED = ADF-TRAILER-COST /
ADF-TRAILER-GALS
END-IF.
MOVE FMDL-SC-TR-OIL-QUARTS        TO ADF-OIL-QUARTS.
MOVE FMDL-SC-TR-OIL-COST          TO ADF-OIL-COST.



IDD-BUILD-FUEL-CHARGES-MIXED.

COMPUTE ADF-CHARGES-FUEL-OIL = FMDL-SC-RD-FUEL-RATE.
MOVE FMDL-SC-RD-COMP-HANDLING-CHG TO WS-ADD-ON.
IF (FMDL-TF-TRACTOR-FUEL > ZEROES)  OR
(FMDL-TF-TRAILER-FUEL > ZEROES)  OR
(FMDL-TF-OTHER-FUEL   > ZEROES)  OR
(FMDL-TF-OIL          > ZEROES)  OR
(FMDL-TF-PRODUCT-1    > ZEROES)  OR
(FMDL-TF-PRODUCT-2    > ZEROES)  OR
(FMDL-TF-PRODUCT-3    > ZEROES)
ADD WS-ADD-ON TO ADF-CHARGES-FUEL-OIL
MOVE ZEROES TO WS-ADD-ON
END-IF.


IDD-BUILD-AMOUNTS-MIXED2.

MOVE FMDL-SC-TR-CASH-ADVANCE-AMOUNT TO ADF-CASH-ADV-AMT.
MOVE FMDL-SC-RD-CASH-ADVANCE-RATE   TO ADF-CASH-ADV-CHG.
ADD WS-ADD-ON                    TO ADF-CASH-ADV-CHG.

IF FMDL-ACCT-SC-DIFF-CURRENCY
MOVE FMDL-DT-TRIP-NUMBER      TO WS-CANADIAN-FIRST-TEN
MOVE FMDL-CANADIAN-CONVERSION-RATE TO WS-UNPACK-CANADIAN
MOVE WS-CANADIAN-CONVERSION   TO ADF-TRIP-NUMBER
END-IF.

MOVE FMDL-TR-PRODUCT-CODE-1        TO ADF-PRODUCT-CODE-1.
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-1   TO ADF-PRODUCT-AMOUNT-1.
MOVE FMDL-TR-PRODUCT-CODE-2        TO ADF-PRODUCT-CODE-2.
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-2   TO ADF-PRODUCT-AMOUNT-2.
MOVE FMDL-TR-PRODUCT-CODE-3        TO ADF-PRODUCT-CODE-3.
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-3   TO ADF-PRODUCT-AMOUNT-3.

IF FMDL-CUST-DISCOUNT-METHOD = 'N'          AND
FMDL-SC-RD-SC-SELECT-DISCOUNT NUMERIC    AND
FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO     AND
FMDL-SC-REBATE-DISCOUNT-AMT NUMERIC      AND
FMDL-SC-REBATE-DISCOUNT-AMT > ZERO
MOVE FMDL-SC-RD-SC-SELECT-DISCOUNT TO ADF-SELECT-DISCOUNT
SUBTRACT FMDL-SC-REBATE-DISCOUNT-AMT FROM
ADF-SELECT-DISCOUNT
ELSE
MOVE FMDL-SC-RD-SC-SELECT-DISCOUNT TO ADF-SELECT-DISCOUNT
END-IF.


IDD-BUILD-AMOUNTS-MIXED3.


MOVE FMDL-CN-TAX-AMT-CN        TO ADF-CN-TAX-AMOUNT-CN.
MOVE FMDL-CN-TAX-AMT-US        TO ADF-CN-TAX-AMOUNT-US.
MOVE FMDL-SC-TR-OTHER-GALLONS     TO ADF-OTHER-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-OTHER-FUEL-PPG.
MOVE FMDL-SC-TR-OTHER-COST        TO ADF-OTHER-FUEL-COST.
IF ADF-OTHER-FUEL-GALLONS > ZEROES
COMPUTE ADF-OTHER-FUEL-PPG ROUNDED = ADF-OTHER-FUEL-COST /
ADF-OTHER-FUEL-GALLONS.
MOVE FMDL-SC-NR1-GALLONS          TO ADF-NR1-FUEL-GALLONS.
MOVE ZEROES                       TO ADF-NR1-FUEL-PPG.
MOVE FMDL-SC-NR1-COST             TO ADF-NR1-FUEL-COST.
IF ADF-NR1-FUEL-GALLONS > ZEROES
COMPUTE ADF-NR1-FUEL-PPG ROUNDED = ADF-NR1-FUEL-COST /
ADF-NR1-FUEL-GALLONS.


IF  CRR-REPORT-CODE = SP-CRR-REPORT-CODE
AND CRR-STYLE (3:1) = '8'
PERFORM IDD-BUILD-PROD-DISC-MIXED
END-IF.


IDD-BUILD-PROD-DISC-MIXED.


INITIALIZE WS-PRODUCT-DISCOUNT-AREA

MOVE WS-PD-SC-NET-DISC-AMT(4)    TO WS-PD-OTH-FUEL-DISC
MOVE WS-PD-SC-NET-DISC-AMT(3)    TO WS-PD-RFR-FUEL-DISC
MOVE WS-PD-SC-NET-DISC-AMT(1)    TO WS-PD-NR1-FUEL-DISC

MOVE FMDL-SC-TR-TRACTOR-GALLONS  TO WS-PD-NR2-FUEL-GAL
MOVE FMDL-SC-TR-TRACTOR-PPG      TO WS-PD-NR2-FUEL-PPG
MOVE FMDL-SC-TR-TRACTOR-COST     TO WS-PD-NR2-FUEL-COST
MOVE WS-PD-SC-NET-DISC-AMT(2)    TO WS-PD-NR2-FUEL-DISC

MOVE FMDL-OTHER-FUEL-TYPE     TO WS-SUB-PROD-CODE
PERFORM IDD-GET-SUB-PROD-DESC
EVALUATE SUB-PROD-DESC-6
WHEN 'GAS   '
MOVE FMDL-SC-TR-OTHER-COST    TO WS-PD-GAS-FUEL-COST
MOVE FMDL-SC-TR-OTHER-PPG     TO WS-PD-GAS-FUEL-PPG
MOVE FMDL-SC-TR-OTHER-GALLONS TO WS-PD-GAS-FUEL-GAL
MOVE WS-PD-SC-NET-DISC-AMT(4) TO WS-PD-GAS-FUEL-DISC
WHEN 'CNG   '
WHEN 'LPG   '
WHEN 'LNG   '
MOVE FMDL-SC-TR-OTHER-COST    TO WS-PD-CNG-FUEL-COST
MOVE FMDL-SC-TR-OTHER-PPG     TO WS-PD-CNG-FUEL-PPG
MOVE FMDL-SC-TR-OTHER-GALLONS TO WS-PD-CNG-FUEL-GAL
MOVE WS-PD-SC-NET-DISC-AMT(4) TO WS-PD-CNG-FUEL-DISC
WHEN 'DEF   '
MOVE FMDL-SC-TR-OTHER-COST    TO WS-PD-DEF-FUEL-COST
MOVE FMDL-SC-TR-OTHER-PPG     TO WS-PD-DEF-FUEL-PPG
MOVE FMDL-SC-TR-OTHER-GALLONS TO WS-PD-DEF-FUEL-GAL
MOVE WS-PD-SC-NET-DISC-AMT(4) TO WS-PD-DEF-FUEL-DISC
END-EVALUATE


IF SUB-PROD-DESC-6 = 'GAS   ' OR 'CNG   ' OR 'LPG   '
OR 'LNG   ' OR 'DEF   '
MOVE ZEROES                   TO ADF-OTHER-FUEL-GALLONS
ADF-OTHER-FUEL-PPG
ADF-OTHER-FUEL-COST
END-IF
.



IDD-BUILD-SUB-PROD.

MOVE FMDL-NR2-SUB-PROD-CODE     TO ADF-TRACTOR-SUB-PROD-CODE.
MOVE FMDL-NR1-SUB-PROD-CODE     TO ADF-NR1-SUB-PROD-CODE.
MOVE FMDL-RFR-SUB-PROD-CODE     TO ADF-REEFER-SUB-PROD-CODE.
MOVE FMDL-OTHER-FUEL-TYPE       TO ADF-OTHER-SUB-PROD-CODE.
MOVE FMDL-PROD-9-TYPE-1(1:1)    TO ADF-PROD-1-SUB-PROD-1.
MOVE FMDL-PROD-9-TYPE-1(2:)     TO ADF-PROD-1-SUB-PROD-2.
MOVE FMDL-PROD-9-TYPE-2(1:1)    TO ADF-PROD-2-SUB-PROD-1.
MOVE FMDL-PROD-9-TYPE-2(1:1)    TO ADF-PROD-2-SUB-PROD-2.
MOVE FMDL-PROD-9-TYPE-3(2:)     TO ADF-PROD-3-SUB-PROD-1.
MOVE FMDL-PROD-9-TYPE-3(2:)     TO ADF-PROD-3-SUB-PROD-2.


IDD-ERROR.

PERFORM IDD-BUILD-ITDQ-RECORD.
MOVE WS-FP-ACCT-CODE            TO ITLG-ACCT-CODE.

IF THIS-BE-A-PC-REQUEST   OR
NON-PRODUCTION-REQUEST
MOVE CDN-CUST-ACCT-CODE       TO IDEL-ACCOUNT-CODE
MOVE WS-UIWA-UNIT-NR          TO IDEL-UNIT-NUMBER
MOVE SCM-SERVICE-CENTER-CODE  TO IDEL-LOCATION-CODE
MOVE SCM-LOCATION-NAME        TO IDEL-LOCATION-NAME
MOVE SCM-LOCATION-CITY        TO IDEL-LOCATION-CITY
MOVE SCM-LOCATION-STATE       TO IDEL-LOCATION-STATE
MOVE WRK-HHMM                 TO IDEL-TRANSACTION-TIME
MOVE PD-MDY                   TO IDEL-TRANSACTION-DATE
MOVE WS-UIWA-TRIP-NR          TO IDEL-TRIP-NUMBER
MOVE WS-UIWA-HUB              TO IDEL-HUB-READING
MOVE WS-PRM-CARD-NUM          TO IDEL-CARD-NUMBER
MOVE WS-UIWA-EMPLOYEE-NR      TO IDEL-EMPLOYEE-NUMBER
MOVE WS-UIWA-DL-NR            TO IDEL-DL-NR
MOVE WS-UIWA-DL-ST            TO IDEL-DL-STATE
MOVE WS-UIWA-PO-NR            TO IDEL-PO-NUMBER
MOVE WS-UIWA-TRAILER-NR       TO IDEL-TRAILER-NUMBER
MOVE WS-FMDL-CUST-ID-FIXED    TO IDEL-CUSTOMER-ID
MOVE WS-UIWA-TRAILER-HUB      TO IDEL-TRAILER-HUB
MOVE POS-ERROR-NUMBER         TO IDEL-RETURN-CODE
MOVE POS-MESSAGE              TO IDEL-ERROR-MESSAGE
ELSE
MOVE CDN-CUST-ACCT-CODE       TO IDEL-ACCOUNT-CODE
MOVE COM-UNIT-NR              TO IDEL-UNIT-NUMBER
MOVE SCM-SERVICE-CENTER-CODE  TO IDEL-LOCATION-CODE
MOVE SCM-LOCATION-NAME        TO IDEL-LOCATION-NAME
MOVE SCM-LOCATION-CITY        TO IDEL-LOCATION-CITY
MOVE SCM-LOCATION-STATE       TO IDEL-LOCATION-STATE
MOVE WRK-HHMM                 TO IDEL-TRANSACTION-TIME
MOVE PD-MDY                   TO IDEL-TRANSACTION-DATE
MOVE WS-UIWA-TRIP-NR          TO IDEL-TRIP-NUMBER
MOVE WS-UIWA-HUB              TO IDEL-HUB-READING
MOVE COM-PREMIER-CARD         TO WS-PRM-CARD-NR
MOVE 15                       TO MOD10-SL
MOVE HIGH-VALUE               TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-BASE-A       TO IDEL-CARD-NUMBER

MOVE COM-EMPL-NR              TO IDEL-EMPLOYEE-NUMBER
MOVE COM-DL-NR                TO IDEL-DL-NR
MOVE COM-DL-STATE             TO IDEL-DL-STATE
MOVE WS-UIWA-PO-NR            TO IDEL-PO-NUMBER
MOVE WS-UIWA-TRAILER-NR       TO IDEL-TRAILER-NUMBER
MOVE WS-FMDL-CUST-ID-FIXED    TO IDEL-CUSTOMER-ID
MOVE WS-UIWA-TRAILER-HUB      TO IDEL-TRAILER-HUB
MOVE POS-ERROR-NUMBER         TO IDEL-RETURN-CODE
MOVE OUT-COMENT               TO IDEL-ERROR-MESSAGE
END-IF.
PERFORM IDD-DATA-CHECKS.
PERFORM IDD-WRITE-DATA-RECORD.


IDD-DATA-CHECKS.

IF IDEL-HUB-READING NOT NUMERIC
MOVE ZEROS              TO IDEL-HUB-READING
END-IF.
IF (IDEL-CARD-NUMBER (10:1) = ZERO)            AND
(WS-PRM-CARD-N IS NUMERIC                 )
MOVE 15 TO MOD10-SL
MOVE HIGH-VALUE TO INDX-LO
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
INDX-LO
MOVE INDX-LO TO IDEL-CARD-NUMBER (10:1)
END-IF.


IDD-WRITE-DATA-RECORD.

MOVE WRK-HHMM              TO ITLG-DLVRY-TIME-FREQ.

EVALUATE TRUE
WHEN POS-ERROR-NUMBER = ZEROES
INSPECT ALLIANCE-DATA-FORMAT REPLACING ALL LOW-VALUES
BY SPACE
MOVE ALLIANCE-DATA-FORMAT     TO ITLG-TRANSMIT-DATA
WHEN OTHER
INSPECT INTRA-DAY-ERROR-LAYOUT REPLACING ALL LOW-VALUES
BY SPACE
MOVE INTRA-DAY-ERROR-LAYOUT   TO ITLG-TRANSMIT-DATA
END-EVALUATE.


EVALUATE CRR-REPORT-CODE
WHEN MA-CRR-REPORT-CODE
MOVE FMDL-ATM-RESPONSE-CODE
TO ITLG-TRANSMIT-DATA (385:2)
MOVE FMDL-SC-NAME (5:22)   TO ITLG-TRANSMIT-DATA (387:22)
WHEN SP-CRR-REPORT-CODE
IF CRR-STYLE (3:1) = '8'
MOVE WS-PRODUCT-DISCOUNT-AREA
TO ITLG-TRANSMIT-DATA (385:95)
END-IF
END-EVALUATE.

PERFORM IDD-WRITE-ITDQ.


IDD-WRITE-ITDQ.

MOVE 'IDD-WRITE-ITDQ'            TO CXUTS0ML-PARAGRAPH.
MOVE ITLG-DATA-STREAM         TO ITLG-DATA-STREAM2.

EXEC CICS WRITEQ TD
QUEUE  ('ITDQ')
FROM   (ITLG-RECORD)
LENGTH (WS-ITDQ-LENGTH)
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


IDD-READ-CDREPRT.

MOVE 'IDD-READ-CDREPRT'          TO CXUTS0ML-PARAGRAPH.
MOVE ' '                    TO ERROR-FLAG
IF WS-FMDL-CUST-ID-FIXED NOT > SPACES
PERFORM 2108X-BFR-BUILD-CUST-ID
END-IF.
MOVE FMDL-CUST-CUSTOMER-ID  TO HLD-CRR-CUSTOMER-ID.
MOVE WS-FP-ACCT-CODE        TO HLD-CRR-RECV-CUSTOMER-ID.

EXEC CICS READ
DATASET ('CDREPRT')
RIDFLD  (HLD-CRR-KEY)
INTO    (COMDATA-REPORT-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE HLD-CRR-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE '*' TO ERROR-FLAG
END-IF.
IF CRR-REPORT-CODE NOT NUMERIC
MOVE ZEROS TO CRR-REPORT-CODE
END-IF.
IF ERROR-FLAG = ' '
PERFORM IDD-READ-CDREPRT-CHECK
IF ERROR-FLAG = '*'
PERFORM IDD-READ-CDREPRT-MA
END-IF
IF ERROR-FLAG = '*'
PERFORM IDD-READ-CDREPRT-SUBPROD
END-IF
END-IF.


IDD-READ-CDREPRT-CHECK.

MOVE '*' TO ERROR-FLAG
IF HLD-CRR-CUSTOMER-TYPE         = CRR-CUSTOMER-TYPE      AND
HLD-CRR-CUSTOMER-ID           = CRR-CUSTOMER-ID        AND
HLD-CRR-SYSTEM-ID             = CRR-SYSTEM-ID          AND
HLD-CRR-REPORT-CODE           = CRR-REPORT-CODE        AND
HLD-CRR-REPORT-FREQUENCY      = CRR-REPORT-FREQUENCY   AND
HLD-CRR-RECV-CUSTOMER-TYPE    = CRR-RECV-CUSTOMER-TYPE AND
HLD-CRR-RECV-CUSTOMER-ID      = CRR-RECV-CUSTOMER-ID
MOVE ' '                      TO ERROR-FLAG
IF POS-ERROR-NUMBER > ZEROES AND
CRR-STYLE (2:1) NOT = '1'
MOVE '*'                      TO ERROR-FLAG.


IDD-READ-CDREPRT-MA.

MOVE 'IDD-READ-CDREPRT-MA'       TO CXUTS0ML-PARAGRAPH.
MOVE FMDL-CUST-CUSTOMER-ID  TO MA-CRR-CUSTOMER-ID.
MOVE WS-FP-ACCT-CODE        TO MA-CRR-RECV-CUSTOMER-ID.

EXEC CICS READ
DATASET ('CDREPRT')
RIDFLD  (MA-CRR-KEY)
INTO    (COMDATA-REPORT-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE MA-CRR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF MA-CRR-CUSTOMER-TYPE          = CRR-CUSTOMER-TYPE      AND
MA-CRR-CUSTOMER-ID            = CRR-CUSTOMER-ID        AND
MA-CRR-SYSTEM-ID              = CRR-SYSTEM-ID          AND
MA-CRR-REPORT-CODE            = CRR-REPORT-CODE        AND
MA-CRR-REPORT-FREQUENCY       = CRR-REPORT-FREQUENCY   AND
MA-CRR-RECV-CUSTOMER-TYPE     = CRR-RECV-CUSTOMER-TYPE AND
MA-CRR-RECV-CUSTOMER-ID       = CRR-RECV-CUSTOMER-ID
MOVE ' '                      TO ERROR-FLAG
END-IF.


IDD-READ-CDREPRT-SUBPROD.

MOVE 'IDD-READ-CDREPRT-SUBPROD'  TO CXUTS0ML-PARAGRAPH.
MOVE FMDL-CUST-CUSTOMER-ID  TO SP-CRR-CUSTOMER-ID.
MOVE WS-FP-ACCT-CODE        TO SP-CRR-RECV-CUSTOMER-ID.

EXEC CICS READ
DATASET ('CDREPRT')
RIDFLD  (SUB-PROD-CRR-KEY)
INTO    (COMDATA-REPORT-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE SUB-PROD-CRR-KEY  TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF SP-CRR-CUSTOMER-TYPE          = CRR-CUSTOMER-TYPE      AND
SP-CRR-CUSTOMER-ID            = CRR-CUSTOMER-ID        AND
SP-CRR-SYSTEM-ID              = CRR-SYSTEM-ID          AND
SP-CRR-REPORT-CODE            = CRR-REPORT-CODE        AND
SP-CRR-REPORT-FREQUENCY       = CRR-REPORT-FREQUENCY   AND
SP-CRR-RECV-CUSTOMER-TYPE     = CRR-RECV-CUSTOMER-TYPE AND
SP-CRR-RECV-CUSTOMER-ID       = CRR-RECV-CUSTOMER-ID
MOVE ' '                      TO ERROR-FLAG
END-IF.
IF POS-ERROR-NUMBER > ZEROES AND
CRR-STYLE (2:1) NOT = '1'
MOVE '*'                      TO ERROR-FLAG.


IDD-BUILD-ITDQ-RECORD.


MOVE '0' TO ITLG-DATA-TYPE.
MOVE SPACES TO ITLG-SUB-ID,
ITLG-DEVICE-TYPE,
ITLG-ROUTE-TO-ACCT-CODE,
ITLG-ROUTE-TO-SUB-ID,
ITLG-DISCRETIONARY-DATA.
MOVE ZEROES TO ITLG-TRACKING-NUMBER,
ITLG-RESPONSE-CODE.

MOVE FMDL-CUST-CUSTOMER-ID  TO ITLG-CUST-ID.
EVALUATE TRUE
WHEN CRR-REPORT-TO-ITP
MOVE '1'            TO ITLG-TRANSMIT-METHOD
WHEN CRR-REPORT-TO-RJE
MOVE '2'            TO ITLG-TRANSMIT-METHOD
WHEN CRR-REPORT-TO-REALTIME
MOVE CRR-STYLE(1:1) TO ITLG-TRANSMIT-METHOD
END-EVALUATE.
MOVE CRR-REALTIME-TERM-ID   TO ITLG-REAL-TIME-TERM-ID.
MOVE 'M'                    TO ITLG-AUTO-MAN-FLAG.
IF CRR-ITP-AUTO-OUT-BOUND-AVAIL = 'Y'
MOVE 'A'                TO ITLG-AUTO-MAN-FLAG
END-IF
MOVE CRR-REPORT-CODE        TO ITLG-REPORT-NUMBER.
MOVE CRR-SYSTEM-ID          TO ITLG-SYSTEM-ID.
MOVE WS-CURRENT-DATE-YYDDD  TO ITLG-DATE.
MOVE EIBTIME                TO ITLG-TIME, WRK-HHMMSS.

IF CRR-STYLE (3:1) = '8'
MOVE 479                    TO ITLG-TRANSMIT-DATA-LENGTH
ELSE
MOVE 384                    TO ITLG-TRANSMIT-DATA-LENGTH
END-IF
EVALUATE TRUE
WHEN CRR-DOWNLOAD-HOURLY
PERFORM IDD-DOWNLOAD-HOURLY
WHEN CRR-DOWNLOAD-HALF-HOURLY
PERFORM IDD-DOWNLOAD-HALF-HOURLY
WHEN CRR-DOWNLOAD-SPECIFIED-TIMES
PERFORM IDD-DOWNLOAD-SPECIFIED-TIMES
END-EVALUATE.


IDD-DOWNLOAD-HOURLY.

ADD 1 TO WRK-HH
MOVE ZEROS TO WRK-MM
IF WRK-HH > 24
MOVE 00 TO WRK-HH
END-IF.


IDD-DOWNLOAD-HALF-HOURLY.

IF WRK-MM > 30
ADD 1 TO WRK-HH
MOVE ZEROS TO WRK-MM
IF WRK-HH > 24
MOVE 00 TO WRK-HH
END-IF
ELSE
MOVE 30 TO WRK-MM
END-IF.


IDD-DOWNLOAD-SPECIFIED-TIMES.

MOVE 9999  TO HLD-DELIV-TIME.
MOVE 1     TO DELIV-TIME-CTR.
PERFORM IDD-FIND-NEXT-DELIV-TIME
UNTIL DELIV-TIME-CTR > 12.
IF HLD-DELIV-TIME NOT < 9999
MOVE ZEROS TO WRK-HHMMSS
MOVE 1     TO DELIV-TIME-CTR
PERFORM IDD-FIND-NEXT-DELIV-TIME
UNTIL DELIV-TIME-CTR > 12
MOVE HLD-DELIV-TIME TO WRK-HHMM
ELSE
MOVE HLD-DELIV-TIME TO WRK-HHMM
END-IF.


IDD-FIND-NEXT-DELIV-TIME.

IF CRR-SPECIFIED-DOWNLOAD-TIMES (DELIV-TIME-CTR) NOT NUMERIC
MOVE ZEROS TO
CRR-SPECIFIED-DOWNLOAD-TIMES (DELIV-TIME-CTR).
IF CRR-SPECIFIED-DOWNLOAD-TIMES (DELIV-TIME-CTR) > WRK-HHMM
IF CRR-SPECIFIED-DOWNLOAD-TIMES (DELIV-TIME-CTR) <
HLD-DELIV-TIME
MOVE CRR-SPECIFIED-DOWNLOAD-TIMES (DELIV-TIME-CTR) TO
HLD-DELIV-TIME.
ADD 1 TO DELIV-TIME-CTR.


INTRA-DAY-DOWNLOAD-BF3.

MOVE 'INTRA-DAY-DOWNLOAD-BF3     ' TO CXUTS0ML-PARAGRAPH.
MOVE '*' TO ERROR-FLAG.
PERFORM IDD-READ-CDREPRT-BF3.
IF ERROR-FLAG = ' '
PERFORM IDD-POST-BF3
END-IF.


IDD-POST-BF3.

PERFORM IDD-BUILD-ITDQ-RECORD.
MOVE WS-FP-ACCT-CODE        TO ITLG-ACCT-CODE.
MOVE ITDQ-POST-LENGTH       TO ITLG-TRANSMIT-DATA-LENGTH.
PERFORM IDD-WRITE-DATA-RECORD-BF3.


IDD-WRITE-DATA-RECORD-BF3.

MOVE WRK-HHMM                 TO ITLG-DLVRY-TIME-FREQ.
PERFORM GET-CURRENT-TIMESTAMP.
MOVE WS-PRM-CARD              TO ITDQ-CARD-NUMBER.
MOVE PRM-CARD-EMPLOYEE-ID     TO ITDQ-EMPLOYEE-ID.
MOVE WS-CURRENT-TS-DATE       TO ITDQ-AUTH-DATE.
MOVE WS-CURRENT-TS-TIME       TO ITDQ-AUTH-TIME.
COMPUTE ITDQ-AUTH-AMOUNT = FMDL-BC-TR-TRACTOR-COST        +
FMDL-BC-TR-TRAILER-COST        +
FMDL-BC-TR-OTHER-COST          +
FMDL-BC-NR1-COST               +
FMDL-BC-TR-OIL-COST            +
FMDL-BC-TR-CASH-ADVANCE-AMOUNT +
FMDL-BC-TR-PRODUCT-AMOUNT-1    +
FMDL-BC-TR-PRODUCT-AMOUNT-2    +
FMDL-BC-TR-PRODUCT-AMOUNT-3    +
FMDL-BC-TAX-AMT.
MOVE WS-CONTROL-NR            TO ITDQ-APPROVAL-CODE.
MOVE POS-ERROR-NUMBER         TO ITDQ-MESSAGE-NUMBER.
MOVE POS-MESSAGE              TO ITDQ-AUTH-MESSAGE.
INSPECT ITDQ-AUTH-MESSAGE REPLACING ALL '/' BY ' '.
IF POS-ERROR-NUMBER = ZERO
MOVE ZERO                  TO ITDQ-RESPONSE-CODE
ELSE
MOVE 05                    TO ITDQ-RESPONSE-CODE
END-IF.

MOVE WS-GMT-DATE              TO ITDQ-AUTH-GMT-DATE.
MOVE WS-GMT-TIME              TO ITDQ-AUTH-GMT-TIME.
MOVE WS-CURRENT-TIMESTAMP     TO ITDQ-AUTH-LOCAL-TS.
MOVE SCM-KEY                  TO ITDQ-ACCEPTOR-ID.
STRING SCM-LOCATION-NAME  DELIMITED BY '  ',
' '     DELIMITED  BY SIZE,
SCM-LOCATION-CITY  DELIMITED BY '  ',
' '     DELIMITED  BY SIZE,
SCM-LOCATION-STATE DELIMITED BY SIZE
INTO ITDQ-MERCHANT-LOCATION.
INSPECT ITDQ-MERCHANT-LOCATION REPLACING ALL '/' BY ' '.
MOVE 'N'                      TO ITDQ-REVERSAL-FLAG.
MOVE 'CDNP'                   TO ITDQ-MCC.
MOVE 'C'                      TO ITDQ-TRANSACTION-TYPE.
IF WS-UIWA-SWIPED-KEYED = 'S'
MOVE '090'                 TO ITDQ-POS-ENTRY-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'M'
MOVE '030'              TO ITDQ-POS-ENTRY-MODE
ELSE
IF WS-UIWA-SWIPED-KEYED = 'C'
MOVE '050'           TO ITDQ-POS-ENTRY-MODE
ELSE
MOVE 010             TO ITDQ-POS-ENTRY-MODE
END-IF
END-IF
END-IF.
MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT TO ITDQ-POSTING-DATE.
MOVE WS-POSTING-TIME               TO ITDQ-POSTING-TIME.
MOVE ITDQ-AUTH-AMOUNT         TO ITDQ-POSTING-AMOUNT.
MOVE ITDQ-APPROVAL-CODE       TO ITDQ-POSTING-APPROV-CD.
MOVE 'N'                      TO ITDQ-CHARGE-BACK-FLAG.
MOVE 'N'                      TO ITDQ-RETRIEVAL-FLAG.
MOVE ITDQ-MERCHANT-LOCATION   TO ITDQ-POST-MERCHANT-LOC.
MOVE SCM-LOCATION-NAME        TO ITDQ-POST-MERCHANT-NAME.
MOVE SCM-LOCATION-CITY        TO ITDQ-POST-MERCHANT-CITY.
MOVE SCM-LOCATION-STATE       TO ITDQ-POST-MERCHANT-STATE.
MOVE SCM-LOCATION-ZIP         TO ITDQ-POST-MERCHANT-ZIP.
INSPECT ITDQ-POST-MERCHANT-NAME REPLACING ALL '/' BY ' '.
INSPECT ITDQ-POST-MERCHANT-CITY REPLACING ALL '/' BY ' '.

MOVE ITDQ-POST-RECORD         TO ITLG-TRANSMIT-DATA.
PERFORM IDD-WRITE-ITDQ.


GET-CURRENT-TIMESTAMP.

MOVE 'GET-CURRENT-TIMESTAMP' TO CXUTS0ML-PARAGRAPH.
MOVE 'SELECT   '             TO CXUTS0ML-COMMAND.
MOVE GMT-OFFSET-HOURS TO WS-GMT-HOURS.


EXEC SQL
SELECT (CURRENT TIMESTAMP),
(CURRENT TIMESTAMP + :WS-GMT-HOURS HOURS)
INTO :WS-CURRENT-TIMESTAMP,
:WS-TIMESTAMP-GMT
FROM  CXXCOW.SYS_DATE
END-EXEC.

PERFORM CHECK-NOTFND-SQL.
MOVE WS-CURRENT-TIMESTAMP TO WS-CURRENT-TS.
IF SQLCODE = +100
MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT TO WS-CURRENT-TS-DATE
MOVE WS-BUSINESS-TIME-FMT          TO WS-CURRENT-TS-TIME
END-IF.

MOVE WS-TIMESTAMP-GMT TO WS-CURRENT-GMT.


IDD-READ-CDREPRT-BF3.

MOVE 'IDD-READ-CDREPRT-BF3'      TO CXUTS0ML-PARAGRAPH.
MOVE FMDL-CUST-CUSTOMER-ID  TO BF-CRR-CUSTOMER-ID.
MOVE WS-FP-ACCT-CODE        TO BF-CRR-RECV-CUSTOMER-ID.

EXEC CICS READ
DATASET ('CDREPRT')
RIDFLD  (BF-CRR-KEY)
INTO    (COMDATA-REPORT-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE BF-CRR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF BF-CRR-CUSTOMER-TYPE          = CRR-CUSTOMER-TYPE      AND
BF-CRR-CUSTOMER-ID            = CRR-CUSTOMER-ID        AND
BF-CRR-SYSTEM-ID              = CRR-SYSTEM-ID          AND
BF-CRR-REPORT-CODE            = CRR-REPORT-CODE        AND
BF-CRR-REPORT-FREQUENCY       = CRR-REPORT-FREQUENCY   AND
BF-CRR-RECV-CUSTOMER-TYPE     = CRR-RECV-CUSTOMER-TYPE AND
BF-CRR-RECV-CUSTOMER-ID       = CRR-RECV-CUSTOMER-ID
MOVE ' '                      TO ERROR-FLAG
END-IF.


CANCEL-PREMIER-CARD.

MOVE 'CANCEL-PREMIER-CARD'       TO CXUTS0ML-PARAGRAPH.

MOVE COM-FP-CO-CODE TO CDN-CUST-KEY.
EXEC CICS READ
DATASET ('CDNCUST')
INTO    (CDN-CUSTOMER-RECORD)
RIDFLD  (CDN-CUST-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE CDN-CUST-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM 60100-CHECK-CDNCUST-DATA
PERFORM 60520-CHECK-FOR-HIERARCHY.
MOVE 'N' TO READ-CUST-FLAG.
MOVE 'Y' TO READ-ACCT-FLAG.

IF FMDL-SECONDARY-CARD-NR > ZEROES
MOVE FMDL-DT-COMCHEK-CARD-NUMBER TO PRM-CARD-NUMB
PERFORM CANCEL-PREMIER-CARD-RTN
MOVE FMDL-SECONDARY-CARD-NR      TO PRM-CARD-NUMB
PERFORM CANCEL-PREMIER-CARD-RTN
MOVE FP-CANCEL-COMMON TO WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
ELSE
MOVE WS-PRM-CARD-NR TO PRM-CARD-NUMB
PERFORM CANCEL-PREMIER-CARD-RTN.


CANCEL-PREMIER-CARD-RTN.

MOVE 'CANCEL-PREMIER-CARD-RTN'   TO CXUTS0ML-PARAGRAPH.
MOVE PRM-CARD-KEY                TO CXUTS0ML-COMMAND.

EXEC CICS READ
DATASET ('PRMCARD')
INTO    (PRM-CARD-RECORD)
RIDFLD  (PRM-CARD-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.

PERFORM CHECK-FOR-NORMAL-EIBRESP.

IF EIBRESP = DFHRESP(NORMAL)
MOVE PRM-CARD-RECORD TO PRB-CARD-BEFORE-RECORD
PERFORM 21121G-PRMCARD-NUMERIC-CHECKS
END-IF.

PERFORM 60000-CHECK-PRMCARD

MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG.
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG.







IF CDN-CUST-NUMBER NOT = PRB-SUB-ACCT-NUMB
MOVE CDN-CUST-NUMBER   TO PRM-SUB-ACCT-NUMB
END-IF

PERFORM PII-LINK-CXXCO0CS.

IF CDN-CUST-NUMBER NOT = PRB-SUB-ACCT-NUMB
MOVE PRB-SUB-ACCT-NUMB TO PRM-SUB-ACCT-NUMB
END-IF

PERFORM PII-ADJUST-CSTAND.

SET TSXCO0LM-SECONDARY-CARD-NO TO TRUE.

IF CDN-SECONDARY-CARD-ALLOWED AND
PRM-PRIMARY-CARD-NR > ZEROES
SET TSXCO0LM-SECONDARY-CARD-YES TO TRUE.

MOVE PRM-PURC-INITIAL TO HLD-PRM-PURC-INITIAL
MOVE PRM-CASH-INITIAL TO HLD-PRM-CASH-INITIAL
MOVE ZEROES           TO WS-CHARGE-RATE
WS-SUBTRACT-DISCOUNT.

PERFORM CPC-1000-GET-DISCOUNT-INFO
PERFORM CPC-1010-GET-CHARGES-INFO
PERFORM CPC-1020-ADJUST-BALANCE
PERFORM CPC-1030-ADJUST-CASH-INFO
PERFORM CPC-1040-ADJUST-PURC-INFO
PERFORM CPC-1045-ADJUST-OIL-INFO




IF (CSR-OTHER-LIMIT-FLAG = 'Y'
AND FMDL-BC-TR-OTHER-GALLONS > ZERO)
OR  CDN-LOAD-PAY-NETWORK = 'C'
PERFORM PU-PRMINFO-READ
END-IF.

PERFORM CPC-1050-ADJUST-GALLON-INFO

IF CDN-LOAD-PAY-NETWORK = 'C'
PERFORM CPC-1055-ADJUST-COMCHEK-MOBILE
END-IF.

IF (CSR-OTHER-LIMIT-FLAG = 'Y'
AND FMDL-BC-TR-OTHER-GALLONS > ZERO)
OR  CDN-LOAD-PAY-NETWORK = 'C'
IF PRMINFO-REWRITE
PERFORM PU-PRMINFO-REWRITE
END-IF
END-IF.

MOVE FMDL-RK-CONTROL-NUMBER
TO WS-WORK-TRANS-NR.

EXEC CICS REWRITE
DATASET ('PRMCARD')
FROM    (PRM-CARD-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP (NORMAL)
MOVE PRM-CARD-RECORD TO PRA-CARD-AFTER-RECORD
MOVE PRM-CARD-CHANGE-RECORD
TO XCOH-MSG-DATA
MOVE 2               TO XCOH-MSG-CODE
PERFORM 21121C-LINK-TO-MSG-HANDLER
END-IF.

MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG.
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG.
PERFORM GET-ALL-DYNAM-BIN-FLAGS.


IF PRM-CARD-NUMB = FMDL-DT-COMCHEK-CARD-NUMBER
PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED OR
ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E'
PERFORM UPDATE-EXPENSE-HISTORY
END-IF.


CPC-1000-GET-DISCOUNT-INFO.

MOVE 'N' TO COM-FOCUS-DISC-FLAG
IF FMDL-SELECT-OR-FOCUS-DISC = 'F'
MOVE 'Y' TO COM-FOCUS-DISC-FLAG
END-IF
IF FMDL-RD-SC-SELECT-DISCOUNT NUMERIC   AND
FMDL-CUST-DISCOUNT-METHOD = 'N'
COMPUTE WS-SUBTRACT-DISCOUNT = FMDL-RD-SC-SELECT-DISCOUNT -
FMDL-REBATE-DISCOUNT-AMT
IF (CDN-NO-BALANCE-FOCUS  AND COM-FOCUS-DISC-FLAG = 'Y') OR
(CDN-NO-BALANCE-SELECT AND COM-FOCUS-DISC-FLAG = 'N') OR
(CDN-NO-BALANCE                                     )
MOVE ZEROES TO WS-SUBTRACT-DISCOUNT
END-IF
END-IF.


CPC-1010-GET-CHARGES-INFO.

IF FMDL-PREMIER-FLAG = 'P'
IF FMDL-PC-EXP-CASH-CHRG-FLAG = 'L'
MOVE 'Y'               TO WS-WORK-LESS-CHARGE
END-IF.
IF (TRANS-LESS-CHARGES AND I-DEDUCT-CHARGE-FROM-DRIVER) OR
(TRANS-LESS-CHARGES AND
ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E')
ADD FMDL-BC-RD-FUEL-RATE, FMDL-BC-RD-CASH-ADVANCE-RATE
GIVING WS-CHARGE-RATE
END-IF.


CPC-1020-ADJUST-BALANCE.


PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED OR
ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E'
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-PREVIOUS-BALANCE
COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE +
WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OIL-COST +
WS-UIWA-TAX-AMT +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-CASH-AMT +
WS-CHARGE-RATE  -
WS-SUBTRACT-DISCOUNT
MOVE PRM-EXPENSE-BALANCE TO PRMLOG-ADJUSTED-BALANCE.


PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED OR
ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E'
COMPUTE PRMLOG-TRANSACTION-AMOUNT = WS-UIWA-NR2-COST +
WS-UIWA-REF-COST +
WS-UIWA-OIL-COST +
WS-UIWA-TAX-AMT +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST +
WS-UIWA-CASH-AMT -
WS-SUBTRACT-DISCOUNT.


IF PRM-CARD-NUMB NOT = FMDL-DT-COMCHEK-CARD-NUMBER
MOVE ZEROES TO PRM-EXPENSE-BALANCE.


CPC-1030-ADJUST-CASH-INFO.

IF PRM-PRIMARY-CARD-NR = ZEROES OR
TSXCO0LM-SECONDARY-CARD-NO
MOVE FMDL-PC-CASH-1-AMT-USED     TO HLD-CASH-ONE-TIME
ELSE
MOVE FMDL-PC-CASH-1-AMT-USED-SEC TO HLD-CASH-ONE-TIME.

IF CSR-CARD-CASH-AVAILABLE
IF WS-UIWA-CASH-AMT > 0
SUBTRACT WS-UIWA-CASH-AMT FROM PRM-CASH-USED
ADD HLD-CASH-ONE-TIME        TO PRM-CASH-ONE-TIME
ADD HLD-CASH-ONE-TIME        TO PRM-CASH-USED
END-IF
END-IF
IF PRM-CASH-USED IS LESS THAN ZERO
MOVE ZERO TO PRM-CASH-USED
END-IF.


CPC-1040-ADJUST-PURC-INFO.

IF PRM-PRIMARY-CARD-NR = ZEROES OR
TSXCO0LM-SECONDARY-CARD-NO
MOVE FMDL-PC-PURCH-1-AMT-USED     TO HLD-PURC-ONE-TIME
ELSE
MOVE FMDL-PC-PURCH-1-AMT-USED-SEC TO HLD-PURC-ONE-TIME.

IF CSR-PURC-LIMIT-ON-CARD
SUBTRACT WS-UIWA-NR2-COST,
WS-UIWA-REF-COST,
WS-UIWA-OIL-COST,
WS-UIWA-PR1-COST,
WS-UIWA-PR2-COST,
WS-UIWA-PR3-COST,
WS-UIWA-TAX-AMT
FROM PRM-PURC-USED
ADD HLD-PURC-ONE-TIME TO PRM-PURC-ONE-TIME
ADD HLD-PURC-ONE-TIME TO PRM-PURC-USED
END-IF
IF PRM-PURC-USED < ZEROES
MOVE ZERO TO PRM-PURC-USED
END-IF
MOVE ZEROES  TO PRM-LAST-TRANS-NR.


CPC-1045-ADJUST-OIL-INFO.

IF CSR-OIL-FLAG = 'Y'
SUBTRACT WS-UIWA-OIL-COST FROM PRM-OIL-USED-DOLLARS
SUBTRACT WS-UIWA-OIL-QTY FROM PRM-OIL-USED-QUARTS.
IF PRM-OIL-USED-DOLLARS < ZERO
MOVE ZERO TO PRM-OIL-USED-DOLLARS.
IF PRM-OIL-USED-QUARTS  < ZERO
MOVE ZERO TO PRM-OIL-USED-QUARTS.


CPC-1050-ADJUST-GALLON-INFO.


PERFORM PREMIER-CARD-GALL-LIMIT.
IF CSR-DIESEL-LIMIT-FLAG = 'Y'
COMPUTE PRM-DIESEL-USED =  PRM-DIESEL-USED            -
FMDL-BC-TR-TRACTOR-GALLONS -
FMDL-BC-NR1-GALLONS
END-IF.

IF CSR-REEFER-LIMIT-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYDDD TO PRM-REEFER-LAST-DATE
COMPUTE PRM-REEFER-USED =  PRM-REEFER-USED         -
FMDL-BC-TR-TRAILER-GALLONS
END-IF.

IF CSR-OTHER-LIMIT-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYDDD TO PIR-OTHER-LAST-DATE
COMPUTE PIR-OTHER-USED  =  PIR-OTHER-USED  -
FMDL-BC-TR-OTHER-GALLONS
END-IF.


CPC-1055-ADJUST-COMCHEK-MOBILE.

COMPUTE PIR-CMCK-FUEL-LIMIT-USED = PIR-CMCK-FUEL-LIMIT-USED
- FMDL-BC-TR-TRACTOR-COST
- FMDL-BC-TR-OTHER-COST
- FMDL-BC-NR1-COST.

IF PIR-CMCK-FUEL-LIMIT-USED < ZERO
MOVE ZEROS TO PIR-CMCK-FUEL-LIMIT-USED
END-IF.



UPDATE-EXPENSE-HISTORY.

PERFORM UEH-0100.
PERFORM UEH-0200.
PERFORM UEH-0300.
PERFORM UEH-0400.


UEH-0100.


MOVE COM-FP-CO-CODE     TO PRMLOG-CUSTOMER-ID.
MOVE PRM-CARD-NUMB      TO WS-PRM-CARD-NR.
MOVE PRM-CHECK-DIGIT    TO WS-PRM-CARD-CKD.
MOVE WS-PRM-CARD-BASE-A TO PRMLOG-CARD-NR.
MOVE PRM-CARD-NUMB      TO PRMLOG-CRD-NBR.
MOVE PRM-CHECK-DIGIT    TO PRMLOG-CRD-NBR(16:1).
MOVE WS-WORK-TRANS-NR   TO WS-REFERENCE-NR.
MOVE PD-DD              TO WS-REF-NINE-DD.
MOVE WS-REFERENCE-CTL   TO WS-REF-NINE-CTL.
MOVE WS-REF-NINE-NR-R   TO PRMLOG-REFERENCE-NR.
MOVE EIBTIME            TO PRMLOG-TIME.
MOVE SPACES             TO PRMLOG-SEC-NAME.
MOVE FMDL-SC-SRVC-CNTR-CODE
TO PRMLOG-SEC-NAME.
MOVE FMDL-DT-DRIVER-NAME
TO PRMLOG-PAYEE-NAME.
MOVE 'E'                TO PRMLOG-CARD-TYPE.
MOVE +70                TO PRMLOG-INVOICE-TYPE.
MOVE SPACES             TO PRMLOG-ANCILLARY-DATA.
MOVE SPACES             TO PRMLOG-OP-ID.
MOVE 'P'                TO PRMLOG-PLUS-LESS.
MOVE EIBTRMID           TO PRMLOG-TERM-ID.
MOVE WS-OPERID          TO PRMLOG-OP-ID.
MOVE SPACES             TO PRMLOG-LINK-TO-I-FLAG.
MOVE ZEROS              TO PRMLOG-DRAFT-1,
PRMLOG-DRAFT-AMT-1,
PRMLOG-DRAFT-2.
MOVE WS-FP-ACCT-CODE    TO PRMLOG-ACCT-CODE.
MOVE ZEROS              TO PRMLOG-CURR-CONV-ASS.
MOVE ZEROS              TO PRMLOG-XBORDER-ASS.
MOVE SPACES             TO PRMLOG-INVOICE-NR.
MOVE ZEROS              TO PRMLOG-ITEM-NR.
IF I-DEDUCT-CHARGE-FROM-DRIVER OR
(TRANS-LESS-CHARGES AND
ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3) = 'E')
MOVE WS-CHARGE-RATE  TO PRMLOG-REVENUE
MOVE 'L'             TO PRMLOG-PLUS-LESS.
IF THIS-BE-A-VRU-EXPRESS-CASH
IF CDN-BILL-AT-PICKUP
IF CDN-LESS-PICKUP
MOVE WS-CHARGE-RATE TO PRMLOG-REVENUE
MOVE 'L'            TO PRMLOG-PLUS-LESS.
MOVE WS-CURRENT-DATE-YYDDD TO PRMLOG-DATE-JULIAN.
MOVE PRM-CARD-EMPLOYEE-ID  TO PRMLOG-EMPLOYEE-NR.
MOVE WS-CURRENT-DATE-YYDDD TO PRMLOG-DATE-PLACED-JUL.
MOVE EIBTIME               TO PRMLOG-TIME-PLACED.
MOVE SPACES                TO PRMLOG-TRANID.
IF TSXCO0LM-SECONDARY-CARD-YES
MOVE COM-PREMIER-CARD TO PRMLOG-SECONDARY-CARD-NR.


UEH-0200.

PERFORM DETERMINE-IF-BALANCE-BASED
IF (WS-BALANCE-BASED) AND
(CDN-MONEY-INVOICE-NO-FUEL-BILL) AND
(CDN-EXPRESS-CASH-YES)
MOVE '01' TO PRMLOG-RECD-ID
MOVE 'F'  TO PRMLOG-EXPRESS-BILLING-FLAG
IF NOT THIS-BE-A-VRU-EXPRESS-CASH
MOVE ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD
TO PRMLOG-REVENUE
END-IF
ELSE
MOVE 'T*'  TO PRMLOG-RECD-ID
MOVE ZEROS TO PRMLOG-INVOICE-AMT
MOVE SPACE TO PRMLOG-EXPRESS-BILLING-FLAG
IF PRMLOG-REVENUE NOT NUMERIC
MOVE ZEROES TO PRMLOG-REVENUE
END-IF
END-IF.


UEH-0300.

MOVE 'UEH-0300'                  TO CXUTS0ML-PARAGRAPH.
MOVE 'F'              TO PRMLOG-BILLING-TYPE.
IF THIS-BE-AN-ATM-XTN
EVALUATE TRUE
WHEN WS-HOLD-POS-ERROR-NUMBER > 0
SET PRMLOG-ATM-DECLINE  TO TRUE
WHEN POS-ERROR-NUMBER > 0
SET PRMLOG-ATM-DECLINE  TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-INQUIRY
WHEN TSXCO0AT-TRAN-TYPE-ASI
SET PRMLOG-ATM-INQUIRY  TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW OR
TSXCO0AT-TRAN-TYPE-WITH-SI  OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F
SET PRMLOG-ATM-WITHDRAWAL TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-PURCHASE-PI OR
TSXCO0AT-TRAN-TYPE-PURC-SI     OR
TSXCO0AT-TRAN-TYPE-PURC-SI-F
SET PRMLOG-ATM-PUR-PIN    TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-PINLESS-PUR
SET PRMLOG-ATM-PUR-PINLESS TO TRUE
WHEN TSXCO0AT-TRAN-TYPE-AUTH
SET PRMLOG-ATM-AUTH       TO TRUE
END-EVALUATE.

MOVE '   S'           TO PRMLOG-SUBSYSTEM.
IF FMDL-PAID-AT-LOAD
MOVE '   U'        TO PRMLOG-SUBSYSTEM
END-IF.

MOVE 'M'              TO PRMLOG-ORIGINATOR-FLAG.
IF THIS-BE-A-PC-REQUEST
MOVE 'A'           TO PRMLOG-ORIGINATOR-FLAG
END-IF.

IF THIS-IS-A-CANCEL-XTN OR
THIS-BE-AN-ATM-CANCEL
MOVE 'A'           TO PRMLOG-AMT-ADD-SUBTRACT
MOVE 'X'           TO PRMLOG-STATUS-INDICATOR
ELSE
MOVE 'S'           TO PRMLOG-AMT-ADD-SUBTRACT
MOVE 'S'           TO PRMLOG-STATUS-INDICATOR
END-IF.

IF CXXCW170-CIR-IRIS-RETURN-CODE > SPACES
MOVE CXXCW170-CIR-IRIS-RETURN-CODE
TO PRMLOG-IRIS-FLG
ELSE
MOVE SPACES        TO PRMLOG-IRIS-FLG
END-IF

MOVE EIBTRNID         TO HOLD-EIBTRNID.
MOVE 'FP'             TO EIBTRNID.
EXEC CICS LINK
PROGRAM  ('PRMRFLOG')
COMMAREA (PRM-LOG-RECORD)
LENGTH   (PRMLOG-LENGTH)
RESP     (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.



UEH-0400.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED AND
(CDN-MONEY-INVOICE-NO-FUEL-BILL) AND
(CDN-EXPRESS-CASH-YES)
MOVE PRMLOG-ACTUAL-RRN TO FMDL-PRMLOG-RRN
END-IF.

MOVE HOLD-EIBTRNID TO EIBTRNID.


LOG-THE-PRICE.

MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY, FF-LOG-SC-CODE.
PERFORM LOG-THE-PRICE-RTN.

IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SERVICE-CENTER-MASTER-RECORD TO SC-HOLD-AREA
MOVE SCM-MASTER-SVC-CTR-CODE      TO SCMSTR-KEY,
FF-LOG-SC-CODE
PERFORM LOG-THE-PRICE-RTN
MOVE SC-HOLD-AREA TO SERVICE-CENTER-MASTER-RECORD
MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY, FF-LOG-SC-CODE.

MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ.



LOG-THE-PRICE-RTN.

MOVE 'LOG-THE-PRICE-RTN'         TO CXUTS0ML-PARAGRAPH.

EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM 60200-CHECK-SCMSTR-NUMERICS
MOVE SCM-KEY                  TO SCMSTR-KEY.
MOVE WS-OPERID                TO FF-LOG-OP-ID.
MOVE '03'                     TO FF-LOG-RECD-ID.
MOVE EIBTRMID                 TO FF-LOG-TERM-ID.
MOVE WS-CURRENT-DATE-YYDDD    TO FF-LOG-DATE,
SCM-LAST-UPDATE-DATE,
COM-FP-PRICE-DATE.
MOVE EIBTIME                  TO FF-LOG-TIME,
COM-FP-PRICE-TIME
MOVE 'NW'                     TO FF-LOG-CHNG-TYPE.
MOVE COM-FP-PRICE-FLAG        TO FF-LOG-DATA-2-FLAG.
MOVE COM-FP-FUEL-PRICES       TO FF-LOG-DATA-2-NEW.
MOVE '*'                      TO COM-FP-PRICE-FLAG.
IF WS-TAX-PPG-HOLD = ZEROES
MOVE INP-PRICE-GALLON TO WS-TAX-PPG-HOLD.
IF COM-FUEL-PRICE-CREDIT
PERFORM LOG-THE-CREDIT-PRICE-RTN
ELSE
PERFORM LOG-THE-CASH-PRICE-RTN.

IF FPFSI = 'S'
IF (NOT COM-PNET-BULK-FUEL-YES)            AND
(NOT COM-PNET-NEGOTIATED-PRICING = 'Y')
MOVE WS-TAX-PPG-HOLD  TO  SCM-LAST-USE-PPG.
MOVE WS-CURRENT-DATE-YYDDD  TO  SCM-LAST-FP-DATE.

EXEC CICS REWRITE
DATASET ('SCMSTR')
FROM    (SERVICE-CENTER-MASTER-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
IF THIS-BE-A-TS-PRICE-CHANGE
PERFORM NEW-SERVICE-CENTER-PRICES
MOVE SPACES TO WS-FF-LOG-RECD
END-IF.


LOG-THE-CASH-PRICE-RTN.

MOVE SCM-CASH-FUEL-PRICE-FLAG TO FF-LOG-DATA-1-FLAG.
MOVE SCM-CASH-FUEL-PRICES     TO FF-LOG-DATA-1-OLD.

IF SCM-CASH-FUEL-PRICE-FLAG IS NOT EQUAL TO '*'
MOVE '*'              TO  SCM-CASH-FUEL-PRICE-FLAG
MOVE ZERO             TO  SCM-SELF-SERV-CASH-PRICE
SCM-FULL-SERV-CASH-PRICE
SCM-MINI-SERV-CASH-PRICE.
EVALUATE FPFSI
WHEN 'F'
MOVE WS-TAX-PPG-HOLD   TO  SCM-FULL-SERV-CASH-PRICE
COM-FP-FULL-PRICE
MOVE 'Y'               TO  SCM-FULL-SERV-CASH-FLAG
WHEN 'M'
MOVE WS-TAX-PPG-HOLD   TO  SCM-MINI-SERV-CASH-PRICE
COM-FP-MINI-PRICE
MOVE 'Y'               TO  SCM-MINI-SERV-CASH-FLAG
WHEN OTHER
IF WS-TAX-PPG-HOLD NOT = SCM-SELF-SERV-CASH-PRICE
MOVE 'P'            TO WS-TSN-PRICE-CHANGE
END-IF
MOVE WS-TAX-PPG-HOLD   TO  SCM-SELF-SERV-CASH-PRICE
COM-FP-SELF-PRICE
MOVE 'Y'               TO  SCM-SELF-SERV-CASH-FLAG
END-EVALUATE.


LOG-THE-CREDIT-PRICE-RTN.

MOVE SCM-CREDIT-FUEL-PRICE-FLAG TO FF-LOG-DATA-1-FLAG.
MOVE SCM-CREDIT-FUEL-PRICES     TO FF-LOG-DATA-1-OLD.

IF SCM-CREDIT-FUEL-PRICE-FLAG IS NOT EQUAL TO '*'
MOVE '*'              TO  SCM-CREDIT-FUEL-PRICE-FLAG
MOVE ZEROES           TO  SCM-FULL-SERV-CREDIT-PRICE
SCM-MINI-SERV-CREDIT-PRICE
SCM-SELF-SERV-CREDIT-PRICE.
EVALUATE FPFSI
WHEN 'F'
MOVE WS-TAX-PPG-HOLD   TO  SCM-FULL-SERV-CREDIT-PRICE
COM-FP-FULL-PRICE
MOVE 'Y'               TO  SCM-FULL-SERV-CREDIT-FLAG
WHEN 'M'
MOVE WS-TAX-PPG-HOLD   TO  SCM-MINI-SERV-CREDIT-PRICE
COM-FP-MINI-PRICE
MOVE 'Y'               TO  SCM-MINI-SERV-CREDIT-FLAG
WHEN OTHER
MOVE WS-TAX-PPG-HOLD   TO  SCM-SELF-SERV-CREDIT-PRICE
COM-FP-SELF-PRICE
MOVE 'Y'               TO  SCM-SELF-SERV-CREDIT-FLAG
END-EVALUATE.


NEW-SERVICE-CENTER-PRICES.

MOVE 'NEW-SERVICE-CENTER-PRICES' TO CXUTS0ML-PARAGRAPH.

MOVE SCMSTR-KEY TO SCFP-SERVICE-CENTER-CODE.
COMPUTE SCFP-YEAR-MONTH = (PD-YY * 100) + PD-MM.
MOVE FPFSI TO SCFP-FUEL-SERVICE.
MOVE SCFP-KEY TO SCFUELP-KEY.
MOVE 1 TO SCFUELP-STATUS-BYTE.
EXEC CICS READ
DATASET ('SCFUELP')
INTO    (SERVICE-CENTER-FUEL-PRICE-RECD)
RIDFLD  (SCFUELP-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE SCFUELP-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
MOVE 0 TO SCFUELP-STATUS-BYTE.

IF SCFUELP-NOT-FOUND
EXEC CICS UNLOCK
DATASET ('SCFUELP')
RESP    (EIBRESP)
END-EXEC
MOVE SPACES TO SERVICE-CENTER-FUEL-PRICE-RECD
MOVE SCFUELP-KEY TO SCFP-KEY
MOVE 0 TO SCFP-MTD-AVG-PPG (1),
SCFP-MTD-LOW-PPG (1),
SCFP-MTD-HIGH-PPG (1),
SCFP-LAST-CHANGE-DATE (1),
SCFP-NR-PRICE-CHANGES (1),
SCFP-MTD-AVG-PPG (2),
SCFP-MTD-LOW-PPG (2),
SCFP-MTD-HIGH-PPG (2),
SCFP-LAST-CHANGE-DATE (2),
SCFP-NR-PRICE-CHANGES (2),
SCFP-LAST-PPG.
EVALUATE TRUE
WHEN COM-FUEL-PRICE-CASH
IF INP-PRICE-GALLON > SCFP-MTD-HIGH-PPG (1)
MOVE INP-PRICE-GALLON TO SCFP-MTD-HIGH-PPG (1)
END-IF
IF SCFP-MTD-LOW-PPG (1) = ZEROES OR
INP-PRICE-GALLON < SCFP-MTD-LOW-PPG (1)
MOVE INP-PRICE-GALLON TO SCFP-MTD-LOW-PPG (1)
END-IF
COMPUTE SCFP-MTD-AVG-PPG (1) =
((SCFP-MTD-AVG-PPG (1) * SCFP-NR-PRICE-CHANGES (1)) +
INP-PRICE-GALLON) / (SCFP-NR-PRICE-CHANGES (1) + 1)
END-COMPUTE
ADD 1 TO SCFP-NR-PRICE-CHANGES (1)

MOVE INP-PRICE-GALLON TO SCFP-LAST-PPG
MOVE WS-CURRENT-DATE-YYDDD TO SCFP-LAST-CHANGE-DATE (1)
WHEN COM-FUEL-PRICE-CREDIT
IF INP-PRICE-GALLON > SCFP-MTD-HIGH-PPG (2)
MOVE INP-PRICE-GALLON TO SCFP-MTD-HIGH-PPG (2)
END-IF
IF SCFP-MTD-LOW-PPG (2) = ZEROES OR
INP-PRICE-GALLON < SCFP-MTD-LOW-PPG (2)
MOVE INP-PRICE-GALLON TO SCFP-MTD-LOW-PPG (2)
END-IF
COMPUTE SCFP-MTD-AVG-PPG (2) =
((SCFP-MTD-AVG-PPG (2) * SCFP-NR-PRICE-CHANGES (2)) +
INP-PRICE-GALLON) / (SCFP-NR-PRICE-CHANGES (2) + 1)
END-COMPUTE
ADD 1 TO SCFP-NR-PRICE-CHANGES (2)
MOVE WS-CURRENT-DATE-YYDDD TO SCFP-LAST-CHANGE-DATE (2)
END-EVALUATE.
IF SCFUELP-NOT-FOUND THEN
EXEC CICS WRITE
DATASET ('SCFUELP')
FROM    (SERVICE-CENTER-FUEL-PRICE-RECD)
RIDFLD  (SCFUELP-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCFUELP-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
EXEC CICS REWRITE
DATASET ('SCFUELP')
FROM    (SERVICE-CENTER-FUEL-PRICE-RECD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


HUBOMETER-EDIT.

MOVE ' ' TO ERROR-FLAG
PERFORM HUB-EDIT-VALIDATE-ENTRY

IF ERROR-FLAG = ' '
IF CSR-HUB-MINIMUM IS > ZEROES
IF WS-UIWA-HUB - UNITMST-LAST-HUB    < CSR-HUB-MINIMUM
MOVE 'THIS HUBOMETER READING LESS THAN MIN RANGE' TO
ERROR-TYPE
MOVE 'LESS THAN MIN RANGE' TO HUB-ERROR
MOVE 'Y'                   TO HUB-ERROR-IND
MOVE '*' TO ERROR-FLAG.

IF ERROR-FLAG = ' '
IF CSR-HUB-MAXIMUM IS > ZEROES
IF WS-UIWA-HUB - UNITMST-LAST-HUB    > CSR-HUB-MAXIMUM
MOVE 'THIS HUBOMETER READING EXCEEDS MAX RANGE' TO
ERROR-TYPE
MOVE 'EXCEEDS MAX RANGE' TO HUB-ERROR
MOVE 'Y'                 TO HUB-ERROR-IND
MOVE '*' TO ERROR-FLAG.

IF ERROR-FLAG = '*'
PERFORM HUB-EDIT-CHECK-OVERRIDE
END-IF
IF ERROR-FLAG = '*'
PERFORM HUB-EDIT-CHECK-OVERRIDE2
END-IF.


HUB-EDIT-CHECK-OVERRIDE.

IF CSR-HUB-OVERRIDE = 'Y' AND EIBAID = DFHPF4
MOVE ' ' TO ERROR-FLAG
MOVE 'H' TO COM-FP-STATUS-FLAG
ELSE
IF HUB-EDIT-OVERRODE
MOVE ' ' TO ERROR-FLAG
END-IF
END-IF.

HUB-EDIT-CHECK-OVERRIDE2.

IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF
MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
IF THIS-BE-AN-UNATTENDED-PRE-AUTH
PERFORM HUB-EDIT-CHK-PRE-AUTH
ELSE

IF EIBTRNID = 'FMMP'
MOVE 'X' TO WS-DSCARD-END
ELSE
PERFORM HUB-EDIT-CHK-POSTING
END-IF
END-IF
IF WS-DSCARD-END NOT = 'X'
COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
END-COMPUTE
COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
END-COMPUTE
IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
AND (WS-UIWA-HUB - UNITMST-LAST-HUB)
< XCP-FUEL-DEF-HUB-RANGE-MILES
MOVE SPACE TO ERROR-FLAG
END-IF
END-IF.

SETUP-XCPRODC-AND-DT-TM.

MOVE 'SETUP-XCPRODC-AND-DT-TM'   TO CXUTS0ML-PARAGRAPH.
INITIALIZE XC-FUEL-PRODUCT-CONTROL-RECORD
MOVE +998 TO XCP-FUEL-PRODUCT-NUMBER
MOVE ZERO TO XCP-FUEL-PRODUCT-COUNTER
XCP-FUEL-PRODUCT-SUB-COUNTER
EXEC CICS READ
DATASET ('XCPRODC')
RIDFLD  (XCP-FUEL-KEY)
INTO    (XC-FUEL-PRODUCT-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE XCP-FUEL-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE ZERO TO XCP-FUEL-DEF-TIME-LIMIT-MM
XCP-FUEL-DEF-HUB-RANGE-MILES
END-IF

INITIALIZE   CALENDAR-PARAMETERS
MOVE +124 TO CALENDAR-OPTIONS
MOVE -1   TO CALENDAR-DAYS
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED

MOVE EIBTIME TO WS-TIME-1
COMPUTE WS-CURR-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
END-COMPUTE
MOVE 'Y' TO WS-SETUP-XCPRODC-DONE.

HUB-EDIT-CHK-PRE-AUTH.


MOVE WS-UIWA-CARD-NR    TO CRD-NBR  OF DPRPPAUT
IF WS-UIWA-SC-CODE > SPACES
MOVE WS-UIWA-SC-CODE TO MRCH-NBR OF DPRPPAUT
ELSE
MOVE SCM-SERVICE-CENTER-CODE
TO MRCH-NBR OF DPRPPAUT
END-IF

MOVE '20'   TO PRE-AUTH-DT OF DPRPPAUT (1:2)
MOVE YMD-YY TO PRE-AUTH-DT OF DPRPPAUT (3:2)
MOVE YMD-MM TO PRE-AUTH-DT OF DPRPPAUT (6:2)
MOVE YMD-DD TO PRE-AUTH-DT OF DPRPPAUT (9:2)
MOVE '-'    TO PRE-AUTH-DT OF DPRPPAUT (5:1)
PRE-AUTH-DT OF DPRPPAUT (8:1)
MOVE 'HUB-EDIT-CHK-PRE-AUTH' TO CXUTS0ML-PARAGRAPH
MOVE 'OPEN CURSOR'           TO CXUTS0ML-COMMAND
EXEC SQL
OPEN CUR_PRE_AUTH
END-EXEC
PERFORM CHECK-NORMAL-SQL
MOVE 'FETCH CURSOR'          TO CXUTS0ML-COMMAND
EXEC SQL
FETCH CUR_PRE_AUTH
INTO  :DPRPPAUT.PRE-AUTH-TS
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = ZERO
IF WS-CURRENT-DATE-YYYYMMDD-DD NOT =
PRE-AUTH-TS OF DPRPPAUT (9:2)
ADD 1440 TO WS-CURR-MIN-WORK
END-IF
MOVE PRE-AUTH-TS OF DPRPPAUT (12:2) TO WS-HOURS-1
MOVE PRE-AUTH-TS OF DPRPPAUT (15:2) TO WS-MINUTES-1
ELSE
MOVE 'X' TO WS-DSCARD-END
END-IF
EXEC SQL
CLOSE CUR_PRE_AUTH
END-EXEC.

HUB-EDIT-CHK-POSTING.

MOVE 'HUB-EDIT-CHK-POSTING'      TO CXUTS0ML-PARAGRAPH.
IF WS-UIWA-SC-CODE NOT > SPACES
MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
END-IF

INITIALIZE                DS-CARD-RECORD
MOVE CDN-CUST-NUMBER   TO DSCR-CUSTOMER-ID
MOVE PRM-CARD-NUMB     TO DSCR-CARD-NBR
MOVE CALENDAR-DATE-NUM TO DSCR-TRANSACTION-DATE
MOVE 'N' TO WS-DSCARD-END
PERFORM
UNTIL WS-DSCARD-END NOT = 'N'
EXEC CICS READ
DATASET ('DSCARD')
INTO    (DS-CARD-RECORD)
RIDFLD  (DSCR-RECORD-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC
MOVE DSCR-RECORD-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF (EIBRESP NOT = DFHRESP(NORMAL))
OR (DSCR-CARD-NBR NOT = PRM-CARD-NUMB)
MOVE 'Y' TO WS-DSCARD-END
ELSE
PERFORM GET-DSMSTR
ADD +1 TO DSCR-CONTROL-NUMBER
END-IF
END-PERFORM
IF WS-DSCARD-DT = ZERO
MOVE 'X' TO WS-DSCARD-END
ELSE
IF WS-CURRENT-DATE-YYYYMMDD-DD NOT = WS-DSCARD-DT (6:2)
ADD 1440 TO WS-CURR-MIN-WORK
END-IF
MOVE WS-DSCARD-TM (2:2) TO WS-HOURS-1
MOVE WS-DSCARD-TM (4:2) TO WS-MINUTES-1
END-IF.

GET-DSMSTR.

MOVE 'GET-DSMSTR'                TO CXUTS0ML-PARAGRAPH.
MOVE DSCR-RRN TO WS-DSMSTR-RRN
EXEC CICS READ
DATASET ('DSMSTR')
INTO    (DS-MASTER-RECORD)
RIDFLD  (WS-DSMSTR-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE WS-DSMSTR-RRN     TO WS-NUM-9
MOVE WS-NUM-9          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP



IF WS-UIWA-SC-CODE = DS-MASTER-RECORD (72:10)
MOVE DS-MASTER-RECORD (1:4) TO WS-DSCARD-CMPR-X
IF WS-DSCARD-CMPR > WS-DSCARD-DT
MOVE WS-DSCARD-CMPR    TO WS-DSCARD-DT
MOVE DS-MASTER-RECORD (238:4) TO WS-DSCARD-CMPR-X
MOVE WS-DSCARD-CMPR    TO WS-DSCARD-TM
ELSE
MOVE DS-MASTER-RECORD (238:4) TO WS-DSCARD-CMPR-X
IF WS-DSCARD-CMPR > WS-DSCARD-TM
MOVE WS-DSCARD-CMPR TO WS-DSCARD-TM
END-IF
END-IF
END-IF.

HUB-EDIT-VALIDATE-ENTRY.

IF WS-UIWA-HUB = ZEROES
MOVE 'NO HUBOMETER READING ENTERED' TO ERROR-TYPE
MOVE 'NO HUBOMETER READING ENTERED' TO HUB-MESSAGE
MOVE '*'                            TO ERROR-FLAG
END-IF.


TRAILER-HUB-EDIT.

MOVE ' ' TO ERROR-FLAG.
IF WS-UIWA-TRAILER-HUB = ZEROS
MOVE '*' TO ERROR-FLAG
END-IF.


TRIP-NR-EDIT.

MOVE ' ' TO ERROR-FLAG.
IF CSR-TRIP-NR-LENGTH = ZEROES
MOVE 10 TO CSR-TRIP-NR-LENGTH
END-IF.
IF CSR-TRIP-NR-EDIT < SPACES
MOVE SPACES TO CSR-TRIP-NR-EDIT
END-IF.

IF CSR-TRIP-NR-EDIT = SPACES AND
CSR-TRIP-NR-LENGTH = 10
NEXT SENTENCE
ELSE
MOVE WS-UIWA-TRIP-NR TO DCOMP-TRIP-NR
MOVE CSR-TRIP-NR-EDIT TO WORK-TRIP-EDIT
PERFORM TNE-0100
VARYING DTC-INDEX FROM 1 BY 1
UNTIL   DTC-INDEX > 10 OR ERROR-FLAG = '*'
PERFORM TNE-0110
VARYING DTC-INDEX FROM 1 BY 1
UNTIL   DTC-INDEX > 10 OR ERROR-FLAG = '*'
END-IF.


TNE-0100.

IF TRIP-EDIT-CHAR (DTC-INDEX) IS NUMERIC    OR
TRIP-EDIT-CHAR (DTC-INDEX) IS ALPHABETIC-UPPER OR
TRIP-EDIT-CHAR (DTC-INDEX) = '*'         OR
TRIP-EDIT-CHAR (DTC-INDEX) = '#'         OR
TRIP-EDIT-CHAR (DTC-INDEX) = '@'
NEXT SENTENCE
ELSE
MOVE ' ' TO TRIP-EDIT-CHAR (DTC-INDEX)
END-IF.

IF DCOMP-TRIP-CHAR (DTC-INDEX) > ' ' AND
DTC-INDEX                   > CSR-TRIP-NR-LENGTH
MOVE '*' TO ERROR-FLAG
END-IF.


TNE-0110.

EVALUATE TRIP-EDIT-CHAR (DTC-INDEX)
WHEN ' '
CONTINUE
WHEN '*'
IF DCOMP-TRIP-CHAR (DTC-INDEX) NOT > ' '
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '#'
IF DCOMP-TRIP-CHAR (DTC-INDEX) NOT NUMERIC
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '@'
IF DCOMP-TRIP-CHAR (DTC-INDEX) NOT ALPHABETIC-UPPER
MOVE '*' TO ERROR-FLAG
END-IF
IF DCOMP-TRIP-CHAR (DTC-INDEX) = SPACE
MOVE '*' TO ERROR-FLAG
END-IF
WHEN OTHER
IF TRIP-EDIT-CHAR (DTC-INDEX) NOT =
DCOMP-TRIP-CHAR (DTC-INDEX)
MOVE '*' TO ERROR-FLAG
END-IF
END-EVALUATE.


TRAILER-NR-EDIT.

MOVE ' ' TO ERROR-FLAG.
IF CDN-TRAILER-EDIT < SPACES
MOVE SPACES TO CDN-TRAILER-EDIT
END-IF.

EVALUATE TRUE
WHEN CDN-TRAILER-NR-FLAG = 'P'
PERFORM TRNE-1000
WHEN CDN-TRAILER-NR-FLAG = 'V'
PERFORM TRNE-2000
WHEN CDN-TRAILER-EDIT = SPACES
CONTINUE
WHEN OTHER
MOVE WS-UIWA-TRAILER-NR TO DCOMP-EDIT-NR
MOVE CDN-TRAILER-EDIT TO WORK-EDIT-EDIT
PERFORM TRNE-0100
VARYING DEC-INDEX FROM 1 BY 1
UNTIL   DEC-INDEX > 10
PERFORM TRNE-0110
VARYING DEC-INDEX FROM 1 BY 1
UNTIL   DEC-INDEX > 10 OR ERROR-FLAG = '*'
END-EVALUATE.


TRNE-0100.

IF EDIT-EDIT-CHAR (DEC-INDEX) IS NUMERIC    OR
EDIT-EDIT-CHAR (DEC-INDEX) IS ALPHABETIC-UPPER OR
EDIT-EDIT-CHAR (DEC-INDEX) = '*'         OR
EDIT-EDIT-CHAR (DEC-INDEX) = '#'         OR
EDIT-EDIT-CHAR (DEC-INDEX) = '@'
NEXT SENTENCE
ELSE
MOVE ' ' TO EDIT-EDIT-CHAR (DEC-INDEX).


TRNE-0110.

EVALUATE EDIT-EDIT-CHAR (DEC-INDEX)
WHEN '*'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT > ' '
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '#'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT NUMERIC
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '@'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT ALPHABETIC-UPPER
MOVE '*' TO ERROR-FLAG
END-IF
IF DCOMP-EDIT-CHAR (DEC-INDEX) = SPACE
MOVE '*' TO ERROR-FLAG
END-IF
WHEN OTHER
IF EDIT-EDIT-CHAR  (DEC-INDEX) NOT =
DCOMP-EDIT-CHAR (DEC-INDEX)
MOVE '*' TO ERROR-FLAG
END-IF
END-EVALUATE.


TRNE-1000.

PERFORM READ-FMPOOL.
EVALUATE TRUE
WHEN EIBRESP = DFHRESP(NOTFND)
MOVE '*' TO ERROR-FLAG
WHEN FMP-POOL-DATA NOT = WS-UIWA-TRAILER-NR
MOVE '*' TO ERROR-FLAG
END-EVALUATE.


TRNE-2000.

IF WS-UIWA-TRAILER-NR NOT = PRM-TRAILER-NR
MOVE '*' TO ERROR-FLAG
END-IF.


TRAILER-HR-EDIT.

MOVE ' ' TO ERROR-FLAG.
EVALUATE CDN-VERIFY-TRAILER-HOURS
WHEN 'V'
PERFORM TRHE-1000
WHEN 'C'
PERFORM TRHE-2000
END-EVALUATE.


TRHE-1000.

IF CDN-TRAILER-NR-FLAG NOT = 'P'
PERFORM READ-FMPOOL
PERFORM TRHE-NUM-CHECK.
EVALUATE TRUE
WHEN EIBRESP = DFHRESP(NOTFND)
MOVE '*' TO ERROR-FLAG
WHEN FMP-POOL-DATA NOT = WS-UIWA-TRAILER-NR
MOVE '*' TO ERROR-FLAG
WHEN FMP-TRAILER-STATUS NOT = 'A'
MOVE '*' TO ERROR-FLAG
WHEN FMP-HOUR-METER-WINDOW NOT = 999
IF WS-UIWA-TRAILER-HRS < FMP-HOUR-METER-READING
MOVE '*' TO ERROR-FLAG
END-IF
IF WS-UIWA-TRAILER-HRS > FMP-HOUR-METER-READING +
FMP-HOUR-METER-WINDOW
IF FMP-HOUR-METER-READING NOT = ZEROS
MOVE '*' TO ERROR-FLAG
END-IF
END-IF
END-EVALUATE.
IF ERROR-FLAG NOT = '*'
PERFORM TRHE-CALC-HPG.


TRHE-CALC-HPG.

MOVE FMP-HOUR-METER-READING TO WS-PREV-HOURS.
COMPUTE WS-CURRENT-HOURS = WS-UIWA-TRAILER-HRS -
WS-PREV-HOURS.
MOVE ZEROS TO WS-REEFER-HPG.
IF WS-UIWA-REF-QTY > ZEROS AND
WS-CURRENT-HOURS > ZEROS
COMPUTE WS-REEFER-HPG =
WS-CURRENT-HOURS / WS-UIWA-REF-QTY.


TRHE-2000.

IF WS-UIWA-TRAILER-HRS NOT > ZEROS
MOVE '*' TO ERROR-FLAG
END-IF.


READ-FMPOOL.

MOVE 'READ-FMPOOL'               TO CXUTS0ML-PARAGRAPH.
IF CDN-TRAILER-POOL-MSTR > SPACES

MOVE CDN-TRAILER-POOL-MSTR TO FMP-CUSTOMER-ID
ELSE

MOVE PRM-SUB-ACCT-NUMB     TO FMP-CUSTOMER-ID
END-IF.
MOVE '01'              TO FMP-RECORD-ID.
MOVE WS-UIWA-TRAILER-NR TO FMP-POOL-DATA.
EXEC CICS READ
DATASET ('FMPOOL')
RIDFLD  (FMP-KEY)
INTO    (FMPOOL-RECORD)
RESP    (EIBRESP)
END-EXEC.
MOVE FMP-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


TRHE-NUM-CHECK.

IF FMP-HOUR-METER-READING NOT NUMERIC
MOVE ZEROS             TO FMP-HOUR-METER-READING.
IF FMP-HOUR-METER-WINDOW  NOT NUMERIC
MOVE 999               TO FMP-HOUR-METER-WINDOW.


PURCHASE-ORDER-EDIT.

MOVE ' ' TO ERROR-FLAG.
IF (WS-UIWA-PO-NR = '$TERM$' AND THIS-IS-A-POS-TRANS)
NEXT SENTENCE
ELSE
PERFORM POE-0010
END-IF.


POE-0010.

IF CDN-PURCHASE-ORDER-POOL
PERFORM POE-1000
ELSE
IF CDN-PURCHASE-ORDER-EDIT > SPACES
MOVE WS-UIWA-PO-NR TO DCOMP-EDIT-NR
MOVE CDN-PURCHASE-ORDER-EDIT TO WORK-EDIT-EDIT
PERFORM POE-0100
VARYING DEC-INDEX FROM 1 BY 1
UNTIL   DEC-INDEX > 10 OR ERROR-FLAG = '*'
END-IF
END-IF.


POE-0100.

PERFORM POE-0100-CHECK-EDIT-CHAR.
EVALUATE EDIT-EDIT-CHAR (DEC-INDEX)
WHEN '*'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT > ' '
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '#'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT NUMERIC
MOVE '*' TO ERROR-FLAG
END-IF
WHEN '@'
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT ALPHABETIC-UPPER
MOVE '*' TO ERROR-FLAG
END-IF
IF DCOMP-EDIT-CHAR (DEC-INDEX) NOT > SPACE
MOVE '*' TO ERROR-FLAG
END-IF
WHEN OTHER
IF EDIT-EDIT-CHAR  (DEC-INDEX) NOT =
DCOMP-EDIT-CHAR (DEC-INDEX)
MOVE '*' TO ERROR-FLAG
END-IF
END-EVALUATE.


POE-0100-CHECK-EDIT-CHAR.

IF EDIT-EDIT-CHAR (DEC-INDEX) IS NUMERIC    OR
EDIT-EDIT-CHAR (DEC-INDEX) IS ALPHABETIC-UPPER OR
EDIT-EDIT-CHAR (DEC-INDEX) = '*'         OR
EDIT-EDIT-CHAR (DEC-INDEX) = '#'         OR
EDIT-EDIT-CHAR (DEC-INDEX) = '@'
NEXT SENTENCE
ELSE
MOVE ' ' TO EDIT-EDIT-CHAR (DEC-INDEX).


POE-1000.

IF COM-PREVIOUS-CARD = SPACES
MOVE WS-UIWA-CARD-NR-10 TO COM-PREVIOUS-CARD
END-IF.
IF FMPO-PO-NUMBER NOT = WS-UIWA-PO-NR OR
FMPO-PO-STATUS NOT = 'A'
MOVE '*' TO ERROR-FLAG.
IF ERROR-FLAG NOT = '*'
IF FMPO-TARGET-SVC-CTR > SPACES AND
FMPO-TARGET-SVC-CTR NOT = COM-FP-SC-CODE
MOVE '*' TO ERROR-FLAG
MOVE PO-NOT-VALID-HERE TO OUT-COMENT
MOVE PO-NOT-VALID-HERE-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
IF FMPO-EMP-CARD-NUMBER > SPACES AND
FMPO-EMP-CARD-NUMBER NOT = COM-PREVIOUS-CARD
MOVE '*' TO ERROR-FLAG
MOVE PO-NOT-VALID-FOR-CARD TO OUT-COMENT
MOVE PO-NOT-VALID-FOR-CARD-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF.


CAN-DOLLARS-TO-US.
MULTIPLY WS-CANADIAN-DOLLARS BY CAN-TO-US-RATE
GIVING WS-US-DOLLARS ROUNDED.

US-DOLLARS-TO-CAN.
MULTIPLY WS-US-DOLLARS BY US-TO-CAN-RATE
GIVING WS-CANADIAN-DOLLARS ROUNDED.

LITERS-TO-GALLONS.
COMPUTE WS-GALLONS ROUNDED = WS-LITERS *
LITER-TO-GALLON-RATE.
LITERS-TO-QTS.
COMPUTE WS-QTS ROUNDED = WS-LITERS * LITER-TO-QUART-RATE.

PPL-TO-PPG.
COMPUTE WS-PPG ROUNDED = (WS-PPL * CAN-TO-US-RATE) *
GALLON-TO-LITER-RATE.

GALLONS-TO-LITERS.
COMPUTE WS-LITERS ROUNDED = WS-GALLONS *
GALLON-TO-LITER-RATE.

QTS-TO-LITERS.
COMPUTE WS-LITERS ROUNDED = WS-QTS * QUART-TO-LITER-RATE.

PPG-TO-PPL.
COMPUTE WS-PPL ROUNDED = (WS-PPG * US-TO-CAN-RATE) *
LITER-TO-GALLON-RATE.


CONVERT-AMOUNT.







EVALUATE TRUE
WHEN WS-CONVERT-AMOUNT = ZERO
MOVE ZERO TO WS-CONVERT-AMOUNT1
WS-CONVERT-AMOUNT2
WS-CONVERT-AMOUNT3
WHEN WS-CONVERT-CURR-TYPE = 'B'
PERFORM CONVERT-BASE-AMOUNT
WHEN OTHER
PERFORM CONVERT-MIXED-AMOUNT
END-EVALUATE.


CONVERT-BASE-AMOUNT.

MOVE WS-CONVERT-AMOUNT          TO WS-CONVERT-AMOUNT1
EVALUATE TRUE
WHEN COM-COMP-SC-CURR-SAME
MOVE WS-CONVERT-AMOUNT    TO WS-CONVERT-AMOUNT2
WHEN COM-US-COMP-CN-SC
MOVE WS-CONVERT-AMOUNT    TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS  TO WS-CONVERT-AMOUNT2
WHEN COM-CN-COMP-US-SC
MOVE WS-CONVERT-AMOUNT    TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS-CONVERT-AMOUNT2
END-EVALUATE.
EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE WS-CONVERT-AMOUNT1   TO WS-CONVERT-AMOUNT3
WHEN COM-CO-IS-CANADIAN
MOVE WS-CONVERT-AMOUNT1   TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS-CONVERT-AMOUNT3
END-EVALUATE.


CONVERT-MIXED-AMOUNT.

MOVE WS-CONVERT-AMOUNT     TO WS-CONVERT-AMOUNT2

EVALUATE TRUE
WHEN COM-COMP-SC-CURR-SAME
MOVE WS-CONVERT-AMOUNT     TO WS-CONVERT-AMOUNT1
WHEN COM-US-COMP-CN-SC
MOVE WS-CONVERT-AMOUNT     TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS         TO WS-CONVERT-AMOUNT1
WHEN COM-CN-COMP-US-SC
MOVE WS-CONVERT-AMOUNT     TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS   TO WS-CONVERT-AMOUNT1
END-EVALUATE.
EVALUATE TRUE
WHEN COM-SC-IS-US
MOVE WS-CONVERT-AMOUNT2    TO WS-CONVERT-AMOUNT3
WHEN COM-SC-IS-CANADIAN
MOVE WS-CONVERT-AMOUNT2    TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS         TO WS-CONVERT-AMOUNT3
END-EVALUATE.


COMPUTE-XCS-ADV-REQ-AMT.

IF COM-US-COMP-US-SC
MOVE WS-US-DOLLARS       TO XCS-ADV-REQ-AMT
ELSE
IF COM-CN-COMP-CN-SC
MOVE WS-CANADIAN-DOLLARS TO XCS-ADV-REQ-AMT
ELSE
IF COM-US-COMP-CN-SC
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO XCS-ADV-REQ-AMT
ELSE
IF COM-CN-COMP-US-SC
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO XCS-ADV-REQ-AMT
ELSE
MOVE WS-US-DOLLARS       TO XCS-ADV-REQ-AMT.


AUTHORIZE-ADVANCE.

MOVE SPACES TO ERROR-FLAG.
IF CDN-MINIMUM-GALLONS-CASH > ZEROES                AND
CDN-MINIMUM-GALLONS-CASH > WS-UIWA-NR2-QTY +
WS-UIWA-OTH-QTY +
WS-UIWA-REF-QTY +
WS-UIWA-NR1-QTY
MOVE '*' TO ERROR-FLAG
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS'               TO MINIMUM-GALLON-MSG
MOVE CDN-MINIMUM-GALLONS-CASH TO MINIMUM-GALLON-NR
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS'               TO MINIMUM-GALLON-MSG
MOVE CDN-MINIMUM-GALLONS-CASH TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS               TO MINIMUM-GALLON-NR
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS '               TO MINIMUM-GALLON-MSG
MOVE CDN-MINIMUM-GALLONS-CASH TO MINIMUM-GALLON-NR
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS '               TO MINIMUM-GALLON-MSG
MOVE CDN-MINIMUM-GALLONS-CASH TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS                TO MINIMUM-GALLON-NR
END-EVALUATE.


60000-CHECK-PRMCARD.

PERFORM 60010-CHECK-PRMCARD-NUMERICS.
PERFORM 60020-CHECK-PRMCARD-NUMERICS.
PERFORM 60030-CHECK-PRMCARD-NUMERICS.
PERFORM 60040-CHECK-PRMCARD-NUMERICS.
PERFORM 60050-CHECK-PRMCARD-OTHER.


60010-CHECK-PRMCARD-NUMERICS.

IF PRM-LAST-PURCHASE-DATE NOT NUMERIC
MOVE ZEROES TO PRM-LAST-PURCHASE-DATE
END-IF
IF PRM-LAST-PURCHASE-TIME NOT NUMERIC
MOVE ZEROES TO PRM-LAST-PURCHASE-TIME
END-IF
IF PRM-PURC-ONE-TIME NOT NUMERIC
MOVE ZEROES TO PRM-PURC-ONE-TIME
END-IF
IF PRM-FP-CARD-NO NOT NUMERIC
MOVE ZEROES TO PRM-FP-CARD-NO
END-IF
IF PRM-CASH-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRM-CASH-LAST-DATE-USED
END-IF
IF PRM-PURC-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRM-PURC-LAST-DATE-USED
END-IF
IF PRM-EXPENSE-BALANCE NOT NUMERIC
MOVE ZEROES TO PRM-EXPENSE-BALANCE
END-IF
IF PRM-CASH-ONE-TIME NOT NUMERIC
MOVE ZEROES TO PRM-CASH-ONE-TIME
END-IF
IF PRM-FREE-XTN-COUNT IS NOT NUMERIC
MOVE ZEROS TO PRM-FREE-XTN-COUNT
END-IF.


60020-CHECK-PRMCARD-NUMERICS.

IF PRM-CASH-INITIAL NOT NUMERIC
MOVE ZEROES TO PRM-CASH-INITIAL
END-IF
IF PRM-CASH-USED NOT NUMERIC
MOVE ZEROES TO PRM-CASH-USED
END-IF
IF PRM-CASH-RESET NOT NUMERIC
MOVE ZEROES TO PRM-CASH-RESET
END-IF
IF PRM-PURC-INITIAL NOT NUMERIC
MOVE ZEROES TO PRM-PURC-INITIAL
END-IF
IF PRM-PURC-USED NOT NUMERIC
MOVE ZEROES TO PRM-PURC-USED
END-IF
IF PRM-PURC-RESET NOT NUMERIC
MOVE ZEROES TO PRM-PURC-RESET
END-IF
IF PRM-LAST-TRANS-NR NOT NUMERIC
MOVE ZEROES TO PRM-LAST-TRANS-NR
END-IF
IF PRM-LAST-FP-AMOUNT NOT NUMERIC
MOVE ZEROES TO PRM-LAST-FP-AMOUNT
END-IF
IF PRM-LAST-FP-GALLONS NOT NUMERIC
MOVE ZEROES TO PRM-LAST-FP-GALLONS
END-IF.


60030-CHECK-PRMCARD-NUMERICS.

IF PRM-DIESEL-LIMIT NOT NUMERIC
MOVE ZEROES TO PRM-DIESEL-LIMIT
END-IF
IF PRM-DIESEL-USED  NOT NUMERIC
MOVE ZEROES TO PRM-DIESEL-USED
END-IF
IF PRM-DIESEL-LAST-DATE  NOT NUMERIC
MOVE ZEROES TO PRM-DIESEL-LAST-DATE
END-IF
IF PRM-REEFER-LIMIT NOT NUMERIC
MOVE ZEROES TO PRM-REEFER-LIMIT
END-IF
IF PRM-REEFER-USED  NOT NUMERIC
MOVE ZEROES TO PRM-REEFER-USED
END-IF
IF PRM-REEFER-LAST-DATE  NOT NUMERIC
MOVE ZEROES TO PRM-REEFER-LAST-DATE
END-IF
IF PRM-CASH-PER-GALLON-LIMIT NOT NUMERIC
MOVE ZEROES TO PRM-CASH-PER-GALLON-LIMIT
END-IF
IF PRM-PRIMARY-CARD-NR NOT NUMERIC
MOVE ZEROES TO PRM-PRIMARY-CARD-NR
END-IF.
IF PRM-VRU-PIN-ATTEMPTS NOT NUMERIC
MOVE ZEROES TO PRM-VRU-PIN-ATTEMPTS
END-IF.


60040-CHECK-PRMCARD-NUMERICS.

IF PRM-OIL-INITIAL-DOLLARS NOT NUMERIC
MOVE ZEROES TO PRM-OIL-INITIAL-DOLLARS.
IF PRM-OIL-INITIAL-QUARTS  NOT NUMERIC
MOVE ZEROES TO PRM-OIL-INITIAL-QUARTS.
IF PRM-OIL-USED-DOLLARS NOT NUMERIC
MOVE ZEROES TO PRM-OIL-USED-DOLLARS.
IF PRM-OIL-USED-QUARTS  NOT NUMERIC
MOVE ZEROES TO PRM-OIL-USED-QUARTS.
IF PRM-OIL-RESET NOT NUMERIC
MOVE ZEROES TO PRM-OIL-RESET.
IF PRM-OIL-LAST-DATE-USED NOT NUMERIC
MOVE ZEROES TO PRM-OIL-LAST-DATE-USED.
IF PRM-LAST-EXP-DATE NOT NUMERIC
MOVE ZEROES TO PRM-LAST-EXP-DATE
END-IF.
IF PRM-LAST-PURC-DATE-FUEL NOT NUMERIC
MOVE ZEROES TO PRM-LAST-PURC-DATE-FUEL
END-IF.
IF PRM-LAST-PURC-TIME-FUEL NOT NUMERIC
MOVE ZEROES TO PRM-LAST-PURC-TIME-FUEL
END-IF.

IF PRM-CARD-PRIOR-PRINT-DATE NOT NUMERIC
MOVE ZEROES TO PRM-CARD-PRIOR-PRINT-DATE
END-IF.


60050-CHECK-PRMCARD-OTHER.


IF PRM-CARD-STATUS = 'B'
EXEC CICS LINK
PROGRAM  ('CXXCO0CC')
COMMAREA (PRM-CARD-RECORD)
LENGTH   (LENGTH OF PRM-CARD-RECORD)
RESP     (EIBRESP2)
END-EXEC.


60100-CHECK-CDNCUST-DATA.

PERFORM 60110-CHECK-CDNCUST-NUMERICS.
PERFORM 60120-CHECK-CDNCUST-NUMERICS.
PERFORM 60130-CHECK-CDNCUST-NUMERICS.
PERFORM 60140-CHECK-CDNCUST-NUMERICS.
PERFORM 60150-CHECK-CDNCUST-NUMERICS.
PERFORM 60160-CHECK-CDNCUST-NUMERICS.
PERFORM 60170-CHECK-CDNCUST-NUMERICS.
PERFORM 60180-CHECK-CDNCUST-NUMERICS.
PERFORM 60190-CHECK-CDNCUST-OTHER.
PERFORM 60195-CHECK-CDNCUST-ATM.
PERFORM 60196-CHECK-RMF-NUMERIC.
PERFORM 60196-CHECK-RMF-PENDING.
PERFORM 60196-CHECK-RMF-VOLUME.
PERFORM 60500-CHECK-UNITMST-NUMERICS.



60110-CHECK-CDNCUST-NUMERICS.

IF CDN-DIRECT-BILL-RATE NOT NUMERIC
MOVE ZEROES TO CDN-DIRECT-BILL-RATE
END-IF
IF CDN-LOAD-RATE NOT NUMERIC
MOVE ZEROES TO CDN-LOAD-RATE
END-IF
IF CDN-PICKUP-RATE NOT NUMERIC
MOVE ZEROES TO CDN-PICKUP-RATE
END-IF
IF FMPO-MAX-AMOUNT NOT NUMERIC
MOVE ZEROES TO FMPO-MAX-AMOUNT
END-IF.
IF CDN-CARD-EXPIRATION-DATE        NOT NUMERIC
MOVE ZEROES TO CDN-CARD-EXPIRATION-DATE
END-IF.
IF CDN-CARD-EXPIRATION-DATE-PRE    NOT NUMERIC
MOVE ZEROES TO CDN-CARD-EXPIRATION-DATE-PRE
END-IF.
IF CDN-CARD-EXPIRATION-DATE-B4PRE  NOT NUMERIC
MOVE ZEROES TO CDN-CARD-EXPIRATION-DATE-B4PRE
END-IF.


60120-CHECK-CDNCUST-NUMERICS.

IF CDN-CASH-ADV-RATE NOT NUMERIC
MOVE 3.00   TO CDN-CASH-ADV-RATE
END-IF
IF CDN-MAX-DAILY-PURCHASE NOT NUMERIC
MOVE ZEROES TO CDN-MAX-DAILY-PURCHASE
END-IF
IF CDN-VARIANCE NOT NUMERIC
MOVE ZEROES TO CDN-VARIANCE
END-IF
IF CDN-MINIMUM-GALLONS-CASH NOT NUMERIC
MOVE ZEROES TO CDN-MINIMUM-GALLONS-CASH
END-IF
IF CDN-ALL-STANDARD-FEE NOT NUMERIC
MOVE ZEROES TO CDN-ALL-STANDARD-FEE
END-IF
IF CDN-ALL-CASH-ADD-ON NOT NUMERIC
MOVE ZEROES TO CDN-ALL-CASH-ADD-ON
END-IF
IF CDN-MIN-GAS-FOR-OIL NOT NUMERIC
MOVE ZEROES TO CDN-MIN-GAS-FOR-OIL
END-IF.


60130-CHECK-CDNCUST-NUMERICS.

IF CDN-ALL-HANDLING-ADD-ON NOT NUMERIC
MOVE ZEROES TO CDN-ALL-HANDLING-ADD-ON
END-IF
IF CDN-ALL-HANDLING-ADD-ON-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-HANDLING-ADD-ON-ALTCUR
END-IF
IF CDN-ALL-TERMINAL-FUEL NOT NUMERIC
MOVE ZEROES TO CDN-ALL-TERMINAL-FUEL
END-IF
IF CDN-ALL-DIRECT-BILL NOT NUMERIC
MOVE ZEROES TO CDN-ALL-DIRECT-BILL
END-IF
IF CDN-ALL-EXP-CASH-PICKUP-RATE NOT NUMERIC
MOVE ZEROES TO CDN-ALL-EXP-CASH-PICKUP-RATE
END-IF
IF CDN-ALL-CASH-ONLY-RATE NOT NUMERIC
MOVE ZEROES TO CDN-ALL-CASH-ONLY-RATE
END-IF
IF CDN-MANUAL-ADD-ON NOT NUMERIC
MOVE ZEROES TO CDN-MANUAL-ADD-ON
END-IF
IF CDN-MAX-OIL-PURC NOT NUMERIC
MOVE +16    TO CDN-MAX-OIL-PURC
END-IF
IF CDN-OIL-INITIAL-DOLLARS NOT NUMERIC
MOVE ZERO   TO CDN-OIL-INITIAL-DOLLARS
END-IF.


60140-CHECK-CDNCUST-NUMERICS.

IF CDN-GUAR-DISC NOT NUMERIC
MOVE ZEROES TO CDN-GUAR-DISC
END-IF
IF CDN-GUAR-START-DATE NOT NUMERIC
MOVE ZEROES TO CDN-GUAR-START-DATE
END-IF
IF CDN-COST-PLUS-ADD-ON NOT NUMERIC
MOVE ZEROES TO CDN-COST-PLUS-ADD-ON
END-IF
IF CDN-PURCHASE-ORDER-EDIT < SPACES
MOVE SPACES TO CDN-PURCHASE-ORDER-EDIT
END-IF
IF CDN-COST-PLUS-CPG NOT NUMERIC
MOVE ZEROES TO CDN-COST-PLUS-CPG
END-IF.


60150-CHECK-CDNCUST-NUMERICS.

IF CDN-PT-CENT-PER-GALLON NOT NUMERIC
MOVE 9.99   TO CDN-PT-CENT-PER-GALLON
END-IF
IF CDN-PT-PERCENT-OF-FACE NOT NUMERIC
MOVE 9.99   TO CDN-PT-PERCENT-OF-FACE
END-IF
IF CDN-PT-FLAT-AMOUNT NOT NUMERIC
MOVE 9.99   TO CDN-PT-FLAT-AMOUNT
END-IF
IF CDN-FREE-XTN-COUNT IS NOT NUMERIC
MOVE ZEROES TO CDN-FREE-XTN-COUNT
END-IF
IF CSR-TRIP-NR-LENGTH NOT NUMERIC
MOVE 9 TO CSR-TRIP-NR-LENGTH
END-IF
IF CDN-BULK-FUEL-RATE NOT NUMERIC
MOVE ZEROES TO CDN-BULK-FUEL-RATE
IF COM-PNET-BULK-FUEL-YES
MOVE +10.00 TO CDN-BULK-FUEL-RATE.


60160-CHECK-CDNCUST-NUMERICS.

PERFORM
VARYING WS-INDEX FROM 1 BY 1
UNTIL WS-INDEX = 17
IF CSR-PROD-DAILY-MAX (WS-INDEX) NOT NUMERIC
MOVE -1     TO CSR-PROD-DAILY-MAX (WS-INDEX)
END-IF
IF CSR-PROD-ALLOWANCE (WS-INDEX) NOT NUMERIC
MOVE -1     TO CSR-PROD-ALLOWANCE (WS-INDEX)
END-IF
END-PERFORM
PERFORM
VARYING WS-INDEX FROM 1 BY 1
UNTIL   WS-INDEX = 7
IF CDN-FUEL-RATE (WS-INDEX) NOT NUMERIC
MOVE ZEROES TO CDN-FUEL-RATE (WS-INDEX)
END-IF
END-PERFORM.
PERFORM
VARYING WS-INDEX FROM 1 BY 1
UNTIL   WS-INDEX = 7
IF CDN-PREFERRED-RATE (WS-INDEX) NOT NUMERIC
MOVE ZEROES TO CDN-PREFERRED-RATE (WS-INDEX)
END-IF
END-PERFORM.


60170-CHECK-CDNCUST-NUMERICS.

IF CDN-ALL-STANDARD-FEE-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-STANDARD-FEE-ALTCUR.
IF CDN-ALL-CASH-ADD-ON-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-CASH-ADD-ON-ALTCUR.
IF CDN-ALL-CASH-ONLY-RATE-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-CASH-ONLY-RATE-ALTCUR.
IF CDN-ALL-TERMINAL-FUEL-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-TERMINAL-FUEL-ALTCUR.
IF CDN-ALL-DIRECT-BILL-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-ALL-DIRECT-BILL-ALTCUR.
IF CDN-BULK-FUEL-RATE-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-BULK-FUEL-RATE-ALTCUR.
IF CDN-COST-PLUS-ADD-ON-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-COST-PLUS-ADD-ON-ALTCUR.
IF CDN-COST-PLUS-CPG-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-COST-PLUS-CPG-ALTCUR.


60180-CHECK-CDNCUST-NUMERICS.

IF CDN-NATS-ADD-ON-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-NATS-ADD-ON-ALTCUR.
IF CDN-ALL-HANDLING-ADD-ON NOT NUMERIC
MOVE ZEROES TO CDN-ALL-HANDLING-ADD-ON.
IF CDN-RMF-XTN-FEE NOT NUMERIC
MOVE ZEROES TO CDN-RMF-XTN-FEE.
IF CDN-RMF-XTN-FEE-ALTCUR NOT NUMERIC
MOVE ZEROES TO CDN-RMF-XTN-FEE-ALTCUR.
IF CDN-PPRIDE-ORIDE-MARKUP NOT NUMERIC
MOVE ZEROES TO CDN-PPRIDE-ORIDE-MARKUP.


60190-CHECK-CDNCUST-OTHER.

IF CDN-ACCOUNT-CURR-TYPE NOT = 'M'
MOVE 'B' TO CDN-ACCOUNT-CURR-TYPE.
IF CDN-COUNTRY-CODE = 'C '
MOVE 'CD' TO CDN-COUNTRY-CODE.
IF CDN-COUNTRY-CODE NOT = 'CD'
MOVE 'US' TO CDN-COUNTRY-CODE.
IF CDN-RESTRICT-CASH-LOCATIONS NOT = 'N'
MOVE 'Y'  TO CDN-RESTRICT-CASH-LOCATIONS.


60195-CHECK-CDNCUST-ATM.

IF CDN-ATM-FEE-US NOT NUMERIC
MOVE ZEROES TO CDN-ATM-FEE-US.
IF CDN-ATM-FEE-CN NOT NUMERIC
MOVE ZEROES TO CDN-ATM-FEE-CN.
IF CDN-ATM-INQUIRY-FEE NOT NUMERIC
MOVE ZEROES TO CDN-ATM-INQUIRY-FEE.
IF CDN-ATM-DEC-FEE NOT NUMERIC
MOVE ZEROES TO CDN-ATM-DEC-FEE.
IF CDN-MAESTRO-FEE NOT NUMERIC
MOVE CDN-ATM-FEE-US TO CDN-MAESTRO-FEE.
IF CDN-MAESTRO-DECL-FEE NOT NUMERIC
MOVE CDN-ATM-DEC-FEE TO CDN-MAESTRO-DECL-FEE.
IF CDN-MAESTRO-INQ-FEE NOT NUMERIC
MOVE CDN-ATM-INQUIRY-FEE TO CDN-MAESTRO-INQ-FEE.
IF CDN-CASH-OUT-FEE    NOT NUMERIC
MOVE ZEROES              TO CDN-CASH-OUT-FEE.
IF CDN-IN-NETWORK-FEE  NOT NUMERIC
MOVE ZEROES              TO CDN-IN-NETWORK-FEE.


60196-CHECK-RMF-NUMERIC.

IF CDN-RMF-CURR-VOL-COMM NOT NUMERIC
MOVE ZEROES TO CDN-RMF-CURR-VOL-COMM.
IF CDN-RMF-PEND-VOL-COMM NOT NUMERIC
MOVE ZEROES TO CDN-RMF-PEND-VOL-COMM.
IF CDN-RMF-CURR-VOL-ACT  NOT NUMERIC
MOVE ZEROES TO CDN-RMF-CURR-VOL-ACT.
IF CDN-RMF-DATE-PEND-ACTIVE NOT NUMERIC
MOVE ZEROES TO CDN-RMF-DATE-PEND-ACTIVE.


60196-CHECK-RMF-PENDING.


IF CDN-RISK-MAN-FUEL-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYYYMMDD TO WS-WORK-CURR-DATE
MOVE 01                       TO WS-WORK-CURR-DATE-DD.


IF CDN-RISK-MAN-FUEL-FLAG = 'Y' AND
CDN-RMF-DATE-PEND-ACTIVE > ZEROES
MOVE CDN-RMF-DATE-PEND-ACTIVE TO WS-WORK-PEND-DATE
EVALUATE TRUE
WHEN WS-WORK-PEND-DATE = WS-WORK-CURR-DATE
MOVE CDN-RMF-PEND-VOL-COMM TO CDN-RMF-CURR-VOL-COMM
MOVE ZEROES               TO CDN-RMF-PEND-VOL-COMM
MOVE ZEROES               TO CDN-RMF-CURR-VOL-ACT
PERFORM 60196-BUILD-ACTIVE-DATE
MOVE WS-WORK-CURR-DATE    TO CDN-RMF-DATE-PEND-ACTIVE
WHEN WS-WORK-PEND-DATE < WS-WORK-CURR-DATE
MOVE ZEROES               TO CDN-RMF-CURR-VOL-COMM
MOVE ZEROES               TO CDN-RMF-PEND-VOL-COMM
MOVE ZEROES               TO CDN-RMF-CURR-VOL-ACT
MOVE ZEROES               TO CDN-RMF-DATE-PEND-ACTIVE
END-EVALUATE.


60196-BUILD-ACTIVE-DATE.


MOVE WS-CURRENT-DATE-YYYYMMDD TO WS-WORK-CURR-DATE.
MOVE 01                       TO WS-WORK-CURR-DATE-DD.


COMPUTE WS-WORK-CURR-DATE-MM = WS-WORK-CURR-DATE-MM + 1


IF WS-WORK-CURR-DATE-MM = 13
MOVE 01                   TO WS-WORK-CURR-DATE-MM
COMPUTE WS-WORK-CURR-DATE-YYYY =
WS-WORK-CURR-DATE-YYYY + 1.


60196-CHECK-RMF-VOLUME.


IF CDN-RMF-CURR-VOL-COMM NOT > ZERO
MOVE 'N' TO CDN-RISK-MAN-FUEL-FLAG.


IF CDN-RMF-CURR-VOL-COMM NOT > CDN-RMF-CURR-VOL-ACT
MOVE 'N' TO CDN-RISK-MAN-FUEL-FLAG.


60200-CHECK-SCMSTR-NUMERICS.

PERFORM 60210-CHECK-SCMSTR-NUMERICS.
PERFORM 60220-CHECK-SCMSTR-NUMERICS.
PERFORM 60230-CHECK-SCMSTR-NUMERICS.
PERFORM 60235-CHECK-SCMSTR-NUMERICS.
PERFORM 60237-CHECK-SCMSTR-NUMERICS.
PERFORM 60240-CHECK-SCMSTR-OTHER.


60210-CHECK-SCMSTR-NUMERICS.

IF SCM-LAST-CHECK-NUMBER NOT NUMERIC
MOVE ZEROES TO SCM-LAST-CHECK-NUMBER
END-IF
IF SCM-FULL-SERV-CASH-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-FULL-SERV-CASH-PRICE
END-IF
IF SCM-MINI-SERV-CASH-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-MINI-SERV-CASH-PRICE
END-IF
IF SCM-SELF-SERV-CASH-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-SELF-SERV-CASH-PRICE
END-IF
IF SCM-OVER-RIDE-RATE NOT NUMERIC
MOVE ZEROES TO SCM-OVER-RIDE-RATE
END-IF
IF SCM-P2-SELF-DISC NOT NUMERIC
MOVE ZEROES TO SCM-P2-SELF-DISC
END-IF
IF SCM-P2-MINI-DISC NOT NUMERIC
MOVE ZEROES TO SCM-P2-MINI-DISC
END-IF
IF SCM-P2-FULL-DISC NOT NUMERIC
MOVE ZEROES TO SCM-P2-FULL-DISC
END-IF
IF SCM-P2-OTHER-DISC NOT NUMERIC
MOVE ZEROES TO SCM-P2-OTHER-DISC
END-IF.


60220-CHECK-SCMSTR-NUMERICS.

IF SCM-P2-DISC-START-DATE NOT NUMERIC
MOVE ZEROES TO SCM-P2-DISC-START-DATE
END-IF
IF SCM-P2-DISC-END-DATE NOT NUMERIC
MOVE ZEROES TO SCM-P2-DISC-END-DATE
END-IF
IF SCM-AUTOMATED-XTN-RATE NOT NUMERIC
MOVE ZEROES TO SCM-AUTOMATED-XTN-RATE
END-IF
IF SCM-AUTO-UP-MANUAL-XTN-RATE NOT NUMERIC
MOVE ZEROES TO SCM-AUTO-UP-MANUAL-XTN-RATE
END-IF
IF SCM-AUTOMATED-CALL-FEE NOT NUMERIC
MOVE ZEROES TO SCM-AUTOMATED-CALL-FEE
END-IF
IF SCM-LAST-UPDATE-DATE NOT NUMERIC
MOVE WS-CURRENT-DATE-YYDDD TO SCM-LAST-UPDATE-DATE
END-IF
IF SCM-LAST-SETTLE-DATE NOT NUMERIC
MOVE ZEROES TO SCM-LAST-SETTLE-DATE
END-IF
IF SCM-SETTLE-COUNT NOT NUMERIC
MOVE ZEROES TO SCM-SETTLE-COUNT
END-IF
IF SCM-EQUIP-BILL-AMT NOT NUMERIC
MOVE ZEROES TO SCM-EQUIP-BILL-AMT
END-IF.


60230-CHECK-SCMSTR-NUMERICS.

IF SCM-EQUIP-BILL-DATE NOT NUMERIC
MOVE ZEROES TO SCM-EQUIP-BILL-DATE
END-IF
IF SCM-EQUIP-SETTLE-DATE NOT NUMERIC
MOVE ZEROES TO SCM-EQUIP-SETTLE-DATE
END-IF
IF SCM-LAST-FP-DATE NOT NUMERIC
MOVE ZEROES TO SCM-LAST-FP-DATE
END-IF
IF SCM-LAST-USE-PPG NOT NUMERIC
MOVE ZEROES TO SCM-LAST-USE-PPG
END-IF
IF SCM-MANUAL-CALL-FEE NOT NUMERIC
MOVE ZEROES TO SCM-MANUAL-CALL-FEE
END-IF
IF SCM-PREFERRED-FEE NOT NUMERIC
MOVE ZEROES TO SCM-PREFERRED-FEE
END-IF
IF SCM-MANUAL-PREFERRED-FEE NOT NUMERIC
MOVE ZEROES TO SCM-MANUAL-PREFERRED-FEE
END-IF.


60235-CHECK-SCMSTR-NUMERICS.

IF SCM-PHONE-NUMBER (1:3) NOT NUMERIC
MOVE ZEROES TO SCM-PHONE-NUMBER (1:3)
END-IF.
IF SCM-PHONE-NUMBER (4:3) NOT NUMERIC
MOVE ZEROES TO SCM-PHONE-NUMBER (4:3)
END-IF.
IF SCM-PHONE-NUMBER (7:4) NOT NUMERIC
MOVE ZEROES TO SCM-PHONE-NUMBER (7:4)
END-IF.
IF SCM-FULL-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-FULL-SERV-CASH-PRICE
END-IF
IF SCM-MINI-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-MINI-SERV-CASH-PRICE
END-IF
IF SCM-SELF-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-SELF-SERV-CASH-PRICE
END-IF.


60237-CHECK-SCMSTR-NUMERICS.

IF SCM-CREDIT-MARKUP NOT NUMERIC
MOVE ZEROES TO SCM-CREDIT-MARKUP
END-IF.
IF SCM-FULL-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-FULL-SERV-CREDIT-PRICE
END-IF
IF SCM-MINI-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-MINI-SERV-CREDIT-PRICE
END-IF
IF SCM-SELF-SERV-CREDIT-PRICE NOT NUMERIC
MOVE ZEROES TO SCM-SELF-SERV-CREDIT-PRICE
END-IF.
IF SCM-MAN-CASH-ADD-ON-FEE  NOT NUMERIC
MOVE ZEROES TO SCM-MAN-CASH-ADD-ON-FEE
END-IF.
IF SCM-AUTO-CASH-ADD-ON-FEE  NOT NUMERIC
MOVE ZEROES TO SCM-AUTO-CASH-ADD-ON-FEE
END-IF.


60240-CHECK-SCMSTR-OTHER.

IF SCM-COUNTRY-CODE NOT = 'C'
MOVE 'U' TO SCM-COUNTRY-CODE
END-IF.
IF SCM-RECOURSE-FLAG NOT > SPACES
MOVE 'Y' TO SCM-RECOURSE-FLAG
END-IF.
IF SCM-IOL-RCP NOT NUMERIC
MOVE ZEROES TO SCM-IOL-RCP.


IF SCM-AUTO-CALC-TAX NOT = 'Y'
MOVE 'N' TO SCM-AUTO-CALC-TAX.


60300-CHECK-SCSTATE-NUMERICS.

PERFORM 60310-CHECK-SCSTATE-NUMERICS
PERFORM 60315-CHECK-SCSTATE-NUMERICS
PERFORM 60320-CHECK-SCSTATE-NUMERICS.
PERFORM 60330-CHECK-SCSTATE-NUMERICS.


60310-CHECK-SCSTATE-NUMERICS.

IF SCSR-MIN-FUEL-PRICE NOT NUMERIC
MOVE .40    TO SCSR-MIN-FUEL-PRICE
END-IF
IF SCSR-MAX-FUEL-PRICE NOT NUMERIC
MOVE 5.00   TO SCSR-MAX-FUEL-PRICE
END-IF
IF SCSR-TAX-RATE NOT NUMERIC
MOVE ZEROES TO SCSR-TAX-RATE
END-IF
IF SCSR-TAX-APPLICATION = '1' OR '2' OR '3'
NEXT SENTENCE
ELSE
MOVE '1' TO SCSR-TAX-APPLICATION
END-IF.


60315-CHECK-SCSTATE-NUMERICS.

IF SCSR-FUEL-GST-RATE NOT NUMERIC
MOVE ZEROS  TO SCSR-FUEL-GST-RATE
END-IF
IF SCSR-FUEL-PST-RATE NOT NUMERIC
MOVE ZEROS  TO SCSR-FUEL-PST-RATE
END-IF
IF SCSR-PROD-GST-RATE NOT NUMERIC
MOVE ZEROS  TO SCSR-PROD-GST-RATE
END-IF
IF SCSR-PROD-PST-RATE NOT NUMERIC
MOVE ZEROS  TO SCSR-PROD-PST-RATE
END-IF.


60320-CHECK-SCSTATE-NUMERICS.

IF SCPM-LEVEL-1-VARIANCE NOT NUMERIC
MOVE ZEROES TO SCPM-LEVEL-1-VARIANCE.
IF SCPM-LEVEL-1-VARIANCE-CREDIT NOT NUMERIC
MOVE SCPM-LEVEL-1-VARIANCE TO SCPM-LEVEL-1-VARIANCE-CREDIT.
IF SCPM-LEVEL-2-VARIANCE NOT NUMERIC
MOVE ZEROES TO SCPM-LEVEL-2-VARIANCE.
IF SCPM-LEVEL-1-DAYS NOT NUMERIC
MOVE ZEROES TO SCPM-LEVEL-1-DAYS.
IF SCPM-LEVEL-2-DAYS NOT NUMERIC
MOVE ZEROES TO SCPM-LEVEL-2-DAYS.
IF SCPM-CALC-VARIANCE NOT NUMERIC
MOVE ZEROES TO SCPM-CALC-VARIANCE.
IF SCPM-AUTO-CALC-TAX NOT = 'Y'
MOVE 'N' TO SCPM-AUTO-CALC-TAX.


60330-CHECK-SCSTATE-NUMERICS.

IF SCPM-PP-CDN-MARKUP-US NOT NUMERIC
MOVE ZEROES TO SCPM-PP-CDN-MARKUP-US.
IF SCPM-PP-PAC-MARKUP    NOT NUMERIC
MOVE ZEROES TO SCPM-PP-PAC-MARKUP.


60500-CHECK-UNITMST-NUMERICS.


IF UNITMST-CASH-ADV-USED NOT NUMERIC
MOVE 0 TO UNITMST-CASH-ADV-USED
END-IF
IF UNITMST-DLY-CASH-ADV-USED NOT NUMERIC
MOVE 0 TO UNITMST-DLY-CASH-ADV-USED
END-IF
IF UNITMST-CASH-ADV-INIT NOT NUMERIC
MOVE 0 TO UNITMST-CASH-ADV-INIT
END-IF
IF UNITMST-INIT-DLY-CASH-ADV NOT NUMERIC
MOVE 0 TO  UNITMST-INIT-DLY-CASH-ADV
END-IF
IF UNITMST-LAST-UPDATE-DATE NOT NUMERIC
MOVE 0 TO UNITMST-LAST-UPDATE-DATE
END-IF
IF UNITMST-DATE-LAST-XTN NOT NUMERIC
MOVE 0 TO UNITMST-DATE-LAST-XTN
END-IF
IF UNITMST-LAST-XTN-NR NOT NUMERIC
MOVE 0 TO UNITMST-LAST-XTN-NR
END-IF
IF UNITMST-TIME-LAST-XTN NOT NUMERIC
MOVE 0 TO UNITMST-TIME-LAST-XTN
END-IF
IF UNITMST-FPMASTR-FPID-NR NOT NUMERIC
MOVE 0 TO UNITMST-FPMASTR-FPID-NR
END-IF
IF UNITMST-MAX-PURC-VARIANCE NOT NUMERIC
MOVE 0 TO UNITMST-MAX-PURC-VARIANCE
END-IF
IF UNITMST-MAX-DLY-FUEL-PURC NOT NUMERIC
MOVE 0 TO UNITMST-MAX-DLY-FUEL-PURC
END-IF

PERFORM
VARYING WS-INDEX FROM 1 BY 1
UNTIL WS-INDEX = 8
IF UNITMST-CASH-TABLE (WS-INDEX) NOT NUMERIC
MOVE ZEROES TO UNITMST-CASH-TABLE (WS-INDEX)
END-IF
END-PERFORM
PERFORM 60502-CHK-UNITMST-NUM-II
PERFORM 60504-CHK-UNITMST-NUM-III
PERFORM 60506-CHK-UNITMST-NUM-IV.

60502-CHK-UNITMST-NUM-II.

IF UNITMST-REPEAT-TS-COUNT NOT NUMERIC
MOVE ZERO TO UNITMST-REPEAT-TS-COUNT
END-IF
IF UNITMST-REPEAT-ST-COUNT NOT NUMERIC
MOVE ZERO TO UNITMST-REPEAT-ST-COUNT
END-IF
IF UNITMST-INIT-TRIP-ALLOW NOT NUMERIC
MOVE ZERO TO UNITMST-INIT-TRIP-ALLOW
END-IF
IF UNITMST-TRIP-ALLOW-USED NOT NUMERIC
MOVE ZERO TO UNITMST-TRIP-ALLOW-USED
END-IF
IF UNITMST-CURR-DAY-REQ-AMT NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-REQ-AMT
END-IF
IF UNITMST-CURR-DAY-NR-GALS NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-NR-GALS
END-IF
IF UNITMST-CURR-DAY-AMT-REF NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-AMT-REF
END-IF
IF UNITMST-CURR-DAY-GALS-REF NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-GALS-REF
END-IF
IF UNITMST-CURR-DAY-QTS-OIL NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-QTS-OIL
END-IF
IF UNITMST-CURR-DAY-OIL-COST NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-OIL-COST
END-IF
IF UNITMST-CURR-DAY-CHGS NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-CHGS
END-IF
IF UNITMST-CURR-DAY-DISC NOT NUMERIC
MOVE ZERO TO UNITMST-CURR-DAY-DISC
END-IF.

60504-CHK-UNITMST-NUM-III.

IF UNITMST-PREV-DAY-REQ-AMT NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-REQ-AMT
END-IF
IF UNITMST-PREV-DAY-NR-GALS NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-NR-GALS
END-IF
IF UNITMST-PREV-DAY-AMT-REF NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-AMT-REF
END-IF
IF UNITMST-PREV-DAY-GALS-REF NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-GALS-REF
END-IF
IF UNITMST-PREV-DAY-QTS-OIL NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-QTS-OIL
END-IF
IF UNITMST-PREV-DAY-OIL-COST NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-OIL-COST
END-IF
IF UNITMST-PREV-DAY-CHGS NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-CHGS
END-IF
IF UNITMST-PREV-DAY-DISC NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-DISC
END-IF.

60506-CHK-UNITMST-NUM-IV.

IF UNITMST-PTD-TOTAL-REQ-AMT NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-TOTAL-REQ-AMT
END-IF
IF UNITMST-PTD-NR-GALS NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-NR-GALS
END-IF
IF UNITMST-PTD-AMT-REF NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-AMT-REF
END-IF
IF UNITMST-PTD-GALS-REF NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-GALS-REF
END-IF
IF UNITMST-PTD-QTS-OIL NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-QTS-OIL
END-IF
IF UNITMST-PTD-OIL-COST NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-OIL-COST
END-IF
IF UNITMST-PTD-CHGS NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-CHGS
END-IF
IF UNITMST-PTD-DISC NOT NUMERIC
MOVE ZERO TO UNITMST-PTD-DISC
END-IF
IF UNITMST-STARTING-HUB NOT NUMERIC
MOVE ZERO TO UNITMST-STARTING-HUB
END-IF
IF UNITMST-PREV-DAY-HUB NOT NUMERIC
MOVE ZERO TO UNITMST-PREV-DAY-HUB
END-IF
IF UNITMST-LAST-HUB NOT NUMERIC
MOVE ZERO TO UNITMST-LAST-HUB
END-IF.


60510-MOVE-UNITMST-VALUES.

MOVE UNITMST-DLY-CASH-ADV-USED  TO WS-FL-CASH-ADV-USED-DLY.

MOVE UNITMST-CASH-ADV-INIT      TO WS-RFL-CASH-ADV-INIT.
MOVE UNITMST-CASH-ADV-USED      TO WS-RFL-CASH-ADV-USED.
MOVE UNITMST-INIT-DLY-CASH-ADV  TO WS-RFL-CASH-ADV-INIT-DLY.
MOVE UNITMST-DLY-CASH-ADV-FLAG  TO
WS-RFL-CASH-ADV-DAILY-FLAG.
MOVE UNITMST-MAX-PURC-VARIANCE  TO WS-RFL-MAX-PURC-VARIANCE.
MOVE UNITMST-MAX-DLY-FUEL-PURC  TO WS-RFL-MAX-PURC-DLY-FUEL.

MOVE UNITMST-FPMASTR-FPID-NR    TO WS-ID-NR-NUM.
MOVE ZEROS                      TO WS-ID-NR-CK-DIG,
WS-CKD-CALCULATED.
IF WS-ID-NR-NUM > ZEROS
PERFORM CALCULATE-CHECK-DIGIT
END-IF.
MOVE WS-CKD-CALCULATED          TO WS-ID-NR-CK-DIG.


60520-CHECK-FOR-HIERARCHY.

IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
IF ON-HIERARCHY
PERFORM 60525-GET-HIER-REC
PERFORM 60530-VALIDATE-HIER
MOVE CURR-CD        OF DHIERACH TO WS-COUNTRY-CODE
MOVE ONE-TM-LMT-FLG OF DHIERACH TO WS-ONE-TIME-LIMIT
MOVE CHG-LMT-UNT-CD OF DHIERACH TO WS-PRODUCT-STANDARD
MOVE TRP-ALWNC-FLG  OF DHIERACH TO WS-TRIP-ALLOWANCE
MOVE CSH-ADV-CD     OF DHIERACH TO WS-CASH-ADVANCE-FLAG
MOVE CO-DRV-NM-ENTR-FLG OF DHIERACH
TO WS-CO-DRVR-NAME-ENTERED
ELSE
MOVE CDN-COUNTRY-CODE           TO WS-COUNTRY-CODE
MOVE CDN-ONE-TIME-LIMIT         TO WS-ONE-TIME-LIMIT
MOVE CDN-PRODUCT-STANDARD       TO WS-PRODUCT-STANDARD
MOVE CDN-TRIP-ALLOWANCE         TO WS-TRIP-ALLOWANCE
MOVE CDN-CASH-ADVANCE-FLAG      TO WS-CASH-ADVANCE-FLAG
MOVE CDN-CO-DRVR-NAME-ENTERED   TO WS-CO-DRVR-NAME-ENTERED
END-IF.


60525-GET-HIER-REC.

INITIALIZE DHIERACH
MOVE PIR-HIERARCHY-ID TO HIER-ID OF DHIERACH
EXEC SQL
SELECT CURR_CD,
ONE_TM_LMT_FLG,
CHG_LMT_UNT_CD,
TRP_ALWNC_FLG,
CSH_ADV_CD,
CO_DRV_NM_ENTR_FLG
INTO   :DHIERACH.CURR-CD,
:DHIERACH.ONE-TM-LMT-FLG,
:DHIERACH.CHG-LMT-UNT-CD,
:DHIERACH.TRP-ALWNC-FLG,
:DHIERACH.CSH-ADV-CD,
:DHIERACH.CO-DRV-NM-ENTR-FLG
FROM   DBO.HIERARCHY
WHERE  HIER_ID = :DHIERACH.HIER-ID
END-EXEC
EVALUATE SQLCODE
WHEN +000
CONTINUE
WHEN +100
MOVE HIER-ID-NOT-FOUND   TO OUT-COMENT
MOVE HIER-ID-NOT-FOUND-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
WHEN OTHER
MOVE '60525-GET-HIER-REC'   TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.HIERARCHY' TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.


60530-VALIDATE-HIER.

IF CURR-CD OF DHIERACH = 'C '
MOVE 'CD' TO CURR-CD OF DHIERACH
END-IF
IF CURR-CD OF DHIERACH NOT = 'CD'
MOVE 'US' TO CURR-CD OF DHIERACH
END-IF
CONTINUE.


60700-CHECK-ACCOUNT-INFO.

IF HLD-ACCOUNT-CURR-TYPE NOT = 'M'
MOVE 'B' TO HLD-ACCOUNT-CURR-TYPE.
IF HLD-COUNTRY-CODE NOT = 'CD'
MOVE 'US' TO HLD-COUNTRY-CODE.


70000-CHECK-RMS-LOCATION.


PERFORM TSFMO0GD-ROUTINE.

TSFMO0GD-ROUTINE.

PERFORM BUILD-FMGD-COMMAREA
PERFORM LINK-TO-TSFMO0GD
PERFORM SAVE-TSFMO0GD-VALUES.

BUILD-FMGD-COMMAREA.

PERFORM BUILD-FMGD-GROUP-COMMAREA
PERFORM BUILD-FMGD-INDIV-COMMAREA.

BUILD-FMGD-GROUP-COMMAREA.

INITIALIZE PDLA-RESPONSE-AREA
MOVE ERROR-FLAG              TO COM-ERROR-FLAG
MOVE FP-COMMON-AREA          TO PDLA-FP-COMMON-AREA
MOVE WS-REF-RACK-PPG         TO PDLA-REF-RACK-PPG
MOVE CDN-CUSTOMER-RECORD     TO PDLA-CDN-CUSTOMER-RECORD
MOVE SERVICE-CENTER-MASTER-RECORD
TO PDLA-SC-MASTER-RECORD
MOVE RELATIONSHIP-MAINT-RECORD
TO PDLA-RELATIONSHIP-MAINT-REC
MOVE WS-PRICING-FILE-AREA    TO PDLA-PRICING-FILE-AREA
MOVE WS-USER-INPUT-WORK-AREA TO PDLA-USER-INPUT-WORK-AREA
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO PDLA-FMLOG-RECORD
MOVE PRDFMRM-RECORD          TO PDLA-PRDFMRM-RECORD
MOVE CONTINUE-WORK-FIELDS    TO PDLA-US-CONTINUE-FIELDS.

BUILD-FMGD-INDIV-COMMAREA.


MOVE WS-POS-FLAG     TO PDLA-POS-FLAG
MOVE CDN-CUST-NUMBER TO PDLA-CUST-ID
MOVE SCM-KEY         TO PDLA-LOC-ID
MOVE CSR-ALLOW-CASH-OFF-NETW TO PDLA-CSR-ALLOW-CASH-OFF-NETW
MOVE PRM-ACCT-NUMBER      TO PDLA-PRM-ACCT-NUMBER
MOVE PRM-SUB-ACCT-NUMB    TO PDLA-PRM-SUB-ACCT-NUMB
MOVE PRM-SUB-NETWORK-GROUP-ID
TO PDLA-PRM-SUB-NETWORK-GROUP-ID
MOVE PRM-FUEL-OFFNET-FLAG TO PDLA-PRM-FUEL-OFFNET-FLAG
MOVE PRM-LIM-NETW-BY-CARD TO PDLA-PRM-LIM-NETW-BY-CARD.

LINK-TO-TSFMO0GD.

MOVE 'LINK-TO-TSFMO0GD'          TO CXUTS0ML-PARAGRAPH.
EXEC CICS LINK
PROGRAM  ('TSFMO0GD')
COMMAREA (PRP-DISCOUNTS-LINK-AREA)
LENGTH   (LENGTH OF PRP-DISCOUNTS-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.

SAVE-TSFMO0GD-VALUES.

MOVE PDLA-FP-COMMON-AREA         TO FP-COMMON-AREA
MOVE COM-ERROR-FLAG              TO ERROR-FLAG
MOVE PDLA-REF-RACK-PPG           TO WS-REF-RACK-PPG
MOVE PDLA-CDN-CUSTOMER-RECORD    TO CDN-CUSTOMER-RECORD
MOVE PDLA-SC-MASTER-RECORD TO SERVICE-CENTER-MASTER-RECORD
MOVE PDLA-RELATIONSHIP-MAINT-REC
TO RELATIONSHIP-MAINT-RECORD
MOVE PDLA-PRICING-FILE-AREA    TO WS-PRICING-FILE-AREA
MOVE PDLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA
MOVE PDLA-PRDFMRM-RECORD       TO PRDFMRM-RECORD
MOVE PDLA-US-CONTINUE-FIELDS   TO CONTINUE-WORK-FIELDS.


IF ERROR-FLAG = 'P'
MOVE FUEL-PRICE-ERR           TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-N         TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF.


71110-CHECK-FOCUS-DISCOUNT.

MOVE 'N'    TO COM-FOCUS-DISC-FLAG
MOVE ZEROES TO COM-FOCUS-CPG-TOTAL-DISC,
COM-FOCUS-CPG-NET,
COM-FOCUS-CPG-REBATE,
COM-FOCUS-CPG-RETAINED,
COM-FOCUS-POF-TOTAL-DISC,
COM-FOCUS-POF-NET,
COM-FOCUS-POF-REBATE,
COM-FOCUS-POF-RETAINED,
COM-FOCUS-FLT-TOTAL-DISC,
COM-FOCUS-FLT-NET,
COM-FOCUS-FLT-REBATE,
COM-FOCUS-FLT-RETAINED.

IF CDN-FOCUS-DISCOUNT-FLAG = 'Y' AND
SCM-FOCUS-DISCOUNT-FLAG = 'Y'
PERFORM 79110-CHECK-FOCUS-DISCOUNT
ELSE
IF CDN-PREFERRED-CUSTOMER
PERFORM 79110-CHECK-FOCUS-DISCOUNT
END-IF
END-IF.

79110-CHECK-FOCUS-DISCOUNT.


IF RMR-FOCUS-DISCOUNT-TYPE = 'Y'
MOVE 'Y' TO COM-FOCUS-DISC-FLAG
COMPUTE COM-FOCUS-CPG-TOTAL-DISC =
(RMR-FOCUS-CPG-TOTAL-DISC - RMR-FOCUS-CPG-RETAINED)
COMPUTE COM-FOCUS-CPG-NET   = RMR-FOCUS-CPG-NET
COMPUTE COM-FOCUS-CPG-REBATE = RMR-FOCUS-CPG-REBATE
COMPUTE COM-FOCUS-CPG-RETAINED = RMR-FOCUS-CPG-RETAINED

COMPUTE COM-FOCUS-POF-TOTAL-DISC =
(RMR-FOCUS-POF-TOTAL-DISC - RMR-FOCUS-POF-RETAINED)
COMPUTE COM-FOCUS-POF-NET       = RMR-FOCUS-POF-NET
COMPUTE COM-FOCUS-POF-REBATE    = RMR-FOCUS-POF-REBATE
COMPUTE COM-FOCUS-POF-RETAINED  = RMR-FOCUS-POF-RETAINED

COMPUTE COM-FOCUS-FLT-TOTAL-DISC =
(RMR-FOCUS-FLAT-TOTAL-DISC - RMR-FOCUS-FLAT-RETAINED)
COMPUTE COM-FOCUS-FLT-NET       = RMR-FOCUS-FLAT-NET
COMPUTE COM-FOCUS-FLT-REBATE    = RMR-FOCUS-FLAT-REBATE
COMPUTE COM-FOCUS-FLT-RETAINED  = RMR-FOCUS-FLAT-RETAINED
END-IF.































IF RMR-FOCUS-DISCOUNT-TYPE = 'Y' AND
CDN-SMALL-FLEET-DISC-FLAG = 'Y'





COMPUTE COM-FOCUS-CPG-SMFL  = RMR-FOCUS-CPG-G999-REDC
END-IF.


71115-CHECK-NET-PRICING-2.

PERFORM 71115-CNP-1
IF CONTINUE-NET-PRICING
PERFORM 71115-CNP-2
END-IF
IF CONTINUE-NET-PRICING
PERFORM 71115-CNP-3
END-IF.

71115-CNP-1.

PERFORM 71115-CNP-TIMESTAMP
PERFORM 71115-CNP-GET-DPFIDMNT
IF SQLCODE = ZERO
IF EFFCTV-DT-TS OF DPFIDMNT <= WS-TIMESTAMP-NP
AND PFID-STAT-CD OF DPFIDMNT NOT = 'A'
MOVE 1 TO CONTINUE-NET-PRICING-SW
END-IF
ELSE
MOVE 1 TO CONTINUE-NET-PRICING-SW
END-IF.

71115-CNP-TIMESTAMP.

IF WS-CURRENT-TIMESTAMP NOT > SPACES
PERFORM GET-CURRENT-TIMESTAMP
END-IF
MOVE WS-CURRENT-TIMESTAMP TO WS-TIMESTAMP-NP


IF WS-UIWA-SYSTEM-ID NUMERIC
AND WS-UIWA-SYSTEM-ID = 1
MOVE '00' TO WS-TIMESTAMP-NP (12:2)
WS-TIMESTAMP-NP (15:2)
WS-TIMESTAMP-NP (18:2)
ELSE
IF WS-UIWA-FUELING-TIME NUMERIC
AND WS-UIWA-FUELING-TIME > ZERO
MOVE WS-UIWA-FUELING-TIME(1:2) TO WS-TIMESTAMP-NP(12:2)
MOVE WS-UIWA-FUELING-TIME(3:2) TO WS-TIMESTAMP-NP(15:2)
MOVE WS-UIWA-FUELING-TIME(5:2) TO WS-TIMESTAMP-NP(18:2)
END-IF
END-IF

IF WS-UIWA-FUELING-DATE NUMERIC
AND WS-UIWA-FUELING-DATE > ZERO
MOVE WS-UIWA-FUELING-DATE(1:2)    TO WS-TIMESTAMP-NP(6:2)
MOVE WS-UIWA-FUELING-DATE(3:2)    TO WS-TIMESTAMP-NP(9:2)
MOVE WS-UIWA-FUELING-DATE(5:2)    TO WS-TIMESTAMP-NP(3:2)
END-IF.

71115-CNP-GET-DPFIDMNT.

MOVE '71115-CNP-SEL-DPFIDMNT' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DPFIDMNT'        TO CXUTS0ML-COMMAND
INITIALIZE DPFIDMNT
MOVE SCM-PRICING-FLE-ID TO PFID-CD OF DPFIDMNT
PERFORM 71115-CNP-SEL-DPFIDMNT
CONTINUE.

71115-CNP-SEL-DPFIDMNT.

EXEC SQL
SELECT PFID_STAT_CD,
EFFCTV_DT_TS,

PFID_PRC_VALID_POS_FLG,
PFID_PRC_AUTO_TAX_FLG,
PFID_PRC_POS_VRNC_AMT,
PFID_PRC_MIN_QTY
INTO   :DPFIDMNT.PFID-STAT-CD,
:DPFIDMNT.EFFCTV-DT-TS,

:DPFIDMNT.PFID-PRC-VALID-POS-FLG,
:DPFIDMNT.PFID-PRC-AUTO-TAX-FLG,
:DPFIDMNT.PFID-PRC-POS-VRNC-AMT,
:PFID-PRC-MIN-QTY
FROM   DBO.PFID_MAINT
WHERE  PFID_CD = :DPFIDMNT.PFID-CD
END-EXEC
PERFORM CHECK-NOTFND-SQL.

71115-CNP-2.

PERFORM 71115-CNP-GET-DPFIDCSX
IF SQLCODE = ZERO
IF EFFCTV-DT-TS OF DPFIDCSX <= WS-TIMESTAMP-NP
AND PFID-CUST-STAT-CD OF DPFIDCSX NOT = 'A'
MOVE 1 TO CONTINUE-NET-PRICING-SW
END-IF
END-IF.

71115-CNP-GET-DPFIDCSX.

MOVE '71115-CNP-SEL-DPFIDCSX' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DPFIDCSX'        TO CXUTS0ML-COMMAND
INITIALIZE DPFIDCSX
MOVE SCM-PRICING-FLE-ID TO PFID-CD  OF DPFIDCSX
MOVE PRM-ACCT-NUMBER    TO ACCT-NBR OF DPFIDCSX
MOVE PRM-SUB-ACCT-NUMB  TO CUST-ID  OF DPFIDCSX
PERFORM 71115-CNP-SEL-DPFIDCSX
IF SQLCODE = +100
MOVE SPACES          TO CUST-ID  OF DPFIDCSX
PERFORM 71115-CNP-SEL-DPFIDCSX
END-IF.

71115-CNP-SEL-DPFIDCSX.

EXEC SQL
SELECT PFID_CUST_STAT_CD,
EFFCTV_DT_TS
INTO   :DPFIDCSX.PFID-CUST-STAT-CD,
:DPFIDCSX.EFFCTV-DT-TS
FROM   DBO.PFID_CUST_XREF
WHERE  PFID_CD  = :DPFIDCSX.PFID-CD
AND  ACCT_NBR = :DPFIDCSX.ACCT-NBR
AND  CUST_ID  = :DPFIDCSX.CUST-ID
END-EXEC
PERFORM CHECK-NOTFND-SQL.

71115-CNP-3.


MOVE 'N' TO WS-DNETPRCG-INIT




IF WS-UIWA-NR2-COST-SC > ZERO
AND WS-UIWA-NR2-QTY-SC > ZERO
AND WS-UIWA-NR2-SUB-PROD > SPACES

PERFORM 71115-CNP-GET-NR2-PRICING
END-IF
IF WS-UIWA-NR1-COST-SC > ZERO
AND WS-UIWA-NR1-QTY-SC > ZERO
AND WS-UIWA-NR1-SUB-PROD > SPACES

PERFORM 71115-CNP-GET-NR1-PRICING
END-IF
IF WS-UIWA-REF-COST-SC > ZERO
AND WS-UIWA-REF-QTY-SC > ZERO
AND WS-UIWA-REF-SUB-PROD > SPACES

PERFORM 71115-CNP-GET-REF-PRICING
END-IF
IF WS-UIWA-OTH-COST-SC > ZERO
AND WS-UIWA-OTH-QTY-SC > ZERO
AND WS-UIWA-OTH-SUB-PROD > SPACES
PERFORM 71115-CNP-GET-OTH-PRICING
END-IF
IF WS-DNETPRCG-TOT-DISC-ACCUM > ZERO
COMPUTE WS-DNETPRCG-TOT-DISC ROUNDED =
WS-DNETPRCG-TOT-DISC-ACCUM
END-COMPUTE
END-IF.

71115-CNP-GET-NR2-PRICING.


PERFORM 71115-CNP-SETUP-DNETPRCG
MOVE 'D2'                 TO WS-TSFMSNPR-PROD-GROUP
MOVE WS-UIWA-NR2-SUB-PROD TO WS-TSFMSNPR-PROD
PERFORM 71115-CNP-LINK-TSFMSNPR
IF WS-TSFMSNPR-RETURN-CODE = ZERO
PERFORM 71115-CNP-SET-NET-COST-AND-DSC

IF PFID-PRC-AUTO-TAX-FLG = 'Y'
MOVE WS-UIWA-NR2-PPU    TO WS-NR2-PPU-HOLD
MOVE WS-UIWA-NR2-COST   TO WS-NR2-COST-HOLD
MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-NR2-PPU
PERFORM 71115-CNP-REMOVE-CAN-TAXES

MOVE ZEROS            TO WS-UIWA-TAX-AMT
MOVE WS-UIWA-NR2-PPU  TO WS-NET-TOT-CST-AMT
MOVE WS-NR2-PPU-HOLD  TO WS-UIWA-NR2-PPU
MOVE WS-NR2-COST-HOLD TO WS-UIWA-NR2-COST
END-IF
PERFORM 71115-CNP-CHK-FOR-RECOMP
IF WS-RECOMP-SW = 'Y'
PERFORM 71115-CNP-RECOMPUTE-NR2
END-IF
IF WS-NET-PRC-REL-TYP-CD = 'P'
PERFORM 71115-CNP-OPT-P-NR2-PROCESS
END-IF
END-IF.

71115-CNP-RECOMPUTE-NR2.

MOVE WS-UIWA-NR2-COST-SC TO WS-NP-COST
MOVE WS-UIWA-NR2-QTY-SC  TO WS-NP-QTY
COMPUTE WS-NP-RETAIL-PRICE ROUNDED =
WS-UIWA-NR2-COST-SC / WS-UIWA-NR2-QTY-SC
END-COMPUTE
PERFORM 71115-CNP-RECOMPUTATION
IF WS-USE-THIS-NET-PRICING = 'Y'
MOVE 'Y'            TO WS-DNETPRCG-NR2-USED
MOVE WS-NP-DISCOUNT TO WS-DNETPRCG-NR2-DISC
MOVE COM-NET-PRICING-FLAG TO WS-DNET-NR2-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-NR2-DISC-AMT
PERFORM 71115-SAVE-FMLOG-FLDS
PERFORM 71115-SAVE-FMLOG-FLDS-CP

MOVE 'N' TO WS-UIWA-NR2-SUB-PROD-DSC
ELSE
IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y'
MOVE 'Y'        TO WS-DNETPRCG-NR2-USED
MOVE COM-NET-PRICING-FLAG TO WS-DNET-NR2-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-NR2-DISC-AMT
PERFORM 71115-SAVE-FMLOG-FLDS
PERFORM 71115-SAVE-FMLOG-FLDS-CP
END-IF
END-IF.

71115-CNP-GET-NR1-PRICING.

IF WS-DNETPRCG-INIT = 'N'
PERFORM 71115-CNP-SETUP-DNETPRCG
END-IF
MOVE 'D1'                 TO WS-TSFMSNPR-PROD-GROUP
MOVE WS-UIWA-NR1-SUB-PROD TO WS-TSFMSNPR-PROD
PERFORM 71115-CNP-LINK-TSFMSNPR
IF WS-TSFMSNPR-RETURN-CODE = ZERO
PERFORM 71115-CNP-SET-NET-COST-AND-DSC

IF PFID-PRC-AUTO-TAX-FLG = 'Y'
MOVE WS-UIWA-NR1-PPU    TO WS-NR1-PPU-HOLD
MOVE WS-UIWA-NR1-COST   TO WS-NR1-COST-HOLD
MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-NR1-PPU
PERFORM 71115-CNP-REMOVE-CAN-TAXES

MOVE ZEROS            TO WS-UIWA-TAX-AMT
MOVE WS-UIWA-NR1-PPU  TO WS-NET-TOT-CST-AMT
MOVE WS-NR1-PPU-HOLD  TO WS-UIWA-NR1-PPU
MOVE WS-NR1-COST-HOLD TO WS-UIWA-NR1-COST
END-IF
PERFORM 71115-CNP-CHK-FOR-RECOMP
IF WS-RECOMP-SW = 'Y'
PERFORM 71115-CNP-RECOMPUTE-NR1
END-IF
IF WS-NET-PRC-REL-TYP-CD = 'P'
PERFORM 71115-CNP-OPT-P-NR1-PROCESS
END-IF
END-IF.

71115-CNP-RECOMPUTE-NR1.

MOVE WS-UIWA-NR1-COST-SC TO WS-NP-COST
MOVE WS-UIWA-NR1-QTY-SC  TO WS-NP-QTY
COMPUTE WS-NP-RETAIL-PRICE ROUNDED =
WS-UIWA-NR1-COST-SC / WS-UIWA-NR1-QTY-SC
END-COMPUTE
PERFORM 71115-CNP-RECOMPUTATION
IF WS-USE-THIS-NET-PRICING = 'Y'
MOVE 'Y'            TO WS-DNETPRCG-NR1-USED
MOVE WS-NP-DISCOUNT TO WS-DNETPRCG-NR1-DISC
MOVE COM-NET-PRICING-FLAG TO WS-DNET-NR1-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-NR1-DISC-AMT
IF WS-DNETPRCG-NR2-USED NOT = 'Y'
PERFORM 71115-SAVE-FMLOG-FLDS
END-IF
PERFORM 71115-SAVE-FMLOG-FLDS-CP

MOVE 'N' TO WS-UIWA-NR1-SUB-PROD-DSC
ELSE
IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y'
AND (WS-DNETPRCG-PFID-CD = SPACES)
MOVE 'Y'        TO WS-DNETPRCG-NR1-USED
MOVE COM-NET-PRICING-FLAG TO WS-DNET-NR1-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-NR1-DISC-AMT
PERFORM 71115-SAVE-FMLOG-FLDS
PERFORM 71115-SAVE-FMLOG-FLDS-CP
END-IF
END-IF.

71115-CNP-GET-REF-PRICING.

IF WS-DNETPRCG-INIT = 'N'
PERFORM 71115-CNP-SETUP-DNETPRCG
END-IF
MOVE 'RF'                 TO WS-TSFMSNPR-PROD-GROUP
MOVE WS-UIWA-REF-SUB-PROD TO WS-TSFMSNPR-PROD
PERFORM 71115-CNP-LINK-TSFMSNPR
IF WS-TSFMSNPR-RETURN-CODE = ZERO
PERFORM 71115-CNP-SET-NET-COST-AND-DSC

IF PFID-PRC-AUTO-TAX-FLG = 'Y'
MOVE WS-UIWA-REF-PPU    TO WS-REF-PPU-HOLD
MOVE WS-UIWA-REF-COST   TO WS-REF-COST-HOLD
MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-REF-PPU
PERFORM 71115-CNP-REMOVE-CAN-TAXES

MOVE ZEROS            TO WS-UIWA-TAX-AMT
MOVE WS-UIWA-REF-PPU  TO WS-NET-TOT-CST-AMT
MOVE WS-REF-PPU-HOLD  TO WS-UIWA-REF-PPU
MOVE WS-REF-COST-HOLD TO WS-UIWA-REF-COST
END-IF
PERFORM 71115-CNP-CHK-FOR-RECOMP
IF WS-RECOMP-SW = 'Y'
PERFORM 71115-CNP-RECOMPUTE-REF
END-IF
IF WS-NET-PRC-REL-TYP-CD = 'P'
PERFORM 71115-CNP-OPT-P-REF-PROCESS
END-IF
END-IF.

71115-CNP-RECOMPUTE-REF.

MOVE WS-UIWA-REF-COST-SC TO WS-NP-COST
MOVE WS-UIWA-REF-QTY-SC  TO WS-NP-QTY
COMPUTE WS-NP-RETAIL-PRICE ROUNDED =
WS-UIWA-REF-COST-SC / WS-UIWA-REF-QTY-SC
END-COMPUTE
PERFORM 71115-CNP-RECOMPUTATION
IF WS-USE-THIS-NET-PRICING = 'Y'
MOVE 'Y'            TO WS-DNETPRCG-REF-USED
MOVE WS-NP-DISCOUNT TO WS-DNETPRCG-REF-DISC
MOVE COM-NET-PRICING-FLAG TO WS-DNET-REF-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-REF-DISC-AMT
IF (WS-DNETPRCG-NR2-USED NOT = 'Y')
AND (WS-DNETPRCG-NR1-USED NOT = 'Y')
PERFORM 71115-SAVE-FMLOG-FLDS
END-IF
PERFORM 71115-SAVE-FMLOG-FLDS-CP

MOVE 'N' TO WS-UIWA-REF-SUB-PROD-DSC
ELSE
IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y'
AND (WS-DNETPRCG-PFID-CD = SPACES)
MOVE 'Y'        TO WS-DNETPRCG-REF-USED
MOVE COM-NET-PRICING-FLAG TO WS-DNET-REF-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-REF-DISC-AMT
PERFORM 71115-SAVE-FMLOG-FLDS
PERFORM 71115-SAVE-FMLOG-FLDS-CP
END-IF
END-IF.

71115-CNP-GET-OTH-PRICING.

IF WS-DNETPRCG-INIT = 'N'
PERFORM 71115-CNP-SETUP-DNETPRCG
END-IF
MOVE 'OT'                 TO WS-TSFMSNPR-PROD-GROUP
MOVE WS-UIWA-OTH-SUB-PROD TO WS-TSFMSNPR-PROD
PERFORM 71115-CNP-LINK-TSFMSNPR
IF WS-TSFMSNPR-RETURN-CODE = ZERO
PERFORM 71115-CNP-SET-NET-COST-AND-DSC

IF PFID-PRC-AUTO-TAX-FLG = 'Y'
MOVE WS-UIWA-OTH-PPU    TO WS-OTH-PPU-HOLD
MOVE WS-UIWA-OTH-COST   TO WS-OTH-COST-HOLD
MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-OTH-PPU
PERFORM 71115-CNP-REMOVE-CAN-TAXES

MOVE ZEROS            TO WS-UIWA-TAX-AMT
MOVE WS-UIWA-OTH-PPU  TO WS-NET-TOT-CST-AMT
MOVE WS-OTH-PPU-HOLD  TO WS-UIWA-OTH-PPU
MOVE WS-OTH-COST-HOLD TO WS-UIWA-OTH-COST
END-IF
PERFORM 71115-CNP-CHK-FOR-RECOMP
IF WS-RECOMP-SW = 'Y'
PERFORM 71115-CNP-RECOMPUTE-OTH
END-IF

IF WS-NET-PRC-REL-TYP-CD = 'P'
PERFORM 71115-CNP-OPT-P-OTH-PROCESS
END-IF
END-IF.





71115-CNP-OPT-P-NR2-PROCESS.

MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-NR2-PPU-SC.
COMPUTE WS-UIWA-NR2-COST-SC = WS-UIWA-NR2-PPU-SC *
WS-UIWA-NR2-QTY-SC.

PERFORM 71115-CNP-OPT-P-NR2-CONV.

COMPUTE WS-UIWA-INVOICE-AMT-SC = (WS-UIWA-NR2-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC  +
WS-UIWA-CASH-AMT-SC).

PERFORM 71115-CNP-OPT-P-INV-AMT-CONV.

MOVE 'N' TO WS-UIWA-NR2-SUB-PROD-DSC.

IF COM-NET-PRICING-FLAG = SPACES
MOVE 'P' TO COM-NET-PRICING-FLAG
END-IF.


71115-CNP-OPT-P-NR2-CONV.


IF COM-US-COMP-US-SC
MOVE WS-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST
WS-UIWA-NR2-COST-US
MOVE WS-UIWA-NR2-PPU-SC  TO WS-UIWA-NR2-PPU
WS-UIWA-NR2-PPU-US
END-IF.


IF COM-US-COMP-CN-SC
MOVE WS-UIWA-NR2-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST
WS-UIWA-NR2-COST-US
MOVE WS-UIWA-NR2-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR2-PPU
WS-UIWA-NR2-PPU-US
END-IF.



IF COM-CN-COMP-CN-SC
MOVE WS-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST
MOVE WS-UIWA-NR2-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST-US
MOVE WS-UIWA-NR2-PPU-SC  TO WS-UIWA-NR2-PPU
MOVE WS-UIWA-NR2-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR2-PPU-US
END-IF.



IF COM-CN-COMP-US-SC
MOVE WS-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST-US
MOVE WS-UIWA-NR2-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST
MOVE WS-UIWA-NR2-PPU-SC  TO WS-UIWA-NR2-PPU-US
MOVE WS-UIWA-NR2-PPU-SC  TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL              TO WS-UIWA-NR2-PPU
END-IF.





71115-CNP-OPT-P-NR1-PROCESS.

MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-NR1-PPU-SC.
COMPUTE WS-UIWA-NR1-COST-SC = WS-UIWA-NR1-PPU-SC *
WS-UIWA-NR1-QTY-SC.

PERFORM 71115-CNP-OPT-P-NR1-CONV.

COMPUTE WS-UIWA-INVOICE-AMT-SC = (WS-UIWA-NR2-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC  +
WS-UIWA-CASH-AMT-SC).

PERFORM 71115-CNP-OPT-P-INV-AMT-CONV.

MOVE 'N' TO WS-UIWA-NR1-SUB-PROD-DSC.

IF COM-NET-PRICING-FLAG = SPACES
MOVE 'P' TO COM-NET-PRICING-FLAG
END-IF.


71115-CNP-OPT-P-NR1-CONV.


IF COM-US-COMP-US-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST
WS-UIWA-NR1-COST-US
MOVE WS-UIWA-NR1-PPU-SC  TO WS-UIWA-NR1-PPU
WS-UIWA-NR1-PPU-US
END-IF.


IF COM-US-COMP-CN-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST
WS-UIWA-NR1-COST-US
MOVE WS-UIWA-NR1-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR1-PPU
WS-UIWA-NR1-PPU-US
END-IF.



IF COM-CN-COMP-CN-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST
MOVE WS-UIWA-NR1-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST-US
MOVE WS-UIWA-NR1-PPU-SC  TO WS-UIWA-NR1-PPU
MOVE WS-UIWA-NR1-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR1-PPU-US
END-IF.



IF COM-CN-COMP-US-SC
MOVE WS-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST-US
MOVE WS-UIWA-NR1-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST
MOVE WS-UIWA-NR1-PPU-SC  TO WS-UIWA-NR1-PPU-US
MOVE WS-UIWA-NR1-PPU-SC  TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL              TO WS-UIWA-NR1-PPU
END-IF.





71115-CNP-OPT-P-REF-PROCESS.

MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-REF-PPU-SC.
COMPUTE WS-UIWA-REF-COST-SC = WS-UIWA-REF-PPU-SC *
WS-UIWA-REF-QTY-SC.

PERFORM 71115-CNP-OPT-P-REF-CONV.

COMPUTE WS-UIWA-INVOICE-AMT-SC = (WS-UIWA-NR2-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC  +
WS-UIWA-CASH-AMT-SC).

PERFORM 71115-CNP-OPT-P-INV-AMT-CONV.

MOVE 'N' TO WS-UIWA-REF-SUB-PROD-DSC.

IF COM-NET-PRICING-FLAG = SPACES
MOVE 'P' TO COM-NET-PRICING-FLAG
END-IF.


71115-CNP-OPT-P-REF-CONV.


IF COM-US-COMP-US-SC
MOVE WS-UIWA-REF-COST-SC TO WS-UIWA-REF-COST
WS-UIWA-REF-COST-US
MOVE WS-UIWA-REF-PPU-SC  TO WS-UIWA-REF-PPU
WS-UIWA-REF-PPU-US
END-IF.


IF COM-US-COMP-CN-SC
MOVE WS-UIWA-REF-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST
WS-UIWA-REF-COST-US
MOVE WS-UIWA-REF-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-REF-PPU
WS-UIWA-REF-PPU-US
END-IF.



IF COM-CN-COMP-CN-SC
MOVE WS-UIWA-REF-COST-SC TO WS-UIWA-REF-COST
MOVE WS-UIWA-REF-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST-US
MOVE WS-UIWA-REF-PPU-SC  TO WS-UIWA-REF-PPU
MOVE WS-UIWA-REF-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-REF-PPU-US
END-IF.



IF COM-CN-COMP-US-SC
MOVE WS-UIWA-REF-COST-SC TO WS-UIWA-REF-COST-US
MOVE WS-UIWA-REF-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST
MOVE WS-UIWA-REF-PPU-SC  TO WS-UIWA-REF-PPU-US
MOVE WS-UIWA-REF-PPU-SC  TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL              TO WS-UIWA-REF-PPU
END-IF.





71115-CNP-OPT-P-OTH-PROCESS.

MOVE WS-NET-TOT-CST-AMT TO WS-UIWA-OTH-PPU-SC.
COMPUTE WS-UIWA-OTH-COST-SC = WS-UIWA-OTH-PPU-SC *
WS-UIWA-OTH-QTY-SC.

PERFORM 71115-CNP-OPT-P-OTH-CONV.

COMPUTE WS-UIWA-INVOICE-AMT-SC = (WS-UIWA-NR2-COST-SC +
WS-UIWA-OTH-COST-SC +
WS-UIWA-REF-COST-SC +
WS-UIWA-NR1-COST-SC +
WS-UIWA-OIL-COST-SC +
WS-UIWA-PR1-COST-SC +
WS-UIWA-PR2-COST-SC +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT-SC  +
WS-UIWA-CASH-AMT-SC).

PERFORM 71115-CNP-OPT-P-INV-AMT-CONV.

MOVE 'N' TO WS-UIWA-OTH-SUB-PROD-DSC.

IF COM-NET-PRICING-FLAG = SPACES
MOVE 'P' TO COM-NET-PRICING-FLAG
END-IF.


71115-CNP-OPT-P-OTH-CONV.


IF COM-US-COMP-US-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST
WS-UIWA-OTH-COST-US
MOVE WS-UIWA-OTH-PPU-SC  TO WS-UIWA-OTH-PPU
WS-UIWA-OTH-PPU-US
END-IF.


IF COM-US-COMP-CN-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST
WS-UIWA-OTH-COST-US
MOVE WS-UIWA-OTH-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-OTH-PPU
WS-UIWA-OTH-PPU-US
END-IF.



IF COM-CN-COMP-CN-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST
MOVE WS-UIWA-OTH-COST-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST-US
MOVE WS-UIWA-OTH-PPU-SC  TO WS-UIWA-OTH-PPU
MOVE WS-UIWA-OTH-PPU-SC  TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-OTH-PPU-US
END-IF.



IF COM-CN-COMP-US-SC
MOVE WS-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST-US
MOVE WS-UIWA-OTH-COST-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST
MOVE WS-UIWA-OTH-PPU-SC  TO WS-UIWA-OTH-PPU-US
MOVE WS-UIWA-OTH-PPU-SC  TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL              TO WS-UIWA-OTH-PPU
END-IF.


71115-CNP-OPT-P-INV-AMT-CONV.


IF COM-US-COMP-US-SC
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-UIWA-INVOICE-AMT
WS-UIWA-INVOICE-AMT-US
END-IF.


IF COM-US-COMP-CN-SC
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS          TO WS-UIWA-INVOICE-AMT
WS-UIWA-INVOICE-AMT-US
END-IF.



IF COM-CN-COMP-CN-SC
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-UIWA-INVOICE-AMT
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS          TO WS-UIWA-INVOICE-AMT-US
END-IF.



IF COM-CN-COMP-US-SC
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-UIWA-INVOICE-AMT-US
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS    TO WS-UIWA-INVOICE-AMT
END-IF.


71115-CNP-RECOMPUTE-OTH.

MOVE WS-UIWA-OTH-COST-SC TO WS-NP-COST
MOVE WS-UIWA-OTH-QTY-SC  TO WS-NP-QTY
COMPUTE WS-NP-RETAIL-PRICE ROUNDED =
WS-UIWA-OTH-COST-SC / WS-UIWA-OTH-QTY-SC
END-COMPUTE
PERFORM 71115-CNP-RECOMPUTATION
IF WS-USE-THIS-NET-PRICING = 'Y'
MOVE 'Y'            TO WS-DNETPRCG-OTH-USED
MOVE WS-NP-DISCOUNT TO WS-DNETPRCG-OTH-DISC
MOVE COM-NET-PRICING-FLAG TO WS-DNET-OTH-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-OTH-DISC-AMT
IF (WS-DNETPRCG-NR2-USED NOT = 'Y')
AND (WS-DNETPRCG-NR1-USED NOT = 'Y')
AND (WS-DNETPRCG-REF-USED NOT = 'Y')
PERFORM 71115-SAVE-FMLOG-FLDS
END-IF
PERFORM 71115-SAVE-FMLOG-FLDS-CP

MOVE 'N' TO WS-UIWA-OTH-SUB-PROD-DSC
ELSE
IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y'
AND (WS-DNETPRCG-PFID-CD = SPACES)
MOVE 'Y'        TO WS-DNETPRCG-OTH-USED
MOVE COM-NET-PRICING-FLAG TO WS-DNET-OTH-REL-TYP-CD
MOVE WS-DISC-AMTP         TO WS-DNET-OTH-DISC-AMT
PERFORM 71115-SAVE-FMLOG-FLDS
PERFORM 71115-SAVE-FMLOG-FLDS-CP
END-IF
END-IF.

71115-CNP-SETUP-DNETPRCG.

INITIALIZE                       WS-TSFMSNPR-COMMAREA
MOVE SCM-PRICING-FLE-ID       TO WS-TSFMSNPR-PFID
MOVE PRM-ACCT-NUMBER          TO WS-TSFMSNPR-ACCT
MOVE PRM-SUB-ACCT-NUMB        TO WS-TSFMSNPR-CUST
MOVE SCM-SERVICE-CENTER-CODE  TO WS-TSFMSNPR-LOC
MOVE PRM-SUB-NETWORK-GROUP-ID TO WS-TSFMSNPR-SUB-NETW
IF WS-UIWA-FUELING-DATE NUMERIC
AND WS-UIWA-FUELING-DATE > ZERO
MOVE WS-UIWA-FUELING-DATE    TO WS-TSFMSNPR-FUELING-DT
IF WS-UIWA-FUELING-TIME NUMERIC
AND NOT (WS-UIWA-SYSTEM-ID NUMERIC
AND WS-UIWA-SYSTEM-ID = 1)
MOVE WS-UIWA-FUELING-TIME TO WS-TSFMSNPR-FUELING-TM
END-IF
END-IF
MOVE 'Y' TO WS-DNETPRCG-INIT.

71115-CNP-LINK-TSFMSNPR.

MOVE '71115-CNP-LINK-TSFMSNPR' TO CXUTS0ML-PARAGRAPH
MOVE 'LINK TSFMSNPR'           TO CXUTS0ML-COMMAND
EXEC CICS LINK
PROGRAM  ('TSFMSNPR')
COMMAREA (WS-TSFMSNPR-COMMAREA)
LENGTH   (LENGTH OF WS-TSFMSNPR-COMMAREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


71115-CNP-SET-NET-COST-AND-DSC.

IF COM-DIRECT-BILLING-FUEL = 1
MOVE WS-TSFMSNPR-DB-REL-TYP-CD TO WS-NET-PRC-REL-TYP-CD
MOVE WS-TSFMSNPR-DB-COST-AMT   TO WS-NET-TOT-CST-AMT
MOVE WS-TSFMSNPR-DB-CENT-OFF   TO WS-NET-CNT-OFF-AMT
ELSE
MOVE WS-TSFMSNPR-FN-REL-TYP-CD TO WS-NET-PRC-REL-TYP-CD
MOVE WS-TSFMSNPR-FN-COST-AMT   TO WS-NET-TOT-CST-AMT
MOVE WS-TSFMSNPR-FN-CENT-OFF   TO WS-NET-CNT-OFF-AMT
END-IF.


71115-CNP-REMOVE-CAN-TAXES.

MOVE 'B'                       TO CTLA-FUNCTION-CODE.
MOVE SCM-LOCATION-STATE-2      TO CTLA-PROVINCE.
MOVE WS-BUSINESS-DATE-CYYMMDD  TO CTLA-MQ-TRAN-DATE.
MOVE EIBTIME                   TO CTLA-MQ-TRAN-TIME.
IF FMDL-RK-CONTROL-NUMBER NOT NUMERIC
MOVE ZEROES TO FMDL-RK-CONTROL-NUMBER
END-IF.
MOVE FMDL-RK-CONTROL-NUMBER    TO CTLA-MQ-CONTROL-NBR.
MOVE ZEROS                     TO CTLA-CAN-CONVERSION-RATE.
MOVE SPACE                     TO CTLA-CAN-CONVERSION-SW.
MOVE WS-USER-INPUT-WORK-AREA   TO CTLA-USER-INPUT-WORK-AREA.
PERFORM 20306-LINK-TO-TSFMO0CT.
MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA.



71115-CNP-CHK-FOR-RECOMP.


MOVE 'N' TO WS-RECOMP-SW
EVALUATE WS-NET-PRC-REL-TYP-CD
WHEN 'R'
IF WS-NET-CNT-OFF-AMT > ZERO
MOVE 'Y' TO WS-RECOMP-SW
END-IF
WHEN 'C'
IF WS-NET-TOT-CST-AMT > ZERO
MOVE 'Y' TO WS-RECOMP-SW
END-IF
WHEN 'B'
IF WS-NET-CNT-OFF-AMT > ZERO
OR WS-NET-TOT-CST-AMT > ZERO
MOVE 'Y' TO WS-RECOMP-SW
END-IF
END-EVALUATE.


71115-CNP-RECOMPUTATION.

MOVE ZEROES             TO WS-DISC-AMTP
MOVE WS-NP-RETAIL-PRICE TO WS-NP-RETAIL-PRICE-HOLD
MOVE WS-NP-COST         TO WS-NP-COST-HOLD
IF WS-NP-CONV-DISC-TO-US = 'Y'
PERFORM 71115-CONV-DISC-TO-US
END-IF
IF WS-NP-CONV-DISC-TO-CAN = 'Y'
PERFORM 71115-CONV-DISC-TO-CAN
END-IF
MOVE 'N' TO WS-USE-THIS-NET-PRICING
PERFORM 71115-APPLY-NET-PRICING
IF WS-USE-THIS-NET-PRICING = 'Y'
COMPUTE WS-NP-COST ROUNDED =
WS-NP-QTY * WS-NP-RETAIL-PRICE
END-COMPUTE
COMPUTE WS-NP-DISCOUNT ROUNDED =
(WS-NP-RETAIL-PRICE-HOLD - WS-NP-RETAIL-PRICE) * 100
END-COMPUTE
COMPUTE WS-DNETPRCG-TOT-DISC-ACCUM =
WS-DNETPRCG-TOT-DISC-ACCUM
+ (WS-NP-COST-HOLD - WS-NP-COST)
END-COMPUTE
COMPUTE WS-DISC-AMTP = WS-NP-COST-HOLD - WS-NP-COST
END-IF.

71115-CONV-DISC-TO-US.

IF WS-NET-CNT-OFF-AMT > ZERO
MOVE WS-NET-CNT-OFF-AMT TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-NET-CNT-OFF-AMT
END-IF
IF WS-NET-TOT-CST-AMT > ZERO
MOVE WS-NET-TOT-CST-AMT TO WS-PPL
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-NET-TOT-CST-AMT
END-IF.

71115-CONV-DISC-TO-CAN.

IF WS-NET-CNT-OFF-AMT > ZERO
MOVE WS-NET-CNT-OFF-AMT TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-NET-CNT-OFF-AMT
END-IF
IF WS-NET-TOT-CST-AMT > ZERO
MOVE WS-NET-TOT-CST-AMT TO WS-PPG
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-NET-TOT-CST-AMT
END-IF.

71115-APPLY-NET-PRICING.

IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT NOT = 'Y'
IF WS-NET-PRC-REL-TYP-CD = 'R' OR 'B'
SUBTRACT WS-NET-CNT-OFF-AMT
FROM WS-NP-RETAIL-PRICE
MOVE 'R' TO COM-NET-PRICING-FLAG
MOVE 'Y' TO WS-USE-THIS-NET-PRICING
END-IF
IF WS-NET-PRC-REL-TYP-CD = 'C' OR 'B'
IF WS-NET-TOT-CST-AMT < WS-NP-RETAIL-PRICE
MOVE WS-NET-TOT-CST-AMT
TO WS-NP-RETAIL-PRICE
MOVE 'C' TO COM-NET-PRICING-FLAG
MOVE 'Y' TO WS-USE-THIS-NET-PRICING
END-IF
END-IF
END-IF.


IF PFID-PRC-VALID-POS-FLG OF DPFIDMNT = 'Y'
AND (WS-NP-RETAIL-PRICE-HOLD > 0)
AND (WS-NP-QTY > PFID-PRC-MIN-QTY OF DPFIDMNT)
IF WS-NET-TOT-CST-AMT > WS-NP-RETAIL-PRICE-HOLD
COMPUTE WS-PRC-POS-VARIANCE =
WS-NET-TOT-CST-AMT -
WS-NP-RETAIL-PRICE-HOLD
ELSE
COMPUTE WS-PRC-POS-VARIANCE =
WS-NP-RETAIL-PRICE-HOLD -
WS-NET-TOT-CST-AMT
END-IF
IF WS-PRC-POS-VARIANCE > PFID-PRC-POS-VRNC-AMT
OF DPFIDMNT
MOVE -1                   TO FPXPAMTL
MOVE FUEL-PRICE-ERR       TO OUT-COMENT
MOVE FUEL-PRICE-ERR-N     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF

MOVE SPACES                   TO COM-COST-PLUS-TYPE
COM-COST-PLUS-FLAG
END-IF.

71115-SAVE-FMLOG-FLDS.





MOVE WS-TSFMSNPR-PROD      TO WS-DNETPRCG-PRD-CD
MOVE WS-TSFMSNPR-PFID      TO WS-DNETPRCG-PFID-CD
MOVE WS-TSFMSNPR-PFID-FILE-SW TO WS-DNETPRCG-PFID-FILE-SW
MOVE WS-NET-PRC-REL-TYP-CD TO WS-DNETPRCG-TYP-CD

MOVE WS-TSFMSNPR-EFFCTV-DT-TS (02:03)
TO WS-DNETPRCG-EFFCTV-DTA (01:03)
MOVE WS-TSFMSNPR-EFFCTV-DT-TS (06:02)
TO WS-DNETPRCG-EFFCTV-DTA (04:02)
MOVE WS-TSFMSNPR-EFFCTV-DT-TS (09:02)
TO WS-DNETPRCG-EFFCTV-DTA (06:02)
MOVE WS-TSFMSNPR-EFFCTV-DT-TS (12:02)
TO WS-DNETPRCG-EFFCTV-DTA (08:02)
MOVE WS-TSFMSNPR-EFFCTV-DT-TS (15:02)
TO WS-DNETPRCG-EFFCTV-DTA (10:02)
IF WS-DNETPRCG-EFFCTV-DT NOT NUMERIC
MOVE ZERO TO WS-DNETPRCG-EFFCTV-DT
END-IF.


71115-SAVE-FMLOG-FLDS-CP.


MOVE WS-TSFMSNPR-DNETPRC1 TO DNETPRC1.
MOVE 1                    TO WS-INDEX.

EVALUATE NET-PRD-GRP
WHEN 'D2'
MOVE 1   TO WS-INDEX
WHEN 'D1'
MOVE 2   TO WS-INDEX
WHEN 'RF'
MOVE 3   TO WS-INDEX
WHEN 'OT'
MOVE 4   TO WS-INDEX
END-EVALUATE.

MOVE NET-PRD-GRP                 TO
WS-DNET-CP-PRD-GRP (WS-INDEX)
MOVE PRD-CD                      TO
WS-DNET-CP-PRD-CD(WS-INDEX)
MOVE NET-PRC-REL-TYP-CD          TO
WS-DNET-CP-REL-TYP-CD(WS-INDEX)
MOVE FNDNG-RLTNSHP-CD            TO
WS-DNET-CP-FND-REL-CD(WS-INDEX)
MOVE NET-OPIS-RCK-CTY-NBR        TO
WS-DNET-CP-RACK-CITY(WS-INDEX)
MOVE NET-OPIS-RCK-SPPLR-NBR      TO
WS-DNET-CP-SUPPLIER(WS-INDEX)
MOVE NET-RCK-PRC                 TO
WS-DNET-CP-RACK-PRC(WS-INDEX)
MOVE NET-RCK-DT                  TO
WS-DNET-CP-RACK-DATE(WS-INDEX)
MOVE NET-FED-TAX-PCT             TO
WS-DNET-CP-FED-TAX-PCT(WS-INDEX)
MOVE NET-ST-TAX-PCT              TO
WS-DNET-CP-ST-TAX-PCT(WS-INDEX)
MOVE NET-ST-SF-RT-PCT            TO
WS-DNET-CP-ST-SF-RT-PCT(WS-INDEX)
MOVE NET-LUST-RT-PCT             TO
WS-DNET-CP-LUST-RT-PCT(WS-INDEX)
MOVE NET-TRNSPRT-RT-PCT          TO
WS-DNET-CP-TRNS-RT-PCT(WS-INDEX)
MOVE NET-MSC-RT-PCT              TO
WS-DNET-CP-MISC-RT-PCT(WS-INDEX)
MOVE NET-TAX-RT-PCT              TO
WS-DNET-CP-TAX-RT-PCT(WS-INDEX)
MOVE NET-MSC-RT-DESC             TO
WS-DNET-CP-MISC-RT-DSC(WS-INDEX)
MOVE NET-TAX-APPLIES-RCK-FLG     TO
WS-DNET-CP-TAX-APP-RCK(WS-INDEX)
MOVE NET-TAX-APPLIES-FED-FLG     TO
WS-DNET-CP-TAX-APP-FED(WS-INDEX)
MOVE NET-TAX-APPLIES-ST-FLG      TO
WS-DNET-CP-TAX-APP-ST(WS-INDEX)
MOVE NET-TAX-APPLIES-SF-FLG      TO
WS-DNET-CP-TAX-APP-SF(WS-INDEX)
MOVE NET-TAX-APPLIES-LUST-FLG    TO
WS-DNET-CP-TAX-APP-LUST(WS-INDEX)
MOVE NET-TAX-APPLIES-TRNSPRT-FLG TO
WS-DNET-CP-TAX-APP-TRAN(WS-INDEX)
MOVE NET-TAX-APPLIES-MSC-FLG     TO
WS-DNET-CP-TAX-APP-MISC(WS-INDEX)
MOVE NET-TAX-APPLIES-MRKUP-FLG   TO
WS-DNET-CP-TAX-APP-MKUP(WS-INDEX)
MOVE NET-MRCH-MRKUP-PCT          TO
WS-DNET-CP-MRCH-MKUP(WS-INDEX)
MOVE SALES-TAX-PPU-PCT           TO
WS-DNET-CP-STAX-CPG (WS-INDEX).

MOVE WS-NET-TOT-CST-AMT          TO
WS-DNET-TOT-CST-AMT (WS-INDEX).
MOVE NET-CNT-OFF-AMT             TO
WS-DNET-CNT-OFF-AMT (WS-INDEX).


71195-CHECK-RMF-PENDING.


IF COM-RMF-FLAG = 'Y'
MOVE WS-CURRENT-DATE-YYYYMMDD TO WS-WORK-CURR-DATE
MOVE 01                       TO WS-WORK-CURR-DATE-DD.


IF COM-RMF-FLAG = 'Y' AND
RMR-RMF-PPG-DATE-ACTIVE > ZEROES
MOVE RMR-RMF-PPG-DATE-ACTIVE TO WS-WORK-PEND-DATE
EVALUATE TRUE
WHEN WS-WORK-PEND-DATE = WS-WORK-CURR-DATE
MOVE RMR-RMF-PEN-PPG    TO RMR-RMF-CUR-PPG
MOVE ZEROES             TO RMR-RMF-PEN-PPG
PERFORM 60196-BUILD-ACTIVE-DATE
MOVE WS-WORK-CURR-DATE  TO RMR-RMF-PPG-DATE-ACTIVE
WHEN WS-WORK-PEND-DATE < WS-WORK-CURR-DATE
MOVE 'N'                TO COM-RMF-FLAG
MOVE ZEROES             TO RMR-RMF-CUR-PPG
MOVE ZEROES             TO RMR-RMF-PEN-PPG
MOVE ZEROES             TO RMR-RMF-PPG-DATE-ACTIVE
WHEN OTHER

MOVE 'N'                TO COM-RMF-FMRELAT-UPDATE
END-EVALUATE.


GCPI-COMPUTE-CALC-DAYS.


MOVE 0 TO WS-WEEKS
WS-WEEK-REMAINDER.
INITIALIZE                   CALENDAR-PARAMETERS.
MOVE +023                 TO CALENDAR-OPTIONS.
MOVE WS-UIWA-FUELING-DATE TO CALENDAR-MMDDYY.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED.
IF CALENDAR-MMDDYY = '999999'
MOVE 'X' TO CP-ERROR-FLAG
ELSE
MOVE CALENDAR-DAYS TO WS-CPC-CALC-DAYS
DIVIDE WS-CPC-CALC-DAYS BY 7 GIVING WS-WEEKS
REMAINDER WS-WEEK-REMAINDER
END-IF.


GCPI-GET-FMRACK-DATA.

MOVE 'N'    TO WS-NR2-CP-SET,
WS-NR1-CP-SET,
WS-REF-CP-SET.

IF WS-HOLD-NR2-CP-SUFFIX > SPACES
PERFORM GCPI-GET-NR2-FMRACK
IF CP-ERROR-FLAG = ' '
PERFORM GCPI-CHECK-NR2-MATCHES
ELSE
IF (NOT THIS-IS-A-POS-TRANS) AND
RP-KEY > SPACES
MOVE 'GCPI-GET-FMRACK-DATA'  TO CXUTS0ML-PARAGRAPH
MOVE 'NOT FOUND IN FMRACK: ' TO WS-CXML-WORK
CXUTS0ML-COMMAND
MOVE RP-KEY                  TO WS-CXML-WORK (25:)
PERFORM LOG-TO-CXML
END-IF
END-IF
END-IF.
MOVE ' ' TO CP-ERROR-FLAG.

IF WS-NR1-CP-SET = 'N' AND
WS-HOLD-NR1-CP-SUFFIX > SPACES
PERFORM GCPI-GET-NR1-FMRACK
IF CP-ERROR-FLAG = ' '
PERFORM GCPI-CHECK-NR1-MATCHES
END-IF
END-IF.
MOVE ' ' TO CP-ERROR-FLAG.

IF WS-REF-CP-SET = 'N' AND
WS-HOLD-REF-CP-SUFFIX > SPACES
PERFORM GCPI-GET-REF-FMRACK
END-IF.
MOVE ' ' TO CP-ERROR-FLAG.
IF WS-NR2-CP-SET = 'N' AND
WS-NR1-CP-SET = 'N' AND
WS-REF-CP-SET = 'N'
MOVE 'X'               TO CP-ERROR-FLAG
MOVE 'N'               TO COM-COST-PLUS-FLAG
END-IF.


GCPI-GET-NR2-FMRACK.

MOVE WS-HOLD-NR2-CP-SUFFIX   TO RP-SUPPLIER-NUMBER (4:)
PERFORM GCPI-READ-FMRACK.
IF CP-ERROR-FLAG = ' '
MOVE RP-PRICE-TABLE TO WS-NR2-RP-PRICE-TABLE
MOVE 'Y' TO WS-NR2-CP-SET
ELSE
PERFORM
VARYING CP-IDX FROM 1 BY 1
UNTIL CP-IDX > 7
MOVE ZEROS               TO WS-NR2-RP-DATE (CP-IDX)
WS-NR2-RP-NR1-PPG (CP-IDX)
WS-NR2-RP-NR2-PPG (CP-IDX)
END-PERFORM
END-IF.


GCPI-CHECK-NR2-MATCHES.

IF WS-HOLD-NR2-CP-SUFFIX = WS-HOLD-NR1-CP-SUFFIX
MOVE WS-NR2-RP-PRICE-TABLE TO WS-NR1-RP-PRICE-TABLE
MOVE 'Y' TO WS-NR1-CP-SET
END-IF.

IF WS-HOLD-NR2-CP-SUFFIX = WS-HOLD-REF-CP-SUFFIX
MOVE WS-NR2-RP-PRICE-TABLE TO WS-REF-RP-PRICE-TABLE
MOVE 'Y' TO WS-REF-CP-SET
END-IF.


GCPI-GET-NR1-FMRACK.

MOVE WS-HOLD-NR1-CP-SUFFIX TO RP-SUPPLIER-NUMBER (4:)
PERFORM GCPI-READ-FMRACK.
IF CP-ERROR-FLAG = ' '
MOVE RP-PRICE-TABLE TO WS-NR1-RP-PRICE-TABLE
MOVE 'Y' TO WS-NR1-CP-SET
ELSE
PERFORM
VARYING CP-IDX FROM 1 BY 1
UNTIL CP-IDX > 7
MOVE ZEROS               TO WS-NR1-RP-DATE (CP-IDX)
WS-NR1-RP-NR1-PPG (CP-IDX)
WS-NR1-RP-NR2-PPG (CP-IDX)
END-PERFORM
END-IF.


GCPI-CHECK-NR1-MATCHES.

IF WS-HOLD-NR1-CP-SUFFIX = WS-HOLD-REF-CP-SUFFIX
MOVE WS-NR1-RP-PRICE-TABLE TO WS-REF-RP-PRICE-TABLE
MOVE 'Y' TO WS-REF-CP-SET
END-IF.


GCPI-GET-REF-FMRACK.

MOVE WS-HOLD-REF-CP-SUFFIX TO RP-SUPPLIER-NUMBER (4:)
PERFORM GCPI-READ-FMRACK.
IF CP-ERROR-FLAG = ' '
MOVE RP-PRICE-TABLE TO WS-REF-RP-PRICE-TABLE
MOVE 'Y' TO WS-REF-CP-SET
ELSE
PERFORM
VARYING CP-IDX FROM 1 BY 1
UNTIL CP-IDX > 7
MOVE ZEROS               TO WS-REF-RP-DATE (CP-IDX)
WS-REF-RP-NR1-PPG (CP-IDX)
WS-REF-RP-NR2-PPG (CP-IDX)
END-PERFORM
END-IF.


GCPI-GET-SINGLE-FMRACK.





PERFORM GCPI-READ-FMRACK.
IF CP-ERROR-FLAG = ' '
MOVE RP-PRICE-TABLE TO WS-NR2-RP-PRICE-TABLE
END-IF.
MOVE WS-NR2-RP-PRICE-TABLE TO WS-NR1-RP-PRICE-TABLE.
MOVE WS-NR2-RP-PRICE-TABLE TO WS-REF-RP-PRICE-TABLE.
MOVE 'Y' TO WS-NR2-CP-SET.
MOVE 'Y' TO WS-NR1-CP-SET.
MOVE 'Y' TO WS-REF-CP-SET.


GCPI-READ-FMRACK.

MOVE 'GCPI-READ-FMRACK'          TO CXUTS0ML-PARAGRAPH.
MOVE 'N' TO WS-FOUND-ON-FMRACK.
EXEC CICS READ
DATASET ('FMRACK')
INTO    (RACK-PRICE-RECORD)
RIDFLD  (RP-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE RP-KEY            TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
IF WS-UIWA-FUELING-DATE = 0
IF (NOT THIS-IS-A-POS-TRANS) AND
RP-KEY > SPACES
MOVE 'GCPI-READ-FMRACK'       TO CXUTS0ML-PARAGRAPH
MOVE 'RACK PRC NOT ON FILE: ' TO WS-CXML-WORK
CXUTS0ML-COMMAND
MOVE RP-KEY                   TO WS-CXML-WORK (25:)
PERFORM LOG-TO-CXML
END-IF
MOVE 'X' TO CP-ERROR-FLAG
MOVE 'RACK PRICE NOT ON FILE' TO OUT-COMENT
ELSE
PERFORM GCPI-READ-FMRACKH
END-IF
ELSE
MOVE 'Y' TO WS-FOUND-ON-FMRACK
IF WS-CPC-CALC-DAYS > 6
PERFORM GCPI-READ-FMRACKH
END-IF
END-IF.


GCPI-READ-FMRACKH.

MOVE 'GCPI-READ-FMRACKH'         TO CXUTS0ML-PARAGRAPH.
MOVE 'N' TO WS-WEEK-FOUND.
MOVE RP-KEY TO RH-KEY.
EXEC CICS READ
DATASET ('FMRACKH')
INTO    (RACK-HIST-RECORD)
RIDFLD  (RH-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE RH-KEY            TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
IF WS-FOUND-ON-FMRACK = 'N'
IF (NOT THIS-IS-A-POS-TRANS) AND
RP-KEY > SPACES
MOVE 'GCPI-READ-FMRACKH'      TO CXUTS0ML-PARAGRAPH
MOVE 'RACK PRC NOT ON FILE: ' TO WS-CXML-WORK
CXUTS0ML-COMMAND
MOVE RP-KEY                   TO WS-CXML-WORK (25:)
PERFORM LOG-TO-CXML
END-IF
MOVE 'X' TO CP-ERROR-FLAG
MOVE 'RACK PRICE NOT ON FILE' TO OUT-COMENT
END-IF
ELSE
PERFORM GCPI-FIND-FMRACKH-PRICE
END-IF.


GCPI-FIND-FMRACKH-PRICE.

MOVE WS-WEEKS TO X-WEEK.
ADD 1         TO X-WEEK.
MOVE WS-CURRENT-DATE-WEEKDAY-SS TO WS-WHICH-DAY.
IF WS-WHICH-DAY <= WS-WEEK-REMAINDER
ADD 7        TO WS-WHICH-DAY
END-IF.
SUBTRACT WS-WEEK-REMAINDER FROM WS-WHICH-DAY.
IF WS-WHICH-DAY > 2
IF WS-WEEK-REMAINDER < WS-CURRENT-DATE-WEEKDAY-SS
SUBTRACT 1 FROM X-WEEK
END-IF
ELSE
IF WS-WEEK-REMAINDER > WS-CURRENT-DATE-WEEKDAY-SS
ADD 1 TO X-WEEK
END-IF
END-IF.
IF X-WEEK > 17
MOVE 17 TO X-WEEK
END-IF.
IF X-WEEK < 1
MOVE 1 TO X-WEEK
END-IF.
PERFORM UNTIL WS-WEEK-FOUND = 'Y' OR X-WEEK = 0
IF RH-DATE (X-WEEK 1) > 0
MOVE RH-PRICE-WEEKS (X-WEEK) TO RP-PRICE-TABLE
PERFORM GCPI-CHECK-EACH-RP-DATE
MOVE 'Y' TO WS-WEEK-FOUND
ELSE
SUBTRACT 1 FROM X-WEEK
END-IF
END-PERFORM.


GCPI-CHECK-EACH-RP-DATE.

MOVE WS-UIWA-FUELING-DATE TO WS-WORK-DATE.
MOVE WS-WORK-DATE TO CALENDAR-DATE-NUM.
MOVE MDY-YY       TO WS-WORK-FPDT(1:2).
MOVE MDY-MM       TO WS-WORK-FPDT(3:2).
MOVE MDY-DD       TO WS-WORK-FPDT(5:2).
COMPUTE X-WEEK2 = X-WEEK + 1.
PERFORM VARYING X-DAY FROM 1 BY 1 UNTIL X-DAY > 7
IF RP-DATE (X-DAY) > ZEROES
MOVE RP-DATE (X-DAY) TO WS-WORK-DATE
MOVE WS-WORK-DATE TO CALENDAR-DATE-NUM
MOVE MDY-YY       TO WS-WORK-RPDT(1:2)
MOVE MDY-MM       TO WS-WORK-RPDT(3:2)
MOVE MDY-DD       TO WS-WORK-RPDT(5:2)
IF WS-WORK-RPDT > WS-WORK-FPDT
IF X-WEEK2 > 17
MOVE ZEROES TO RP-DATE (X-DAY)
RP-NR1-PPG (X-DAY)
RP-NR2-PPG (X-DAY)
ELSE
PERFORM GCPI-CHECK-90-DAYS
END-IF
END-IF
END-IF
END-PERFORM.


GCPI-CHECK-90-DAYS.

INITIALIZE CALENDAR-PARAMETERS
CALENDAR-NAMES.
MOVE WS-WORK-RPDT TO CALENDAR-YYMMDD.
MOVE +123         TO CALENDAR-OPTIONS.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS
CALENDAR-NAMES.
IF CALENDAR-DAYS < -90
MOVE ZEROES TO RP-DATE (X-DAY)
RP-NR1-PPG (X-DAY)
RP-NR2-PPG (X-DAY)
ELSE
MOVE RH-PRICE-INFO (X-WEEK2 X-DAY)
TO RP-PRICE-INFO (X-DAY)
END-IF.


COMPUTE-COST-PLUS-PRICES.


MOVE 7 TO WS-CCPP-INDEX
IF WS-CP-FOR-SUBPROD = 'Y'
MOVE COM-CP-WEEKDAY             TO WS-WEEKDAY
MOVE 'Y'                        TO WS-WEEKDAY-FOUND
ELSE
MOVE WS-CURRENT-DATE-WEEKDAY-SS TO WS-WEEKDAY
PERFORM CCPP-BATCH-FUEL-CHK
END-IF.
IF CP-ERROR-FLAG = 'X'
GO TO CCPP-EXIT.



PERFORM CCPP-GET-PRICE-FOR-WEEK.



IF WS-WEEKDAY-FOUND = 'N'
PERFORM CCPP-GET-NEWEST-PRICE
IF EIBTRNID = 'FMBP' OR 'FMMP'
IF WS-WEEKDAY-FOUND = 'Y'
IF WS-DAYS-TABLE (WS-WEEKDAY) > 14
MOVE 'X' TO CP-ERROR-FLAG
END-IF
ELSE
MOVE 'X' TO CP-ERROR-FLAG
END-IF
END-IF
END-IF.
IF CP-ERROR-FLAG = 'X'
GO TO CCPP-EXIT.




IF WS-CP-FOR-SUBPROD = 'Y'
PERFORM CCPP-RECALC-SET-CA
PERFORM CCPP-RECALC-FOR-SUBPROD
ELSE
PERFORM CCPP-SET-CP-COMMAREA
PERFORM CCPP-ADD-IN-TAXES
PERFORM CCPP-CHECK-FEDERAL-TAX
PERFORM CCPP-CHECK-STATE-FUEL-TAX
PERFORM CCPP-CHECK-STATE-SUPER-TAX
PERFORM CCPP-CHECK-LUST-TAX
PERFORM CCPP-CHECK-TRANSPORTATION-TAX
PERFORM CCPP-CHECK-MISC-TAX
PERFORM CCPP-CHECK-MARKUP-TAX
END-IF.


COMPUTE WS-NR2-COST = WS-NR2-COST + .000005.
COMPUTE WS-NR1-COST = WS-NR1-COST + .000005.
COMPUTE WS-REF-COST = WS-REF-COST + .000005.


IF COM-CP-NR2-RACK-PPG = ZEROS
COMPUTE WS-NR2-COST = ZEROS
END-IF.
IF COM-CP-NR1-RACK-PPG = ZEROS
COMPUTE WS-NR1-COST = ZEROS
END-IF.
IF WS-REF-RACK-PPG     = ZEROS
COMPUTE WS-REF-COST = ZEROS
END-IF.


CCPP-EXIT.

EXIT.


CCPP-BATCH-FUEL-CHK.

IF EIBTRNID = 'FMBP' OR 'FMMP'
PERFORM CCPP-BATCH-FUEL-DT-PROC
IF CP-ERROR-FLAG NOT = 'X'
PERFORM CCPP-GET-RESET-WEEKDAY
END-IF
ELSE
PERFORM CCPP-GET-RESET-WEEKDAY
END-IF.

CCPP-BATCH-FUEL-DT-PROC.

EVALUATE TRUE
WHEN WS-UIWA-FUELING-DATE NOT NUMERIC
WHEN WS-UIWA-FUELING-DATE = ZERO OR 999999
MOVE 'X' TO CP-ERROR-FLAG

WHEN WS-UIWA-FUELING-DATE (03:02) =
WS-CURRENT-DATE-YYYYMMDD-DD
AND WS-UIWA-FUELING-DATE (01:02) =
WS-CURRENT-DATE-YYYYMMDD-MM
AND WS-UIWA-FUELING-DATE (05:02) =
WS-CURRENT-DATE-YYYYMMDD-YY
CONTINUE
WHEN OTHER
IF CP-ERROR-FLAG = ' '
PERFORM CCPP-BATCH-FUEL-DT-PROC2
END-IF
END-EVALUATE.


CCPP-BATCH-FUEL-DT-PROC2.

IF WS-CPC-CALC-DAYS > 6
IF WS-WEEK-FOUND = 'Y'
MOVE 6 TO WS-CCPP-INDEX
IF WS-WEEKDAY <= WS-WEEK-REMAINDER
ADD 7                     TO WS-WEEKDAY
END-IF
SUBTRACT WS-WEEK-REMAINDER FROM WS-WEEKDAY
ELSE
MOVE 'X' TO CP-ERROR-FLAG
END-IF
ELSE
COMPUTE WS-CCPP-INDEX = 7 - WS-CPC-CALC-DAYS
END-COMPUTE
IF WS-WEEKDAY <= WS-CPC-CALC-DAYS
ADD 7                    TO WS-WEEKDAY
END-IF
SUBTRACT WS-CPC-CALC-DAYS FROM WS-WEEKDAY
END-IF.


CCPP-GET-RESET-WEEKDAY.





MOVE 'N' TO WS-WEEKDAY-FOUND.
PERFORM CCPP-GET-WEEKDAY THRU CCPP-GW-EXIT
VARYING WS-INDEX FROM 1 BY 1
UNTIL WS-INDEX > WS-CCPP-INDEX.
IF WS-WEEKDAY-FOUND = 'N'
MOVE 'WEEKDAY TO UPDATE RACK IS INVALID    ' TO OUT-COMENT
MOVE 'X' TO CP-ERROR-FLAG
IF (NOT THIS-IS-A-POS-TRANS) AND
RP-KEY > SPACES
MOVE 'CCPP-GET-RESET-WEEKDAY'  TO CXUTS0ML-PARAGRAPH
MOVE 'WDAY UPD RACK INVALID: ' TO WS-CXML-WORK
CXUTS0ML-COMMAND
MOVE RP-KEY                    TO WS-CXML-WORK (25:)
PERFORM LOG-TO-CXML
END-IF
ELSE
MOVE WS-WEEKDAY TO COM-CP-WEEKDAY
END-IF.


CCPP-GET-PRICE-FOR-WEEK.


MOVE 'N' TO WS-WEEKDAY-FOUND.
PERFORM CCPP-GET-PRICE THRU CCPP-GP-EXIT
VARYING WS-INDEX FROM 1 BY 1

UNTIL WS-INDEX > WS-CCPP-INDEX.


CCPP-GET-NEWEST-PRICE.



MOVE 99999 TO WS-WORK-DATE
PERFORM CCPP-GET-NEWER-PRICE THRU CCPP-GNP-EXIT
VARYING WS-INDEX FROM 1 BY 1
UNTIL WS-INDEX > 7.
IF WS-WEEKDAY-FOUND = 'N'
IF (NOT THIS-IS-A-POS-TRANS) AND
RP-KEY > SPACES
MOVE 'CCPP-GET-NEWEST-PRICE'  TO CXUTS0ML-PARAGRAPH
MOVE 'NO VALID PRICE FOUND: ' TO WS-CXML-WORK
CXUTS0ML-COMMAND
MOVE RP-KEY                   TO WS-CXML-WORK (25:)
PERFORM LOG-TO-CXML
END-IF
MOVE 'NO VALID RACK PRICE FOUND        ' TO OUT-COMENT
MOVE 'X' TO CP-ERROR-FLAG.


CCPP-SET-CP-COMMAREA.

MOVE ZEROS TO WS-NR2-COST,
WS-NR1-COST,
WS-REF-COST.
IF WS-NR2-RP-NR2-PPG (WS-WEEKDAY) NUMERIC AND
WS-NR2-RP-NR2-PPG (WS-WEEKDAY) > ZEROS
MOVE WS-NR2-RP-NR2-PPG (WS-WEEKDAY) TO WS-NR2-COST,
COM-CP-NR2-RACK-PPG
MOVE WS-NR2-RP-DATE (WS-WEEKDAY) TO COM-CP-RACK-DATE
END-IF.
IF WS-NR1-RP-NR1-PPG (WS-WEEKDAY) NUMERIC AND
WS-NR1-RP-NR1-PPG (WS-WEEKDAY) > ZEROS
MOVE WS-NR1-RP-NR1-PPG (WS-WEEKDAY) TO WS-NR1-COST,
COM-CP-NR1-RACK-PPG
END-IF.
IF WS-REF-RP-NR2-PPG (WS-WEEKDAY) NUMERIC AND
WS-REF-RP-NR2-PPG (WS-WEEKDAY) > ZEROS
MOVE WS-REF-RP-NR2-PPG (WS-WEEKDAY) TO WS-REF-COST
WS-REF-RACK-PPG
END-IF.


CCPP-RECALC-SET-CA.

IF WS-HOLD-REF-CP-SUFFIX > SPACES
MOVE WS-REF-RP-NR2-PPG (WS-WEEKDAY) TO WS-REF-COST
WS-REF-RACK-PPG
MOVE WS-REF-RP-DATE (WS-WEEKDAY) TO COM-CP-RACK-DATE
ELSE
MOVE COM-CP-NR2-RACK-PPG            TO WS-REF-COST
END-IF.

IF WS-HOLD-NR1-CP-SUFFIX > SPACES
MOVE WS-NR1-RP-NR1-PPG (WS-WEEKDAY) TO WS-NR1-COST,
COM-CP-NR1-RACK-PPG
MOVE WS-NR1-RP-DATE (WS-WEEKDAY) TO COM-CP-RACK-DATE
ELSE
MOVE COM-CP-NR1-RACK-PPG            TO WS-NR1-COST
END-IF.

IF WS-HOLD-NR2-CP-SUFFIX > SPACES
MOVE WS-NR2-RP-NR2-PPG (WS-WEEKDAY) TO WS-NR2-COST,
COM-CP-NR2-RACK-PPG
MOVE WS-NR2-RP-DATE (WS-WEEKDAY)    TO COM-CP-RACK-DATE
ELSE
MOVE COM-CP-NR2-RACK-PPG            TO WS-NR2-COST
END-IF.


CCPP-ADD-IN-TAXES.


IF RMR-SATAX-RATE-FLAG = 'Y'
MOVE RMR-SATAX-RATE-TRACTOR TO SCCPI-SALES-TAX-RATE (1)
MOVE RMR-SATAX-RATE-REEFER  TO SCCPI-SALES-TAX-RATE (2)
END-IF.


MOVE 'N' TO COM-CP-DIESEL-TAX-RACK-FL
COM-CP-REEFER-TAX-RACK-FL.
IF SCCPI-RACK-PRICE-APP (1) = 'Y'
MOVE 'Y' TO COM-CP-DIESEL-TAX-RACK-FL
COMPUTE WS-NR2-COST = WS-NR2-COST +
(WS-NR2-COST * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(WS-NR1-COST * SCCPI-SALES-TAX-RATE (1)).
IF SCCPI-RACK-PRICE-APP (2) = 'Y'
MOVE 'Y' TO COM-CP-REEFER-TAX-RACK-FL
COMPUTE WS-REF-COST = WS-REF-COST +
(WS-REF-COST * SCCPI-SALES-TAX-RATE (2)).



IF RMR-STTAX-RATE-FLAG = 'Y'
MOVE RMR-STTAX-RATE-TRACTOR TO SCCPI-STATE-FUEL-TAX (1)
MOVE RMR-STTAX-RATE-REEFER  TO SCCPI-STATE-FUEL-TAX (2)
END-IF.

IF RMR-FTTAX-RATE-FLAG = 'Y'
MOVE RMR-FTTAX-RATE-TRACTOR TO SCCPI-FEDERAL-TAX (1)
MOVE RMR-FTTAX-RATE-REEFER  TO SCCPI-FEDERAL-TAX (2)
END-IF.

IF RMR-SSTAX-RATE-FLAG = 'Y'
MOVE RMR-SSTAX-RATE-TRACTOR TO SCCPI-STATE-SUPERFUND (1)
MOVE RMR-SSTAX-RATE-REEFER  TO SCCPI-STATE-SUPERFUND (2)
END-IF.

IF RMR-LTTAX-RATE-FLAG = 'Y'
MOVE RMR-LTTAX-RATE-TRACTOR TO SCCPI-LUST-TAX (1)
MOVE RMR-LTTAX-RATE-REEFER  TO SCCPI-LUST-TAX (2)
END-IF.

IF RMR-TPTAX-RATE-FLAG = 'Y'
MOVE RMR-TPTAX-RATE-TRACTOR TO SCCPI-TRANSPORTATION (1)
MOVE RMR-TPTAX-RATE-REEFER  TO SCCPI-TRANSPORTATION (2)
END-IF.

IF RMR-MSTAX-RATE-FLAG = 'Y'
MOVE RMR-MSTAX-RATE-TRACTOR TO SCCPI-MISCELLANEOUS (1)
MOVE RMR-MSTAX-RATE-REEFER  TO SCCPI-MISCELLANEOUS (2)
MOVE RMR-MISCELLANEOUS-TEXT TO SCCPI-MISCELLANEOUS-TEXT
END-IF.

IF RMR-SATAX-CPG-FLAG = 'Y'
MOVE RMR-SATAX-CPG-TRACTOR  TO SCCPI-SATAX-CPG-1
MOVE RMR-SATAX-CPG-REEFER   TO SCCPI-SATAX-CPG-2
END-IF.


COMPUTE WS-NR2-COST = WS-NR2-COST               +
SCCPI-FEDERAL-TAX (1)     +
SCCPI-STATE-FUEL-TAX (1)  +
SCCPI-STATE-SUPERFUND (1) +
SCCPI-LUST-TAX (1)        +
SCCPI-TRANSPORTATION (1)  +
SCCPI-MISCELLANEOUS (1)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-1.
COMPUTE WS-NR1-COST = WS-NR1-COST               +
SCCPI-FEDERAL-TAX (1)     +
SCCPI-STATE-FUEL-TAX (1)  +
SCCPI-STATE-SUPERFUND (1) +
SCCPI-LUST-TAX (1)        +
SCCPI-TRANSPORTATION (1)  +
SCCPI-MISCELLANEOUS (1)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-1.
COMPUTE WS-REF-COST = WS-REF-COST               +
SCCPI-FEDERAL-TAX (2)     +
SCCPI-STATE-FUEL-TAX (2)  +
SCCPI-STATE-SUPERFUND (2) +
SCCPI-LUST-TAX (2)        +
SCCPI-TRANSPORTATION (2)  +
SCCPI-MISCELLANEOUS (2)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-2.


CCPP-CHECK-FEDERAL-TAX.


MOVE 'N'   TO COM-CP-DIESEL-TAX-FED-FL
COM-CP-REEFER-TAX-FED-FL.
IF SCCPI-FEDERAL-TAX-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-FEDERAL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-FEDERAL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y' TO COM-CP-DIESEL-TAX-FED-FL
END-IF.
IF SCCPI-FEDERAL-TAX-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-FEDERAL-TAX (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y' TO COM-CP-REEFER-TAX-FED-FL
END-IF.


CCPP-CHECK-STATE-FUEL-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-ST-FL
COM-CP-REEFER-TAX-ST-FL.
IF SCCPI-STATE-FUEL-TAX-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-STATE-FUEL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-STATE-FUEL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-ST-FL
END-IF.
IF SCCPI-STATE-FUEL-TAX-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-STATE-FUEL-TAX (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-ST-FL
END-IF.


CCPP-CHECK-STATE-SUPER-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-SF-FL
COM-CP-REEFER-TAX-SF-FL.
IF SCCPI-STATE-SUPERFUND-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-STATE-SUPERFUND (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-STATE-SUPERFUND (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-SF-FL
END-IF.
IF SCCPI-STATE-SUPERFUND-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-STATE-SUPERFUND (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-SF-FL
END-IF.


CCPP-CHECK-LUST-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-LUST-FL
COM-CP-REEFER-TAX-LUST-FL.
IF SCCPI-LUST-TAX-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-LUST-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-LUST-TAX (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-LUST-FL
END-IF.
IF SCCPI-LUST-TAX-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-LUST-TAX (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-LUST-FL
END-IF.


CCPP-CHECK-TRANSPORTATION-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-TRANS-FL
COM-CP-REEFER-TAX-TRANS-FL.
IF SCCPI-TRANSPORTATION-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-TRANSPORTATION (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-TRANSPORTATION (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-TRANS-FL
END-IF.
IF SCCPI-TRANSPORTATION-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-TRANSPORTATION (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-TRANS-FL
END-IF.


CCPP-CHECK-MISC-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-MISC-FL
COM-CP-REEFER-TAX-MISC-FL.
IF SCCPI-MISCELLANEOUS-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-MISCELLANEOUS (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-MISCELLANEOUS (1) * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-MISC-FL
END-IF.
IF SCCPI-MISCELLANEOUS-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-MISCELLANEOUS (2) * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-MISC-FL
END-IF.


CCPP-CHECK-MARKUP-TAX.

MOVE 'N'   TO COM-CP-DIESEL-TAX-MU-FL
COM-CP-REEFER-TAX-MU-FL.
IF SCCPI-MARKUP-APP (1) = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (1))
MOVE 'Y'   TO COM-CP-DIESEL-TAX-MU-FL
END-IF.
IF SCCPI-MARKUP-APP (2) = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (2))
MOVE 'Y'   TO COM-CP-REEFER-TAX-MU-FL
END-IF.


CCPP-RECALC-FOR-SUBPROD.

PERFORM CCPP-SUBPROD-SALES-TAX.
PERFORM CCPP-SUBPROD-FED-TAX.
PERFORM CCPP-SUBPROD-STATE-TAX.
PERFORM CCPP-SUBPROD-STATE-SUPER-TAX.
PERFORM CCPP-SUBPROD-LUST-TAX.
PERFORM CCPP-SUBPROD-TRANS-TAX.
PERFORM CCPP-SUBPROD-MISC-TAX.
PERFORM CCPP-SUBPROD-MARKUP-TAX.


CCPP-SUBPROD-SALES-TAX.

MOVE COM-CP-DIESEL-TAX-PCT     TO SCCPI-SALES-TAX-RATE (1).
MOVE COM-CP-DIESEL-FED-TAX-PPG TO SCCPI-FEDERAL-TAX (1).
MOVE COM-CP-DIESEL-ST-TAX-PPG  TO SCCPI-STATE-FUEL-TAX (1).
MOVE COM-CP-DIESEL-ST-SF-PPG   TO SCCPI-STATE-SUPERFUND (1).
MOVE COM-CP-DIESEL-LUST-PPG    TO SCCPI-LUST-TAX (1).
MOVE COM-CP-DIESEL-TRAN-PPG    TO SCCPI-TRANSPORTATION (1).
MOVE COM-CP-DIESEL-MISC-PPG    TO SCCPI-MISCELLANEOUS (1).

MOVE COM-CP-REEFER-TAX-PCT     TO SCCPI-SALES-TAX-RATE (2).
MOVE COM-CP-REEFER-FED-TAX-PPG TO SCCPI-FEDERAL-TAX (2).
MOVE COM-CP-REEFER-ST-TAX-PPG  TO SCCPI-STATE-FUEL-TAX (2).
MOVE COM-CP-REEFER-ST-SF-PPG   TO SCCPI-STATE-SUPERFUND (2).
MOVE COM-CP-REEFER-LUST-PPG    TO SCCPI-LUST-TAX (2).
MOVE COM-CP-REEFER-TRAN-PPG    TO SCCPI-TRANSPORTATION (2).
MOVE COM-CP-REEFER-MISC-PPG    TO SCCPI-MISCELLANEOUS (2).

MOVE COM-CP-TRUCKSTOP-MU-PPG   TO RMR-TRUCKSTOP-MARKUP.

MOVE COM-CP-SATAX-CPG-1        TO SCCPI-SATAX-CPG-1.
MOVE COM-CP-SATAX-CPG-2        TO SCCPI-SATAX-CPG-2.

IF COM-CP-DIESEL-TAX-RACK-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(WS-NR2-COST * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(WS-NR1-COST * SCCPI-SALES-TAX-RATE (1)).
IF COM-CP-REEFER-TAX-RACK-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(WS-REF-COST * SCCPI-SALES-TAX-RATE (2)).


COMPUTE WS-NR2-COST = WS-NR2-COST               +
SCCPI-FEDERAL-TAX (1)     +
SCCPI-STATE-FUEL-TAX (1)  +
SCCPI-STATE-SUPERFUND (1) +
SCCPI-LUST-TAX (1)        +
SCCPI-TRANSPORTATION (1)  +
SCCPI-MISCELLANEOUS (1)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-1.
COMPUTE WS-NR1-COST = WS-NR1-COST               +
SCCPI-FEDERAL-TAX (1)     +
SCCPI-STATE-FUEL-TAX (1)  +
SCCPI-STATE-SUPERFUND (1) +
SCCPI-LUST-TAX (1)        +
SCCPI-TRANSPORTATION (1)  +
SCCPI-MISCELLANEOUS (1)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-1.
COMPUTE WS-REF-COST = WS-REF-COST               +
SCCPI-FEDERAL-TAX (2)     +
SCCPI-STATE-FUEL-TAX (2)  +
SCCPI-STATE-SUPERFUND (2) +
SCCPI-LUST-TAX (2)        +
SCCPI-TRANSPORTATION (2)  +
SCCPI-MISCELLANEOUS (2)   +
RMR-TRUCKSTOP-MARKUP      +
SCCPI-SATAX-CPG-2.


CCPP-SUBPROD-FED-TAX.


IF COM-CP-DIESEL-TAX-FED-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-FEDERAL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-FEDERAL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-FED-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-FEDERAL-TAX (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-STATE-TAX.

IF COM-CP-DIESEL-TAX-ST-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-STATE-FUEL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-STATE-FUEL-TAX (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-ST-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-STATE-FUEL-TAX (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-STATE-SUPER-TAX.

IF COM-CP-DIESEL-TAX-SF-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-STATE-SUPERFUND (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-STATE-SUPERFUND (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-SF-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-STATE-SUPERFUND (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-LUST-TAX.

IF COM-CP-DIESEL-TAX-LUST-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-LUST-TAX (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-LUST-TAX (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-LUST-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-LUST-TAX (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-TRANS-TAX.

IF COM-CP-DIESEL-TAX-TRANS-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-TRANSPORTATION (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-TRANSPORTATION (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-TRANS-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-TRANSPORTATION (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-MISC-TAX.

IF COM-CP-DIESEL-TAX-MISC-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(SCCPI-MISCELLANEOUS (1) * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(SCCPI-MISCELLANEOUS (1) * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-MISC-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(SCCPI-MISCELLANEOUS (2) * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-SUBPROD-MARKUP-TAX.

IF COM-CP-DIESEL-TAX-MU-FL = 'Y'
COMPUTE WS-NR2-COST = WS-NR2-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (1))
COMPUTE WS-NR1-COST = WS-NR1-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (1))
END-IF.
IF COM-CP-REEFER-TAX-MU-FL = 'Y'
COMPUTE WS-REF-COST = WS-REF-COST +
(RMR-TRUCKSTOP-MARKUP * SCCPI-SALES-TAX-RATE (2))
END-IF.


CCPP-GET-WEEKDAY.

IF RMR-RACK-TYPE-FLAG = 'C' OR 'O' OR 'F'
MOVE RMR-RACK-UPDATE-FLAG (WS-WEEKDAY)   TO WS-RACK-FLAG
ELSE
MOVE SCCPI-UPDATE-RACK-FLAG (WS-WEEKDAY) TO WS-RACK-FLAG.
IF WS-RACK-FLAG = 'X'
MOVE 7   TO WS-INDEX
MOVE 'Y' TO WS-WEEKDAY-FOUND
ELSE
SUBTRACT 1 FROM WS-WEEKDAY
IF WS-WEEKDAY = ZERO
MOVE 7 TO WS-WEEKDAY.


CCPP-GW-EXIT.

EXIT.


CCPP-GET-PRICE.

IF RP-DATE (WS-WEEKDAY) NOT NUMERIC
MOVE ZEROES TO RP-DATE (WS-WEEKDAY).


IF EIBTRNID = 'FMBP' OR 'FMMP'
IF RP-DATE (WS-WEEKDAY) > ZEROES
INITIALIZE CALENDAR-PARAMETERS
CALENDAR-NAMES
MOVE RP-DATE (WS-WEEKDAY) TO WS-WORK-DATE
MOVE WS-WORK-DATE TO CALENDAR-DATE-NUM
MOVE '1' TO CALENDAR-CENTURY
MOVE WS-UIWA-FUELING-DATE TO WS-WORK-DATE
MOVE WS-WORK-DATE TO CALENDAR-SECOND-DATE-NUM
MOVE '1' TO CALENDAR-SECOND-DATE-CENTURY
MOVE +026 TO CALENDAR-OPTIONS
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS,
CALENDAR-NAMES
ELSE
MOVE -99999 TO CALENDAR-DAYS
END-IF
ELSE
IF RP-DATE (WS-WEEKDAY) > ZEROES
MOVE +023 TO CALENDAR-OPTIONS
MOVE RP-DATE (WS-WEEKDAY) TO WS-WORK-DATE
MOVE WS-WORK-DATE TO CALENDAR-DATE-NUM
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
ELSE
MOVE -99999 TO CALENDAR-DAYS
END-IF
END-IF.

MOVE CALENDAR-DAYS TO WS-DAYS-TABLE (WS-WEEKDAY).

IF CALENDAR-DAYS > -8
MOVE 7   TO WS-INDEX
MOVE 'Y' TO WS-WEEKDAY-FOUND
ELSE
SUBTRACT 1 FROM WS-WEEKDAY
IF WS-WEEKDAY = ZERO
MOVE 7 TO WS-WEEKDAY.


CCPP-GP-EXIT.

EXIT.


CCPP-GET-NEWER-PRICE.

IF WS-DAYS-TABLE (WS-INDEX) NOT NUMERIC
MOVE ZEROES TO WS-DAYS-TABLE (WS-INDEX).
IF WS-DAYS-TABLE (WS-INDEX) < WS-WORK-DATE
MOVE 'Y' TO WS-WEEKDAY-FOUND
MOVE WS-DAYS-TABLE (WS-INDEX) TO WS-WORK-DATE
MOVE WS-INDEX TO WS-WEEKDAY.


CCPP-GNP-EXIT.

EXIT.

UPDATE-RMR-BRIDGE-LIMITS.

MOVE 'UPDATE-RMR-BRIDGE-LIMITS'  TO CXUTS0ML-PARAGRAPH.
IF COM-BRIDGE-KEY > SPACES
EXEC CICS READ
DATASET ('FMRELAT ')
INTO    (RELATIONSHIP-MAINT-RECORD)
RIDFLD  (COM-BRIDGE-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE COM-BRIDGE-KEY     TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
PERFORM UPDATE-RMR-CREDIT-FIELDS
ELSE
EXEC CICS UNLOCK
DATASET ('FMRELAT ')
RESP    (EIBRESP)
END-EXEC.

UPDATE-RMR-CREDIT-FIELDS.

MOVE 'UPDATE-RMR-CREDIT-FIELDS'  TO CXUTS0ML-PARAGRAPH.
IF RMR-CREDIT-LIMIT-DAILY NOT NUMERIC
MOVE ZEROS TO RMR-CREDIT-LIMIT-DAILY.

IF RMR-CREDIT-LIMIT-USED NOT NUMERIC
MOVE ZEROS TO RMR-CREDIT-LIMIT-USED.

COMPUTE RMR-CREDIT-LIMIT-USED =
RMR-CREDIT-LIMIT-USED + WS-NON-BILLABLE.

EXEC CICS REWRITE
DATASET ('FMRELAT ')
FROM    (RELATIONSHIP-MAINT-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.



CHECK-RMR-ONE-TIME.

MOVE 'CHECK-RMR-ONE-TIME'        TO CXUTS0ML-PARAGRAPH.
IF COM-RMR-KEY > SPACES
EXEC CICS READ
DATASET ('FMRELAT ')
INTO    (RELATIONSHIP-MAINT-RECORD)
RIDFLD  (COM-RMR-KEY)
RESP    (EIBRESP)
UPDATE
END-EXEC
MOVE COM-RMR-KEY       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL) AND RMR-NETWORK-IS-ONE-TIME
MOVE RMR-LIMITED-NETWORK-HOLD TO
RMR-LIMITED-NETWORK-KEEP
MOVE RMR-MAX-QTY-ALLOWED-HOLD TO
RMR-MAX-QTY-ALLOWED
MOVE RMR-MAX-QTY-ALLOWED-HOLD-RFR TO
RMR-MAX-QTY-ALLOWED-RFR
MOVE RMR-MAX-QTY-ALLOWED-HOLD-OTH TO
RMR-MAX-QTY-ALLOWED-OTH
MOVE SPACES TO RMR-LIMITED-NETWORK-HOLD
RMR-MAX-QTY-ALLOWED-HOLD
RMR-MAX-QTY-ALLOWED-HOLD-RFR
RMR-MAX-QTY-ALLOWED-HOLD-OTH
EXEC CICS REWRITE
DATASET ('FMRELAT ')
FROM   (RELATIONSHIP-MAINT-RECORD)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM DELETE-ONE-TIME-PROD-LMT-NTWRK
ELSE
EXEC CICS UNLOCK
DATASET ('FMRELAT ')
RESP   (EIBRESP)
END-EXEC.


DELETE-ONE-TIME-PROD-LMT-NTWRK.

MOVE 'DELETE-ONE-TIME-PROD-LMT-NTWRK' TO CXUTS0ML-PARAGRAPH
MOVE 'DELETE CXXCOW.PROD_LMT_NTWRK'   TO CXUTS0ML-COMMAND

MOVE COM-RMR-KEY           TO PRDLN-KEY OF SPRDLMTN
MOVE '1'                   TO PRDLN-KEY OF SPRDLMTN (1:1)

EXEC SQL
DELETE FROM CXXCOW.PROD_LMT_NTWRK
WHERE PRDLN_KEY  = :SPRDLMTN.PRDLN-KEY
END-EXEC

PERFORM CHECK-NOTFND-SQL.


CHECK-LIM-NETW-BY-CARD.

MOVE 'CHECK-LIM-NETW-BY-CARD'    TO CXUTS0ML-PARAGRAPH.
MOVE WS-CURRENT-DATE-MMDDYY TO WS-GREG-DATE.
MOVE WS-GREG-MM              TO WS-YYMMDD-MM.
MOVE WS-GREG-DD              TO WS-YYMMDD-DD.
MOVE WS-GREG-YY              TO WS-YYMMDD-YY.
INITIALIZE                      HLD-NBC-KEY.
MOVE SCM-SERVICE-CENTER-CODE TO HLD-NBC-LOCATION-CODE.
IF SCM-MASTER-SVC-CTR-CODE > SPACES
MOVE SCM-MASTER-SVC-CTR-CODE  TO HLD-NBC-LOCATION-CODE
END-IF.
MOVE WS-CURRENT-DATE-MMDDYY      TO WS-DATE-1.
MOVE COM-PREMIER-CARD            TO WS-PRM-CARD-NR.
MOVE PRM-CHECK-DIGIT             TO WS-PRM-CARD-CKD.

MOVE WS-PRM-CARD                 TO HLD-NBC-CARD-NUMBER.
MOVE '0'                         TO NBC-READ-STATUS.
PERFORM READ-CARDNET.
MOVE HLD-NBC-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
PERFORM CHECK-CARDNET-READ1.
IF NBC-READ-STATUS = '1'
MOVE SPACES                   TO HLD-NBC-LOCATION-CODE
MOVE ZEROS                    TO HLD-NBC-DATE-ADD
MOVE ZEROS                    TO HLD-NBC-TIME-ADD
PERFORM READ-CARDNET
MOVE HLD-NBC-KEY       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
PERFORM CHECK-CARDNET-READ2
END-IF.
IF NBC-READ-STATUS = '2'
MOVE 'DEFAULT'                TO HLD-NBC-LOCATION-CODE

MOVE CDN-CUST-NUMBER          TO HLD-NBC-CARD-NUMBER
MOVE ZEROS                    TO HLD-NBC-DATE-ADD
MOVE ZEROS                    TO HLD-NBC-TIME-ADD
PERFORM READ-CARDNET
EXEC CICS READ
DATASET ('CARDNET')
RIDFLD  (HLD-NBC-KEY)
INTO    (NETWORK-BY-CARD-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE HLD-NBC-KEY       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
PERFORM CHECK-CARDNET-READ3
END-IF.




IF NBC-READ-STATUS = '3' AND
CDN-LIM-NETW-BY-CARD-OPT NOT = 'Y'
PERFORM CARDNET-ERROR-RETURN
END-IF.
PERFORM CARDNET-NUMCHEK
MOVE NBC-MAX-TRACTOR-GAL     TO COM-NBC-MAX-TRACTOR-GAL
MOVE NBC-MAX-REEFER-GAL      TO COM-NBC-MAX-REEFER-GAL
MOVE NBC-MAX-OTHER-AMT       TO COM-NBC-MAX-OTHER-AMT
MOVE NBC-MAX-CASH-AMT        TO COM-NBC-MAX-CASH-AMT
MOVE NBC-MAX-OTHER-GAL       TO COM-NBC-MAX-OTHER-GAL

MOVE NBC-KEY                 TO COM-NBC-KEY

IF NBC-READ-STATUS = '3' AND
CDN-LIM-NETW-BY-CARD-OPT = 'Y'
MOVE 'N'                     TO CDN-NETWORKING-OPTION
MOVE 'N'                     TO CDN-LIM-NETW-BY-CARD
PRM-LIM-NETW-BY-CARD
MOVE 'N'                     TO COM-NETWORK-BY-CARD
ELSE
MOVE ' '                     TO CDN-NETWORKING-OPTION
MOVE 'Y'                     TO COM-NETWORK-BY-CARD
END-IF.


CHECK-CARDNET-READ1.

EVALUATE EIBRESP
WHEN DFHRESP (NOTFND)
MOVE '1'                      TO NBC-READ-STATUS
WHEN OTHER
IF NBC-CARD-NUMBER   > HLD-NBC-CARD-NUMBER OR
NBC-LOCATION-CODE > HLD-NBC-LOCATION-CODE
MOVE '1'                TO NBC-READ-STATUS
ELSE
PERFORM READ-NEXT-CARDNET UNTIL
NBC-READ-STATUS = 'F' OR '1'
END-IF
END-EVALUATE.


CHECK-CARDNET-READ2.

EVALUATE EIBRESP
WHEN DFHRESP (NOTFND)
MOVE '2'                      TO NBC-READ-STATUS
WHEN OTHER
IF NBC-CARD-NUMBER > HLD-NBC-CARD-NUMBER
MOVE '2'                TO NBC-READ-STATUS
ELSE
PERFORM READ-NEXT-CARDNET UNTIL
NBC-READ-STATUS = 'F' OR '2'
END-IF
END-EVALUATE.


CHECK-CARDNET-READ3.

IF EIBRESP = DFHRESP(NORMAL)
MOVE 'F'                         TO NBC-READ-STATUS
ELSE
MOVE '3'                         TO NBC-READ-STATUS
END-IF.


READ-NEXT-CARDNET.

MOVE 'READ-NEXT-CARDNET'         TO CXUTS0ML-PARAGRAPH.
IF HLD-NBC-CARD-LOCATION = NBC-CARD-LOCATION
PERFORM  CHECK-CARDNET-RECORD.
IF HLD-NBC-CARD-LOCATION < NBC-CARD-LOCATION
PERFORM INCREMENT-NBC-STATUS
ELSE
IF NBC-READ-STATUS NOT = 'F'
MOVE NBC-DATE-ADD  TO HLD-NBC-DATE-ADD
MOVE NBC-TIME-ADD  TO HLD-NBC-TIME-ADD
ADD 1              TO HLD-NBC-TIME-ADD
PERFORM READ-CARDNET
MOVE HLD-NBC-KEY       TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
PERFORM INCREMENT-NBC-STATUS.

CHECK-CARDNET-RECORD.
PERFORM CARDNET-NUMCHEK.
IF NBC-DATE-USED  = ZEROS   AND
NBC-TIME-USED  = ZEROS   AND
(NBC-EXP-DATE  > WS-YYMMDD-DATE OR
(NBC-EXP-DATE  = WS-YYMMDD-DATE AND
NBC-EXP-TIME  > EIBTIME))
MOVE 'F' TO NBC-READ-STATUS.

INCREMENT-NBC-STATUS.
EVALUATE NBC-READ-STATUS
WHEN '0'  MOVE '1' TO NBC-READ-STATUS
WHEN '1'  MOVE '2' TO NBC-READ-STATUS
END-EVALUATE.

READ-CARDNET.
EXEC CICS READ
DATASET ('CARDNET')
RIDFLD  (HLD-NBC-KEY)
INTO    (NETWORK-BY-CARD-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC.


CARDNET-ERROR-RETURN.

MOVE DRIVER-MAY-NOT-FUEL-CNET   TO OUT-COMENT.
MOVE DRIVER-MAY-NOT-FUEL-HERE-N TO POS-ERROR-NUMBER.
MOVE 'Y'                        TO VCWS-ERROR-IND.
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE.
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


UPDATE-CARDNET-REC-I.

MOVE 'UPDATE-CARDNET-REC-I'      TO CXUTS0ML-PARAGRAPH.
PERFORM READ-CARDNET-UPDT-I
MOVE WS-NBC-KEY         TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE ZERO                    TO NBC-DATE-USED
NBC-TIME-USED
PERFORM REWRITE-CARDNET.

READ-CARDNET-UPDT-I.

EXEC CICS READ
DATASET ('CARDNET')
RIDFLD  (WS-NBC-KEY)
INTO    (NETWORK-BY-CARD-RECORD)
UPDATE
RESP    (EIBRESP)
END-EXEC.

UPDATE-CARDNET-RECORD.

MOVE 'UPDATE-CARDNET-RECORD'     TO CXUTS0ML-PARAGRAPH.
PERFORM READ-CARDNET-UPDATE.
MOVE COM-NBC-KEY  TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP.
INITIALIZE                      HLD-NBC-KEY.
MOVE WS-CURRENT-DATE-YYMMDD  TO NBC-DATE-USED.
MOVE EIBTIME                 TO NBC-TIME-USED.
PERFORM REWRITE-CARDNET.


READ-CARDNET-UPDATE.

EXEC CICS READ
DATASET ('CARDNET')
RIDFLD  (COM-NBC-KEY)
INTO    (NETWORK-BY-CARD-RECORD)
UPDATE
RESP    (EIBRESP)
END-EXEC.


REWRITE-CARDNET.

MOVE 'REWRITE-CARDNET'           TO CXUTS0ML-PARAGRAPH.
EXEC CICS REWRITE
DATASET ('CARDNET')
FROM    (NETWORK-BY-CARD-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


CARDNET-NUMCHEK.

IF NBC-DATE-ADD          NOT NUMERIC
MOVE ZEROS            TO  NBC-DATE-ADD
MOVE ZEROS            TO  NBC-TIME-ADD.
IF NBC-EXP-DATE          NOT NUMERIC
MOVE ZEROS            TO  NBC-EXP-DATE.
IF NBC-EXP-TIME          NOT NUMERIC
MOVE ZEROS            TO  NBC-EXP-TIME.
IF NBC-DATE-USED         NOT NUMERIC
MOVE ZEROS            TO  NBC-DATE-USED.
IF NBC-TIME-USED         NOT NUMERIC
MOVE ZEROS            TO  NBC-TIME-USED.
IF NBC-MAX-TRACTOR-GAL   NOT NUMERIC
MOVE ZEROS            TO  NBC-MAX-TRACTOR-GAL.
IF NBC-MAX-REEFER-GAL    NOT NUMERIC
MOVE ZEROS            TO  NBC-MAX-REEFER-GAL.
IF NBC-MAX-OTHER-AMT     NOT NUMERIC
MOVE ZEROS            TO  NBC-MAX-OTHER-AMT.
IF NBC-MAX-CASH-AMT      NOT NUMERIC
MOVE ZEROS            TO  NBC-MAX-CASH-AMT.
IF NBC-MAX-OTHER-GAL     NOT NUMERIC
MOVE ZEROS            TO  NBC-MAX-OTHER-GAL.


CHECK-LIM-NETW-LIMITS.

PERFORM CLNL-TRACTOR-FUEL.
PERFORM CLNL-REEFER-FUEL.
PERFORM CLNL-CASH.
PERFORM CLNL-OTHER-FUEL.


CLNL-TRACTOR-FUEL.

IF COM-NBC-MAX-TRACTOR-GAL  >  0
IF COM-NBC-MAX-TRACTOR-GAL < WS-UIWA-NR2-QTY +
WS-UIWA-NR1-QTY
- 5.00
MOVE '*' TO ERROR-FLAG
MOVE -1  TO FPGLNSL
MOVE ' DIESEL ' TO MAXIMUM-GALLON-MSG3T
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-TRACTOR-GAL TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-TRACTOR-GAL TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-TRACTOR-GAL TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-TRACTOR-GAL TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


CLNL-REEFER-FUEL.

IF COM-NBC-MAX-REEFER-GAL   > ZERO
IF COM-NBC-MAX-REEFER-GAL < WS-UIWA-REF-QTY
- 5.00
MOVE ' REEFER ' TO MAXIMUM-GALLON-MSG3T
MOVE '*' TO ERROR-FLAG
MOVE -1  TO TRGLNL
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-REEFER-GAL  TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-REEFER-GAL  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-REEFER-GAL  TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE MAXIMUM-GALLON-MESSAGE3   TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


CLNL-CASH.

IF WS-UIWA-CASH-AMT > 0 AND
COM-NBC-MAX-CASH-AMT > 0
IF WS-UIWA-CASH-AMT > COM-NBC-MAX-CASH-AMT
MOVE COM-NBC-MAX-CASH-AMT     TO WS-US-DOLLARS,
WS-CANADIAN-DOLLARS
PERFORM COMPUTE-XCS-ADV-REQ-AMT
MOVE EXCESSIVE-ADVANCE-REQUEST     TO OUT-COMENT
MOVE EXCESSIVE-ADVANCE-REQUEST-N   TO POS-ERROR-NUMBER
MOVE NEW-EXCESSIVE-ADVANCE-REQUEST TO NEW-OUT-MESSAGE
MOVE 'Y'                           TO VCWS-ERROR-IND
MOVE -1 TO ADVAMTL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

IF COM-NBC-MAX-CASH-AMT > 0
IF COM-NBC-MAX-OTHER-AMT < WS-UIWA-OIL-COST +
WS-UIWA-TAX-AMT +
WS-UIWA-PR1-COST +
WS-UIWA-PR2-COST +
WS-UIWA-PR3-COST
MOVE PRODUCT-ALLOWANCE-EXCEEDED    TO OUT-COMENT-1
MOVE PRODUCT-ALLOWANCE-EXCEEDED-N  TO POS-ERROR-NUMBER
MOVE CALL-COMPANY-MSG              TO NEW-OUT-MESSAGE
MOVE ALLOWANCE-EXCEEDED-NBR        TO CALL-COMPANY-NBR
MOVE 'Y'                           TO VCWS-ERROR-IND
IF WS-UIWA-OIL-COST > 0
MOVE -1 TO OILCSTL
ELSE
IF WS-UIWA-PR1-COST > ZEROES OR
WS-UIWA-PR2-COST > ZEROES OR
WS-UIWA-PR3-COST > ZEROES
MOVE -1 TO  PRD1CDL
ELSE
MOVE -1 TO  CTAXL
END-IF
END-IF
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


CLNL-OTHER-FUEL.

IF COM-NBC-MAX-OTHER-GAL NOT NUMERIC
MOVE ZEROS TO COM-NBC-MAX-OTHER-GAL.

IF COM-NBC-MAX-OTHER-GAL   > ZERO
IF COM-NBC-MAX-OTHER-GAL < WS-UIWA-OTH-QTY
- 5.00
MOVE ' OTHER  ' TO MAXIMUM-GALLON-MSG3T
MOVE '*' TO ERROR-FLAG
MOVE -1  TO TRGLNL
MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
EVALUATE TRUE
WHEN COM-US-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-OTHER-GAL  TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-US-SC
MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-OTHER-GAL  TO WS-LITERS
PERFORM LITERS-TO-GALLONS
MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-CN-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE COM-NBC-MAX-OTHER-GAL  TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN COM-US-COMP-CN-SC
MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
MOVE MAXIMUM-GALLON-MESSAGE3   TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


PRODUCT-CODE-EDITS.

PERFORM PCE-DETERMINE-PRODUCT-LIMITS
MOVE 1   TO INDX.

MOVE ' ' TO ERROR-FLAG.
MOVE 'Y' TO WS-ADD-TO-BILLABLE-FLAG.
PERFORM PCE-CHECK-1ST-PRODUCT.
PERFORM PCE-CHECK-2ND-PRODUCT.
PERFORM PCE-CHECK-3RD-PRODUCT.
PERFORM PCE-CHECK-FOR-DUP-PRODUCT.

IF THIS-BE-A-SMART-FUEL-PRE-AUTH
IF WS-AUTO-GAS-AVAIL = ZERO
IF WS-AUTO-GAS-AVAIL-AMT1 > ZERO
ADD WS-AUTO-GAS-AVAIL-AMT1 TO WS-AUTO-GAS-AVAIL
END-IF
IF WS-AUTO-GAS-AVAIL-AMT2 > ZERO
ADD WS-AUTO-GAS-AVAIL-AMT2 TO WS-AUTO-GAS-AVAIL
END-IF
IF WS-AUTO-GAS-AVAIL-AMT3 > ZERO
ADD WS-AUTO-GAS-AVAIL-AMT3 TO WS-AUTO-GAS-AVAIL
END-IF
END-IF
END-IF.


IF ERROR-FLAG = '1' AND
NOT THIS-BE-A-PC-REQUEST
MOVE VERIFY-PRODUCTS   TO OUT-COMENT-1
MOVE VERIFY-PRODUCTS-N TO POS-ERROR-NUMBER
MOVE 'N'               TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF.


IF WS-UIWA-PR1-COST > ZEROES OR
WS-UIWA-PR2-COST > ZEROES OR
WS-UIWA-PR3-COST > ZEROES
MOVE 1 TO PRODUCT-PURCHASE
END-IF.


PCE-DETERMINE-PRODUCT-LIMITS.

MOVE 'PCE-DETERMINE-PRODUCT-LIMITS' TO CXUTS0ML-PARAGRAPH.





MOVE SPACES                TO PRODUCT-CODE-LIMITS
IF ON-HIERARCHY
MOVE '2'                   TO PCL-UBH-RECD-ID
MOVE PIR-HIERARCHY-ID      TO PCL-UBH-HIERARCHY-ID
MOVE UNIT-GRP-ID OF DUNITNOD
TO PCL-UBH-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCL-UBH-UNIT-NR
ELSE
MOVE '1'                   TO PCL-UBC-RECD-ID
MOVE COM-UNIT-POOL-CUST-ID TO PCL-UBC-CUST-ID
MOVE 'DEFAULT'             TO PCL-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCL-UBC-UNIT-NR
END-IF.

EXEC CICS READ
DATASET ('PRDLMIT')
INTO    (PRODUCT-CODE-LIMITS)
RIDFLD  (PCL-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE PCL-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.

PERFORM PCE-PRODUCT-LIMITS-NUMERIC.



IF NOT THIS-UNIT-SET-FOR-PRODUCTS
MOVE 'Y' TO UNITMST-CO-PRODUCT-FLAG
END-IF.

IF NOT WS-CHANGE-LIMITS-BY-UNIT
MOVE 'Y' TO UNITMST-CO-PRODUCT-FLAG
END-IF.


INITIALIZE WS-PRODUCT-CODE-LIMITS.
IF THIS-UNIT-SET-FOR-PRODUCTS
PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
MOVE PCL-PRD-MAX-DAILY (WORK-INDEX) TO
WS-PRD-MAX-DAILY  (WORK-INDEX)
MOVE PCL-PRD-ALLOW-ORIG(WORK-INDEX) TO
WS-PRD-ALLOW-ORIG (WORK-INDEX)
END-PERFORM
ELSE
PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
MOVE CSR-PROD-DAILY-MAX(WORK-INDEX) TO
WS-PRD-MAX-DAILY  (WORK-INDEX)
MOVE CSR-PROD-ALLOWANCE(WORK-INDEX) TO
WS-PRD-ALLOW-ORIG (WORK-INDEX)
END-PERFORM
END-IF.


IF COM-PO-PUR-OPTIONS-AREA NOT > SPACES
MOVE '0' TO COM-PUR-OPTIONS-PROD
PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
IF WS-PRD-MAX-DAILY (WORK-INDEX) > -1 OR
WS-PRD-ALLOW-ORIG(WORK-INDEX) > -1
MOVE '1' TO COM-PUR-OPTIONS-PROD
END-IF
END-PERFORM
END-IF.


IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
(WS-UIWA-PO-NR > SPACES)
MOVE 'N' TO CDN-TRIP-ALLOWANCE
WS-TRIP-ALLOWANCE
PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
IF CSR-PROD-PO-OVERRIDE (WORK-INDEX) > ZEROES
MOVE 'Y' TO LIMITS-ALTERED-FOR-PO
MOVE CSR-PROD-PO-OVERRIDE (WORK-INDEX) TO
WS-PRD-ALLOW-ORIG    (WORK-INDEX)
WS-PRD-MAX-DAILY     (WORK-INDEX)
END-IF
END-PERFORM.


PCE-PRODUCT-LIMITS-NUMERIC.

PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
IF PCL-PRD-MAX-DAILY (WORK-INDEX) NOT NUMERIC
MOVE -1        TO PCL-PRD-MAX-DAILY (WORK-INDEX)
END-IF
IF PCL-PRD-ALLOW-ORIG (WORK-INDEX) NOT NUMERIC
MOVE -1        TO PCL-PRD-ALLOW-ORIG (WORK-INDEX)
END-IF
END-PERFORM.


PCE-CHECK-1ST-PRODUCT.


EVALUATE TRUE
WHEN WS-UIWA-PR1-CODE > SPACES AND
WS-UIWA-PR1-COST = ZEROES
MOVE SPACES                  TO WS-UIWA-PR1-CODE
MOVE -1                      TO PRD1AMTL
MOVE VERIFY-PRODUCTS         TO OUT-COMENT
MOVE VERIFY-PRODUCTS-N       TO POS-ERROR-NUMBER
MOVE 'N'                     TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-PR1-CODE <= SPACES AND
WS-UIWA-PR1-COST >  ZEROES
MOVE '09'                    TO WS-UIWA-PR1-CODE
MOVE -1                      TO PRD1AMTL
MOVE INVALID-PRODUCT-CODE    TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N  TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


IF WS-UIWA-PR1-CODE > SPACES
MOVE WS-UIWA-PR1-CODE    TO WORK-PROD-CODE
MOVE WS-UIWA-PR1-COST-SC TO DEEDIT-FIELD-X
MOVE 1                   TO WS-WHICH-PROD
PERFORM PCE-1000
IF THERE-WAS-AN-ERROR
IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES      TO ERROR-FLAG
MOVE ZEROS       TO WS-PRD-ALLOW
WS-PRD-CUR-DAY
ELSE
MOVE -1          TO PRD1CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
MOVE WORK-PROD-DESC     TO PRD1DSCO
IF WS-UIWA-PR1-CODE NOT = COM-PRODUCT-CODES (1)
MOVE '1' TO ERROR-FLAG
MOVE WS-UIWA-PR1-CODE TO COM-PRODUCT-CODES (1)
END-IF
END-IF
ELSE
MOVE SPACES TO COM-PRODUCT-CODES (1)
END-IF.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES             TO WS-AUTO-GAS-AVAIL-PROD1
MOVE ZEROS              TO WS-AUTO-GAS-AVAIL-AMT1
IF WS-UIWA-PR1-CODE > SPACES
MOVE WS-UIWA-PR1-CODE   TO WS-AUTO-GAS-AVAIL-PROD1
IF WS-PRD-ALLOW < WS-PRD-CUR-DAY
MOVE WS-PRD-ALLOW   TO WS-WORK-PROD-AMT
ELSE
MOVE WS-PRD-CUR-DAY TO WS-WORK-PROD-AMT
END-IF
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT   TO WS-AUTO-GAS-AVAIL-AMT1

IF (WS-UIWA-PR1-CODE = '13' OR '14')
AND WS-UIWA-PR2-CODE = '  '
AND WS-UIWA-PR3-CODE = '  '
MOVE WS-PRD-MAX-DAILY (INDX-1)
TO WS-WORK-PROD-AMT
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT TO WS-AUTO-GAS-AVAIL-AMT2
END-IF
END-IF
END-IF.


PCE-CHECK-2ND-PRODUCT.


EVALUATE TRUE
WHEN WS-UIWA-PR2-CODE > SPACES AND
WS-UIWA-PR2-COST = ZEROES
MOVE SPACES                  TO WS-UIWA-PR2-CODE
MOVE -1                      TO PRD2AMTL
MOVE VERIFY-PRODUCTS         TO OUT-COMENT
MOVE VERIFY-PRODUCTS-N       TO POS-ERROR-NUMBER
MOVE 'N'                     TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-PR2-CODE <= SPACES AND
WS-UIWA-PR2-COST >  ZEROES
MOVE ' 9'                    TO WS-UIWA-PR2-CODE
MOVE -1                      TO PRD2AMTL
MOVE INVALID-PRODUCT-CODE    TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N  TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


IF WS-UIWA-PR2-CODE > SPACES
MOVE WS-UIWA-PR2-CODE    TO WORK-PROD-CODE
MOVE WS-UIWA-PR2-COST-SC TO DEEDIT-FIELD-X
MOVE 2                   TO WS-WHICH-PROD
PERFORM PCE-1000
IF THERE-WAS-AN-ERROR
IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES      TO ERROR-FLAG
MOVE ZEROS       TO WS-PRD-ALLOW
WS-PRD-CUR-DAY
ELSE
MOVE -1          TO PRD2CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
MOVE WORK-PROD-DESC     TO PRD2DSCO
IF WS-UIWA-PR2-CODE NOT = COM-PRODUCT-CODES (2)
MOVE '1' TO ERROR-FLAG
MOVE WS-UIWA-PR2-CODE TO COM-PRODUCT-CODES (2)
END-IF
END-IF
ELSE
MOVE SPACES TO COM-PRODUCT-CODES (2)
END-IF.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES             TO WS-AUTO-GAS-AVAIL-PROD2

IF (WS-UIWA-AUTH-1-PROD-CODE = '13' OR '14')
AND WS-UIWA-AUTH-2-PROD-CODE = '  '
AND WS-UIWA-AUTH-3-PROD-CODE = '  '
CONTINUE
ELSE
MOVE ZEROS              TO WS-AUTO-GAS-AVAIL-AMT2
END-IF
IF WS-UIWA-PR2-CODE > SPACES
MOVE WS-UIWA-PR2-CODE   TO WS-AUTO-GAS-AVAIL-PROD2
IF WS-PRD-ALLOW < WS-PRD-CUR-DAY
MOVE WS-PRD-ALLOW   TO WS-WORK-PROD-AMT
ELSE
MOVE WS-PRD-CUR-DAY TO WS-WORK-PROD-AMT
END-IF
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT   TO WS-AUTO-GAS-AVAIL-AMT2.


PCE-CHECK-3RD-PRODUCT.


EVALUATE TRUE
WHEN WS-UIWA-PR3-CODE > SPACES AND
WS-UIWA-PR3-COST = ZEROES
MOVE SPACES                  TO WS-UIWA-PR3-CODE
MOVE -1                      TO PRD3AMTL
MOVE VERIFY-PRODUCTS         TO OUT-COMENT
MOVE VERIFY-PRODUCTS-N       TO POS-ERROR-NUMBER
MOVE 'N'                     TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN WS-UIWA-PR3-CODE <= SPACES AND
WS-UIWA-PR3-COST >  ZEROES
MOVE ' 9'                    TO WS-UIWA-PR3-CODE
MOVE -1                      TO PRD3AMTL
MOVE INVALID-PRODUCT-CODE    TO OUT-COMENT
MOVE INVALID-PRODUCT-CODE-N  TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-EVALUATE.


IF WS-UIWA-PR3-CODE > SPACES
MOVE WS-UIWA-PR3-CODE    TO WORK-PROD-CODE
MOVE WS-UIWA-PR3-COST-SC TO DEEDIT-FIELD-X
MOVE 3                   TO WS-WHICH-PROD
PERFORM PCE-1000
IF THERE-WAS-AN-ERROR
IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES      TO ERROR-FLAG
MOVE ZEROS       TO WS-PRD-ALLOW
WS-PRD-CUR-DAY
ELSE
MOVE -1          TO PRD3CDL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
ELSE
MOVE WORK-PROD-DESC     TO PRD3DSCO
IF WS-UIWA-PR3-CODE NOT = COM-PRODUCT-CODES (3)
MOVE '1' TO ERROR-FLAG
MOVE WS-UIWA-PR3-CODE TO COM-PRODUCT-CODES (3)
END-IF
END-IF
ELSE
MOVE SPACES TO COM-PRODUCT-CODES (3)
END-IF.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE SPACES             TO WS-AUTO-GAS-AVAIL-PROD3
MOVE ZEROS              TO WS-AUTO-GAS-AVAIL-AMT3
IF WS-UIWA-PR3-CODE > SPACES
MOVE WS-UIWA-PR3-CODE   TO WS-AUTO-GAS-AVAIL-PROD3
IF WS-PRD-ALLOW < WS-PRD-CUR-DAY
MOVE WS-PRD-ALLOW   TO WS-WORK-PROD-AMT
ELSE
MOVE WS-PRD-CUR-DAY TO WS-WORK-PROD-AMT
END-IF
PERFORM PCE-CURRENCY-CONVERSION
MOVE WS-WORK-PROD-AMT   TO WS-AUTO-GAS-AVAIL-AMT3.

IF WS-UIWA-PR3-CODE > SPACES
IF COM-CUSTOM-FEE-FLAG NOT = 'Y' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y' AND
(CDN-CREDIT-PRICED-FLAG = 'N' OR ' ' OR LOW-VALUES) AND
SCM-MERCH-SUR-CHG-PCT NUMERIC AND
SCM-MERCH-SUR-CHG-PCT > ZEROS
MOVE SPACES                   TO WS-UIWA-PR3-CODE
MOVE -1                       TO PRD3AMTL
MOVE SURCHARGE-LOCATION-ERR   TO OUT-COMENT
MOVE SURCHARGE-LOCATION-ERR-N TO POS-ERROR-NUMBER
MOVE 'N'                     TO WS-NOTIFY-IRIS-FL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
END-IF.


PCE-CHECK-FOR-DUP-PRODUCT.

IF COM-PRODUCT-CODES (1) > SPACES
IF COM-PRODUCT-CODES (1) = COM-PRODUCT-CODES (2) OR
COM-PRODUCT-CODES (1) = COM-PRODUCT-CODES (3)
IF EIBTRNID = ('FMBP' OR 'FMMP') AND
COM-PRODUCT-CODES(1) = '09'
CONTINUE
ELSE
MOVE '*' TO ERROR-FLAG
MOVE -1  TO PRD2CDL
MOVE VERIFY-PRODUCTS-DUP   TO OUT-COMENT-1
MOVE VERIFY-PRODUCTS-DUP-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF
END-IF.
IF COM-PRODUCT-CODES (2) > SPACES
IF COM-PRODUCT-CODES (2) = COM-PRODUCT-CODES (3)
IF EIBTRNID = ('FMBP' OR 'FMMP') AND
COM-PRODUCT-CODES(2) = '09'
CONTINUE
ELSE
MOVE '*' TO ERROR-FLAG
MOVE -1  TO PRD3CDL
MOVE VERIFY-PRODUCTS-DUP   TO OUT-COMENT-1
MOVE VERIFY-PRODUCTS-DUP-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-IF
END-IF.


PCE-1000.

MOVE 'N'                      TO WS-EXIT-FLAG.


MOVE 09                       TO WS-CXUTS123-BYTES
MOVE 02                       TO WS-CXUTS123-DECIMALS
MOVE DEEDIT-FIELD             TO WS-CXUTS123-FIELD
CALL 'CXUTS123' USING WS-CXUTS123-AREA
MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
MOVE WS-DEEDIT-COST           TO WS-WORK-PROD-AMT


IF WS-CXUTS123-ERR-FOUND OR
WS-DEEDIT-COST = ZEROES
MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
MOVE '*' TO ERROR-FLAG
MOVE 'Y' TO WS-EXIT-FLAG.


PERFORM PCE-VALIDATE-PRODUCT-CODE.



IF CDN-EXPANDED-PRODUCTS-FLAG NOT = 'Y' AND
WORK-PROD-CODE > '09'
MOVE WORK-PROD-CODE TO HOLD-WORK-PROD-CODE
MOVE '09'           TO WORK-PROD-CODE
ELSE
MOVE SPACES TO HOLD-WORK-PROD-CODE
END-IF.

IF WS-EXIT-FLAG = 'N'
COMPUTE INDX-1 = WORK-PROD-CODE-NUM + 1
PERFORM PCE-GET-PRODUCT-USED-AMT
PERFORM PCE-CURRENCY-CONVERSION
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM PCE-ADD-TO-BILLABLE-OR-NON
END-IF.
IF WS-EXIT-FLAG = 'N'
PERFORM PCE-CHECK-PRODUCT-AVAIL
PERFORM PCE-CHECK-ALLOWANCE
PERFORM PCE-CHECK-CUR-DAY
END-IF.


IF HOLD-WORK-PROD-CODE > SPACES
MOVE HOLD-WORK-PROD-CODE TO WORK-PROD-CODE
END-IF.

PCE-VALIDATE-PRODUCT-CODE.

MOVE 'PCE-VALIDATE-PRODUCT-CODE' TO CXUTS0ML-PARAGRAPH.

PERFORM PCE-FORMAT-PRODUCT-CODE.


EVALUATE WS-WHICH-PROD
WHEN 1
MOVE WORK-PROD-CODE       TO PRD1CDI
MOVE WORK-PROD-CODE       TO WS-UIWA-PR1-CODE
WHEN 2
MOVE WORK-PROD-CODE       TO PRD2CDI
MOVE WORK-PROD-CODE       TO WS-UIWA-PR2-CODE
WHEN 3
MOVE WORK-PROD-CODE       TO PRD3CDI
MOVE WORK-PROD-CODE       TO WS-UIWA-PR3-CODE
WHEN 0
CONTINUE
END-EVALUATE.


IF WORK-PROD-CODE < '00' OR > '35'
OR WORK-PROD-CODE = '31'
MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT-1
MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
MOVE '*'                    TO ERROR-FLAG
MOVE 'Y'                    TO WS-EXIT-FLAG
ELSE
INITIALIZE                     WS-PRODUCT-CODE-RECORD
MOVE WORK-PROD-CODE         TO WS-PCR-CODE-NBR
EXEC CICS READ
DATASET ('PRODCOD')
INTO    (WS-PRODUCT-CODE-RECORD)
RIDFLD  (WS-PCR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE WS-PCR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND) OR
WS-PCR-FIELD-NAME = '* UNAVAILABLE * '
MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT-1
MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
MOVE '*'                    TO ERROR-FLAG
MOVE 'Y'                    TO WS-EXIT-FLAG
END-IF
MOVE WS-PCR-ABBR               TO WORK-PROD-DESC
END-IF.


PCE-FORMAT-PRODUCT-CODE.


MOVE 2 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WORK-PROD-CODE,
FILL-CHAR


IF WORK-PROD-CODE-CHAR (2) > SPACES AND
WORK-PROD-CODE-CHAR (1) = SPACES
MOVE '0'            TO WORK-PROD-CODE-CHAR (1)
END-IF.


PERFORM PCE-TRANSLATE-PRODUCT-CODE.









PCE-TRANSLATE-PRODUCT-CODE.

IF WORK-PROD-CODE-CHAR(2) >= 'A' AND <= 'Z'
SET PTT-INDX TO 1
SEARCH WS-PRODUCT-TRANSLATION-TABLE
AT END
CONTINUE
WHEN WS-PTT-ALPHA (PTT-INDX)  = WORK-PROD-CODE
MOVE WS-PTT-NUM (PTT-INDX) TO WORK-PROD-CODE
END-SEARCH
END-IF.


PCE-GET-PRODUCT-USED-AMT.

MOVE 'PCE-GET-PRODUCT-USED-AMT'  TO CXUTS0ML-PARAGRAPH.




INITIALIZE     PRODUCT-CODE-USED
IF ON-HIERARCHY
MOVE '2'                   TO PCU-UBH-KEY-TYPE
MOVE PIR-HIERARCHY-ID      TO PCU-UBH-HIERARCHY-ID
MOVE UNIT-GRP-ID OF DUNITNOD
TO PCU-UBH-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBH-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBH-PRODUCT-CODE
ELSE
MOVE '1'                   TO PCU-UBC-KEY-TYPE
MOVE COM-UNIT-POOL-CUST-ID TO PCU-UBC-CUST-ID
MOVE 'DEFAULT'             TO PCU-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO PCU-UBC-UNIT-NR
MOVE WORK-PROD-CODE        TO PCU-UBC-PRODUCT-CODE
END-IF.

EXEC CICS READ
DATASET ('PRDUSED')
INTO    (PRODUCT-CODE-USED)
RIDFLD  (PCU-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE PCU-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


IF PCU-DATE-LAST-TRANS NOT = WS-CURRENT-DATE-YYDDD AND
PCU-PRD-CUR-DAY         > ZEROES
MOVE ZEROES         TO PCU-PRD-CUR-DAY
END-IF.


IF CSR-VERIFY-UNIT = 'N'
MOVE ZEROES TO PCU-PRD-CUR-DAY
PCU-PRD-ALLOW-USED
END-IF.


IF (CDN-PURCHASE-ORDER-POOL-LIMIT         ) AND
(WS-UIWA-PO-NR                 > SPACES) AND
(CSR-PROD-PO-OVERRIDE (INDX-1) > ZEROES)
MOVE ZEROES TO PCU-PRD-CUR-DAY
PCU-PRD-ALLOW-USED
END-IF.


PCE-CURRENCY-CONVERSION.


MOVE WS-WORK-PROD-AMT TO WS-WORK-PROD-AMT-SC.


EVALUATE TRUE
WHEN COM-COMP-SC-CURR-SAME
MOVE WS-WORK-PROD-AMT-SC TO WS-WORK-PROD-AMT
WHEN COM-US-COMP-CN-SC
MOVE WS-WORK-PROD-AMT-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS-WORK-PROD-AMT
WHEN COM-CN-COMP-US-SC
MOVE WS-WORK-PROD-AMT-SC TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS  TO WS-WORK-PROD-AMT
END-EVALUATE.


EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE WS-WORK-PROD-AMT     TO WS-WORK-PROD-AMT-US
WHEN COM-SC-IS-US
MOVE WS-WORK-PROD-AMT-SC TO WS-WORK-PROD-AMT-US
WHEN OTHER
MOVE WS-WORK-PROD-AMT-SC TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS        TO WS-WORK-PROD-AMT-US
END-EVALUATE.


PCE-ADD-TO-BILLABLE-OR-NON.

MOVE WS-WHICH-PROD           TO INDX.

IF WS-ADD-TO-BILLABLE-FLAG = 'Y'
IF COM-DIRECT-BILLING-PRODUCT (INDX-1) = '1'
ADD WS-WORK-PROD-AMT    TO WS-NON-BILLABLE
ADD WS-WORK-PROD-AMT-SC TO WS2-NON-BILLABLE
ADD WS-WORK-PROD-AMT-US TO WS3-NON-BILLABLE
ELSE
ADD WS-WORK-PROD-AMT    TO WS-BILLABLE
ADD WS-WORK-PROD-AMT-SC TO WS2-BILLABLE
ADD WS-WORK-PROD-AMT-US TO WS3-BILLABLE
END-IF
END-IF.
IF COM-DIRECT-BILLING-PRODUCT (INDX-1) = '1'
MOVE 'D'                 TO WS-PROD-BILL-FLAG
ELSE
MOVE 'F'                 TO WS-PROD-BILL-FLAG
END-IF.

EVALUATE WS-WHICH-PROD
WHEN 1
MOVE WS-PROD-BILL-FLAG    TO INP-PROD-BILL-1
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR1-COST
MOVE WS-WORK-PROD-AMT-SC  TO WS-UIWA-PR1-COST-SC
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR1-COST-US
WHEN 2
MOVE WS-PROD-BILL-FLAG    TO INP-PROD-BILL-2
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR2-COST
MOVE WS-WORK-PROD-AMT-SC  TO WS-UIWA-PR2-COST-SC
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR2-COST-US
WHEN 3
MOVE WS-PROD-BILL-FLAG    TO INP-PROD-BILL-3
MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR3-COST
MOVE WS-WORK-PROD-AMT-SC  TO WS-UIWA-PR3-COST-SC
MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR3-COST-US
END-EVALUATE.


PCE-CHECK-PRODUCT-AVAIL.


IF WS-PRD-MAX-DAILY (INDX-1) NEGATIVE OR
COM-PROD-OPTIONS (INDX-1) = 'E'
MOVE '*'                        TO ERROR-FLAG
MOVE 'Y'                        TO VCWS-ERROR-IND
MOVE DRIVER-MAY-NOT-PURC-PROD-N TO POS-ERROR-NUMBER
MOVE PURCHASE-NOT-ALLOWED-NBR   TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
MOVE DRIVER-MAY-NOT-PURC-PROD   TO OUT-COMENT
MOVE 'Y'                        TO WS-EXIT-FLAG
END-IF.


IF COM-PO-PROD-OPT-AREA > SPACES
IF COM-PO-PROD-OPTIONS (INDX-1) = 'E' AND
WS-UIWA-PO-NR         NOT > SPACES
MOVE DRIVER-MAY-NOT-PURC-PROD-N TO POS-ERROR-NUMBER
MOVE '*'                        TO ERROR-FLAG
MOVE PURCHASE-NOT-ALLOWED-NBR   TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
MOVE 'Y'                        TO VCWS-ERROR-IND
MOVE DRIVER-MAY-NOT-PURC-PROD   TO OUT-COMENT
MOVE 'Y'                        TO WS-EXIT-FLAG.


PCE-CHECK-ALLOWANCE.

MOVE 99999.99               TO WS-PRD-ALLOW.
IF (WS-EXIT-FLAG = 'N'            ) AND
(WS-PRD-ALLOW-ORIG (INDX-1) > 0)
COMPUTE WS-PRD-ALLOW = WS-PRD-ALLOW-ORIG (INDX-1) -
PCU-PRD-ALLOW-USED
IF (PCU-PRD-ALLOW-USED + WS-WORK-PROD-AMT) >
WS-PRD-ALLOW-ORIG (INDX-1)
MOVE PRODUCT-ALLOWANCE-EXCEEDED   TO OUT-COMENT-1
MOVE PRODUCT-ALLOWANCE-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE ALLOWANCE-EXCEEDED-NBR       TO CALL-COMPANY-NBR
MOVE 'Y'                          TO VCWS-ERROR-IND
MOVE CALL-COMPANY-MSG             TO NEW-OUT-MESSAGE
MOVE '*' TO ERROR-FLAG
MOVE PURCHASE-NOT-ALLOWED-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG         TO NEW-OUT-MESSAGE
MOVE 'Y'                      TO VCWS-ERROR-IND
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO OUT-COMENT-1
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
MOVE 'Y' TO WS-EXIT-FLAG
END-IF
END-IF
END-IF.


PCE-CHECK-CUR-DAY.

MOVE 99999.99               TO WS-PRD-CUR-DAY.
IF (WS-EXIT-FLAG = 'N') AND
(WS-PRD-MAX-DAILY (INDX-1) > 0)
COMPUTE WS-PRD-CUR-DAY = WS-PRD-MAX-DAILY (INDX-1) -
PCU-PRD-CUR-DAY
IF (PCU-PRD-CUR-DAY + WS-WORK-PROD-AMT) >
WS-PRD-MAX-DAILY (INDX-1)
MOVE MAX-DAILY-PROD-PURC   TO OUT-COMENT
MOVE MAX-DAILY-PROD-PURC-N TO POS-ERROR-NUMBER
MOVE MAX-DAILY-NBR         TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG      TO NEW-OUT-MESSAGE
MOVE 'Y'                   TO VCWS-ERROR-IND
MOVE '*' TO ERROR-FLAG
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
MOVE 'Y' TO WS-EXIT-FLAG
END-IF
END-IF
END-IF.


PREMIER-INITIAL-INTERFACE.

PERFORM PII-SETUP-TSCODE
PERFORM PII-FIX-DL-NUMBER.
PERFORM PII-VALIDATE-CARD-CHECK-DIGIT.
PERFORM PII-SEE-IF-CARD-IN-USE.
PERFORM PII-READ-CARD-RECORD.
PERFORM PII-CHECK-FOR-ACTIVE-CARD.
PERFORM PII-CHECK-IN-STATION.
PERFORM PII-GET-CUSTOMER-INFO.
PERFORM PII-CHECK-FOR-BATCH-LOAD.
PERFORM PII-LINK-CXXCO0CS.
PERFORM PII-ADJUST-CSTAND.
IF WS-RELOCATE-UNIT-ADJUST = 'Y'
PERFORM PII-POS-UNIT-ADJUST
END-IF
IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND THIS-BE-A-PC-REQUEST
PERFORM PII-SETUP-FLEET-LIMITS
END-IF
PERFORM PII-ADJUST-LIMITS.
PERFORM PII-CHECK-PRIMARY-STATUS.
PERFORM PII-CHECK-OFF-HOURS.
PERFORM PII-ATM-SETUP-ROUTINE.
PERFORM PII-SEE-IF-CARD-SET-FOR-FUEL
IF EIBCALEN = ZEROES AND
NOT THIS-BE-A-PC-REQUEST
MOVE SPACES TO OUT-COMENT
GO TO PII-9999.
IF COM-STAGE < 2
PERFORM PII-CHECK-NO-FEE
PERFORM PII-CHECK-FOR-VOICE-RESPONSE
PERFORM PII-VALIDATE-UNIT-NUMBER
PERFORM PII-VALIDATE-UNITMST
PERFORM PII-CHECK-NODE-STATUS
PERFORM PII-CHECK-EXP-DATE
PERFORM PII-CHECK-FOR-LOST-CARD
PERFORM PII-VERIFY-DRIVER-NR
PERFORM PII-VERIFY-DRIVER-NR-CAPTURE
PERFORM PII-CHECK-BATCH-ENTRY-INFO
PERFORM PII-CHECK-ADJUSTMENT-INFO
PERFORM PII-CHECK-LICENSE-INFO
END-IF.
PERFORM PII-CHECK-LICENSE-POOL-CAPTURE.
PERFORM PII-CHECK-CARD-PURC-LIMIT.
PERFORM PII-CHECK-COMCHEK-MOBILE-LIMIT
PERFORM PII-CHECK-PO-INFO.
PERFORM PII-SEE-IF-PICKUP-RATES-APPLY.




PII-9999.

EXIT.


PII-SETUP-TSCODE.

IF EIBCALEN > ZEROES AND
THIS-IS-NOT-A-POS-TRANS AND
COM-STAGE = 999
MOVE COM-FP-SC-CODE TO FP1TSCDI.


PII-FIX-DL-NUMBER.

IF FP1DLNRI > SPACES
MOVE FP1DLNRI TO WS-DL-AREA
PERFORM FIX-DRIVERS-LICENSE
MOVE WS-DL-AREA TO FP1DLNRI.


PII-VALIDATE-CARD-CHECK-DIGIT.

MOVE SPACES TO ERROR-FLAG.

MOVE 15 TO MOD10-SL
MOVE HIGH-VALUE TO INDX-LO
IF WS-PRM-CARD-N IS NUMERIC
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
INDX-LO
END-IF
IF INDX-LO NOT = WS-PRM-CARD-CKD AND
COM-STAGE NOT = 2
MOVE INVALID-CARD-NR TO OUT-COMENT
MOVE INVALID-CARD-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


PII-READ-CARD-RECORD.

MOVE 'PII-READ-CARD-RECORD'      TO CXUTS0ML-PARAGRAPH.
MOVE WS-PRM-CARD-NR TO COM-PREMIER-CARD.
IF COM-PREMIER-CARD > +0
EXEC CICS READ
DATASET ('PRMCARD')
INTO    (PRM-CARD-RECORD)
RIDFLD  (COM-PREMIER-CARD)
RESP    (EIBRESP)
END-EXEC
MOVE COM-PREMIER-CARD  TO WS-NUM-15
MOVE WS-NUM-15         TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE INVALID-CARD-NR TO OUT-COMENT
MOVE INVALID-CARD-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
PERFORM 60000-CHECK-PRMCARD
MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG
PERFORM GET-ALL-DYNAM-BIN-FLAGS
PERFORM GET-ICA-INFO


IF S007-VIRTUAL-CARD = 'Y' AND
EIBTRNID NOT = 'FMBP' AND
EIBTRNID NOT = 'FMMP'
MOVE VIRTUAL-CARD-NOT-ALLOWED   TO OUT-COMENT
MOVE VIRTUAL-CARD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
ELSE
MOVE INVALID-CARD-NR TO OUT-COMENT
MOVE INVALID-CARD-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


PII-SEE-IF-CARD-IN-USE.

MOVE 'E'               TO WS-TSFMU020-REQUEST
MOVE 'RESCARD '        TO WS-TSFMU020-CALLING-FILE
MOVE WS-PRM-CARD-NR    TO WS-TSFMU020-CARD-RESOURCE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL
IF WS-TSFMU020-RET-CODE = 0
MOVE WS-PRM-CARD-NR TO WS-ENQ-CARD-NR
ELSE
MOVE CARD-IN-USE   TO OUT-COMENT
MOVE CARD-IN-USE-N TO POS-ERROR-NUMBER
MOVE '*'           TO VR-TRANS-FLAG
IF (THIS-BE-AN-ATM-XTN) AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F) AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


PII-CHECK-FOR-ACTIVE-CARD.

IF PRM-CARD-BLOCK                 AND
THIS-BE-AN-ATM-XTN
PERFORM PII-GET-CUSTOMER-INFO.
IF  (PRM-CARD-BLOCK                ) AND
(CDN-BILL-ATM-FOR-BLOCK = 'Y'  ) AND
(THIS-BE-AN-ATM-XTN            )
MOVE ATM-BLOCKED-CARD-N   TO POS-ERROR-NUMBER
MOVE ATM-BLOCKED-CARD     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
IF PRM-CARD-ACTIVE OR
PRM-CARD-LOST   OR
PRM-CARD-PENDING
CONTINUE
ELSE
MOVE 'Y'               TO WS-CARD-BLOCKED-FLAG
MOVE INACTIVE-CARD     TO OUT-COMENT
MOVE INACTIVE-CARD-N   TO POS-ERROR-NUMBER
MOVE INACTIVE-CARD-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG  TO NEW-OUT-MESSAGE
MOVE 'Y'               TO VCWS-ERROR-IND
MOVE '6'               TO VR-TRANS-FLAG
IF (THIS-BE-AN-ATM-XTN)  AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F) AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PII-CHECK-IN-STATION.

IF PRM-IN-STATION-PROGRAM AND
COM-STAGE NOT = 2
MOVE MUST-USE-IN-STATION TO OUT-COMENT
MOVE MUST-USE-IN-STATION-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.
IF PRM-IN-STATION-CARD
PERFORM PII-VALIDATE-IN-STATION
END-IF.


PII-VALIDATE-IN-STATION.

MOVE 'PII-VALIDATE-IN-STATION'   TO CXUTS0ML-PARAGRAPH.
IF FP1DLNRI NOT > SPACES OR
FP1DLSTI NOT > SPACES
MOVE INVALID-DL-N     TO POS-ERROR-NUMBER
MOVE INVALID-DL-NBR   TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE
MOVE 'Y'              TO VCWS-ERROR-IND
MOVE INVALID-DL       TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.
MOVE FP1DLSTI TO PRM-DLXF-STATE
MOVE FP1DLNRI TO PRM-DLXF-NUMBER
EXEC CICS READ
DATASET ('PRMDLXF')
INTO    (PRM-DLXF-RECORD)
RIDFLD  (PRM-DLXF-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRM-DLXF-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE INVALID-DL TO OUT-COMENT
MOVE INVALID-DL-N TO POS-ERROR-NUMBER
MOVE INVALID-DL-NBR   TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE
MOVE 'Y'              TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.
MOVE PRM-DLXF-CARD-NUMBER TO COM-PREMIER-CARD
EXEC CICS READ
DATASET ('PRMCARD')
INTO    (PRM-CARD-RECORD)
RIDFLD  (COM-PREMIER-CARD)
RESP    (EIBRESP)
END-EXEC
MOVE COM-PREMIER-CARD  TO WS-NUM-15
MOVE WS-NUM-15         TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE INVALID-CARD-NR TO OUT-COMENT
MOVE INVALID-CARD-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
PERFORM 60000-CHECK-PRMCARD
MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG

IF NOT PRM-IN-STATION-PROGRAM
MOVE NOT-INSTATION-N    TO POS-ERROR-NUMBER
MOVE NEW-NOT-INSTATION1 TO NEW-OUT-MSG1
MOVE NEW-NOT-INSTATION2 TO NEW-OUT-MSG2
MOVE 'Y'                TO VCWS-ERROR-IND
MOVE NOT-INSTATION      TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

IF PRM-IN-STATION-CARD
MOVE IN-STATION-PURC-NOT-ALLOWED TO OUT-COMENT
MOVE IN-STATION-PURC-NOT-ALLOWED-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

PERFORM PII-CHECK-FOR-ACTIVE-CARD.
PERFORM GET-ALL-DYNAM-BIN-FLAGS.
PERFORM GET-ICA-INFO.


PII-GET-CUSTOMER-INFO.


MOVE PRM-SUB-ACCT-NUMB      TO COM-FP-CO-CODE
PERFORM READ-CDNCUST.
IF NOT CDN-CUST-ACTIVE
MOVE CUST-NOT-ACTIVE-N   TO POS-ERROR-NUMBER
MOVE CUST-NOT-ACTIVE-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE CUST-NOT-ACTIVE     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.
IF CDN-UNIT-POOL-MASTER > SPACES

MOVE CDN-UNIT-POOL-MASTER TO COM-UNIT-POOL-CUST-ID
ELSE

MOVE PRM-SUB-ACCT-NUMB    TO COM-UNIT-POOL-CUST-ID
END-IF.


PII-CHECK-NO-FEE.

IF FP1ADJI NOT > SPACES
MOVE 'N' TO FP1ADJI.

MOVE 'N'    TO COM-NO-FEE-FLAG.
IF FP1ADJI = 'Y'
MOVE 'Y' TO COM-NO-FEE-FLAG.


PII-CHECK-FOR-BATCH-LOAD.

MOVE 'PII-CHECK-FOR-BATCH-LOAD'  TO CXUTS0ML-PARAGRAPH.
IF CDN-PAYROLL-BATCH-FLAG = 'Y'
MOVE PRM-CARD-NUMB TO BATCH-LOAD-CARD
MOVE CDN-CUST-NUMBER TO BATCH-LOAD-CUST-ID
MOVE CDN-CUST-ACCT-CODE TO BATCH-LOAD-ACCT-ID
EXEC CICS LINK
PROGRAM  ('TSMMO0BL')
COMMAREA (TSMMO0BL-COMMAREA)
LENGTH   (29)
RESP     (EIBRESP)
END-EXEC
IF EIBRESP = DFHRESP (NORMAL) AND
BATCH-LOAD-READ-PRMCARD = 'Y'
EXEC CICS READ
FILE   ('PRMCARD')
INTO   (PRM-CARD-RECORD)
RIDFLD (PRM-CARD-NUMB)
RESP   (EIBRESP)
END-EXEC
PERFORM 60000-CHECK-PRMCARD
MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG.


PII-LINK-CXXCO0CS.

MOVE 'PII-LINK-CXXCO0CS'         TO CXUTS0ML-PARAGRAPH.
MOVE SPACES              TO WS-CXXCO0CS-COMMAREA.
MOVE CDN-CUSTOMER-RECORD TO WS-CXXCO0CS-CDNCUST.
IF PRM-CARD-NUMB NUMERIC
MOVE PRM-CARD-RECORD  TO WS-CXXCO0CS-PRMCARD
END-IF.
MOVE 'N'                 TO WS-CXXCO0CS-VMBOX-FLAG.
MOVE 'N'                 TO WS-CXXCO0CS-STANDIN-FLAG.
EXEC CICS LINK
PROGRAM ('CXXCO0CS')
COMMAREA(WS-CXXCO0CS-COMMAREA)
LENGTH (3633)
END-EXEC
IF WS-CXXCO0CS-RETURN-CODE NOT = SPACES
MOVE WS-CXXCO0CS-RETURN-CODE TO
WS-CXXCO0CS-ABEND-CODE
EXEC CICS ABEND
ABCODE (WS-CXXCO0CS-ABEND)
END-EXEC
END-IF
MOVE WS-CXXCO0CS-CSTAND TO COMPANY-STANDARDS-RECORD.

MOVE CSR-CASH-PER-GALLON-LIMIT TO PRM-CASH-PER-GALLON-LIMIT.


PII-ADJUST-CSTAND.

IF THIS-BE-A-FLEET-XTN    AND
CSR-PROD-DAILY-MAX (10) = -1
MOVE ZERO           TO CSR-PROD-DAILY-MAX   (10)
MOVE ZERO           TO CSR-PROD-ALLOWANCE   (10).

IF THIS-BE-A-VRU-XTN
IF CSR-VERIFY-UNIT = 'P' OR 'N' OR 'G'
MOVE 'C'          TO CSR-VERIFY-UNIT
MOVE '     XCASH' TO PRM-UNIT-NUMBER-10
MOVE ' XCASH'     TO PRM-UNIT-NUMBER.

IF THIS-BE-A-VRU-XTN
IF PRM-DRIVER-TRIP-NR > SPACES
MOVE 'C' TO CSR-TRIP-NUMBER-REQ,
WS-FL-TRIP-FLAG.

IF THIS-BE-A-VRU-XTN
IF CSR-DRIVER-NR-VERIFY OR
CSR-DRIVER-NR-VEHICLE
MOVE 'C' TO CSR-DRIVER-NR-FLAG.

IF THIS-BE-AN-ATM-XTN
PERFORM PII-ATM-SETUP-CUST
PERFORM PII-ATM-SETUP-CARD.


PII-POS-UNIT-ADJUST.



MOVE 'N' TO WS-RELOCATE-UNIT-ADJUST
IF WS-UIWA-UNIT-NR-10 > SPACES
MOVE WS-UIWA-UNIT-NR-10 TO WS-ADJUST-UNIT-NR
ELSE
MOVE WS-UIWA-UNIT-NR    TO WS-ADJUST-UNIT-NR
END-IF
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR-06  TO WS-UIWA-UNIT-NR
MOVE WS-ADJUST-UNIT-NR     TO WS-UIWA-UNIT-NR-10
FP1UNITI
WS-UNIT-NR
CONTINUE.

PII-ADJUST-LIMITS.

MOVE 'PII-ADJUST-LIMITS'         TO CXUTS0ML-PARAGRAPH.
MOVE 'U'                 TO TSXCO0LM-CALLING-PGM.
MOVE PRM-CARD-RECORD     TO TSXCO0LM-CARD-RECORD.
MOVE CDN-CUSTOMER-RECORD TO TSXCO0LM-CUST-RECORD.
INITIALIZE TSXCO0LM-INPUT-AREA-CONT.
INITIALIZE TSXCO0LM-RETURN-AREA-CONT.
MOVE SPACES TO TSXCO0LM-RETURN-AREA.
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
MOVE PRM-INFO-RECORD     TO TSXCO0LM-PRMINFO-RECORD.
EXEC CICS LINK
PROGRAM  ('TSXCO0LM')
COMMAREA (TSXCO0LM-COMM-AREA)
LENGTH   (TSXCO0LM-CA-LENGTH-NEW)
NOHANDLE
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.





MOVE TSXCO0LM-PURC-ON-CARD-AVAIL  TO PRM-PURC-INITIAL.
MOVE TSXCO0LM-PURC-ON-CARD-RESET  TO PRM-PURC-RESET
MOVE ZEROES                       TO PRM-PURC-USED.
MOVE ZEROES                       TO PRM-PURC-ONE-TIME.

MOVE TSXCO0LM-CASH-ON-CARD-AVAIL  TO PRM-CASH-INITIAL.
MOVE TSXCO0LM-CASH-ON-CARD-RESET  TO PRM-CASH-RESET.
MOVE ZEROES                       TO PRM-CASH-USED.
MOVE PRM-CASH-ONE-TIME            TO HLD-CASH-1TIME.
MOVE ZEROES                       TO PRM-CASH-ONE-TIME.

MOVE TSXCO0LM-OILD-ON-CARD-AVAIL  TO PRM-OIL-INITIAL-DOLLARS.
MOVE TSXCO0LM-OIL-ON-CARD-RESET   TO PRM-OIL-RESET.
MOVE ZEROES                       TO PRM-OIL-USED-DOLLARS.
MOVE TSXCO0LM-OILQ-ON-CARD-AVAIL  TO PRM-OIL-INITIAL-QUARTS.
MOVE ZEROES                       TO PRM-OIL-USED-QUARTS.

MOVE TSXCO0LM-D1D2-ON-CARD-AVAIL  TO PRM-DIESEL-LIMIT
MOVE TSXCO0LM-D1D2-ON-CARD-RESET  TO CSR-DIESEL-QTY-RESET
MOVE ZEROES                       TO PRM-DIESEL-USED.

MOVE TSXCO0LM-RFRQ-ON-CARD-AVAIL  TO PRM-REEFER-LIMIT
MOVE TSXCO0LM-RFRQ-ON-CARD-RESET  TO CSR-REEFER-QTY-RESET
MOVE ZEROES                       TO PRM-REEFER-USED.

IF PIR-OTHER-USED NOT NUMERIC
MOVE ZEROS TO PIR-OTHER-USED
END-IF



MOVE TSXCO0LM-OTHQ-ON-CARD-AVAIL  TO CSR-OTHER-QTY-LIMIT
CSRH-OTHER-QTY-LIMIT
MOVE TSXCO0LM-OTHQ-ON-CARD-RESET  TO CSR-OTHER-QTY-RESET
MOVE PIR-OTHER-USED               TO PIRH-OTHER-USED
MOVE ZEROES                       TO PIR-OTHER-USED

MOVE TSXCO0LM-EXPRESS-CASH-LIMIT  TO PRM-EXPENSE-BALANCE.

MOVE TSXCO0LM-FREE-DRAWS          TO PRM-FREE-XTN-COUNT.

IF TSXCO0LM-SECONDARY-CARD-NO
MOVE ZEROES TO PRM-PRIMARY-CARD-NR.



IF CDN-FLEET-LIMIT-FLAG = 'Y'
MOVE WS-FLEET-LIMIT-AVAIL   TO PRM-PURC-INITIAL
MOVE 'Y'                    TO CSR-CARD-PURC-FLAG
MOVE WS-FLEET-LIMIT-CSH-AMT TO PRM-CASH-INITIAL
IF WS-FLEET-LIMIT-AVAIL > 99999.99
MOVE 99999.99            TO PRM-PURC-INITIAL
END-IF
IF WS-FLEET-LIMIT-CSH-AMT > 99999.99
MOVE 99999.99            TO PRM-CASH-INITIAL
END-IF
END-IF.

MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
WS-RESET-ONE-TIME-CASH-FLAG.


PII-SETUP-FLEET-LIMITS.


PERFORM PII-SETUP-FMLP-FLDS-I
MOVE 'A'                   TO FMLP-LIM-PROCESS-IND
MOVE WS-FLEET-PROD         TO FMLP-FLEET-PROD
PERFORM PII-SETUP-FMLP-FLDS-II
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-UIWA-SUB-PRODS  TO FMLP-SUB-PRODS
END-IF
IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
PERFORM PII-SETUP-FMLP-FLDS-III
PERFORM PII-SETUP-FMLP-POSTING
END-IF

IF PRM-1TIME-OFF-CSTAND-FLAG > LOW-VALUES
IF PRM-1TIME-OFF-CSTAND-FLAG = 'Y'
MOVE 'X' TO FMLP-STANDARD-TYPE
MOVE 'Y' TO WS-1TIME-OFF-CSTAND-FLG
END-IF
END-IF
PERFORM LINK-TO-TSFMO0LP
IF FMLP-ERROR
MOVE FMLP-FPCMT1L          TO FPCMT1L
MOVE FMLP-OUT-COMENT       TO OUT-COMENT
MOVE FMLP-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
MOVE FMLP-USE-FLEET-LIMITS     TO WS-USE-FLEET-LIMITS
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE FMLP-SP14-REPLY        TO WS-SP14-REPLY
END-IF
MOVE FMLP-FLEET-LIMIT-AVAIL    TO WS-FLEET-LIMIT-AVAIL
PRM-PURC-INITIAL
CDN-PURC-INITIAL
MOVE ZERO                      TO PRM-PURC-USED.

PII-SETUP-FMLP-FLDS-I.

IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
INITIALIZE                    WS-TSFMO0LP-COMMAREA
MOVE CSR-GLOBAL-LIMIT-FLAG TO FMLP-GLOBAL-LIMIT-FLAG
MOVE WS-UIWA-REQUEST-FLAG  TO FMLP-XTN-REQUEST-FLAG
MOVE WS-HIER-SW            TO FMLP-HIER-SW
MOVE PIR-HIERARCHY-ID      TO FMLP-HIERARCHY-ID
MOVE CDN-CUST-NUMBER       TO FMLP-CUST-NUMBER
MOVE CSR-STANDARD-TYPE     TO FMLP-STANDARD-TYPE
MOVE CSR-STANDARD-ID       TO FMLP-STANDARD-ID
MOVE PRM-CARD-NUMB         TO FMLP-CARD-NUMB
MOVE WS-PROPRIETARY-CARD   TO FMLP-PROPRIETARY-CARD.


PII-SETUP-FMLP-FLDS-II.

PERFORM 87520-GET-ALL-DFLT-SUB-PROD
MOVE WS-DFLT-NR2-SUB-PROD-IN TO FMLP-DFLT-NR2-SUB-PROD
MOVE WS-DFLT-NR1-SUB-PROD-IN TO FMLP-DFLT-NR1-SUB-PROD
MOVE WS-DFLT-REF-SUB-PROD-IN TO FMLP-DFLT-REF-SUB-PROD
MOVE WS-DFLT-OTH-SUB-PROD-IN TO FMLP-DFLT-OTH-SUB-PROD
EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
MOVE WS-AXIA-FORCE-POST TO FMLP-FORCE-POSTED-FLAG
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE 'Y'                TO FMLP-FORCE-POSTED-FLAG
WHEN OTHER
MOVE 'N'                TO FMLP-FORCE-POSTED-FLAG
END-EVALUATE.

PII-SETUP-FMLP-FLDS-III.

MOVE WS-HOLD-NR2-SUB-PROD-IN TO FMLP-IN-NR2-SUB-PROD
MOVE WS-HOLD-NR1-SUB-PROD-IN TO FMLP-IN-NR1-SUB-PROD
MOVE WS-HOLD-REF-SUB-PROD-IN TO FMLP-IN-REF-SUB-PROD
MOVE WS-HOLD-OTH-SUB-PROD-IN TO FMLP-IN-OTH-SUB-PROD
MOVE WS-UIWA-PR1-CODE        TO FMLP-IN-PR1-SUB-PROD
MOVE WS-UIWA-PR2-CODE        TO FMLP-IN-PR2-SUB-PROD
MOVE WS-UIWA-PR3-CODE        TO FMLP-IN-PR3-SUB-PROD.

PII-SETUP-FMLP-POSTING.

MOVE WS-UIWA-NR2-COST        TO FMLP-IN-NR2-COST
MOVE WS-UIWA-NR2-QTY         TO FMLP-IN-NR2-QTY
MOVE WS-UIWA-NR1-COST        TO FMLP-IN-NR1-COST
MOVE WS-UIWA-NR1-QTY         TO FMLP-IN-NR1-QTY
MOVE WS-UIWA-REF-COST        TO FMLP-IN-REF-COST
MOVE WS-UIWA-REF-QTY         TO FMLP-IN-REF-QTY
MOVE WS-UIWA-OTH-COST        TO FMLP-IN-OTH-COST
MOVE WS-UIWA-OTH-QTY         TO FMLP-IN-OTH-QTY
MOVE WS-UIWA-OIL-COST        TO FMLP-IN-OIL-COST
MOVE WS-UIWA-OIL-QTY         TO FMLP-IN-OIL-QTY
MOVE WS-UIWA-CASH-AMT        TO FMLP-IN-CSH-COST
MOVE WS-UIWA-PR1-COST        TO FMLP-IN-PR1-COST
MOVE WS-UIWA-PR2-COST        TO FMLP-IN-PR2-COST
MOVE WS-UIWA-PR3-COST        TO FMLP-IN-PR3-COST.

PII-CHECK-PRIMARY-STATUS.

IF (TSXCO0LM-PRIMARY-STATUS = 'B' AND
CDN-BILL-ATM-FOR-BLOCK = 'Y'  AND
THIS-BE-AN-ATM-XTN)
MOVE ATM-BLOCKED-CARD-N   TO POS-ERROR-NUMBER
MOVE ATM-BLOCKED-CARD     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
IF TSXCO0LM-PRIMARY-STATUS = 'A' OR 'L' OR 'P'
CONTINUE
ELSE
MOVE 'Y'               TO WS-CARD-BLOCKED-FLAG
MOVE INACTIVE-CARD     TO OUT-COMENT
MOVE INACTIVE-CARD-N   TO POS-ERROR-NUMBER
MOVE INACTIVE-CARD-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG  TO NEW-OUT-MESSAGE
MOVE 'Y'               TO VCWS-ERROR-IND
MOVE '6'               TO VR-TRANS-FLAG
IF (THIS-BE-AN-ATM-XTN) AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F) AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PII-CHECK-OFF-HOURS.

CALL 'TSXCS0OH' USING COMPANY-STANDARDS-RECORD,
EIBTIME,
WS-OFF-HOURS-FLAG.
EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
CONTINUE
WHEN WS-OFF-HOURS-FLAG = 'B'
MOVE CARD-IS-OFF-HOURS   TO OUT-COMENT
MOVE CARD-IS-OFF-HOURS-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
WHEN WS-OFF-HOURS-FLAG = 'W'
MOVE 'Y' TO WS-OFF-HOURS-WARNING-FLAG
END-EVALUATE.


PII-ATM-SETUP-ROUTINE.

IF THIS-BE-AN-ATM-XTN
PERFORM PII-ATM-SETUP-CUST
PERFORM PII-ATM-SETUP-CARD.


PII-ATM-SETUP-CUST.


MOVE 'N' TO CDN-CUST-LICENSE-YN
MOVE ' ' TO CDN-DIRECT-BILLING-OPTION.
MOVE ' ' TO WS-FL-HUBOMETER-FLAG
CDN-NETWORKING-OPTION
CSR-TRIP-NUMBER-REQ
WS-FL-TRIP-FLAG
WS-FL-TRIP-ALLOWANCE-FLAG
CDN-TRAILER-NR-FLAG
CDN-TRAILER-HUB
CDN-PURCHASE-ORDER.


PII-ATM-SETUP-CARD.

IF (CSR-VERIFY-UNIT = 'P' OR 'N' OR 'G') OR
(PRM-UNIT-NUMBER NOT > SPACES)
MOVE 'C'          TO CSR-VERIFY-UNIT
MOVE ' XCASH'     TO PRM-UNIT-NUMBER
MOVE '     XCASH' TO PRM-UNIT-NUMBER-10
ELSE
MOVE 'C' TO CSR-VERIFY-UNIT
END-IF.

MOVE PRM-UNIT-NUMBER-10     TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT.
MOVE WS-ADJUST-UNIT-NR      TO FP1UNITI, WS-UNIT-NR
MOVE WS-UNIT-NR-10          TO WS-UIWA-UNIT-NR-10
MOVE WS-UNIT-NR-06          TO WS-UIWA-UNIT-NR.


PII-SEE-IF-CARD-SET-FOR-FUEL.


IF PRM-FUEL-CARD NOT > SPACES
MOVE CDN-FUEL-FLAG TO PRM-FUEL-CARD.

IF PRM-FUEL-CARD NOT = 'Y'
MOVE 'N' TO PRM-FUEL-CARD.

IF THIS-BE-A-VRU-EXPRESS-CASH   OR
PRM-FUEL-CARD  = 'Y'         OR
CANCEL-FLAG    = 'Y'         OR
(PRM-FUEL-CARD = 'N'         AND
CDN-TERM-FUEL-OVR-FLAG = 'Y' AND
SCM-BUSINESS-TYPE-CODE = 'TF')
NEXT SENTENCE
ELSE
MOVE CARD-NOT-ON-FUEL      TO OUT-COMENT
MOVE CARD-NOT-ON-FUEL-N    TO POS-ERROR-NUMBER
MOVE NEW-CARD-NOT-ON-FUEL1 TO NEW-OUT-MSG1
MOVE NEW-CARD-NOT-ON-FUEL2 TO NEW-OUT-MSG2
MOVE 'Y'                   TO VCWS-ERROR-IND
IF (THIS-BE-AN-ATM-XTN ) AND
(NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F) AND
(NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PII-CHECK-FOR-VOICE-RESPONSE.

IF THIS-BE-A-VRU-XTN
PERFORM VOICE-RESPONSE-INITIAL-RTN.
IF THIS-BE-A-VRU-XTN
IF CSR-VERIFY-UNIT = 'P' OR 'N' OR 'G'
MOVE 'C' TO CSR-VERIFY-UNIT
MOVE ' XCASH'     TO PRM-UNIT-NUMBER
MOVE '     XCASH' TO PRM-UNIT-NUMBER-10.


PII-VALIDATE-UNIT-NUMBER.

IF THIS-BE-A-FLEET-XTN
PERFORM PII-CHECK-FLEET-UNIT.

IF PRM-UNIT-NUMBER-10 NOT > SPACES
EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
MOVE ' FLEET'     TO PRM-UNIT-NUMBER
MOVE '     FLEET' TO PRM-UNIT-NUMBER-10
WHEN CSR-VERIFY-UNIT = 'N'
MOVE '     1'     TO PRM-UNIT-NUMBER
MOVE '         1' TO PRM-UNIT-NUMBER-10
WHEN OTHER
MOVE '     1'     TO PRM-UNIT-NUMBER
MOVE '         1' TO PRM-UNIT-NUMBER-10
END-EVALUATE.

MOVE PRM-UNIT-NUMBER-10  TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR-06 TO PRM-UNIT-NUMBER
MOVE WS-ADJUST-UNIT-NR    TO PRM-UNIT-NUMBER-10

EVALUATE TRUE
WHEN CSR-VERIFY-UNIT = 'C'
CONTINUE
WHEN CSR-VERIFY-UNIT = 'B'
IF WS-UNIT-NR-10 NOT = PRM-UNIT-NUMBER-10
MOVE INVALID-UNIT-NR-N   TO POS-ERROR-NUMBER
MOVE INVALID-UNIT-NR     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
WHEN OTHER
IF WS-UNIT-NR-10 NOT > SPACES
MOVE INVALID-UNIT-NR-N   TO POS-ERROR-NUMBER
MOVE INVALID-UNIT-NR     TO OUT-COMENT
MOVE INVALID-UNIT-NR-NBR TO CALL-COMPANY-NBR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
MOVE PRM-UNIT-NUMBER TO COM-HOLD-UNIT-NUMBER
MOVE PRM-UNIT-NUMBER-10 TO COM-HOLD-UNIT-NUMBER-10
MOVE WS-UNIT-NR-06   TO PRM-UNIT-NUMBER
MOVE WS-UNIT-NR-10   TO PRM-UNIT-NUMBER-10
END-EVALUATE.





















PII-CHECK-FLEET-UNIT.


EVALUATE WS-UNIT-NR-06
WHEN 'FLEET '
WHEN ' FLEET'
WHEN '      '
WHEN '000000'
IF CSR-VERIFY-UNIT = 'N' AND
PRM-UNIT-NUMBER-10 > SPACES
MOVE PRM-UNIT-NUMBER-10 TO FP1UNITI
ELSE
MOVE '     FLEET'       TO FP1UNITI
END-IF
MOVE FP1UNITI           TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR  TO FP1UNITI, WS-UNIT-NR
END-EVALUATE




IF CSR-VERIFY-UNIT = 'P' OR 'B' OR 'N' OR 'G'
MOVE 'N'                    TO CSR-VERIFY-UNIT
MOVE WS-UNIT-NR-10          TO FP1UNITI,
PRM-UNIT-NUMBER-10
MOVE WS-UNIT-NR-06          TO PRM-UNIT-NUMBER
END-IF.



IF CSR-VERIFY-UNIT = 'C'
MOVE 'N'                     TO CSR-VERIFY-UNIT
MOVE PRM-UNIT-NUMBER-10      TO WS-UNIT-NR
FP1UNITI
END-IF.



IF WS-UNIT-NR-06 NOT = ' FLEET'
MOVE 'W' TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST
IF EIBRESP = DFHRESP(NOTFND)
MOVE '     FLEET'       TO FP1UNITI
MOVE FP1UNITI           TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR  TO FP1UNITI, WS-UNIT-NR
MOVE WS-UNIT-NR-06      TO PRM-UNIT-NUMBER
MOVE WS-UNIT-NR-10      TO PRM-UNIT-NUMBER-10
END-IF
END-IF.
IF EIBRESP = DFHRESP(NOTFND)
MOVE '     FLEET'          TO FP1UNITI
MOVE FP1UNITI              TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR     TO FP1UNITI, WS-UNIT-NR
MOVE WS-UNIT-NR-06         TO PRM-UNIT-NUMBER
MOVE WS-UNIT-NR-10         TO PRM-UNIT-NUMBER-10
END-IF.
PERFORM 60500-CHECK-UNITMST-NUMERICS
PERFORM 60510-MOVE-UNITMST-VALUES.


PII-VALIDATE-UNITMST.


IF CSR-VERIFY-UNIT = 'N' AND
PRM-UNIT-NUMBER-10 NOT > SPACES
MOVE '         1'      TO PRM-UNIT-NUMBER
END-IF.

MOVE PRM-UNIT-NUMBER-10     TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR-06   TO PRM-UNIT-NUMBER,
COM-UNIT-NR.
MOVE WS-ADJUST-UNIT-NR      TO COM-UNIT-NR-EXPANDED.

IF CSR-VERIFY-UNIT = 'G'
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
PERFORM 52000-VALIDATE-CUST-UNIT
IF SQLCODE = +100
MOVE INVALID-UNIT-NR           TO OUT-COMENT
MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
END-IF.

MOVE 'C' TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST
IF EIBRESP = DFHRESP(NORMAL)
CONTINUE
ELSE
IF (CSR-VERIFY-UNIT = 'C' AND
WS-ADJUST-UNIT-NR = '     XCASH') OR
(CSR-VERIFY-UNIT = 'N')
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N'          TO WS-UNITMST-RECD-SW
ELSE
MOVE INVALID-UNIT-NR     TO OUT-COMENT
MOVE INVALID-UNIT-NR-N   TO POS-ERROR-NUMBER
MOVE INVALID-UNIT-NR-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N' TO WS-UNITMST-RECD-SW
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
END-IF.

IF CSR-VERIFY-UNIT = 'N'
MOVE WS-UNIT-NR-06       TO COM-UNIT-NR
MOVE WS-UNIT-NR-10       TO COM-UNIT-NR-EXPANDED
END-IF.

MOVE PRM-SUB-ACCT-NUMB      TO INP-CO-CODE.
PERFORM 60500-CHECK-UNITMST-NUMERICS
PERFORM 60510-MOVE-UNITMST-VALUES.


PII-CHECK-NODE-STATUS.

IF ON-HIERARCHY
INITIALIZE               DHINODE
MOVE PIR-HIERARCHY-ID TO HIER-ID OF DHINODE

CALL 'CXUTS124' USING
PIR-NODE-ID,
NODE-ID OF DHINODE,
BY CONTENT LENGTH OF PIR-NODE-ID,
BY CONTENT LENGTH OF NODE-ID OF DHINODE
END-CALL
EXEC SQL
SELECT STAT_CD
INTO  :DHINODE.STAT-CD
FROM  DBO.HIER_NODE
WHERE HIER_ID  = :DHINODE.HIER-ID
AND   NODE_ID  = :DHINODE.NODE-ID
END-EXEC
EVALUATE SQLCODE
WHEN 0
IF STAT-CD OF DHINODE NOT = 'A'
MOVE INACTIVE-NODE-ID   TO OUT-COMENT
MOVE INACTIVE-NODE-ID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
WHEN +100
MOVE NODE-ID-NOT-FOUND   TO OUT-COMENT
MOVE NODE-ID-NOT-FOUND-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
WHEN OTHER
MOVE 'PII-CHECK-NODE-STATUS' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.HIER_NODE'  TO CXUTS0ML-COMMAND
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE
END-IF.


PII-CHECK-FOR-LOST-CARD.















IF THIS-BE-A-PC-REQUEST
MOVE WS-UIWA-EMPLOYEE-NR TO FP1DNRI.

IF PRM-LOST-CARD
PERFORM PII-PROCESS-LOST-CARD.


PII-PROCESS-LOST-CARD.

IF (THIS-BE-A-PC-REQUEST    ) AND
(EIBTRMID IS NOT = '9999') AND
(NOT THIS-BE-AN-UNATTENDED-XTN)
MOVE THIS-CARD-MUST-CALL TO OUT-COMENT
MOVE THIS-CARD-MUST-CALL-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


IF (THIS-BE-AN-UNATTENDED-XTN)
IF (NOT CSR-DRIVER-NR-VERIFY)  AND
(NOT CSR-DRIVER-NR-CAPTURE) AND
(NOT CSR-DRIVER-NR-VEHICLE)
IF WS-UIWA-EMPLOYEE-NR NOT > SPACES
MOVE PRM-DRIVER-NR TO WS-UIWA-EMPLOYEE-NR.

IF (WS-UIWA-EMPLOYEE-NR NOT > SPACES)
MOVE INVALID-DRIVER-NR TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

MOVE WS-UIWA-EMPLOYEE-NR TO WS-DRIVER-NR
MOVE WS-DRIVER-NR-1-TO-5 TO FMT-DRIVER-NR-1-TO-5
MOVE WS-DRIVER-NR-6-TO-7 TO FMT-DRIVER-NR-7-TO-8
IF FMT-DRIVER-NR NOT = PRM-DRIVER-NR
MOVE INVALID-DRIVER-NR   TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PII-CHECK-EXP-DATE.

MOVE PRM-CARD-NUMB TO WS-PRM-CARD-NR
IF  (S007-MASTERCARD-CARD = 'Y')
PERFORM PII-VALIDATE-EXP-DATE
END-IF.


PII-VALIDATE-EXP-DATE.




MOVE 'N' TO WS-EXP-DATE-ERR.

IF THIS-BE-A-PC-REQUEST
EVALUATE TRUE
WHEN WS-UIWA-CARD-EXP-DATE = '0000'
WHEN WS-UIWA-CARD-EXP-DATE <= SPACES
MOVE 'N'                       TO WS-UPDATE-EXP-DATE
IF (S007-EXP-DT-ON-CRD-FLG = 'Y' OR
S007-VIRTUAL-CARD      = 'Y')
MOVE PRM-LAST-EXP-DATE        TO WS-EXPDATE-YYMM
MOVE WS-EXPDATE-YYMM(3:2)     TO FP1EXPI(1:2)
MOVE WS-EXPDATE-YYMM(1:2)     TO FP1EXPI(3:2)
ELSE
MOVE CDN-CARD-EXPIRATION-DATE TO FP1EXPI
END-IF
WHEN WS-UIWA-SWIPED-KEYED = 'S'
WHEN WS-UIWA-SWIPED-KEYED = 'M'
WHEN WS-UIWA-SWIPED-KEYED = 'C'
WHEN THIS-BE-A-NATS-AUTH
MOVE WS-UIWA-CARD-EXP-DATE(1:2) TO FP1EXPI(3:2)
MOVE WS-UIWA-CARD-EXP-DATE(3:2) TO FP1EXPI(1:2)
WHEN OTHER
MOVE WS-UIWA-CARD-EXP-DATE      TO FP1EXPI
END-EVALUATE
END-IF.

IF FP1EXPI <= SPACES AND
EIBAID = DFHPF3
MOVE 'N'                          TO WS-UPDATE-EXP-DATE
IF (S007-EXP-DT-ON-CRD-FLG = 'Y' OR
S007-VIRTUAL-CARD      = 'Y')
MOVE PRM-LAST-EXP-DATE        TO WS-EXPDATE-YYMM
MOVE WS-EXPDATE-YYMM(3:2)     TO FP1EXPI(1:2)
MOVE WS-EXPDATE-YYMM(1:2)     TO FP1EXPI(3:2)
ELSE
MOVE CDN-CARD-EXPIRATION-DATE TO FP1EXPI
END-IF
END-IF


IF FP1EXPI NOT NUMERIC
MOVE -1                TO FP1EXPL
MOVE WS-E-EXP-DATE-N   TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE     TO OUT-COMENT
MOVE 'Y'               TO WS-EXP-DATE-ERR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.
IF FP1EXPI (1:2) < '01' OR > '12'
MOVE -1                TO FP1EXPL
MOVE WS-E-EXP-DATE-N   TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE     TO OUT-COMENT
MOVE 'Y'               TO WS-EXP-DATE-ERR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


MOVE FP1EXPI           TO WS-EXPDATE-MMYY


MOVE FP1EXPI(1:2)      TO WS-EXPDATE-YYMM(3:2)
MOVE FP1EXPI(3:2)      TO WS-EXPDATE-YYMM(1:2)


MOVE FP1EXPI (1:2)     TO WS-EXP-DATE-YYYYMM (5:2)
MOVE FP1EXPI (3:2)     TO WS-EXP-DATE-YYYYMM (3:2)
MOVE '20'              TO WS-EXP-DATE-YYYYMM (1:2)
IF WS-EXP-DATE-YYYYMM (3:2) > '70'
MOVE '19'           TO WS-EXP-DATE-YYYYMM (1:2)
END-IF



IF (S007-EXP-DT-ON-CRD-FLG NOT = 'Y' AND
S007-VIRTUAL-CARD      NOT = 'Y')
IF CDN-CARD-EXPIRATION-DATE     NOT = WS-EXPDATE-MMYY AND
CDN-CARD-EXPIRATION-DATE-PRE  NOT = WS-EXPDATE-MMYY AND
CDN-CARD-EXPIRATION-DATE-B4PRE NOT = WS-EXPDATE-MMYY
MOVE -1                     TO FP1EXPL
MOVE WS-E-EXP-DATE2-N       TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE2         TO OUT-COMENT
MOVE 'Y'                    TO WS-EXP-DATE-ERR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
END-IF.


IF WS-EXP-DATE-YYYYMM < WS-BUSINESS-DATE-YYYYMM
MOVE -1                 TO FP1EXPL
MOVE WS-E-EXP-DATE1-N   TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE1     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.

IF (S007-EXP-DT-ON-CRD-FLG = 'Y' OR
S007-VIRTUAL-CARD      = 'Y')
IF WS-EXPDATE-YYMM NOT = PRM-LAST-EXP-DATE
MOVE -1                 TO FP1EXPL
MOVE WS-E-EXP-DATE2-N   TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE2     TO OUT-COMENT
MOVE 'Y'                TO WS-EXP-DATE-ERR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
ELSE


IF WS-EXPDATE-YYMM < PRM-LAST-EXP-DATE
MOVE -1                 TO FP1EXPL
MOVE WS-E-EXP-DATE3-N   TO POS-ERROR-NUMBER
MOVE WS-E-EXP-DATE3     TO OUT-COMENT
MOVE 'Y'                TO WS-EXP-DATE-ERR
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
END-IF.


MOVE WS-EXPDATE-YYMM   TO COM-CARD-EXP-DATE.
IF WS-UPDATE-EXP-DATE = 'N'
MOVE ZERO           TO COM-CARD-EXP-DATE
END-IF.


PII-VERIFY-DRIVER-NR.


EVALUATE TRUE
WHEN THIS-BE-AN-ATM-XTN
WHEN THIS-BE-A-VRU-XTN
CONTINUE
WHEN PRM-CARD-LOST
WHEN CSR-DRIVER-NR-VERIFY
PERFORM VALIDATE-DRIVER-NUMBER THRU VDN-EXIT
WHEN CSR-DRIVER-NR-VEHICLE
PERFORM VALIDATE-VEHICLE-CARD
END-EVALUATE.


PII-VERIFY-DRIVER-NR-CAPTURE.

IF CSR-DRIVER-NR-CAPTURE AND
WS-UIWA-EMPLOYEE-NR NOT > SPACES
IF THIS-BE-AN-UNATTENDED-AUTH   OR
THIS-BE-A-VRU-XTN            OR
THIS-BE-AN-ATM-XTN           OR
FORCE-POST-FROM-PRE-AUTH
MOVE PRM-CARD-EMPLOYEE-ID TO WS-UIWA-EMPLOYEE-NR
ELSE
MOVE INVALID-DRIVER-NR   TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

MOVE PRM-CARD-EMPLOYEE-ID    TO COM-EMPL-NR.
IF CSR-DRIVER-NR-CAPTURE OR
CSR-DRIVER-NR-VEHICLE
MOVE WS-UIWA-EMPLOYEE-NR  TO COM-EMPL-NR.


PII-CHECK-BATCH-ENTRY-INFO.

MOVE FP1DOWNI                TO COM-DOWN-ENTRY-FLAG.
MOVE FP1BATI                 TO COM-BATCH-RECORD.
IF FP1BATI = 'Y'
PERFORM PII-CHECK-BATCH-DATE
PERFORM PII-CHECK-BATCH-TIME.

IF FP1DLNRI > SPACES
MOVE PRM-DRIVERS-LICENSE TO WS-DL-AREA
PERFORM FIX-DRIVERS-LICENSE
MOVE WS-DL-AREA TO PRM-DRIVERS-LICENSE.


PII-CHECK-BATCH-DATE.

IF FP1BATDI NOT NUMERIC
MOVE +88888                       TO POS-ERROR-NUMBER
MOVE 'BATCH DATE MUST BE NUMERIC' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
MOVE +021 TO CALENDAR-OPTIONS
MOVE 0    TO CALENDAR-CENTURY
MOVE FP1BATDI TO CALENDAR-MMDDYY
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
IF CALENDAR-MMDDYY = '999999'
MOVE +88888                  TO POS-ERROR-NUMBER
MOVE 'BATCH DATE IS INVALID' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
MOVE FP1BATDI TO COM-BATCH-PROCESS-DATE.


PII-CHECK-BATCH-TIME.

IF FP1BATTI NOT > SPACES
MOVE '000000' TO FP1BATTI.
IF FP1BATTI NOT NUMERIC
MOVE +88888                       TO POS-ERROR-NUMBER
MOVE 'BATCH TIME MUST BE NUMERIC' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
MOVE FP1BATTI TO COM-BATCH-FUELING-TIME.


PII-CHECK-ADJUSTMENT-INFO.

MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-HOLD-FMLOG.
IF ORIDATI > SPACES
PERFORM PII-CAI-CHK-VALID-DATE
PERFORM PII-CAI-CHK-CONTROL-NR
IF CALENDAR-DAYS NOT < -30
PERFORM PII-CAI-CHK-FOR-MATCH
END-IF
ELSE
MOVE ZEROS TO COM-ADJ-ORIG-DATE
COM-ADJ-ORIG-XTN-NR
END-IF.
IF ORIDATI NOT > SPACES AND
ORIXTNI > SPACES
MOVE +88888   TO POS-ERROR-NUMBER
MOVE 'ORIGINAL DATE MUST BE ENTERED' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.
MOVE WS-HOLD-FMLOG TO FUEL-MANAGEMENT-DAILY-LOG-RECD.


PII-CAI-CHK-VALID-DATE.

IF ORIDATI NOT NUMERIC
MOVE +88888                         TO POS-ERROR-NUMBER
MOVE 'ORIGINAL DATE MUST BE NUMERIC' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
MOVE +023 TO CALENDAR-OPTIONS
MOVE 0    TO CALENDAR-CENTURY
MOVE ORIDATI TO CALENDAR-MMDDYY
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
IF CALENDAR-MMDDYY = '999999'
MOVE +88888                  TO POS-ERROR-NUMBER
MOVE 'ORIGINAL DATE INVALID' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
ELSE
MOVE CALENDAR-DATE-NUM   TO WS-ORIG-DATE
MOVE WS-ORIG-DATE (1:1)  TO WS-FMT-ORIG-DATE (1:1)
MOVE WS-ORIG-DATE (2:2)  TO WS-FMT-ORIG-DATE (4:2)
MOVE WS-ORIG-DATE (4:2)  TO WS-FMT-ORIG-DATE (6:2)
MOVE WS-ORIG-DATE (6:2)  TO WS-FMT-ORIG-DATE (2:2)
MOVE WS-FMT-ORIG-DATE    TO COM-ADJ-ORIG-DATE.


PII-CAI-CHK-CONTROL-NR.

MOVE ORIXTNI TO WS-ORIG-CNTRL-NR.
EVALUATE TRUE
WHEN WS-ORIG-CNTRL-6 NUMERIC
MOVE WS-ORIG-CNTRL-6   TO WS-FMT-ORIG-CNTRL-NR
WHEN WS-ORIG-CNTRL-5 NUMERIC
MOVE WS-ORIG-CNTRL-5   TO WS-FMT-ORIG-CNTRL-NR
WHEN WS-ORIG-CNTRL-4 NUMERIC
MOVE WS-ORIG-CNTRL-4   TO WS-FMT-ORIG-CNTRL-NR
WHEN OTHER
MOVE +88888                        TO POS-ERROR-NUMBER
MOVE 'INVALID ORIGINAL CONTROL NR' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-EVALUATE.
MOVE WS-FMT-ORIG-CNTRL-NR    TO COM-ADJ-ORIG-XTN-NR.


PII-CAI-CHK-FOR-MATCH.

PERFORM PII-CAI-CHECK-DSET.


IF FMDL-CUST-CUSTOMER-ID NOT = DTRN-CUSTOMER-ID
MOVE +88888                        TO POS-ERROR-NUMBER
MOVE 'ORIGINAL TRANSACTION NOT FOUND' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


IF FMDL-SC-SRVC-CNTR-CODE NOT = COM-FP-SC-CODE
MOVE +88888                        TO POS-ERROR-NUMBER
MOVE 'ORIGINAL NOT AT THIS LOCATION' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


IF FMDL-DT-COMCHEK-CARD-NUMBER NOT = PRM-CARD-NUMB AND
COM-ADJ-OVERRIDE-FL NOT = 'Y'
MOVE +88888                        TO POS-ERROR-NUMBER
MOVE 'N'                           TO COM-ADJ-OVERRIDE-FL
MOVE 'CARD MISMATCH, PRESS PF4 TO OVERRIDE' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


PII-CAI-CHECK-DSET.

PERFORM PII-CAI-GET-DSTRAN-RECD.
PERFORM PII-CAI-GET-DSMSTR-RECD.


PII-CAI-GET-DSTRAN-RECD.

MOVE 'PII-CAI-GET-DSTRAN-RECD'   TO CXUTS0ML-PARAGRAPH.

MOVE PRM-SUB-ACCT-NUMB   TO DTRN-CUSTOMER-ID.
MOVE COM-ADJ-ORIG-XTN-NR TO DTRN-CONTROL-NUMBER.
MOVE COM-ADJ-ORIG-DATE   TO DTRN-TRANSACTION-DATE.
EXEC CICS READ
DATASET ('DSTRAN')
INTO    (DS-TRANS-RECORD)
RIDFLD  (DTRN-RECORD-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE DTRN-RECORD-KEY   TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE +88888                        TO POS-ERROR-NUMBER
MOVE 'ORIGINAL TRANSACTION NOT FOUND' TO OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


PII-CAI-GET-DSMSTR-RECD.

MOVE 'PII-CAI-GET-DSMSTR-RECD'   TO CXUTS0ML-PARAGRAPH.
MOVE DTRN-RRN TO WS-DSMSTR-RRN.
EXEC CICS READ
DATASET ('DSMSTR')
INTO    (DS-MASTER-RECORD)
RIDFLD  (WS-DSMSTR-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE WS-DSMSTR-RRN     TO WS-NUM-9
MOVE WS-NUM-9          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE DS-MASTER-RECORD TO FUEL-MANAGEMENT-DAILY-LOG-RECD.


PII-CHECK-LICENSE-INFO.

MOVE PRM-DRIVERS-LICENSE TO COM-DL-NR.
MOVE PRM-DRIVERS-STATE TO COM-DL-STATE.

EVALUATE TRUE
WHEN CDN-CUST-LICENSE-YES
PERFORM PII-VALIDATE-LICENSE-NR
WHEN CDN-LICENSE-CAPTURE
PERFORM PII-VALIDATE-LICENSE-NR-CAPTUR
END-EVALUATE.


PII-VALIDATE-LICENSE-NR.









MOVE 'Y' TO COM-DL-OPTION


MOVE SPACES               TO ERROR-FLAG.
MOVE FP1DLNRI             TO WS-DRIVER-NR-KEYED-INFO
MOVE PRM-DRIVERS-LICENSE  TO WS-DRIVER-NR-CARD-INFO
PERFORM VALIDATE-NUMBER-TO-LETTER-LOOP THRU VNTLL-EXIT
VARYING WORK-INDEX FROM 1 BY 1
UNTIL WORK-INDEX > 20   OR
ERROR-FLAG = '*'.
IF ERROR-FLAG = '*'
PERFORM PII-INVALID-LICENSE-NR.


MOVE 2 TO WS-INDEX2.
IF THIS-BE-A-PC-REQUEST
MOVE 1 TO WS-INDEX2.


MOVE SPACES               TO ERROR-FLAG
MOVE FP1DLSTI             TO WS-DRIVER-NR-KEYED-INFO
MOVE PRM-DRIVERS-STATE    TO WS-DRIVER-NR-CARD-INFO
PERFORM VALIDATE-NUMBER-TO-LETTER-LOOP THRU VNTLL-EXIT
VARYING WORK-INDEX FROM 1 BY 1
UNTIL WORK-INDEX > WS-INDEX2 OR
ERROR-FLAG = '*'
IF ERROR-FLAG = '*'
PERFORM PII-INVALID-LICENSE-NR.


PII-VALIDATE-LICENSE-NR-CAPTUR.

MOVE 'Y' TO COM-DL-OPTION
IF FP1DLNRI NOT > SPACES OR
FP1DLSTI NOT > SPACES
PERFORM PII-INVALID-LICENSE-NR.


PII-INVALID-LICENSE-NR.

MOVE INVALID-DL-N     TO POS-ERROR-NUMBER
MOVE INVALID-DL-NBR  TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE
MOVE 'Y'              TO VCWS-ERROR-IND
MOVE INVALID-DL       TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PII-CHECK-LICENSE-POOL-CAPTURE.

IF COM-STAGE = 2 OR 999
MOVE COM-DL-NR TO FP1DLNRI
MOVE COM-DL-STATE TO FP1DLSTI.
IF CDN-LICENSE-CAPTURE
MOVE FP1DLNRI TO PRM-DRIVERS-LICENSE, COM-DL-NR
MOVE FP1DLSTI TO PRM-DRIVERS-STATE, COM-DL-STATE.


PII-CHECK-CARD-PURC-LIMIT.

IF CSR-PURC-LIMIT-ON-CARD
PERFORM PREMIER-CARD-PURC-LIMIT.


PII-CHECK-COMCHEK-MOBILE-LIMIT.

IF CDN-LOAD-PAY-NETWORK = 'C'
PERFORM CHECK-COMCHEK-MOB-FUEL-RESET.


PII-CHECK-PO-INFO.

IF FMPO-MAX-AMOUNT NOT NUMERIC
MOVE ZEROES TO FMPO-MAX-AMOUNT.
IF CDN-PURCHASE-ORDER-POOL-LIMIT
IF WS-UIWA-PO-NR > SPACES
PERFORM READ-PURCHASE-ORDER.


PII-SEE-IF-PICKUP-RATES-APPLY.

IF THIS-BE-A-VRU-EXPRESS-CASH
IF CDN-LESS-PICKUP
SUBTRACT WS-PICKUP-RATE FROM PRM-CASH-INITIAL
SUBTRACT WS-PICKUP-RATE FROM PRM-EXPENSE-BALANCE.


READ-CDNCUST.

PERFORM RC-GET-CUSTOMER.
PERFORM 60520-CHECK-FOR-HIERARCHY.
PERFORM RC-CHECK-CUSTOMER.
PERFORM PII-LINK-CXXCO0CS.
PERFORM PII-ADJUST-CSTAND.
PERFORM RC-PROCESS-CUSTOMER-DL.
PERFORM RC-PROCESS-CUSTOMER-PO.
PERFORM RC-PROCESS-CUSTOMER1.
PERFORM RC-PROCESS-CUSTOMER-TRIP.
PERFORM RC-PROCESS-CUSTOMER2.
PERFORM RC-PROCESS-CUSTOMER3.
PERFORM RC-PROCESS-CUSTOMER-PO-LIMITS.
PERFORM RC-PROCESS-CUSTOMER4.


RC-PROCESS-CUSTOMER-DL.


IF (THIS-BE-AN-UNATTENDED-XTN)     AND
(NOT THIS-BE-A-SMART-FUEL-XTN)  AND
(WS-UIWA-DL-NR NOT > SPACES)
MOVE ' ' TO CDN-CUST-LICENSE-YN.


RC-PROCESS-CUSTOMER-PO.


IF (THIS-BE-AN-UNATTENDED-XTN)       AND
(CDN-TERM-FUEL-LIMITS  NOT = 'Y') AND
(NOT THIS-BE-AN-IOL-XTN)          AND
(NOT THIS-BE-A-NATS-AUTH)         AND
(NOT THIS-BE-A-SMART-FUEL-PRE-AUTH)
MOVE ' ' TO CDN-PURCHASE-ORDER.


RC-PROCESS-CUSTOMER1.


MOVE CDN-CUST-ACCT-CODE    TO WS-FP-ACCT-CODE.

IF CDN-PREFERRED-CUSTOMER
MOVE 'N'                TO CDN-ALLIANCE-FLAG.

MOVE ' '                   TO WS-FL-HUBOMETER-FLAG.
IF CSR-HUBOMETER-CAPTURE-YES

MOVE CSR-HUBOMETER-CAPTURE TO WS-FL-HUBOMETER-FLAG.


RC-PROCESS-CUSTOMER-TRIP.


IF CSR-TRIP-NUMBER-REQ = 'B' OR 'T'
MOVE UNITMST-TRIP-NR    TO HOLD-TRIP-NUMBER
END-IF.
IF CSR-TRIP-NUMBER-REQ = 'D'
MOVE PRM-DRIVER-TRIP-NR TO HOLD-TRIP-NUMBER
MOVE PRM-DRIVER-TRIP-NR-2 TO HOLD-TRIP-NUMBER-2
MOVE PRM-DRIVER-TRIP-NR-3 TO HOLD-TRIP-NUMBER-3
END-IF.

MOVE CSR-TRIP-NUMBER-REQ   TO WS-FL-TRIP-FLAG.
IF CSR-TRIP-NUMBER-REQ = 'T' AND
HOLD-TRIP-NUMBER    > SPACES
MOVE 'E'                TO WS-FL-TRIP-FLAG
END-IF.

MOVE ' '                   TO WS-FL-TRIP-ALLOWANCE-FLAG.
IF WS-TRIP-ALLOWANCE = 'Y'
MOVE 'T'                TO WS-FL-TRIP-ALLOWANCE-FLAG
END-IF.


RC-PROCESS-CUSTOMER2.


MOVE CDN-OIL-BLOCK             TO WS-FL-OIL-BLOCK.
IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
PERFORM GET-FLEET-CASH-LIMIT
END-IF
EVALUATE TRUE
WHEN WS-FLEET-LIMIT-CSH-AVAIL = 'Y'
MOVE '1'                  TO WS-FL-CASH-ADV-STATUS
MOVE WS-CASH-ADVANCE-FLAG TO WS-FL-CASH-ADV-FLAG
WHEN WS-FLEET-LIMIT-CSH-AVAIL = 'N'
MOVE '0'                  TO WS-FL-CASH-ADV-STATUS
MOVE 'N'                  TO WS-FL-CASH-ADV-FLAG
WHEN OTHER
MOVE WS-CASH-ADVANCE-FLAG TO WS-FL-CASH-ADV-STATUS
WS-FL-CASH-ADV-FLAG
IF WS-CASH-ADVANCE-FLAG = 'C'
IF WS-RFL-CASH-ADV-USED < WS-RFL-CASH-ADV-INIT
MOVE '1'            TO WS-FL-CASH-ADV-STATUS
ELSE
MOVE '0'            TO WS-FL-CASH-ADV-STATUS
END-IF
END-IF
END-EVALUATE.

IF CDN-MAX-DAILY-PURCHASE > ZEROES
MOVE CDN-MAX-DAILY-PURCHASE TO WS-RFL-MAX-PURC-DLY-FUEL
END-IF.

IF CDN-VARIANCE > ZEROES
MOVE CDN-VARIANCE           TO WS-RFL-MAX-PURC-VARIANCE
END-IF.

MOVE CDN-RESTRICT-SERVICE      TO WS-FL-SERVICE-RESTRICTION.
MOVE CDN-MAX-OIL-PURC          TO WS-FL-MAX-OIL-QTS.
MOVE CDN-REFER-FUEL-BLOCK      TO WS-FL-REFER-BLOCK.


RC-PROCESS-CUSTOMER3.

MOVE ' '               TO WS-FL-DRIVER-NAME-FLAG
IF WS-CO-DRVR-NAME-ENTERED = 'Y'
MOVE 'D'            TO WS-FL-DRIVER-NAME-FLAG
END-IF.
MOVE CDN-CASH-ADV-RATE TO WS-FL-CASH-ADV-RATE.


RC-PROCESS-CUSTOMER-PO-LIMITS.


IF READY-TO-UPDATE-UNITMST NOT = 'Y'
PERFORM READ-CDNCUST-PO-OVER
END-IF.






RC-PROCESS-CUSTOMER4.

IF COM-PNET-BULK-FUEL-YES
MOVE 'D' TO CDN-DIRECT-BILLING-OPTION
MOVE 'N' TO CDN-NETWORKING-OPTION
END-IF.

IF COM-PNET-BRIDGE-FLAG-YES
MOVE 'D'                  TO CDN-DIRECT-BILLING-OPTION
MOVE 'N'                  TO CDN-NETWORKING-OPTION
END-IF.

IF COM-PNET-BRIDGE-FLAG = 'X'
MOVE ' '                  TO CDN-DIRECT-BILLING-OPTION
MOVE ' '                  TO CDN-NETWORKING-OPTION
END-IF.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-LIMIT-BASED
MOVE 'N' TO CDN-DEDUCT-CHARGE-FLAG
END-IF.



IF CSR-DRIVER-NR-VERIFY AND
THIS-BE-A-VRU-XTN
MOVE 'C' TO CSR-DRIVER-NR-FLAG.

IF THIS-BE-A-VRU-XTN
IF CSR-VERIFY-UNIT = 'P' OR 'N' OR 'G'
MOVE 'C' TO CSR-VERIFY-UNIT
MOVE ' XCASH'     TO PRM-UNIT-NUMBER
MOVE '     XCASH' TO PRM-UNIT-NUMBER-10.

IF (THIS-BE-A-VRU-CASH-ON-CARD OR THIS-BE-A-EMAIL-XTN) AND
PRM-DRIVER-TRIP-NR > SPACES
MOVE 'C' TO CSR-TRIP-NUMBER-REQ,
WS-FL-TRIP-FLAG.


IF THIS-BE-A-FLEET-XTN
MOVE 'Y' TO CDN-FLEET-LIMIT-FLAG
END-IF.


RC-GET-CUSTOMER.

MOVE 'RC-GET-CUSTOMER'           TO CXUTS0ML-PARAGRAPH.

MOVE COM-FP-CO-CODE TO CDN-CUST-KEY.
IF I-NEED-TO-READ-CUST
MOVE 'Y' TO READ-ACCT-FLAG
EXEC CICS READ
DATASET ('CDNCUST')
INTO    (CDN-CUSTOMER-RECORD)
RIDFLD  (CDN-CUST-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE CDN-CUST-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
PERFORM CDNCUST-NOT-FOUND
END-IF
PERFORM 60100-CHECK-CDNCUST-DATA
END-IF.
IF I-NEED-TO-READ-ACCT
MOVE CDN-CUST-ACCT-CODE TO HLD-CUST-KEY
EXEC CICS READ
DATASET ('CDNCUST')
INTO    (HLD-CUSTOMER-RECORD)
RIDFLD  (HLD-CUST-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE HLD-CUST-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
PERFORM CDNCUST-NOT-FOUND
END-IF
PERFORM 60700-CHECK-ACCOUNT-INFO
END-IF.
MOVE 'N' TO READ-CUST-FLAG.
MOVE 'N' TO READ-ACCT-FLAG.


RC-READ-PRDCUST.

MOVE 'RC-READ-PRDCUST'           TO CXUTS0ML-PARAGRAPH.

MOVE 'Y' TO WS-PRDCUST-HAS-BEEN-READ.
MOVE 'N' TO WS-PRODUCT-FEE-FOUND
INITIALIZE  PRDCUST-RECORD


MOVE 'CU'                     TO PRDCST-CUSTOMER-TYPE
MOVE CDN-CUST-KEY             TO PRDCST-CUSTOMER-CODE
IF CDN-USE-PROD-FEE-DEFAULT = 'Y'
MOVE 'CU'                  TO PRDCST-CUSTOMER-TYPE
MOVE 'PRODFEE'             TO PRDCST-CUSTOMER-CODE
END-IF
EXEC CICS READ
DATASET ('PRDCUST')
INTO    (PRDCUST-RECORD)
RIDFLD  (PRDCST-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRDCST-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE 'Y' TO WS-PRODUCT-FEE-FOUND.

IF WS-PRODUCT-FEE-FOUND = 'N'
MOVE 'AC'                     TO PRDCST-CUSTOMER-TYPE
MOVE HLD-CUST-KEY             TO PRDCST-CUSTOMER-CODE
IF HLD-USE-PROD-FEE-DEFAULT = 'Y'
MOVE 'CU'                  TO PRDCST-CUSTOMER-TYPE
MOVE 'PRODFEE'             TO PRDCST-CUSTOMER-CODE
END-IF
EXEC CICS READ
DATASET ('PRDCUST')
INTO    (PRDCUST-RECORD)
RIDFLD  (PRDCST-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PRDCST-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE 'Y' TO WS-PRODUCT-FEE-FOUND.


RC-CHECK-CUSTOMER.

IF CDN-CUST-ACTIVE OR CANCEL-FLAG = 'Y'
CONTINUE
ELSE
MOVE CUST-NOT-ACTIVE-N   TO POS-ERROR-NUMBER
MOVE CUST-NOT-ACTIVE-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE CUST-NOT-ACTIVE     TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.

IF THIS-BE-A-VRU-EXPRESS-CASH   OR
CDN-FUEL-FLAG = 'Y'          OR
CANCEL-FLAG   = 'Y'          OR
(CDN-FUEL-FLAG = 'N'         AND
CDN-TERM-FUEL-OVR-FLAG = 'Y' AND
SCM-BUSINESS-TYPE-CODE = 'TF')
NEXT SENTENCE
ELSE
MOVE CUST-NOT-ON-FUEL      TO OUT-COMENT
MOVE CUST-NOT-ON-FUEL-N    TO POS-ERROR-NUMBER
MOVE NEW-CUST-NOT-ON-FUEL1 TO NEW-OUT-MSG1
MOVE NEW-CUST-NOT-ON-FUEL2 TO NEW-OUT-MSG2
MOVE 'Y'                   TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


READ-CDNCUST-PO-OVER.

IF (CDN-PURCHASE-ORDER-POOL ) AND
(WS-UIWA-PO-NR > SPACES  ) AND
(FMPO-MAX-AMOUNT > ZEROS )
PERFORM CHK-PO-TARGET-PRODUCT
END-IF.

IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
(WS-UIWA-PO-NR > SPACES)
IF CSR-CASH-PO-OVERRIDE > ZEROS
MOVE ZEROS TO UNITMST-DLY-CASH-ADV-USED,
WS-RFL-CASH-ADV-USED,
PRM-CASH-USED,
PRM-CASH-RESET
MOVE 'Y' TO WS-RESET-ONE-TIME-CASH-FLAG
MOVE CSR-CASH-PO-OVERRIDE TO WS-RFL-CASH-ADV-INIT
WS-RFL-CASH-ADV-INIT-DLY
PRM-CASH-INITIAL
END-IF

IF CSR-PURC-PO-OVERRIDE > ZEROS
MOVE ZEROS TO UNITMST-CURR-DAY-REQ-AMT,
UNITMST-CURR-DAY-OIL-COST,
UNITMST-CURR-DAY-AMT-REF,
PRM-PURC-USED, PRM-PURC-RESET
MOVE 'Y' TO WS-RESET-ONE-TIME-PURC-FLAG
MOVE CSR-PURC-PO-OVERRIDE TO WS-RFL-MAX-PURC-DLY-FUEL
PRM-PURC-INITIAL
PRM-OIL-INITIAL-DOLLARS
MOVE 99  TO WS-FL-MAX-OIL-QTS
MOVE 999 TO PRM-OIL-INITIAL-QUARTS
END-IF
END-IF.


CDNCUST-NOT-FOUND.

MOVE CUST-RECORD-NOT-FOUND TO OUT-COMENT
MOVE CUST-RECORD-NOT-FOUND-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-SETUP-RTN.

EVALUATE TRUE
WHEN UNFORMATTED-AREA (5:16) NUMERIC
MOVE UNFORMATTED-AREA (5:16)  TO WS-UIWA-CARD-NR-16
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
WHEN UNFORMATTED-AREA (05:06) = SPACES AND
UNFORMATTED-AREA (11:10) NUMERIC
MOVE UNFORMATTED-AREA (11:10)  TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX TO WS-UIWA-CARD-NR-BIN
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
WHEN UNFORMATTED-AREA (05:10) NUMERIC  AND
UNFORMATTED-AREA (15:06) = SPACES
MOVE UNFORMATTED-AREA (05:10)  TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX TO WS-UIWA-CARD-NR-BIN
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
END-EVALUATE.
IF OL-PT-AMOUNT IS NOT NUMERIC
MOVE ZEROES TO OL-PT-AMOUNT.
IF OL-PT-CHECK-NR IS NOT NUMERIC
MOVE ZEROES TO OL-PT-CHECK-NR.
IF OL-PT-MESSAGE-FLAG NOT = 'X'
MOVE ' ' TO OL-PT-MESSAGE-FLAG.

MOVE 'VR900'        TO WS-UIWA-SC-CODE
MOVE OL-PT-AMOUNT   TO WS-UIWA-CASH-AMT
MOVE OL-PT-CHECK-NR TO WS-UIWA-CHECK-NR1
WS-UIWA-CHECK-NR2.


VRU-CASH-ON-CARD-SETUP-RTN.

EVALUATE TRUE
WHEN UNFORMATTED-AREA (5:16) NUMERIC
MOVE UNFORMATTED-AREA (5:16)  TO WS-UIWA-CARD-NR-16
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
WHEN UNFORMATTED-AREA (05:06) = SPACES AND
UNFORMATTED-AREA (11:10) NUMERIC
MOVE UNFORMATTED-AREA (11:10)  TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX TO WS-UIWA-CARD-NR-BIN
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
WHEN UNFORMATTED-AREA (05:10) NUMERIC  AND
UNFORMATTED-AREA (15:06) = SPACES
MOVE UNFORMATTED-AREA (05:10)  TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX TO WS-UIWA-CARD-NR-BIN
MOVE UNFORMATTED-AREA (21:)   TO WS-OL-PT-AREA
END-EVALUATE.

IF OL-PT-AMOUNT IS NOT NUMERIC
MOVE ZEROES TO OL-PT-AMOUNT.
IF OL-PT-CHECK-NR IS NOT NUMERIC
MOVE ZEROES TO OL-PT-CHECK-NR.
IF OL-PT-MESSAGE-FLAG NOT = 'X'
MOVE ' ' TO OL-PT-MESSAGE-FLAG.

MOVE 'VR800'        TO WS-UIWA-SC-CODE
MOVE OL-PT-AMOUNT   TO WS-UIWA-CASH-AMT
MOVE OL-PT-CHECK-NR TO WS-UIWA-CHECK-NR1
WS-UIWA-CHECK-NR2.


VOICE-RESPONSE-INITIAL-RTN.

IF THIS-BE-A-EMAIL-XTN
PERFORM VRU-CASH-CHECK-CUST
PERFORM VRU-CASH-CHECK-CARD
PERFORM VOICE-RESPONSE-OVERRIDE-RTN
ELSE
IF THIS-BE-A-VRU-EXPRESS-CASH
PERFORM VOICE-RESPONSE-CHECK-CUST
PERFORM VOICE-RESPONSE-CHECK-CARD
PERFORM VOICE-RESPONSE-VALIDATE-CHECK
PERFORM VOICE-RESPONSE-DUP-CHECK
PERFORM VOICE-RESPONSE-OVERRIDE-RTN
ELSE
PERFORM VRU-CASH-CHECK-CUST
PERFORM VRU-CASH-CHECK-CARD
PERFORM VOICE-RESPONSE-VALIDATE-CHECK
PERFORM VOICE-RESPONSE-DUP-CHECK
PERFORM VOICE-RESPONSE-OVERRIDE-RTN
END-IF
END-IF.


VOICE-RESPONSE-CHECK-CUST.

IF CDN-NEW-VRU-PICKUP-FLAG = 'Y'
MOVE MUST-USE-MMVC   TO OUT-COMENT
MOVE MUST-USE-MMVC-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.
IF CSR-VERIFY-UNIT = 'B'
MOVE 'C' TO CSR-VERIFY-UNIT.
PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-LIMIT-BASED
MOVE 'L' TO HOLD-BALLIM-FLAG
MOVE 'B' TO CDN-BALLIM-FLAG.
IF CDN-EXPRESS-CASH-YES
NEXT SENTENCE
ELSE
MOVE INVALID-MONEY-SERVICE TO OUT-COMENT
MOVE INVALID-MONEY-SERVICE-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-CHECK-CARD.

IF PRM-IN-STATION-CARD OR PRM-IN-STATION-PROGRAM
MOVE INVALID-IN-STATION TO OUT-COMENT
MOVE INVALID-IN-STATION-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.
IF PRM-EXPENSE-ACCOUNT = 'Y' OR 'N'
NEXT SENTENCE
ELSE
MOVE 'Y' TO PRM-EXPENSE-ACCOUNT.
IF NOT PRM-EXPENSE-YES
MOVE CARD-NOT-PRM-EXPENSE-ACCT TO OUT-COMENT
MOVE CARD-NOT-PRM-EXPENSE-ACCT-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-VALIDATE-CHECK.


IF WS-UIWA-CHECK-NR1 NOT NUMERIC
MOVE INVALID-CHECK-NR TO OUT-COMENT
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE '5' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.
MOVE WS-UIWA-CHECK-NR1 TO VR-VALIDATE-CHECK.
IF VR-FIRST-FOUR = ZEROS
MOVE INVALID-CHECK-NR TO OUT-COMENT
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE '5' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


IF VR-FIRST-NINE > 793999999 AND < 800000000
DIVIDE VR-FIRST-NINE BY 7 GIVING WS-CHECK-RESULT
REMAINDER WS-CHECK-DIGIT
IF VR-CHECK-DIGIT = WS-CHECK-DIGIT + 1
MOVE 'C' TO WS-VRU-COUNTRY-FLAG
MOVE 'C' TO SCM-COUNTRY-CODE
ELSE
MOVE INVALID-CHECK-NR TO OUT-COMENT
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE '5' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

IF VR-FIRST-DIGIT > ZEROS AND
WS-VRU-COUNTRY-FLAG NOT = 'C'
DIVIDE VR-FIRST-NINE BY 7 GIVING WS-CHECK-RESULT
REMAINDER WS-CHECK-DIGIT
IF VR-CHECK-DIGIT NOT = WS-CHECK-DIGIT
MOVE INVALID-CHECK-NR TO OUT-COMENT
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE '5' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-DUP-CHECK.

MOVE 'VOICE-RESPONSE-DUP-CHECK'  TO CXUTS0ML-PARAGRAPH.

IF VR-FIRST-DIGIT > ZEROS
MOVE VR-FIRST-NINE TO WS-PACKED-CHECK
ELSE
MOVE VR-VALIDATE-CHECK TO WS-PACKED-CHECK.
EXEC CICS READ
DATASET ('DRAFTS1')
RIDFLD  (WS-PACKED-CHECK)
INTO    (WS-DRAFT-RECD)
RESP    (EIBRESP)
END-EXEC.
MOVE WS-PACKED-CHECK   TO WS-NUM-9.
MOVE WS-NUM-9          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
MOVE INVALID-CHECK-NR TO OUT-COMENT
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE '5' TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-OVERRIDE-RTN.



MOVE 'N' TO CDN-CUST-LICENSE-YN,
CDN-DEDUCT-CHARGE-FLAG.
MOVE ' ' TO CDN-DIRECT-BILLING-OPTION.
MOVE ' ' TO WS-FL-HUBOMETER-FLAG,
CDN-NETWORKING-OPTION,
CSR-TRIP-NUMBER-REQ,
WS-FL-TRIP-ALLOWANCE-FLAG,
WS-FL-TRIP-FLAG,
CDN-TRAILER-NR-FLAG,
CDN-TRAILER-HUB,
CDN-PURCHASE-ORDER.

MOVE 'VOICE' TO WS-UIWA-INVOICE-NR,
WS-UIWA-INVOICE-NR.
IF THIS-BE-A-EMAIL-XTN
MOVE 'EMAIL' TO WS-UIWA-INVOICE-NR,
WS-UIWA-INVOICE-NR
END-IF.

IF (THIS-BE-A-VRU-CASH-ON-CARD OR THIS-BE-A-EMAIL-XTN) AND
PRM-DRIVER-TRIP-NR > SPACES
MOVE 'C' TO CSR-TRIP-NUMBER-REQ,
WS-FL-TRIP-FLAG.

IF CSR-DRIVER-NR-VERIFY AND
THIS-BE-A-VRU-XTN
MOVE 'C' TO CSR-DRIVER-NR-FLAG.

IF THIS-BE-A-VRU-EXPRESS-CASH
PERFORM VOICE-RESPONSE-OVERRIDE-RTN2.


VOICE-RESPONSE-OVERRIDE-RTN2.

MOVE CDN-PICKUP-RATE TO WS-PICKUP-RATE.
IF PRM-FREE-XTN-COUNT < CDN-FREE-XTN-COUNT
MOVE ZEROES TO WS-PICKUP-RATE.
IF HOLD-BALLIM-FLAG = 'L'
MOVE ' ' TO CDN-CARD-CASH-FLAG
MOVE ' ' TO CSR-CARD-CASH-FLAG
MOVE 'U' TO WS-FL-CASH-ADV-FLAG.
IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND WS-PROPRIETARY-CARD = 'Y'
AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
PERFORM GET-FLEET-CASH-LIMIT
END-IF
IF CSR-CARD-CASH-FLAG = 'Y'
OR (WS-CASH-ADVANCE-FLAG = 'A' OR 'C' OR 'U')
OR WS-FLEET-LIMIT-CSH-AVAIL = 'Y'
NEXT SENTENCE
ELSE
MOVE ' ' TO CDN-CARD-CASH-FLAG
MOVE ' ' TO CSR-CARD-CASH-FLAG
MOVE 'U' TO WS-FL-CASH-ADV-FLAG.


VRU-CASH-CHECK-CUST.

IF CSR-VERIFY-UNIT = 'B'
MOVE 'C' TO CSR-VERIFY-UNIT.


VRU-CASH-CHECK-CARD.

IF PRM-IN-STATION-CARD OR PRM-IN-STATION-PROGRAM
MOVE INVALID-IN-STATION TO OUT-COMENT
MOVE INVALID-IN-STATION-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


VOICE-RESPONSE-RATE-RTN.

IF CDN-BILL-AT-PICKUP
IF CDN-LESS-PICKUP
MOVE WS-PICKUP-RATE TO WS-CHARGE-RATE
ELSE
MOVE ZEROES         TO WS-CHARGE-RATE.


IF PRM-PRIMARY-CARD-NR > ZEROES AND
TSXCO0LM-SECONDARY-CARD-YES
CONTINUE
ELSE
PERFORM CHECK-FREEBIE-COUNT.


CHECK-FREEBIE-COUNT.

IF PRM-FREE-XTN-COUNT < CDN-FREE-XTN-COUNT
MOVE ZEROES TO WS-CHARGE-RATE
IF NOT TSXCO0AT-IN-NETW-CARD-VAL
ADD 1 TO PRM-FREE-XTN-COUNT
END-IF
END-IF.


PROCESS-INITIAL-MAP.

PERFORM 10100-CHECK-FOR-EXIT.
PERFORM PIM-RECEIVE-SCREEN.
PERFORM PIM-SETUP-USER-WORK-AREA.
IF COM-PREVIOUS-CARD = FP1CARDI AND
COM-FP-SC-CODE    = FP1TSCDI
PERFORM PIM-SAME-CARD-AND-LOC
ELSE
PERFORM PIM-NEW-CARD-OR-LOC.


PIM-RECEIVE-SCREEN.

MOVE 'PIM-RECEIVE-SCREEN'        TO CXUTS0ML-PARAGRAPH.
IF EIBCALEN > ZEROES
EXEC CICS RECEIVE
MAP    ('FPMAP1')
MAPSET ('USISET')
FROM   (UNFORMATTED-AREA)
LENGTH (UNFORMATTED-LENG)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE SPACES              TO UNFORMATTED-AREA
END-IF.


PIM-SETUP-USER-WORK-AREA.

MOVE FP1UNITI               TO WS-ADJUST-UNIT-NR
PERFORM PIM-ADJUST-UNIT.
MOVE WS-ADJUST-UNIT-NR      TO FP1UNITI.
MOVE WS-ADJUST-UNIT-NR      TO WS-UNIT-NR-10
MOVE WS-ADJUST-UNIT-NR-06   TO WS-UNIT-NR-06.

MOVE FP1DNRI                TO WS-UIWA-EMPLOYEE-NR.


PIM-ADJUST-UNIT.




IF WS-UIWA-BATCH-XTN-TYPE-FLAG = 'M'
AND (CSR-VERIFY-UNIT = 'N' OR
CSR-VERIFY-UNIT NOT > SPACES)
CONTINUE
ELSE
INSPECT WS-ADJUST-UNIT-NR
REPLACING LEADING '0' BY ' '.

MOVE 10                     TO INDX.
CALL 'CXUTSSPR' USING INDX,
WS-ADJUST-UNIT-NR,
FILL-CHAR.


PIM-NEW-CARD-OR-LOC.

MOVE 'FP '          TO UNFORMATTED-AREA.
MOVE ZEROES         TO WS-TALLY.
INSPECT FP1CARDI TALLYING WS-TALLY
FOR CHARACTERS BEFORE ' '.
EVALUATE WS-TALLY
WHEN 16
MOVE FP1CARDI TO UNFORMATTED-AREA (4:16)
MOVE FP1TSCDI TO UNFORMATTED-AREA (20:05)
MOVE FP1PHNI  TO UNFORMATTED-AREA (25:10)
WHEN 10
MOVE FP1CARDI TO UNFORMATTED-AREA (04:10)
MOVE FP1TSCDI TO UNFORMATTED-AREA (14:05)
MOVE FP1PHNI  TO UNFORMATTED-AREA (19:10)
WHEN OTHER
MOVE INVALID-CARD-NR   TO OUT-COMENT-1
MOVE INVALID-CARD-NR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-EVALUATE
IF FP1TSCDI > 'XT999'
MOVE TS-IS-INVALID-N  TO POS-ERROR-NUMBER
MOVE YCODE-IS-INVALID TO OUT-COMENT-1
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.
MOVE 'F'      TO ERROR-FLAG.
MOVE 0        TO COM-STAGE.
MOVE FP1TSCDI TO COM-FP-SC-CODE.
MOVE 'FP'     TO UNF-PGRM-NAME.
PERFORM FORMAT-INPUT-AREA.


PIM-SAME-CARD-AND-LOC.

MOVE COM-FP-CO-CODE    TO INP-CO-CODE.
MOVE COM-FP-ID-NR      TO WS-ID-NR.
IF WS-ID-NR-NUM NOT NUMERIC
MOVE ZEROS          TO WS-ID-NR-NUM
END-IF.
MOVE ZEROS             TO WS-ID-NR-CK-DIG,
WS-CKD-CALCULATED
IF WS-ID-NR-NUM > ZEROS
PERFORM CALCULATE-CHECK-DIGIT
END-IF
MOVE WS-CKD-CALCULATED TO WS-ID-NR-CK-DIG.
MOVE COM-FP-SC-CODE    TO WS-UIWA-SC-CODE
MOVE FP1PHNI           TO WS-UIWA-SC-PHONE.
MOVE ZEROES TO WS-TALLY
INSPECT FP1CARDI TALLYING WS-TALLY
FOR CHARACTERS BEFORE ' '
IF WS-TALLY = 16
MOVE FP1CARDI TO WS-PRM-CARD
PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999
ELSE
MOVE FP1CARDI TO WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999.

IF (FP1ANSWI IS NOT EQUAL TO 'Y') AND
(NOT PRM-LOST-CARD) AND
(NOT PRM-CARD-LOST)
MOVE INVALID-RESP-QUERY TO OUT-COMENT-1
MOVE INVALID-RESP-QUERY-N TO POS-ERROR-NUMBER
MOVE 'N'                    TO WS-NOTIFY-IRIS-FL
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


SETUP-PC-REQUEST.

PERFORM SPR-INIT-COM-OPTIONS.
PERFORM SPR-CHECK-FOR-BATCHED-REQUEST.

PERFORM SPR-CHECK-FOR-PREMIER-CARD.

PERFORM SPR-GET-SC-INFO.
PERFORM SPR-CHECK-SC-INFO.
PERFORM SPR-SETUP-FLEET-FIELDS.
PERFORM SPR-GET-SC-EQUIP-INFO.
PERFORM SPR-PREMIER-INITIAL-INTERFACE.
IF THIS-BE-AN-IOL-AUTH
PERFORM SPR-SETUP-IOL-AUTH.
PERFORM SPR-GET-UNIT-INFO.
PERFORM SPR-CHECK-UNIT-INFO.
PERFORM SPR-SEE-IF-CARD-MUST-CALL.
PERFORM SPR-CHECK-SUB-PROD-CODES.
PERFORM 20306-CHECK-CANADIAN-TAX.
PERFORM SPR-GET-NETWORK-INFO.
PERFORM SPR-CHECK-FOR-NETWORK-ERROR.
PERFORM 10630-CHECK-CARD-OFFNET-USED.

PERFORM SPR-PETRO-CANADA-SPECIAL-CHECK.

PERFORM SPR-SETUP-AUTO-GAS-PUMP-NR.
PERFORM SPR-SETUP-AUTO-GAS-AMOUNTS.
PERFORM SPR-SETUP-TERM-FUEL-INVOICE.
PERFORM SPR-SETUP-UNATTENDED-INVOICE.
PERFORM SPR-CHECK-INVOICE-NR.
PERFORM SPR-CHECK-COMDATA-COMPLETE-INV.

PERFORM SPR-SETUP-PO-NUMBER-INFO.
PERFORM SPR-SETUP-PO-INFO.
PERFORM SPR-GET-CDADDR-INFO.
PERFORM SPR-GET-CONVERSION-RATES.
PERFORM SPR-SETUP-VOICE-RESPONSE-RATES.
PERFORM SPR-CHECK-AND-SETUP-LIMITS.
PERFORM SPR-CHECK-EXPENSE-BALANCE.
PERFORM SPR-COMPUTE-AUTO-GAS-AVL-AMT1.
PERFORM SPR-COMPUTE-AUTO-GAS-AVL-AMT2.
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-QTY.
PERFORM SPR-CONVERT-AUTO-GAS-AVAIL.
PERFORM SPR-ADJUST-AUTO-GAS-AVAIL.
PERFORM SPR-CHECK-CASH.
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-CSH.
PERFORM SPR-CONVERT-AUTO-GAS-AVAIL-CSH.
PERFORM SPR-CHECK-UNIT-NUMBER.
PERFORM SPR-COMPUTE-PPG.
PERFORM SPR-CHECK-OIL-ALLOWED.
PERFORM SPR-GET-PREMIER-LEVEL.
PERFORM SPR-SEE-IF-TERM-FUEL-ALLOWED.
PERFORM 10710-CHECK-FOR-CREDIT-LOC.
PERFORM 11550-CHECK-CARD-OFFNET.
PERFORM SPR-SETUP-FUEL-CASH-INFO.
PERFORM SPR-SETUP-PROD-INFO.
PERFORM SPR-CHECK-PROD-9-TYPES.
PERFORM SPR-SETUP-TS-DISC-FLAG.
PERFORM SPR-SETUP-MISC-DISC-INFO.
PERFORM SPR-SETUP-FUEL-PRICES.
PERFORM SPR-SETUP-AUTO-PRINT-FLAG.
PERFORM SPR-SETUP-COMM-PRINT-FLAG.
PERFORM SPR-SETUP-TRIP-INFO.
PERFORM SPR-CHECK-TRIP-INFO.
PERFORM SPR-SETUP-INPUT-FIELDS.
PERFORM SPR-GET-SERVICE-TYPE.
PERFORM SPR-SETUP-REST-OF-INPUT-FIELDS.
PERFORM SPR-SETUP-CHECK-NUMBER.
PERFORM SPR-CHECK-INVOICE-TOTAL

MOVE 2     TO COM-STAGE.
MOVE SPACE TO ERROR-FLAG.
MOVE 'N'   TO WS-EXIT-FLAG.


FORMAT-INPUT-AREA.

IF NOT (UNF-PGRM-NAME = 'AX' OR 'FX')
MOVE 'FP'                TO UNF-PGRM-NAME
END-IF
MOVE UNFORMATTED-AREA (4:1) TO WS-UIWA-REQUEST-FLAG.
EVALUATE TRUE
WHEN UNF-PGRM-NAME = 'AX'
WHEN UNF-PGRM-NAME = 'FX'
PERFORM FIA-LARGE-DOLLAR-XTN
WHEN THIS-BE-AN-ATM-XTN
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
PERFORM SPR-SETUP-ATM-REQUEST
WHEN THIS-BE-A-VRU-EXPRESS-CASH
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
PERFORM VOICE-RESPONSE-SETUP-RTN
WHEN THIS-BE-A-VRU-CASH-ON-CARD
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
PERFORM VRU-CASH-ON-CARD-SETUP-RTN
WHEN THIS-BE-AN-IOL-PRE-AUTH
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
PERFORM SPR-SETUP-IOL-PRE-AUTH
WHEN THIS-BE-A-PC-REQUEST
MOVE 'Y' TO WS-COMSITE-OLD-FORMAT
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
PERFORM FIA-AUTOMATED-INPUT
WHEN THIS-BE-A-CARD-NR
PERFORM FIA-FORMAT-ONE-LINER
WHEN THIS-IS-A-CANCEL-REQ
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
MOVE UNFORMATTED-AREA TO WS-INP-FP-CANCEL
WHEN THIS-BE-A-CANCEL-REQUEST
PERFORM FIA-REMOVE-VER-NR-FROM-INPUT
MOVE UNFORMATTED-AREA TO WS-INP-CANCEL-AREA
WHEN THIS-BE-A-SETTLEMENT-REQUEST
MOVE UNFORMATTED-AREA TO WS-SETTLEMENT-INPUT-AREA
WHEN OTHER
CONTINUE
END-EVALUATE.
IF NOT (EIBTRNID = 'FMBP' OR 'FMMP')
OR (EIBTRNID = 'FMBP' AND WS-UIWA-SYSTEM-ID = 1)
PERFORM VALIDATE-SUB-PROD-CODES
END-IF.


FIA-LARGE-DOLLAR-XTN.


MOVE 'L'                       TO WS-XTN-TYPE-FLAG
IF UNF-PGRM-NAME = 'AX'
MOVE 'Y' TO WS-NO-TRANS-SPLIT-FLAG
END-IF
MOVE 'FP'                      TO UNF-PGRM-NAME
MOVE UNFORMATTED-AREA          TO WS-AUTOMATED-XTN-INPUT-AREA

MOVE WS-AXIA-XTN-TYPE           TO WS-UIWA-REQUEST-FLAG
WS-XTN-REQUEST-FLAG
PERFORM FIA-CARD-NR-PROCESS
MOVE WS-AXIA-UNIT-NR            TO WS-UIWA-UNIT-NR
WS-UIWA-UNIT-NR-10
MOVE WS-AXIA-SC-CODE            TO WS-UIWA-SC-CODE
MOVE WS-AXIA-SC-SUB-ID          TO WS-UIWA-SC-SUB-ID
MOVE WS-AXIA-INVOICE-NR         TO WS-UIWA-INVOICE-NR
MOVE WS-AXIA-INVOICE-AMT        TO WS-UIWA-INVOICE-AMT
MOVE WS-AXIA-NR2-QTY            TO WS-UIWA-NR2-QTY
MOVE WS-AXIA-NR2-COST           TO WS-UIWA-NR2-COST
MOVE WS-AXIA-NR1-QTY            TO WS-UIWA-NR1-QTY
MOVE WS-AXIA-NR1-COST           TO WS-UIWA-NR1-COST
MOVE WS-AXIA-OTH-QTY            TO WS-UIWA-OTH-QTY
MOVE WS-AXIA-OTH-COST           TO WS-UIWA-OTH-COST
IF WS-AXIA-OTH-TYPE > SPACES AND
WS-AXIA-OTH-SUB-PROD NOT > SPACES
MOVE WS-AXIA-OTH-TYPE     TO WS-AXIA-OTH-SUB-PROD
END-IF.
MOVE WS-AXIA-OTH-SUB-PROD       TO WS-HOLD-OTH-SUB-PROD-IN.
MOVE WS-AXIA-NR2-SUB-PROD       TO WS-HOLD-NR2-SUB-PROD-IN.
MOVE WS-AXIA-NR1-SUB-PROD       TO WS-HOLD-NR1-SUB-PROD-IN.
MOVE WS-AXIA-RFR-SUB-PROD       TO WS-HOLD-REF-SUB-PROD-IN.
MOVE WS-AXIA-REF-QTY            TO WS-UIWA-REF-QTY
MOVE WS-AXIA-REF-COST           TO WS-UIWA-REF-COST
MOVE WS-AXIA-OIL-QTY            TO WS-UIWA-OIL-QTY
MOVE WS-AXIA-OIL-COST           TO WS-UIWA-OIL-COST
MOVE WS-AXIA-PR1-CODE           TO WS-UIWA-PR1-CODE
MOVE WS-AXIA-PR1-COST           TO WS-UIWA-PR1-COST
WS-UIWA-PR1-COST-SC
MOVE WS-AXIA-PR1-TYPE           TO WS-UIWA-PR1-TYPE
MOVE WS-AXIA-PR2-CODE           TO WS-UIWA-PR2-CODE
MOVE WS-AXIA-PR2-COST           TO WS-UIWA-PR2-COST
WS-UIWA-PR2-COST-SC
MOVE WS-AXIA-PR2-TYPE           TO WS-UIWA-PR2-TYPE
MOVE WS-AXIA-PR3-CODE           TO WS-UIWA-PR3-CODE
MOVE WS-AXIA-PR3-COST           TO WS-UIWA-PR3-COST
WS-UIWA-PR3-COST-SC
MOVE WS-AXIA-PR3-TYPE           TO WS-UIWA-PR3-TYPE
MOVE WS-AXIA-CASH-AMT           TO WS-UIWA-CASH-AMT
MOVE WS-AXIA-TAX-AMT            TO WS-UIWA-TAX-AMT
MOVE WS-AXIA-TRIP-NR            TO WS-UIWA-TRIP-NR
MOVE WS-AXIA-HUB                TO WS-UIWA-HUB,
FPHUBO.
MOVE WS-AXIA-TRAILER-NR         TO WS-UIWA-TRAILER-NR
MOVE WS-AXIA-TRAILER-HUB        TO WS-UIWA-TRAILER-HUB
MOVE WS-AXIA-TRAILER-HRS        TO WS-UIWA-TRAILER-HRS
MOVE WS-AXIA-DL-NR              TO WS-UIWA-DL-NR
MOVE WS-AXIA-DL-ST              TO WS-UIWA-DL-ST
MOVE WS-AXIA-CARD-EXP-DATE      TO WS-UIWA-CARD-EXP-DATE
MOVE WS-AXIA-PO-NR              TO WS-UIWA-PO-NR
MOVE WS-AXIA-EMPLOYEE-NR        TO WS-UIWA-EMPLOYEE-NR
MOVE WS-AXIA-SWIPED-KEYED       TO WS-UIWA-SWIPED-KEYED
MOVE WS-AXIA-SC-SECURITY-CARD   TO WS-UIWA-SC-SECURITY-CARD
MOVE WS-AXIA-SC-SECURITY-PIN    TO WS-UIWA-SC-SECURITY-PIN
MOVE WS-AXIA-BATCH-PROCESS-DATE TO WS-UIWA-BATCH-PROCESS-DATE
MOVE WS-AXIA-DEVICE-TYPE        TO WS-UIWA-DEVICE-TYPE
MOVE WS-AXIA-FLEET-PROD         TO WS-UIWA-FLEET-PROD
MOVE WS-AXIA-FLEET-DATE-ORIG    TO WS-UIWA-FLEET-DATE-ORIG
MOVE WS-AXIA-FLEET-NAME         TO WS-UIWA-FLEET-NAME
MOVE WS-AXIA-FLEET-ADDR         TO WS-UIWA-FLEET-ADDR
MOVE WS-AXIA-FLEET-CITY         TO WS-UIWA-FLEET-CITY
MOVE WS-AXIA-FLEET-STATE        TO WS-UIWA-FLEET-STATE
MOVE WS-AXIA-FLEET-ZIP          TO WS-UIWA-FLEET-ZIP

IF WS-AXIA-FLEET-AMT-ORIG NOT NUMERIC
MOVE ZERO TO WS-AXIA-FLEET-AMT-ORIG
END-IF
MOVE WS-AXIA-FLEET-AMT-ORIG     TO WS-UIWA-FLEET-AMT-ORIG
MOVE WS-AXIA-FLEET-KEY          TO WS-UIWA-FLEET-KEY
MOVE WS-AXIA-FLEET-XTN-DATE     TO WS-UIWA-FLEET-XTN-DATE
MOVE WS-AXIA-FLEET-XTN-TIME     TO WS-UIWA-FLEET-XTN-TIME
MOVE WS-AXIA-SC-CITY            TO WS-UIWA-SC-CITY
MOVE WS-AXIA-SC-STATE           TO WS-UIWA-SC-STATE
MOVE WS-AXIA-SC-ZIP             TO WS-UIWA-SC-ZIP
MOVE WS-AXIA-USFLEET-MISC-NR    TO WS-UIWA-USFLEET-MISC-NR
MOVE WS-AXIA-MERCH-REF-NMBR     TO WS-UIWA-MERCH-REF-NMBR
MOVE WS-AXIA-BASE-PPG           TO WS-UIWA-BASE-PPG
MOVE WS-AXIA-DELIVERY-FEE-PPG   TO WS-UIWA-DELIVERY-FEE-PPG
MOVE WS-AXIA-TOTAL-TAX-PPG      TO WS-UIWA-TOTAL-TAX-PPG
MOVE WS-AXIA-FUELING-DATE       TO WS-UIWA-FUELING-DATE
MOVE WS-AXIA-FUELING-TIME       TO WS-UIWA-FUELING-TIME
MOVE WS-AXIA-SYSTEM-ID          TO WS-UIWA-SYSTEM-ID
MOVE WS-AXIA-RECV-DATE          TO WS-UIWA-RECV-DATE
MOVE WS-AXIA-TASK-NR            TO WS-UIWA-TASK-NR.
MOVE WS-AXIA-PROD9-DESC-1       TO WS-UIWA-PROD9-DESC-1.
MOVE WS-AXIA-PROD9-DESC-2       TO WS-UIWA-PROD9-DESC-2.
MOVE WS-AXIA-PROD9-DESC-3       TO WS-UIWA-PROD9-DESC-3.
MOVE WS-AXIA-PROD9-QTY-1        TO WS-UIWA-PROD9-QTY-1.
MOVE WS-AXIA-PROD9-QTY-2        TO WS-UIWA-PROD9-QTY-2.
MOVE WS-AXIA-PROD9-QTY-3        TO WS-UIWA-PROD9-QTY-3.
MOVE WS-AXIA-PROD9-PPU-1        TO WS-UIWA-PROD9-PPU-1.
MOVE WS-AXIA-PROD9-PPU-2        TO WS-UIWA-PROD9-PPU-2.
MOVE WS-AXIA-PROD9-PPU-3        TO WS-UIWA-PROD9-PPU-3.
MOVE WS-AXIA-SC-NAME            TO WS-UIWA-SC-NAME.
MOVE WS-AXIA-SC-ADDR-1          TO WS-UIWA-SC-ADDR-1.
MOVE WS-AXIA-BATCH-XTN-TYPE-FLAG TO
WS-UIWA-BATCH-XTN-TYPE-FLAG.
MOVE WS-AXIA-PRINTER-FLAG       TO WS-UIWA-PRINTER-FLAG
MOVE WS-AXIA-AUTH-1-PROD-CODE   TO WS-UIWA-AUTH-1-PROD-CODE
MOVE WS-AXIA-AUTH-2-PROD-CODE   TO WS-UIWA-AUTH-2-PROD-CODE
MOVE WS-AXIA-AUTH-3-PROD-CODE   TO WS-UIWA-AUTH-3-PROD-CODE
MOVE WS-AXIA-CHK-NR             TO WS-UIWA-CHECK-NRX
IF WS-AXIA-IOL-RCP NUMERIC
MOVE WS-AXIA-IOL-RCP         TO WS-UIWA-IOL-RCP
ELSE
MOVE ZERO                    TO WS-UIWA-IOL-RCP
END-IF
MOVE WS-AXIA-PROMPTED-DRIVER-ID TO WS-UIWA-PROMPTED-DRIVER-ID

IF THIS-BE-A-PRODUCT-PRE-AUTH
PERFORM FIA-BUILD-SUB-PRODS
END-IF
MOVE WS-AXIA-NATS-INFO          TO WS-UIWA-NATS-INFO.
MOVE WS-AXIA-SPLIT-TRN-IND      TO WS-UIWA-SPLIT-TRN-IND.
MOVE ZEROES                     TO WS-UIWA-SPLIT-CNTL.
IF WS-AXIA-SPLIT-CNTL NUMERIC
MOVE WS-AXIA-SPLIT-CNTL      TO WS-UIWA-SPLIT-CNTL
END-IF.
MOVE WS-AXIA-CRD-TOKEN          TO WS-UIWA-CRD-TOKEN
MOVE WS-AXIA-RFID-NBR           TO WS-UIWA-RFID-NBR
MOVE WS-AXIA-RFID-TAG-TYP       TO WS-UIWA-RFID-TAG-TYP
IF WS-UIWA-CRD-TOKEN > SPACES
PERFORM FIA-GET-CARD-NBR-FROM-TOKEN
END-IF.


FIA-CARD-NR-PROCESS.



EVALUATE TRUE

WHEN WS-AXIA-CRD-TOKEN > SPACES
CONTINUE

WHEN WS-AXIA-CARD-NR (01:16) NUMERIC
MOVE WS-AXIA-CARD-NR (01:16) TO WS-UIWA-CARD-NR-16
WHEN WS-AXIA-CARD-NR (01:06) = SPACES AND
WS-AXIA-CARD-NR (07:10) NUMERIC
MOVE WS-AXIA-CARD-NR (07:10) TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX      TO WS-UIWA-CARD-NR-BIN

WHEN OTHER
MOVE ZEROES                  TO WS-UIWA-CARD-NR-16
END-EVALUATE.

FIA-BUILD-SUB-PRODS.

MOVE WS-AXIA-SUB-PROD1-IND TO WS-UIWA-SUB-PRD-IND (1)
MOVE WS-AXIA-SUB-PRD-CD1   TO WS-UIWA-SUB-PRD-CD  (1)
MOVE WS-AXIA-SUB-PROD2-IND TO WS-UIWA-SUB-PRD-IND (2)
MOVE WS-AXIA-SUB-PRD-CD2   TO WS-UIWA-SUB-PRD-CD  (2)
MOVE WS-AXIA-SUB-PROD3-IND TO WS-UIWA-SUB-PRD-IND (3)
MOVE WS-AXIA-SUB-PRD-CD3   TO WS-UIWA-SUB-PRD-CD  (3)
MOVE WS-AXIA-SUB-PROD4-IND TO WS-UIWA-SUB-PRD-IND (4)
MOVE WS-AXIA-SUB-PRD-CD4   TO WS-UIWA-SUB-PRD-CD  (4)
MOVE WS-AXIA-SUB-PROD5-IND TO WS-UIWA-SUB-PRD-IND (5)
MOVE WS-AXIA-SUB-PRD-CD5   TO WS-UIWA-SUB-PRD-CD  (5)
MOVE WS-AXIA-SUB-PROD6-IND TO WS-UIWA-SUB-PRD-IND (6)
MOVE WS-AXIA-SUB-PRD-CD6   TO WS-UIWA-SUB-PRD-CD  (6)
MOVE WS-AXIA-SUB-PROD7-IND TO WS-UIWA-SUB-PRD-IND (7)
MOVE WS-AXIA-SUB-PRD-CD7   TO WS-UIWA-SUB-PRD-CD  (7)
MOVE WS-AXIA-SUB-PROD8-IND TO WS-UIWA-SUB-PRD-IND (8)
MOVE WS-AXIA-SUB-PRD-CD8   TO WS-UIWA-SUB-PRD-CD  (8)
MOVE WS-AXIA-SUB-PROD9-IND TO WS-UIWA-SUB-PRD-IND (9)
MOVE WS-AXIA-SUB-PRD-CD9   TO WS-UIWA-SUB-PRD-CD  (9)
MOVE WS-AXIA-SUB-PROD10-IND TO WS-UIWA-SUB-PRD-IND (10)
MOVE WS-AXIA-SUB-PRD-CD10  TO WS-UIWA-SUB-PRD-CD  (10).

FIA-GET-CARD-NBR-FROM-TOKEN.

MOVE 'FIA-GET-CARD-NBR-FROM-TOKEN' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.CRD_TKN_XREF'     TO CXUTS0ML-COMMAND
EXEC SQL
SELECT CRD_NBR
INTO :DCRDTKNX.CRD-NBR
FROM DBO.CRD_TKN_XREF
WHERE CRD_TKN_NBR = :WS-UIWA-CRD-TOKEN
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = ZERO
MOVE CRD-NBR OF DCRDTKNX TO WS-UIWA-CARD-NR
ELSE
MOVE ZEROES              TO WS-UIWA-CARD-NR-16
END-IF.

FIA-FORMAT-ONE-LINER.


EVALUATE TRUE
WHEN INP-NP-DATA (01:16) NUMERIC
MOVE INP-NP-DATA (01:16) TO WS-UIWA-CARD-NR-16
MOVE INP-NP-DATA (17:05) TO WS-UIWA-SC-CODE
MOVE INP-NP-DATA (22:10) TO WS-UIWA-SC-PHONE
WHEN INP-NP-DATA (01:10) NUMERIC
MOVE INP-NP-DATA (01:10) TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX  TO WS-UIWA-CARD-NR-BIN
MOVE INP-NP-DATA (11:05) TO WS-UIWA-SC-CODE
MOVE INP-NP-DATA (16:10) TO WS-UIWA-SC-PHONE
WHEN OTHER
MOVE ZEROES              TO WS-UIWA-CARD-NR-16
END-EVALUATE.

IF WS-UIWA-SC-PHONE (1:1) = '@'
MOVE WS-UIWA-SC-PHONE        TO SAVE-OPERATOR-INFO
MOVE SPACES                  TO WS-UIWA-SC-PHONE.


FIA-REMOVE-VER-NR-FROM-INPUT.




IF THIS-BE-AN-AUTOMATED-REQ     OR
THIS-BE-A-VRU-XTN            OR
INP-PC-ZON-VER-FLAG = '+'
MOVE INP-PC-ZON-VER-FLAG TO SAVE-ZON-VER-FLAG
MOVE INP-PC-ZON-TRAILER  TO WS-WORK-FIELD
MOVE WS-WORK-FIELD       TO INP-PC-ZON-OVERLAY.
IF SAVE-ZON-VER-FLAG = 'D'
MOVE 'Y' TO COM-DOWN-ENTRY-FLAG.


FIA-AUTOMATED-INPUT.

MOVE INP-NP-DATA TO WS-AUTOMATED-INPUT-AREA.
PERFORM FIA-CHECK-INPUT-FIELDS1.
PERFORM FIA-CHECK-INPUT-FIELDS2.
PERFORM FIA-CHECK-INPUT-FIELDS3.
PERFORM FIA-CHECK-INPUT-FIELDS4.


EVALUATE TRUE

WHEN INP-PC-CARD-NR (01:16) NUMERIC
MOVE INP-PC-CARD-NR (01:16)  TO WS-UIWA-CARD-NR-16
WHEN INP-PC-CARD-NR (01:06) = SPACES AND
INP-PC-CARD-NR (07:10) NUMERIC
MOVE INP-PC-CARD-NR (07:10)  TO WS-UIWA-CARD-NR-10
WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX      TO WS-UIWA-CARD-NR-BIN
WHEN OTHER
MOVE ZEROES                  TO WS-UIWA-CARD-NR-16
END-EVALUATE.
MOVE INP-PC-TS-CODE                TO WS-UIWA-SC-CODE
MOVE INP-PC-UNIT                   TO WS-UIWA-UNIT-NR
STRING '    ' INP-PC-UNIT DELIMITED BY SIZE
INTO WS-UIWA-UNIT-NR-10
IF INP-PC-UNIT-EXPANDED > SPACES
MOVE INP-PC-UNIT-EXPANDED       TO WS-UIWA-UNIT-NR-10
END-IF
MOVE INP-PC-SRVC-TYPE         TO WS-UIWA-SC-SUB-ID
MOVE INP-PC-INVOICE           TO WS-UIWA-INVOICE-NR
MOVE INP-PC-ITTL              TO WS-UIWA-INVOICE-AMT
MOVE INP-PC-GALLONS           TO WS-UIWA-NR2-QTY
MOVE INP-PC-TOTAL             TO WS-UIWA-NR2-COST
MOVE INP-PC-TR-GALS           TO WS-UIWA-REF-QTY
MOVE INP-PC-TR-PPG            TO WS-UIWA-REF-PPU
MOVE INP-PC-TR-COST           TO WS-UIWA-REF-COST
MOVE INP-PC-NR1-GALS          TO WS-UIWA-NR1-QTY
MOVE INP-PC-NR1-COST          TO WS-UIWA-NR1-COST
MOVE INP-PC-OGALS             TO WS-UIWA-OTH-QTY
MOVE INP-PC-OTTL              TO WS-UIWA-OTH-COST
IF INP-PC-OTHER-FUEL-TYPE > SPACES AND
INP-PC-OTH-SUB-PROD NOT > SPACES
MOVE INP-PC-OTHER-FUEL-TYPE TO
INP-PC-OTH-SUB-PROD
END-IF.
MOVE INP-PC-OTH-SUB-PROD      TO WS-HOLD-OTH-SUB-PROD-IN.
MOVE INP-PC-NR2-SUB-PROD      TO WS-HOLD-NR2-SUB-PROD-IN.
MOVE INP-PC-NR1-SUB-PROD      TO WS-HOLD-NR1-SUB-PROD-IN.
MOVE INP-PC-RFR-SUB-PROD      TO WS-HOLD-REF-SUB-PROD-IN.
MOVE INP-PC-OIL-QTS           TO WS-UIWA-OIL-QTY
MOVE INP-PC-OIL-COST          TO WS-UIWA-OIL-COST
MOVE INP-PC-PROD-CODE (1)     TO WS-UIWA-PR1-CODE
MOVE INP-PC-PROD-AMTN (1)     TO WS-UIWA-PR1-COST
WS-UIWA-PR1-COST-SC
MOVE INP-PC-PROD-9-TYPE-1     TO WS-UIWA-PR1-TYPE
MOVE INP-PC-PROD-CODE (2)     TO WS-UIWA-PR2-CODE
MOVE INP-PC-PROD-AMTN (2)     TO WS-UIWA-PR2-COST
WS-UIWA-PR2-COST-SC
MOVE INP-PC-PROD-9-TYPE-2     TO WS-UIWA-PR2-TYPE
MOVE INP-PC-PROD-CODE (3)     TO WS-UIWA-PR3-CODE
MOVE INP-PC-PROD-AMTN (3)     TO WS-UIWA-PR3-COST
WS-UIWA-PR3-COST-SC
MOVE INP-PC-PROD-9-TYPE-3     TO WS-UIWA-PR3-TYPE
MOVE INP-PC-ADV-AMT           TO WS-UIWA-CASH-AMT
MOVE INP-PC-CANADIAN-TAX      TO WS-UIWA-TAX-AMT
MOVE INP-PC-TRIP-NR           TO WS-UIWA-TRIP-NR
MOVE INP-PC-HUB-READING       TO WS-UIWA-HUB
FPHUBO.
MOVE INP-PC-HUB-REQ-FLG       TO WS-UIWA-HUB-REQ-FLAG
MOVE INP-PC-TRAILER-NR        TO WS-UIWA-TRAILER-NR
MOVE INP-PC-TRAILER-HUB       TO WS-UIWA-TRAILER-HUB
MOVE INP-PC-TRAILER-HRS       TO WS-UIWA-TRAILER-HRS
MOVE INP-PC-DL-NR             TO WS-UIWA-DL-NR
MOVE INP-PC-DL-ST             TO WS-UIWA-DL-ST
MOVE INP-PC-CARD-EXP-DATE     TO WS-UIWA-CARD-EXP-DATE
MOVE INP-PC-PURCHASE-ORDER-NR TO WS-UIWA-PO-NR
MOVE INP-PC-DRIVER-NR         TO WS-UIWA-EMPLOYEE-NR
MOVE INP-PC-SWIPED-KEYED      TO WS-UIWA-SWIPED-KEYED
MOVE INP-PC-SC-SECU-CARD-INFO TO WS-UIWA-SC-SECURITY-CARD
MOVE INP-PC-SC-SECU-PIN       TO WS-UIWA-SC-SECURITY-PIN
MOVE INP-PC-BATCH-PROCESS-DATE TO WS-UIWA-BATCH-PROCESS-DATE
MOVE INP-PC-DEVICE-TYPE       TO WS-UIWA-DEVICE-TYPE
MOVE INP-PC-FLEET-PROD        TO WS-UIWA-FLEET-PROD
MOVE INP-PC-FLEET-DATE-ORIG   TO WS-UIWA-FLEET-DATE-ORIG
MOVE INP-PC-FLEET-NAME        TO WS-UIWA-FLEET-NAME
MOVE INP-PC-FLEET-ADDR        TO WS-UIWA-FLEET-ADDR
MOVE INP-PC-FLEET-CITY        TO WS-UIWA-FLEET-CITY
MOVE INP-PC-FLEET-STATE       TO WS-UIWA-FLEET-STATE
MOVE INP-PC-FLEET-ZIP         TO WS-UIWA-FLEET-ZIP
MOVE INP-PC-FLEET-AMT-ORIG    TO WS-UIWA-FLEET-AMT-ORIG
MOVE INP-PC-FLEET-KEY         TO WS-UIWA-FLEET-KEY
MOVE INP-PC-FLEET-XTN-DATE    TO WS-UIWA-FLEET-XTN-DATE
MOVE INP-PC-FLEET-XTN-TIME    TO WS-UIWA-FLEET-XTN-TIME
MOVE INP-PC-SC-CITY           TO WS-UIWA-SC-CITY
MOVE INP-PC-SC-STATE          TO WS-UIWA-SC-STATE
MOVE INP-PC-SC-ZIP            TO WS-UIWA-SC-ZIP
MOVE INP-PC-USFLEET-MISC-NR   TO WS-UIWA-USFLEET-MISC-NR
WS-UIWA-MERCH-REF-NMBR
MOVE INP-PC-BASE-PPG          TO WS-UIWA-BASE-PPG
MOVE INP-PC-DELIVERY-FEE-PPG  TO WS-UIWA-DELIVERY-FEE-PPG
MOVE INP-PC-TOTAL-TAX-PPG     TO WS-UIWA-TOTAL-TAX-PPG
MOVE INP-PC-FUELING-DATE      TO WS-UIWA-FUELING-DATE
MOVE INP-PC-FUELING-TIME      TO WS-UIWA-FUELING-TIME
MOVE INP-PC-SYSTEM-ID         TO WS-UIWA-SYSTEM-ID
MOVE INP-PC-RECV-DATE         TO WS-UIWA-RECV-DATE
MOVE INP-PC-TASK-NR           TO WS-UIWA-TASK-NR
MOVE INP-PC-SPCL-UNIT-NR      TO WS-UIWA-SPCL-UNIT-NR
MOVE INP-PC-MSG-QUERY         TO WS-UIWA-MSG-QUERY
MOVE INP-PC-PRINT-REQ         TO WS-UIWA-PRINT-REQ
IF INP-PC-CHECK-NRX NOT = ALL '0'
MOVE INP-PC-CHECK-NRX      TO WS-UIWA-CHECK-NRX.
MOVE INP-PC-NATS-INFO         TO WS-UIWA-NATS-INFO
MOVE INP-PC-IOL-RCP           TO WS-UIWA-IOL-RCP.


FIA-CHECK-INPUT-FIELDS1.

IF INP-PC-GALLONS NOT NUMERIC
MOVE ZEROS TO INP-PC-GALLONS.
IF INP-PC-TOTAL NOT NUMERIC
MOVE ZEROS TO INP-PC-TOTAL.
IF INP-PC-TR-GALS NOT NUMERIC
MOVE ZEROS TO INP-PC-TR-GALS.
IF INP-PC-TR-COST NOT NUMERIC
MOVE ZEROS TO INP-PC-TR-COST.
IF INP-PC-OIL-QTS NOT NUMERIC
MOVE ZEROS TO INP-PC-OIL-QTS.
IF INP-PC-OIL-COST NOT NUMERIC
MOVE ZEROS TO INP-PC-OIL-COST.
IF INP-PC-ADV-AMT NOT NUMERIC
MOVE ZEROS TO INP-PC-ADV-AMT.
IF INP-PC-OGALS NOT NUMERIC
MOVE ZEROS TO INP-PC-OGALS.
IF INP-PC-OTTL NOT NUMERIC
MOVE ZEROS TO INP-PC-OTTL.


FIA-CHECK-INPUT-FIELDS2.

IF INP-PC-NR1-GALS NOT NUMERIC
MOVE ZEROS TO INP-PC-NR1-GALS.
IF INP-PC-NR1-COST NOT NUMERIC
MOVE ZEROS TO INP-PC-NR1-COST.
IF INP-PC-PROD-AMTN (1) NOT NUMERIC
MOVE ZEROES TO INP-PC-PROD-AMTN (1).
IF INP-PC-PROD-AMTN (2) NOT NUMERIC
MOVE ZEROES TO INP-PC-PROD-AMTN (2).
IF INP-PC-PROD-AMTN (3) NOT NUMERIC
MOVE ZEROES TO INP-PC-PROD-AMTN (3).
IF INP-PC-CANADIAN-TAX NOT NUMERIC
MOVE ZEROES TO INP-PC-CANADIAN-TAX.
IF INP-PC-BATCH-PROCESS-DATE NOT NUMERIC
MOVE ZEROES TO INP-PC-BATCH-PROCESS-DATE.
IF INP-PC-FUELING-TIME NOT NUMERIC
MOVE ZEROES TO INP-PC-FUELING-TIME.
IF INP-PC-ADV-AMT IS NOT NUMERIC
MOVE ZEROES TO INP-PC-ADV-AMT.
IF INP-PC-TRAILER-HRS IS NOT NUMERIC
MOVE ZEROES TO INP-PC-TRAILER-HRS.


FIA-CHECK-INPUT-FIELDS3.

IF INP-PC-HUB-READING IS NOT NUMERIC
MOVE 0 TO INP-PC-HUB-READING.
IF INP-PC-TR-GALS IS NOT NUMERIC
MOVE 0 TO INP-PC-TR-GALS.
IF INP-PC-TR-PPG IS NOT NUMERIC
MOVE 0 TO INP-PC-TR-PPG.
IF INP-PC-TR-COST IS NOT NUMERIC
MOVE 0 TO INP-PC-TR-COST.
IF INP-PC-OIL-QTS IS NOT NUMERIC
MOVE 0 TO INP-PC-OIL-QTS.
IF INP-PC-OIL-COST IS NOT NUMERIC
MOVE 0 TO INP-PC-OIL-COST.
IF INP-PC-OGALS IS NOT NUMERIC
MOVE 0 TO INP-PC-OGALS.
IF INP-PC-OTTL IS NOT NUMERIC
MOVE 0 TO INP-PC-OTTL.


FIA-CHECK-INPUT-FIELDS4.

IF INP-PC-NR1-GALS IS NOT NUMERIC
MOVE 0 TO INP-PC-NR1-GALS.
IF INP-PC-NR1-COST IS NOT NUMERIC
MOVE 0 TO INP-PC-NR1-COST.
IF INP-PC-ITTL IS NOT NUMERIC
MOVE 0 TO INP-PC-ITTL.
IF INP-PC-CANADIAN-TAX IS NUMERIC
MOVE INP-PC-CANADIAN-TAX TO WS-UIWA-TAX-AMT.
IF INP-PC-IOL-RCP NOT NUMERIC
MOVE ZERO TO INP-PC-IOL-RCP.
IF INP-PC-IOL-RCP = ZEROES AND
INP-PC-GALLONS > ZEROES
COMPUTE INP-PC-IOL-RCP ROUNDED = INP-PC-TOTAL /
INP-PC-GALLONS.

IF INP-PC-FUELING-DATE NOT NUMERIC
MOVE 0 TO INP-PC-FUELING-DATE.
IF INP-PC-FUELING-TIME NOT NUMERIC
MOVE 0 TO INP-PC-FUELING-TIME.
IF INP-PC-BASE-PPG NOT NUMERIC
MOVE 0 TO INP-PC-BASE-PPG.
IF INP-PC-DELIVERY-FEE-PPG NOT NUMERIC
MOVE 0 TO INP-PC-DELIVERY-FEE-PPG.
IF INP-PC-TOTAL-TAX-PPG NOT NUMERIC
MOVE 0 TO INP-PC-TOTAL-TAX-PPG.


CHK-RFID-LAST-USE-FLDS.

IF WS-UIWA-RFID-NBR > SPACES
EVALUATE WS-UIWA-RFID-TAG-TYP(1:1)
WHEN 'U'
PERFORM 20989-GET-RFID-UNIT-TRLR
PERFORM CHK-RFID-LAST-USE-CONT
WHEN 'T'
PERFORM CRL-GET-UNIT-RFID
IF SQLCODE = ZERO
MOVE 'Y' TO WS-RFID-XREF-READ
PERFORM CHK-RFID-LAST-USE-CONT
END-IF
END-EVALUATE
END-IF.

CHK-RFID-LAST-USE-CONT.

IF LST-USE-LOC-ID     OF DRFIDXRF = WS-UIWA-SC-CODE
AND LST-USE-CRD-NBR OF DRFIDXRF = WS-UIWA-CARD-NR
AND LST-USE-TS      OF DRFIDXRF(1:4) > '2011'
IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
PERFORM SETUP-XCPRODC-AND-DT-TM
END-IF
MOVE 'Y' TO WS-USE-RFID-XREF
PERFORM CRL-CALC-TIME-DIFF
END-IF.

CRL-GET-UNIT-RFID.

MOVE 'CRL-GET-UNIT-RFID'    TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.RFID_XREF' TO CXUTS0ML-COMMAND


MOVE WS-UIWA-SC-CODE TO COM-FP-SC-CODE
EXEC SQL
SELECT RFID_UNIT_TRLR_NBR,
LST_USE_TS,
LST_USE_CRD_NBR,
LST_USE_LOC_ID,
LST_USE_DRVR_NBR,
LST_USE_TRLR_NBR,
LST_USE_HUB_HI_VAL,
LST_USE_TRLR_HUB_VAL,
LST_USE_TRLR_HRS,
LST_USE_TRIP_NBR,
LST_USE_DL_NBR,
LST_USE_DL_ST,
LST_USE_PO_NBR,
LST_USE_LST_NM,
LST_USE_FST_NM,
LST_USE_UNIT_NBR
INTO :DRFIDXRF.RFID-UNIT-TRLR-NBR,
:DRFIDXRF.LST-USE-TS,
:DRFIDXRF.LST-USE-CRD-NBR,
:DRFIDXRF.LST-USE-LOC-ID,
:DRFIDXRF.LST-USE-DRVR-NBR,
:DRFIDXRF.LST-USE-TRLR-NBR,
:DRFIDXRF.LST-USE-HUB-HI-VAL,
:DRFIDXRF.LST-USE-TRLR-HUB-VAL,
:DRFIDXRF.LST-USE-TRLR-HRS,
:DRFIDXRF.LST-USE-TRIP-NBR,
:DRFIDXRF.LST-USE-DL-NBR,
:DRFIDXRF.LST-USE-DL-ST,
:DRFIDXRF.LST-USE-PO-NBR,
:DRFIDXRF.LST-USE-LST-NM,
:DRFIDXRF.LST-USE-FST-NM,
:DRFIDXRF.LST-USE-UNIT-NBR
FROM DBO.RFID_XREF
WHERE RFID_TAG_TYP_CD = 'U'
AND LST_USE_CRD_NBR = :WS-UIWA-CARD-NR
AND LST_USE_LOC_ID  = :COM-FP-SC-CODE
END-EXEC


PERFORM CHECK-MULT-REC-SQL.

CRL-CALC-TIME-DIFF.


MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK

INITIALIZE  CALENDAR-PARAMETERS
MOVE 123 TO CALENDAR-OPTIONS
MOVE '1' TO CALENDAR-CENTURY
MOVE LST-USE-TS OF DRFIDXRF(3:2) TO YMD-YY
MOVE LST-USE-TS OF DRFIDXRF(6:2) TO YMD-MM
MOVE LST-USE-TS OF DRFIDXRF(9:2) TO YMD-DD
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
END-CALL
EVALUATE CALENDAR-DAYS
WHEN 0
CONTINUE
WHEN 1
ADD 1440 TO WS-CURR-MIN-WORK
WHEN OTHER
MOVE 'N' TO WS-USE-RFID-XREF
END-EVALUATE
IF WS-USE-RFID-XREF = 'Y'
MOVE LST-USE-TS OF DRFIDXRF(12:2) TO WS-HOURS-1
MOVE LST-USE-TS OF DRFIDXRF(15:2) TO WS-MINUTES-1
COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
END-COMPUTE
COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
END-COMPUTE
IF WS-ELAP-MIN NOT < XCP-FUEL-DEF-TIME-LIMIT-MM
MOVE 'N' TO WS-USE-RFID-XREF
END-IF
END-IF.

VALIDATE-SUB-PROD-CODES.

MOVE 'VALIDATE-SUB-PROD-CODES'   TO CXUTS0ML-PARAGRAPH.
MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE SPACES TO SCM-NR2-DEF-SUB-PROD-CODE
SCM-NR1-DEF-SUB-PROD-CODE
SCM-RFR-DEF-SUB-PROD-CODE
SCM-OTH-DEF-SUB-PROD-CODE
END-IF
INITIALIZE  WS-TSFMO0LP-COMMAREA
MOVE 'Z' TO FMLP-LIM-PROCESS-IND
PERFORM PII-SETUP-FMLP-FLDS-II
PERFORM PII-SETUP-FMLP-FLDS-III
PERFORM PII-SETUP-FMLP-POSTING
PERFORM LINK-TO-TSFMO0LP
IF FMLP-ERROR
MOVE FMLP-OUT-COMENT       TO OUT-COMENT
MOVE FMLP-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
IF FMLP-SUB-PRODS-CHANGED = 'Y'
PERFORM 20606-SUB-PRODS-MOVED
END-IF
END-IF.

SPR-INIT-COM-OPTIONS.

MOVE '1' TO COM-PUR-OPTIONS-FUEL,
COM-PUR-OPTIONS-OIL,
COM-PUR-OPTIONS-CASH,
COM-PUR-OPTIONS-PROD.
MOVE ALL 'I' TO COM-PROD-OPT-AREA.
MOVE '0' TO COM-PO-REQUIRED-FOR-FUEL
COM-PO-REQUIRED-FOR-OIL
COM-PO-REQUIRED-FOR-CASH
COM-PO-REQUIRED-FOR-PROD.


SPR-CHECK-FOR-BATCHED-REQUEST.

IF THIS-BE-A-BATCHED-REQUEST
MOVE 'Y'    TO COM-BATCH-RECORD
MOVE ZEROES TO COM-BATCH-PROCESS-DATE,
COM-BATCH-FUELING-TIME.


SPR-SETUP-ATM-REQUEST.

MOVE UNFORMATTED-AREA      TO WS-TSXCO0AT-COMM-AREA.
MOVE WS-TSXCO0AT-COMMAREA  TO TSXCO0AT-COMM-AREA.
MOVE TSXCO0AT-ISO-DATA     TO ATMW-FORMATTED-FIELDS.

MOVE SPACES                 TO WS-UIWA-CHECK-NRX.
MOVE TSXCO0AT-LOCATION-CODE TO WS-UIWA-SC-CODE.

IF TSXCO0AT-CURR-CODE NOT = '840'
MOVE TSXCO0AT-CURR-CODE TO CURR-RT-BASE-ISO OF DCURRR
EXEC SQL SELECT
DISTINCT CURR_RT_BASE_ALPH
INTO :DCURRR.CURR-RT-BASE-ALPH
FROM DBO.CURR_RT
WHERE CURR_RT_BASE_ISO = :DCURRR.CURR-RT-BASE-ISO
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = 0
INITIALIZE CXXCO0CL-COMMAREA
MOVE CURR-RT-BASE-ALPH TO CA-CXXCO0CL-BASE-CUR-CD
MOVE 'USD'             TO CA-CXXCO0CL-CNV-TO-CUR-CD
PERFORM 20042-LINK-CXXCO0CL
COMPUTE TSXCO0AT-SURCHARGE-FEE =
TSXCO0AT-SURCHARGE-FEE * CA-XCCL-CURR-CNV-RT
END-IF
END-IF

EVALUATE TRUE
WHEN TSXCO0AT-TRAN-TYPE-INQUIRY
WHEN TSXCO0AT-TRAN-TYPE-ASI
IF TSXCO0AT-IN-NETW-CASH-OUT
MOVE .00          TO WS-UIWA-CASH-AMT
MOVE 'ATM DEC'    TO WS-UIWA-INVOICE-NR
MOVE INVALID-ATM-TRANS-N TO POS-ERROR-NUMBER
MOVE INVALID-ATM-TRANS  TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
MOVE .01             TO WS-UIWA-CASH-AMT
IF TSXCO0AT-LOCATION-CODE = 'AT900'
MOVE 'ATM INQ'    TO WS-UIWA-INVOICE-NR
ELSE
MOVE 'POS INQ'    TO WS-UIWA-INVOICE-NR
END-IF
IF TSXCO0AT-TRAN-TYPE-ASI
PERFORM 85000-READ-CODES
MOVE WS-CODES-AMT TO WS-UIWA-CASH-AMT
END-IF
END-IF
WHEN TSXCO0AT-TRAN-TYPE-PURCHASE-PI OR
TSXCO0AT-TRAN-TYPE-PURC-SI     OR
TSXCO0AT-TRAN-TYPE-PURC-SI-F
IF TSXCO0AT-IN-NETW-CASH-OUT
MOVE 04           TO TSXCO0AT-RETURN-CODE
MOVE .00          TO WS-UIWA-CASH-AMT
MOVE 'ATM DEC'    TO WS-UIWA-INVOICE-NR
MOVE INVALID-ATM-TRANS-N TO POS-ERROR-NUMBER
MOVE INVALID-ATM-TRANS  TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ELSE
MOVE 'DEBT  ' TO WS-UIWA-INVOICE-NR
IF TSXCO0AT-AMOUNT > TSXCO0AT-SURCHARGE-FEE
COMPUTE WS-UIWA-CASH-AMT = TSXCO0AT-AMOUNT -
TSXCO0AT-SURCHARGE-FEE
ELSE
MOVE TSXCO0AT-AMOUNT TO WS-UIWA-CASH-AMT
END-IF
END-IF
WHEN TSXCO0AT-TRAN-TYPE-PINLESS-PUR
MOVE 'DEBP  '           TO WS-UIWA-INVOICE-NR
IF TSXCO0AT-AMOUNT > TSXCO0AT-SURCHARGE-FEE
COMPUTE WS-UIWA-CASH-AMT = TSXCO0AT-AMOUNT -
TSXCO0AT-SURCHARGE-FEE
ELSE
MOVE TSXCO0AT-AMOUNT TO WS-UIWA-CASH-AMT
END-IF
WHEN TSXCO0AT-TRAN-TYPE-AUTH
MOVE 'AUTH  '           TO WS-UIWA-INVOICE-NR
IF TSXCO0AT-AMOUNT > TSXCO0AT-SURCHARGE-FEE
COMPUTE WS-UIWA-CASH-AMT = TSXCO0AT-AMOUNT -
TSXCO0AT-SURCHARGE-FEE
ELSE
MOVE TSXCO0AT-AMOUNT TO WS-UIWA-CASH-AMT
END-IF
WHEN TSXCO0AT-TRAN-TYPE-SAV-CRED
MOVE .00                TO WS-UIWA-CASH-AMT
MOVE 'ATM DEC'          TO WS-UIWA-INVOICE-NR
MOVE INVALID-ATM-TRANS-N TO POS-ERROR-NUMBER
MOVE INVALID-ATM-TRANS  TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN TSXCO0AT-TRAN-TYPE-P-SAV-CR
MOVE .00                TO WS-UIWA-CASH-AMT
MOVE 'POS DEC'          TO WS-UIWA-INVOICE-NR
MOVE INVALID-ATM-TRANS-N TO POS-ERROR-NUMBER
MOVE INVALID-ATM-TRANS  TO OUT-COMENT
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
WHEN OTHER
MOVE 'ATM WD'           TO WS-UIWA-INVOICE-NR
IF TSXCO0AT-AMOUNT > TSXCO0AT-SURCHARGE-FEE
COMPUTE WS-UIWA-CASH-AMT = TSXCO0AT-AMOUNT -
TSXCO0AT-SURCHARGE-FEE
ELSE
MOVE TSXCO0AT-AMOUNT TO WS-UIWA-CASH-AMT
END-IF
END-EVALUATE.



IF  TSXCO0AT-XBORDER-XTN = 'Y'
PERFORM SPR-CALC-XBORDER-ASSMT
COMPUTE WS-UIWA-CASH-AMT =
WS-UIWA-CASH-AMT + WS-XBORDER-ASSMT-AMT
END-IF

MOVE WS-UIWA-CASH-AMT TO WS-UIWA-INVOICE-AMT.


MOVE TSXCO0AT-CARD-NUMBER  TO WS-PRM-CARD-NR
MOVE 15                    TO MOD10-SL
MOVE HIGH-VALUE            TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD           TO WS-UIWA-CARD-NR-16.


SPR-CALC-XBORDER-ASSMT.

IF  WS-ONL-ATM-XBORDER-ASS-PCT NOT NUMERIC
MOVE ZEROS TO WS-ONL-ATM-XBORDER-ASS-PCT
END-IF
IF  WS-ONL-POS-XBORDER-ASS-PCT NOT NUMERIC
MOVE ZEROS TO WS-ONL-POS-XBORDER-ASS-PCT
END-IF

MOVE WS-XBORDER-DEFAULT-PCT TO WS-XBORDER-ASSMT-PCT
IF  THIS-BE-AN-ATM-XTN
IF  WS-ONL-ATM-XBORDER-ASS-PCT NOT = ZEROS
MOVE WS-ONL-ATM-XBORDER-ASS-PCT TO
WS-XBORDER-ASSMT-PCT
END-IF
ELSE
IF  WS-ONL-POS-XBORDER-ASS-PCT NOT = ZEROS
MOVE WS-ONL-POS-XBORDER-ASS-PCT TO
WS-XBORDER-ASSMT-PCT
END-IF
END-IF


COMPUTE WS-XBORDER-ASSMT-AMT ROUNDED =
(TSXCO0AT-AMOUNT - TSXCO0AT-CURR-CONV-ASS) *
WS-XBORDER-ASSMT-PCT
END-COMPUTE.


SPR-SETUP-IOL-PRE-AUTH.

MOVE UNFORMATTED-AREA      TO WS-IOL-PRE-AUTH-AREA
IF WS-IOL-MAX-LITERS-IN NOT NUMERIC
MOVE 999.99             TO WS-IOL-MAX-LITERS-IN.
IF WS-IOL-PPL NOT NUMERIC
MOVE ZEROES             TO WS-IOL-PPL.


MOVE SPACES                TO WS-UIWA-CHECK-NRX.

MOVE WS-IOL-UNIT-NUMBER    TO WS-UIWA-UNIT-NR
WS-UIWA-UNIT-NR-10
MOVE WS-IOL-SC-CODE        TO WS-UIWA-SC-CODE
MOVE 'IOL INV#'            TO WS-UIWA-INVOICE-NR
MOVE WS-IOL-TRIP-NUMBER    TO WS-UIWA-TRIP-NR
IF WS-IOL-HUB-READING NUMERIC
MOVE WS-IOL-HUB-READING TO WS-UIWA-HUB
FPHUBO.
MOVE WS-IOL-PO-NUMBER      TO WS-UIWA-PO-NR
MOVE WS-IOL-DRIVER-NUMBER  TO WS-UIWA-EMPLOYEE-NR
MOVE WS-IOL-RCP            TO WS-UIWA-IOL-RCP

MOVE WS-IOL-CARD-NR        TO WS-UIWA-CARD-NR-10
MOVE WS-UIWA-CARD-NR-10    TO WS-PRM-CARD-BASE-A
PERFORM DETERMINE-PREFIX
MOVE WS-PRM-CARD-PREFIX    TO WS-UIWA-CARD-NR-BIN

IF WS-IOL-PPL NOT > ZEROES
MOVE FUEL-PRICE-ERR   TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC.


SPR-CHECK-FOR-PREMIER-CARD.


IF (WS-UIWA-CARD-NR-16 NUMERIC) OR
(THIS-BE-A-VRU-XTN)          OR
(THIS-BE-AN-IOL-XTN)
PERFORM SPR-ADJUST-FOR-PREMIER.


SPR-ADJUST-FOR-PREMIER.



MOVE 0 TO COM-STAGE.
MOVE WS-UIWA-CARD-NR-16 TO WS-PRM-CARD.


SPR-PREMIER-INITIAL-INTERFACE.



MOVE 'Y' TO WS-RELOCATE-UNIT-ADJUST
MOVE WS-UIWA-DL-NR TO FP1DLNRI
MOVE WS-UIWA-DL-ST TO FP1DLSTI
PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999
MOVE WS-ID-NR TO COM-FP-ID-NR.
IF CSR-VERIFY-UNIT = 'C'
MOVE COM-UNIT-NR          TO WS-UIWA-UNIT-NR
MOVE COM-UNIT-NR-EXPANDED TO WS-UIWA-UNIT-NR-10.


SPR-GET-SC-INFO.

MOVE 'SPR-GET-SC-INFO'           TO CXUTS0ML-PARAGRAPH.
IF WS-UIWA-SC-SUB-ID > SPACES
MOVE WS-UIWA-SC-SUB-ID TO WS-SAVE-POS-SUB-ID.


IF THIS-BE-AN-IOL-XTN
MOVE LOW-VALUES       TO SC-IOL-XREF-RECORDS
MOVE '9'              TO SCIXR-RECORD-ID
MOVE WS-UIWA-SC-CODE  TO SCIXR-IOL-LOCATION
EXEC CICS READ
DATASET ('SCLOCAT')
INTO    (SC-IOL-XREF-RECORDS)
RIDFLD  (SCIXR-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC
MOVE SCIXR-KEY         TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF (EIBRESP NOT = DFHRESP(NORMAL)) OR
(WS-UIWA-SC-CODE NOT = SCIXR-IOL-LOCATION)
MOVE TS-IS-INVALID   TO 3270-OUTPUT-DATA
MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF
MOVE SCIXR-CDN-LOCATION  TO WS-UIWA-SC-CODE.


MOVE WS-UIWA-SC-CODE     TO SCMSTR-KEY
COM-FP-SC-CODE.
IF WS-UIWA-SC-CODE = 'TN000' OR 'TN225'
MOVE TS-IS-INVALID   TO 3270-OUTPUT-DATA
MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC.
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE TS-IS-INVALID TO 3270-OUTPUT-DATA
MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF.
PERFORM 60200-CHECK-SCMSTR-NUMERICS
MOVE SCM-KEY                TO  SCMSTR-KEY.
MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
MOVE SCM-COMDATA-COMPLETE-ACCT   TO COM-CC-SCM-ACCT-CODE.


SPR-CHECK-SC-INFO.


IF THIS-BE-A-VRU-XTN
MOVE 'U' TO SCM-COUNTRY-CODE
IF WS-VRU-COUNTRY-FLAG = 'C'
MOVE 'C' TO SCM-COUNTRY-CODE.

IF (NOT SCM-HAS-NO-AUTOMATED-INPUT) AND
(NOT THIS-BE-AN-AUTOMATED-REQ)
MOVE UNAUTHORIZED-TERM TO 3270-OUTPUT-DATA
MOVE UNAUTHORIZED-TERM-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.

IF SCM-STATUS NOT = 'A'
MOVE INACTIVE-LOCATION   TO 3270-OUTPUT-DATA
MOVE INACTIVE-LOCATION-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC.

MOVE SCM-LOCATION-CITY      TO  COM-TS-CITY.
MOVE SCM-LOCATION-STATE     TO  COM-TS-STATE.
MOVE SCM-LOCATION-NAME      TO  COM-TS-NAME.
MOVE SCM-TAX-APPLICATION    TO  COM-SCM-TAX-APPLICATION.
IF NOT COM-SCM-TAX-APP-VALID
MOVE '1'                 TO COM-SCM-TAX-APPLICATION.
MOVE 'N'                    TO COM-CAPTURE-TAX.
MOVE SCM-MANUAL-CALL-FEE    TO COM-SCM-MANUAL-CALL-FEE
MOVE SCM-AUTOMATED-CALL-FEE TO COM-SCM-AUTO-CALL-FEE.

IF THIS-BE-AN-ATM-XTN   AND
TSXCO0AT-IN-NETW-YES AND
SCM-BUSINESS-TYPE-CODE NOT = 'PN'
MOVE IN-NETW-TS-INVALID   TO OUT-COMENT
MOVE IN-NETW-TS-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


SPR-GET-SC-EQUIP-INFO.

MOVE 'SPR-GET-SC-EQUIP-INFO'     TO CXUTS0ML-PARAGRAPH.

MOVE 'SC'                   TO CER-CUSTOMER-TYPE.
MOVE SCM-KEY                TO CER-CUSTOMER-CODE.
MOVE 'I'                    TO CER-DEVICE-MODE.
MOVE 'T'                    TO CER-DEVICE-CATAGORY.
MOVE WS-SAVE-POS-SUB-ID     TO CER-SUB-ID.
EXEC CICS READ
DATASET ('CDEQUIP')
INTO    (COMDATA-EQUIPMENT-RECORD)
RIDFLD  (CER-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SPACES                 TO WS-SAVE-COM-SITE-ACCT.
IF EIBRESP = DFHRESP(NORMAL)
IF CER-COM-SITE-ACCT > SPACES
MOVE CER-COM-SITE-ACCT TO WS-SAVE-COM-SITE-ACCT.


SPR-SETUP-IOL-AUTH.








MOVE WS-UIWA-IOL-RCP TO WS-CHECK-RCP-INP.
MOVE SCM-IOL-RCP     TO WS-CHECK-RCP-SCM.
IF WS-CHECK-RCP-INP = WS-CHECK-RCP-SCM
MOVE SCM-IOL-RCP  TO WS-UIWA-IOL-RCP.


IF WS-UIWA-NR2-COST NOT NUMERIC OR
WS-UIWA-NR2-COST = ZEROES
COMPUTE WS-UIWA-NR2-COST = WS-UIWA-NR2-QTY *
WS-UIWA-IOL-RCP.


IF WS-UIWA-NR2-QTY > ZEROES
MOVE WS-UIWA-NR2-QTY     TO WS-TAX-QUANTITY
MOVE WS-UIWA-IOL-RCP     TO WS-TAX-PPL
MOVE WS-UIWA-NR2-COST    TO WS-TAX-COST
PERFORM 20306-COMPUTE-TAX-FOR-FUEL
MOVE WS-TAX-QUANTITY     TO WS-UIWA-NR2-QTY
MOVE WS-TAX-PPL          TO WS-UIWA-IOL-RCP
MOVE WS-TAX-COST         TO WS-UIWA-NR2-COST
MOVE WS-TAX-AMOUNT       TO WS-UIWA-TAX-AMT
END-IF.


SPR-GET-UNIT-INFO.


MOVE WS-UIWA-BATCH-PROCESS-DATE TO COM-BATCH-PROCESS-DATE.
MOVE WS-UIWA-FUELING-TIME       TO COM-BATCH-FUELING-TIME.
MOVE INP-CO-CODE                TO COM-FP-CO-CODE.

IF CSR-VERIFY-UNIT = 'G'
IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
PERFORM 52000-VALIDATE-CUST-UNIT
IF SQLCODE = +100
MOVE INVALID-UNIT-NR           TO 3270-OUTPUT-DATA
MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N' TO WS-UNITMST-RECD-SW
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
END-IF.

MOVE 'C' TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST

IF EIBRESP = DFHRESP(NOTFND) AND
THIS-BE-A-FLEET-XTN       AND
COM-UNIT-NR-EXPANDED NOT = '      FLEET'
MOVE ' FLEET'              TO PRM-UNIT-NUMBER
MOVE '     FLEET'          TO FP1UNITI, WS-UNIT-NR
MOVE WS-UNIT-NR-10         TO COM-UNIT-NR-EXPANDED
MOVE WS-UNIT-NR-06         TO COM-UNIT-NR
MOVE 'C'                   TO WS-UNITMST-UNIT
PERFORM 83000-GET-UNITMST
END-IF.

IF EIBRESP = DFHRESP(NOTFND)
IF THIS-BE-A-FLEET-XTN                 OR
COM-UNIT-NR-EXPANDED = '     XCASH' OR
CSR-VERIFY-UNIT = 'N'
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N'                   TO WS-UNITMST-RECD-SW
MOVE '1'                   TO UNITMST-UBC-RECD-ID
MOVE COM-UNIT-POOL-CUST-ID TO UNITMST-UBC-CUST-ID
MOVE 'DEFAULT'             TO UNITMST-UBC-GROUP-ID
MOVE COM-UNIT-NR-EXPANDED  TO UNITMST-UBC-UNIT-NR
ELSE
MOVE INVALID-UNIT-NR           TO 3270-OUTPUT-DATA
MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
INITIALIZE UNITMST-UNIT-MASTER-RECORD
MOVE 'N' TO WS-UNITMST-RECD-SW
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
END-IF.

PERFORM 60500-CHECK-UNITMST-NUMERICS
PERFORM 60510-MOVE-UNITMST-VALUES.
PERFORM READ-CDNCUST.


SPR-CHECK-UNIT-INFO.


IF THIS-RECD-IS-TO-BE-DELETED
MOVE INVALID-UNIT-NR        TO 3270-OUTPUT-DATA
MOVE INVALID-UNIT-NR-N      TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF.
IF NO-MORE-ORDERS-ALLOWED
MOVE DO-NOT-HONOR           TO 3270-OUTPUT-DATA
MOVE DO-NOT-HONOR-N         TO POS-ERROR-NUMBER
MOVE CARD-BLOCKED-NBR       TO NEW-DO-NOT-HONOR-NBR
MOVE NEW-DO-NOT-HONOR1      TO NEW-OUT-MSG1
MOVE NEW-DO-NOT-HONOR2      TO NEW-OUT-MSG2
MOVE 'Y'                    TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF.


SPR-SEE-IF-CARD-MUST-CALL.

IF (INP-CO-CODE  = '109' OR '115' OR '238') OR
(WS-FP-ACCT-CODE = 'TR440' OR 'TR355' OR
'SC071' OR 'LE041')
IF EIBTRMID IS NOT = '9999'
MOVE THIS-CARD-MUST-CALL TO 3270-OUTPUT-DATA
MOVE THIS-CARD-MUST-CALL-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-FOR-LOST-CARD.


MOVE PRM-ACCT-NUMBER TO WS-ACCT-CODE.
IF WS-ACCT-CODE-LANDSTAR
AND SCM-KEY = 'AR646'
AND WS-UIWA-SWIPED-KEYED NOT = 'R'
MOVE 'S' TO WS-UIWA-SWIPED-KEYED
END-IF

IF COM-ALLOW-KEYED-CARD-FLAG = 'Y'
AND WS-UIWA-SWIPED-KEYED NOT = 'R'
MOVE 'S' TO WS-UIWA-SWIPED-KEYED
END-IF.



SPR-PETRO-CANADA-SPECIAL-CHECK.

IF SCM-CHAIN-CODE = WS-PETRO-CANADA-CHAIN AND
CDN-PETRO-CANADA-FLAG = 'N'
MOVE PETRO-CANADA-RESTRICTED   TO OUT-COMENT
MOVE PETRO-CANADA-RESTRICTED-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


SPR-GET-NETWORK-INFO.

MOVE ' '       TO ERROR-FLAG.
MOVE SPACES    TO COM-PRM-NETWORKING
MOVE ALL ZEROS TO COM-DIRECT-BILL-CONTROL.



MOVE 'N' TO COM-RMR-TERM-FUEL-FLAG.
IF SCM-IS-A-TERMINAL-FUEL-LOC
MOVE 'Y' TO COM-RMR-TERM-FUEL-FLAG.



MOVE 'N' TO COM-NETWORK-BY-CARD
IF CDN-LIM-NETW-BY-CARD = 'Y' AND
PRM-LIM-NETW-BY-CARD = 'Y'
PERFORM CHECK-LIM-NETW-BY-CARD
END-IF.


IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
PERFORM 70000-CHECK-RMS-LOCATION.


SPR-CHECK-FOR-NETWORK-ERROR.

IF THERE-WAS-AN-ERROR
EVALUATE TRUE
WHEN CDN-OVERRIDE-LIMITED-NETWORK = 'Y' AND
CDN-PURCHASE-ORDER > SPACES
MOVE 'Y' TO COM-PO-REQUIRED
MOVE '*' TO ADF-NETWORK-FLAG
MOVE ' ' TO ERROR-FLAG
WHEN PRM-FUEL-OFFNET-FLAG = 'Y'
MOVE 'Y' TO COM-CARD-OFFNET-USED
MOVE '*' TO ADF-NETWORK-FLAG
MOVE ' ' TO ERROR-FLAG
WHEN OTHER
MOVE DRIVER-MAY-NOT-FUEL-HERE   TO 3270-OUTPUT-DATA
MOVE DRIVER-MAY-NOT-FUEL-HERE-N TO POS-ERROR-NUMBER
MOVE FUEL-NOT-ALLOWED-NBR       TO CALL-COMPANY-NBR
MOVE 'Y'                        TO VCWS-ERROR-IND
MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
PERFORM CHECK-FOR-EXIT-FOR-PC
END-EVALUATE.


SPR-SETUP-TERM-FUEL-INVOICE.

IF COM-THIS-IS-A-TERM-FUEL-XTN AND
WS-UIWA-INVOICE-NR NOT > SPACES
MOVE 'TFINVOICE' TO WS-UIWA-INVOICE-NR.


SPR-SETUP-AUTO-GAS-PUMP-NR.

EVALUATE TRUE
WHEN THIS-BE-AN-AUTO-GAS-PRE-AUTH
MOVE '0'                  TO
WS-AUTO-GAS-PUMP-NRX (1:1)
MOVE WS-UIWA-INVOICE-NR (1:1) TO
WS-AUTO-GAS-PUMP-NRX (2:1)
WHEN THIS-BE-AN-AUTO-GAS-AUTH
IF WS-UIWA-INVOICE-NR (1:2) = '00'
MOVE WS-UIWA-INVOICE-NR(3:2) TO WS-AUTO-GAS-PUMP-NRX
ELSE
MOVE WS-UIWA-INVOICE-NR(1:2) TO WS-AUTO-GAS-PUMP-NRX
END-IF
END-EVALUATE.


SPR-SETUP-AUTO-GAS-AMOUNTS.


IF (THIS-BE-AN-AUTO-GAS-AUTH      ) AND
(WS-AUTO-GAS-PUMP-NR NUMERIC ) AND
(WS-AUTO-GAS-PUMP-NR > ZEROES)
EVALUATE SCM-PUMP-ASSIGNMENT (WS-AUTO-GAS-PUMP-NR)
WHEN '1'
MOVE WS-UIWA-NR2-QTY  TO WS-UIWA-NR1-QTY
MOVE WS-UIWA-NR2-COST TO WS-UIWA-NR1-COST
MOVE ZEROES           TO WS-UIWA-NR2-QTY
MOVE ZEROES           TO WS-UIWA-NR2-COST
WHEN '3'
MOVE WS-UIWA-NR2-QTY  TO WS-UIWA-REF-QTY
MOVE WS-UIWA-NR2-COST TO WS-UIWA-REF-COST
MOVE ZEROES           TO WS-UIWA-NR2-QTY
MOVE ZEROES           TO WS-UIWA-NR2-COST
WHEN '4'
MOVE WS-UIWA-NR2-QTY  TO WS-UIWA-OTH-QTY
MOVE WS-UIWA-NR2-COST TO WS-UIWA-OTH-COST
MOVE ZEROES           TO WS-UIWA-NR2-QTY
MOVE ZEROES           TO WS-UIWA-NR2-COST
WHEN '5'
MOVE WS-UIWA-NR2-QTY  TO WS-UIWA-OIL-QTY
MOVE WS-UIWA-NR2-COST TO WS-UIWA-OIL-COST
MOVE ZEROES           TO WS-UIWA-NR2-QTY
MOVE ZEROES           TO WS-UIWA-NR2-COST
END-EVALUATE.


SPR-SETUP-UNATTENDED-INVOICE.

IF THIS-BE-AN-UNATTENDED-PRE-AUTH
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE PD-DD       TO WS-INVOICE-DD
MOVE EIBTIME     TO WS-INVOICE-TIME
MOVE WS-INVOICE  TO WS-UIWA-INVOICE-NR
ELSE
MOVE 'AGINVOICE' TO WS-UIWA-INVOICE-NR.
IF (THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH)
AND WS-UIWA-INVOICE-NR NOT > SPACES
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE PD-DD       TO WS-INVOICE-DD
MOVE EIBTIME     TO WS-INVOICE-TIME
MOVE WS-INVOICE  TO WS-UIWA-INVOICE-NR
ELSE
MOVE 'AGINVOICE' TO WS-UIWA-INVOICE-NR.


SPR-CHECK-INVOICE-NR.

IF WS-UIWA-INVOICE-NR NOT > SPACES
MOVE INVOICE-NR-REQUIRED   TO 3270-OUTPUT-DATA
MOVE INVOICE-NR-REQUIRED-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-COMDATA-COMPLETE-INV.

IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE 8 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-INVOICE-NR,
FILL-CHAR
INSPECT WS-UIWA-INVOICE-NR REPLACING LEADING ' ' BY '0'
IF WS-UIWA-INVOICE-NR NOT NUMERIC OR
WS-UIWA-INVOICE-NR = '00000000'
MOVE INVOICE-NR-INVALID TO 3270-OUTPUT-DATA
MOVE INVOICE-NR-INVALID-N TO POS-ERROR-NUMBER
PERFORM EXIT-FUEL-PGM-FOR-PC.






SPR-SETUP-PO-NUMBER-INFO.



IF COM-THIS-IS-A-TERM-FUEL-XTN         AND
CDN-TERM-FUEL-LIMITS         = 'Y'  AND
WS-UIWA-PO-NR            NOT > SPACES
MOVE '$TERM$' TO WS-UIWA-PO-NR


PERFORM READ-CDNCUST
END-IF.


SPR-GET-CDADDR-INFO.

MOVE 'SPR-GET-CDADDR-INFO'       TO CXUTS0ML-PARAGRAPH.

INITIALIZE COMDATA-ADDRESS-RECORD.
MOVE 'SC' TO CAR-CUSTOMER-TYPE
MOVE WS-UIWA-SC-CODE TO CAR-CUSTOMER-CODE
MOVE 'A' TO CAR-ADDRESS-TYPE.
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC.
MOVE CAR-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
MOVE CAR-TAX-ID             TO WS-HLD-CAR-TAX-ID.
IF COM-PNET-BRIDGE-FLAG-YES AND
COM-PNET-CHAIN-CODE > SPACES
MOVE 'CH' TO CAR-CUSTOMER-TYPE
MOVE COM-PNET-CHAIN-CODE TO CAR-CUSTOMER-CODE
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE CAR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-IF.


MOVE 'N'       TO COM-CAPTURE-TAX.
IF SCM-COUNTRY-CODE  = 'C' AND
WS-HLD-CAR-TAX-ID > SPACES
PERFORM 20630-GET-PRICE-CONTROL-INFO
IF SCM-AUTO-CALC-TAX-NO   OR
SCPM-AUTO-CALC-TAX-NO
MOVE 'Y' TO COM-CAPTURE-TAX.
IF THIS-BE-AN-UNATTENDED-PRE-AUTH
MOVE 'N'   TO COM-CAPTURE-TAX
END-IF.


PERFORM SSMES-SETUP-COUNTRY-CODE.


SPR-GET-CONVERSION-RATES.


IF (NOT COM-US-COMP-US-SC)        OR
(THIS-BE-A-VRU-XTN)            OR
(THIS-BE-AN-IOL-PRE-AUTH)
PERFORM SPR-GET-US-TO-CAN-RATE
PERFORM SPR-GET-CAN-TO-US-RATE
END-IF.

SPR-GET-US-TO-CAN-RATE.

INITIALIZE CXXCO0CL-COMMAREA
MOVE 'USD'         TO CA-CXXCO0CL-BASE-CUR-CD
MOVE 'CAD'         TO CA-CXXCO0CL-CNV-TO-CUR-CD
PERFORM 20042-LINK-CXXCO0CL
MOVE CA-XCCL-CURR-CNV-RT TO US-TO-CAN-RATE.


SPR-GET-CAN-TO-US-RATE.

INITIALIZE CXXCO0CL-COMMAREA
MOVE 'CAD'     TO CA-CXXCO0CL-BASE-CUR-CD
MOVE 'USD'     TO CA-CXXCO0CL-CNV-TO-CUR-CD
PERFORM 20042-LINK-CXXCO0CL
MOVE CA-XCCL-CURR-CNV-RT TO CAN-TO-US-RATE.


SPR-SETUP-VOICE-RESPONSE-RATES.

IF THIS-BE-A-VRU-XTN
PERFORM VOICE-RESPONSE-OVERRIDE-RTN.


SPR-CHECK-AND-SETUP-LIMITS.

MOVE 'N' TO WS-EXIT-FLAG.



IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
IF (WS-UIWA-NR2-COST    +
WS-UIWA-REF-COST    +
WS-UIWA-OIL-COST    +
WS-UIWA-OTH-COST    +
WS-UIWA-NR1-COST)   = ZEROS
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N'
PERFORM SPR-SETUP-AUTO-GAS-AVAIL
PERFORM SPR-CHECK-DAILY-MAX-FUEL-PURC
PERFORM SPR-CHECK-TRIP-ALLOWANCE
PERFORM SPR-CHECK-PURC-LIMIT-ON-CARD.

MOVE 'N' TO WS-EXIT-FLAG.


SPR-SETUP-AUTO-GAS-AVAIL.


IF WS-RFL-MAX-PURC-DLY-FUEL = ZEROES
MOVE 99999.99 TO WS-AUTO-GAS-AVAIL
ELSE
IF UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD
COMPUTE WS-AUTO-GAS-AVAIL = WS-RFL-MAX-PURC-DLY-FUEL   -
UNITMST-CURR-DAY-OIL-COST  -
UNITMST-CURR-DAY-REQ-AMT -
UNITMST-CURR-DAY-AMT-REF
ELSE
COMPUTE WS-AUTO-GAS-AVAIL = WS-RFL-MAX-PURC-DLY-FUEL.


SPR-CHECK-DAILY-MAX-FUEL-PURC.


IF WS-RFL-MAX-PURC-DLY-FUEL   > ZERO AND
UNITMST-DATE-LAST-XTN      = WS-CURRENT-DATE-YYDDD
IF (UNITMST-CURR-DAY-OIL-COST +
UNITMST-CURR-DAY-REQ-AMT   +
UNITMST-CURR-DAY-AMT-REF) > WS-RFL-MAX-PURC-DLY-FUEL
MOVE DAILY-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE DAILY-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE LIMIT-EXCEEDED-NBR     TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG       TO NEW-OUT-MESSAGE
MOVE 'Y'                    TO VCWS-ERROR-IND
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-TRIP-ALLOWANCE.


IF TRIP-ALLOWANCE-SET
MOVE 99999.99 TO WS-AUTO-GAS-AVAIL2
IF UNITMST-INIT-TRIP-ALLOW > 0
COMPUTE WS-AUTO-GAS-AVAIL2 = UNITMST-INIT-TRIP-ALLOW  -
UNITMST-TRIP-ALLOW-USED.
IF TRIP-ALLOWANCE-SET AND
UNITMST-INIT-TRIP-ALLOW      > ZERO AND
UNITMST-INIT-TRIP-ALLOW NOT > UNITMST-TRIP-ALLOW-USED
MOVE DAILY-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE DAILY-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE LIMIT-EXCEEDED-NBR     TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG       TO NEW-OUT-MESSAGE
MOVE 'Y'                    TO VCWS-ERROR-IND
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-PURC-LIMIT-ON-CARD.

IF CSR-PURC-LIMIT-ON-CARD
COMPUTE WS-AUTO-GAS-AVAIL3 = PRM-PURC-INITIAL -
PRM-PURC-USED
IF PRM-PURC-INITIAL IS NOT GREATER THAN PRM-PURC-USED
IF WS-FL-CASH-ADV-STATUS NOT > '0'
MOVE ZEROS TO XCS-PURC-REQ
MOVE CARD-PURCHASE-EXCEEDED     TO 3270-OUTPUT-DATA
MOVE CARD-PURCHASE-EXCEEDED-N   TO POS-ERROR-NUMBER
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED TO 3270-OUTPUT-DATA
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-EXPENSE-BALANCE.

PERFORM DETERMINE-IF-BALANCE-BASED
IF WS-BALANCE-BASED
IF I-DEDUCT-CHARGE-FROM-DRIVER     AND
THIS-BE-AN-UNATTENDED-PRE-AUTH

PERFORM 20870-GET-FEES
PERFORM 20900-CHECK-FOR-VRU-FEE
PERFORM 20905-CHECK-FOR-FREEBIE
PERFORM 20910-CHECK-BRIDGE-FEES
PERFORM 21020-COMPUTE-MANUAL-FEE
PERFORM 21025-ADJUST-MANUAL-FEE
IF WS-FMRM-05-POF NOT = 'Y'
PERFORM 20920-GET-DISCOUNT-INFO
END-IF
PERFORM 20930-ADD-IN-MANUAL-CALL-FEE
PERFORM 20940-ADD-IN-COST-PLUS-FEE
PERFORM 20945-ADD-IN-NATS-FEE
PERFORM 20950-ADJ-COMDATA-COMPLETE-FEE
PERFORM 20955-CHECK-ATM-FEES
PERFORM 20957-CHECK-REDUCE-CO-FEES
PERFORM 20959-CHECK-FLEET-FEE
PERFORM 209XX-COMPLETE-FEE-PROCESS
COMPUTE WS-AUTO-GAS-AVAIL4 = PRM-EXPENSE-BALANCE -
WS-FUEL-RATE        -
WS-ADVANCE-RATE
ELSE
COMPUTE WS-AUTO-GAS-AVAIL4 = PRM-EXPENSE-BALANCE
END-IF

IF PRM-EXPENSE-BALANCE < .01
OR WS-AUTO-GAS-AVAIL4 < .01
MOVE DAILY-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE DAILY-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
MOVE LIMIT-EXCEEDED-NBR     TO CALL-COMPANY-NBR
MOVE 'Y'                    TO VCWS-ERROR-IND
MOVE CALL-COMPANY-MSG       TO NEW-OUT-MESSAGE
IF LIMITS-ALTERED-FOR-PO = 'Y'
MOVE PO-LIMIT-EXCEEDED   TO 3270-OUTPUT-DATA
MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
END-IF
PERFORM CHECK-FOR-EXIT-FOR-PC.

IF WS-AUTO-GAS-AVAIL4 > 99999.99
MOVE 99999.99 TO WS-AUTO-GAS-AVAIL4.


SPR-COMPUTE-AUTO-GAS-AVL-AMT1.


IF WS-AUTO-GAS-AVAIL2 > ZEROES AND
WS-AUTO-GAS-AVAIL2 < WS-AUTO-GAS-AVAIL
MOVE WS-AUTO-GAS-AVAIL2 TO WS-AUTO-GAS-AVAIL.
IF WS-AUTO-GAS-AVAIL3 > ZEROES AND
WS-AUTO-GAS-AVAIL3 < WS-AUTO-GAS-AVAIL
MOVE WS-AUTO-GAS-AVAIL3 TO WS-AUTO-GAS-AVAIL.
IF WS-AUTO-GAS-AVAIL4 > ZEROES AND
WS-AUTO-GAS-AVAIL4 < WS-AUTO-GAS-AVAIL
MOVE WS-AUTO-GAS-AVAIL4 TO WS-AUTO-GAS-AVAIL.
IF CDN-FLEET-LIMIT-FLAG = 'Y'
IF WS-FLEET-LIMIT-AVAIL < WS-AUTO-GAS-AVAIL
MOVE WS-FLEET-LIMIT-AVAIL TO WS-AUTO-GAS-AVAIL.


SPR-COMPUTE-AUTO-GAS-AVL-AMT2.




MOVE WS-AUTO-GAS-AVAIL TO WS-AUTO-GAS-AVAIL-OIL.


IF CSR-OIL-FLAG = 'Y'
PERFORM PREMIER-CARD-OIL-LIMIT
MOVE PRM-OIL-INITIAL-DOLLARS TO WS-AUTO-GAS-AVAIL-OIL.

IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
IF WS-SP14-MAX-OIL-QTY < WS-AUTO-GAS-AVAIL-OIL
MOVE WS-SP14-MAX-OIL-QTY
TO WS-AUTO-GAS-AVAIL-OIL
END-IF
ELSE
IF FMLP-AVAIL-QTY-OIL < WS-AUTO-GAS-AVAIL-OIL
MOVE FMLP-AVAIL-QTY-OIL
TO WS-AUTO-GAS-AVAIL-OIL
END-IF
END-IF
END-IF


IF THIS-BE-AN-AUTO-GAS-XTN     AND
WS-AUTO-GAS-PUMP-NR NUMERIC AND
WS-AUTO-GAS-PUMP-NR > ZEROES
EVALUATE SCM-PUMP-ASSIGNMENT (WS-AUTO-GAS-PUMP-NR)
WHEN '5'
IF WS-AUTO-GAS-AVAIL-OIL < WS-AUTO-GAS-AVAIL
MOVE WS-AUTO-GAS-AVAIL-OIL TO WS-AUTO-GAS-AVAIL
END-IF
END-EVALUATE.



MOVE WS-AUTO-GAS-AVAIL TO WS-AUTO-GAS-AVAIL-PURC.


SPR-COMPUTE-AUTO-GAS-AVAIL-QTY.

PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-NR2
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-NR1
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-REF
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-OTH
PERFORM SPR-COMPUTE-AUTO-GAS-AVAIL-OIL



MOVE WS-AUTO-GAS-AVAIL-QTY-NR2 TO WS-AUTO-GAS-AVAIL-QTY.
IF THIS-BE-AN-AUTO-GAS-XTN     AND
WS-AUTO-GAS-PUMP-NR NUMERIC AND
WS-AUTO-GAS-PUMP-NR > ZEROES
EVALUATE SCM-PUMP-ASSIGNMENT (WS-AUTO-GAS-PUMP-NR)
WHEN '1'
MOVE WS-AUTO-GAS-AVAIL-QTY-NR1 TO
WS-AUTO-GAS-AVAIL-QTY
WHEN '2'
MOVE WS-AUTO-GAS-AVAIL-QTY-NR2 TO
WS-AUTO-GAS-AVAIL-QTY
WHEN '3'
MOVE WS-AUTO-GAS-AVAIL-QTY-REF TO
WS-AUTO-GAS-AVAIL-QTY
WHEN '4'
MOVE WS-AUTO-GAS-AVAIL-QTY-OTH TO
WS-AUTO-GAS-AVAIL-QTY
WHEN '5'
MOVE WS-AUTO-GAS-AVAIL-QTY-OIL TO
WS-AUTO-GAS-AVAIL-QTY
END-EVALUATE

IF WS-AUTO-GAS-AVAIL-QTY = ZEROES
MOVE ZEROES TO WS-AUTO-GAS-AVAIL
END-IF
ELSE
IF WS-AUTO-GAS-AVAIL-QTY-NR1 = ZEROES AND
WS-AUTO-GAS-AVAIL-QTY-NR2 = ZEROES AND
WS-AUTO-GAS-AVAIL-QTY-REF = ZEROES AND
WS-AUTO-GAS-AVAIL-QTY-OTH = ZEROES AND
WS-AUTO-GAS-AVAIL-QTY-OIL = ZEROES
MOVE ZEROES TO WS-AUTO-GAS-AVAIL
END-IF
END-IF.






SPR-COMPUTE-AUTO-GAS-AVAIL-NR2.



MOVE 999.99 TO WS-AUTO-GAS-AVAIL-QTY-NR2.



IF COM-CN-COMP-US-SC
MOVE 263 TO WS-AUTO-GAS-AVAIL-QTY-NR2.



IF CSR-DIESEL-LIMIT-FLAG = 'Y'
IF PRM-DIESEL-LIMIT < PRM-DIESEL-USED
MOVE ZEROS TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
COMPUTE WS-AUTO-GAS-AVAIL-QTY-WRK = PRM-DIESEL-LIMIT
- PRM-DIESEL-USED
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR2
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR2
END-IF
END-IF.

IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-MAX-NR2-QTY
TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
MOVE FMLP-AVAIL-QTY-NR2
TO WS-AUTO-GAS-AVAIL-QTY-WRK
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR2
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR2
END-IF
END-IF



IF COM-MAX-NR2-GALLONS NUMERIC AND
COM-MAX-NR2-GALLONS < WS-AUTO-GAS-AVAIL-QTY-NR2
MOVE COM-MAX-NR2-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-NR2.



IF COM-NBC-MAX-TRACTOR-GAL > ZEROES
MOVE COM-NBC-MAX-TRACTOR-GAL TO WS-AUTO-GAS-AVAIL-QTY-WRK
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR2
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR2.

IF CDN-NR-2-FLAG-IS-BLOCKED
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-NR2.

IF COM-PUR-OPTIONS-FUEL = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-NR2.







IF WS-USE-FLEET-LIMITS = 'Y'
IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
IF COM-USE-FMRM-SP14-QTYS = 'Y'
MOVE '20001' TO WS-PUR-CATEGORY
PERFORM SPR-COMPARE-SP14-PROD-LIMITS
END-IF
END-IF
END-IF.


IF COM-CONVERT-TO-SC-CURR
MOVE COM-RMR-MAXIMUM-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-WRK
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO COM-RMR-MAXIMUM-GALLONS
END-IF.


SPR-COMPUTE-AUTO-GAS-AVAIL-NR1.



MOVE 999.99 TO WS-AUTO-GAS-AVAIL-QTY-NR1.



IF COM-CN-COMP-US-SC
MOVE 263 TO WS-AUTO-GAS-AVAIL-QTY-NR1.



IF CSR-DIESEL-LIMIT-FLAG = 'Y'
IF PRM-DIESEL-LIMIT < PRM-DIESEL-USED
MOVE ZEROS TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
COMPUTE WS-AUTO-GAS-AVAIL-QTY-WRK = PRM-DIESEL-LIMIT
- PRM-DIESEL-USED
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR1
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR1
END-IF
END-IF.

IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-MAX-NR1-QTY
TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
MOVE FMLP-AVAIL-QTY-NR1
TO WS-AUTO-GAS-AVAIL-QTY-WRK
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR1
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR1
END-IF
END-IF


IF COM-MAX-NR1-GALLONS NUMERIC AND
COM-MAX-NR1-GALLONS < WS-AUTO-GAS-AVAIL-QTY-NR1
MOVE COM-MAX-NR1-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-NR1.



IF COM-NBC-MAX-TRACTOR-GAL > ZEROES
MOVE COM-NBC-MAX-TRACTOR-GAL TO WS-AUTO-GAS-AVAIL-QTY-WRK
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-NR1
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-NR1.

IF CDN-NR-1-FLAG-IS-BLOCKED
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-NR1.

IF COM-PUR-OPTIONS-FUEL = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-NR1.







IF WS-USE-FLEET-LIMITS = 'Y'
IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
IF COM-USE-FMRM-SP14-QTYS = 'Y'
MOVE '20002' TO WS-PUR-CATEGORY
PERFORM SPR-COMPARE-SP14-PROD-LIMITS
END-IF
END-IF
END-IF.


SPR-COMPUTE-AUTO-GAS-AVAIL-REF.



MOVE 999.99 TO WS-AUTO-GAS-AVAIL-QTY-REF.



IF COM-CN-COMP-US-SC
MOVE 263 TO WS-AUTO-GAS-AVAIL-QTY-REF.


IF COM-MAX-RFR-GALLONS NUMERIC AND
COM-MAX-RFR-GALLONS < WS-AUTO-GAS-AVAIL-QTY-REF
MOVE COM-MAX-RFR-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-REF.



IF CSR-REEFER-LIMIT-FLAG = 'Y'
IF PRM-REEFER-LIMIT < PRM-REEFER-USED
MOVE ZEROS TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
COMPUTE WS-AUTO-GAS-AVAIL-QTY-WRK = PRM-REEFER-LIMIT -
PRM-REEFER-USED
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-REF
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-REF
END-IF
END-IF.

IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-MAX-REF-QTY
TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
MOVE FMLP-AVAIL-QTY-REF
TO WS-AUTO-GAS-AVAIL-QTY-WRK
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-REF
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-REF
END-IF
END-IF.



IF COM-NBC-MAX-REEFER-GAL > ZEROES
MOVE COM-NBC-MAX-REEFER-GAL TO WS-AUTO-GAS-AVAIL-QTY-WRK
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-REF
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-REF.


IF CDN-REFER-FUEL-BLOCK = 'Y'
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-REF.

IF COM-PUR-OPTIONS-FUEL = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-REF.







IF WS-USE-FLEET-LIMITS = 'Y'
IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
IF COM-USE-FMRM-SP14-QTYS = 'Y'
MOVE '20003' TO WS-PUR-CATEGORY
PERFORM SPR-COMPARE-SP14-PROD-LIMITS
END-IF
END-IF
END-IF.


IF COM-CONVERT-TO-SC-CURR
MOVE COM-RMR-MAX-RFR-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-WRK
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO COM-RMR-MAX-RFR-GALLONS
END-IF.


SPR-COMPUTE-AUTO-GAS-AVAIL-OTH.



MOVE 999.99 TO WS-AUTO-GAS-AVAIL-QTY-OTH.



IF COM-CN-COMP-US-SC
MOVE 263 TO WS-AUTO-GAS-AVAIL-QTY-OTH.

IF COM-MAX-OTH-GALLONS NUMERIC AND
COM-MAX-OTH-GALLONS < WS-AUTO-GAS-AVAIL-QTY-OTH
MOVE COM-MAX-OTH-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-OTH.




IF CSR-OTHER-LIMIT-FLAG = 'Y'
IF CSRH-OTHER-QTY-LIMIT < PIR-OTHER-USED
MOVE ZEROS TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
COMPUTE WS-AUTO-GAS-AVAIL-QTY-WRK = CSRH-OTHER-QTY-LIMIT
- PIR-OTHER-USED
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-OTH
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-OTH
END-IF
END-IF

IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-MAX-OTH-QTY
TO WS-AUTO-GAS-AVAIL-QTY-WRK
ELSE
MOVE FMLP-AVAIL-QTY-OTH
TO WS-AUTO-GAS-AVAIL-QTY-WRK
END-IF
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-OTH
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-OTH
END-IF
END-IF.



IF COM-NBC-MAX-OTHER-GAL NOT NUMERIC
MOVE ZEROS TO COM-NBC-MAX-OTHER-GAL.

IF COM-NBC-MAX-OTHER-GAL > ZEROES
MOVE COM-NBC-MAX-OTHER-GAL TO WS-AUTO-GAS-AVAIL-QTY-WRK
IF COM-CONVERT-TO-SC-CURR
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
END-IF
IF WS-AUTO-GAS-AVAIL-QTY-WRK < WS-AUTO-GAS-AVAIL-QTY-OTH
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO
WS-AUTO-GAS-AVAIL-QTY-OTH.

IF CDN-BLENDED-FUEL-BLOCK = 'Y'
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-OTH.

IF COM-PUR-OPTIONS-FUEL = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-OTH.







IF WS-USE-FLEET-LIMITS = 'Y'
IF CDN-RELATIONSHIP-FLAG = 'Y'
OR SC-ON-LIMITED-NETWORK
OR SCM-NET-PRICING-FL-YES
IF COM-USE-FMRM-SP14-QTYS = 'Y'
MOVE '20004' TO WS-PUR-CATEGORY
PERFORM SPR-COMPARE-SP14-PROD-LIMITS
END-IF
END-IF
END-IF.



IF COM-CONVERT-TO-SC-CURR
MOVE COM-RMR-MAX-OTH-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-WRK
PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO COM-RMR-MAX-OTH-GALLONS
END-IF.


SPR-COMPUTE-AUTO-GAS-AVAIL-OIL.



MOVE 99 TO WS-AUTO-GAS-AVAIL-QTY-OIL.
MOVE 999.99 TO WS-AVAIL-AMT-OIL



IF COM-CN-COMP-US-SC
MOVE 99 TO WS-AUTO-GAS-AVAIL-QTY-OIL.


IF CSR-OIL-FLAG = 'Y'
PERFORM PREMIER-CARD-OIL-LIMIT
IF PRM-OIL-INITIAL-QUARTS < WS-AUTO-GAS-AVAIL-QTY-OIL
MOVE PRM-OIL-INITIAL-QUARTS
TO WS-AUTO-GAS-AVAIL-QTY-OIL
END-IF
IF PRM-OIL-INITIAL-DOLLARS < WS-AVAIL-AMT-OIL
MOVE PRM-OIL-INITIAL-DOLLARS
TO WS-AVAIL-AMT-OIL
END-IF
END-IF
IF WS-USE-FLEET-LIMITS = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
IF WS-SP14-MAX-OIL-QTY < WS-AUTO-GAS-AVAIL-QTY-OIL
MOVE WS-SP14-MAX-OIL-QTY
TO WS-AUTO-GAS-AVAIL-QTY-OIL
END-IF
ELSE
IF FMLP-AVAIL-QTY-OIL < WS-AUTO-GAS-AVAIL-QTY-OIL
MOVE FMLP-AVAIL-QTY-OIL
TO WS-AUTO-GAS-AVAIL-QTY-OIL
END-IF
END-IF
END-IF


IF WS-FL-MAX-OIL-QTS       < WS-AUTO-GAS-AVAIL-QTY-OIL
MOVE WS-FL-MAX-OIL-QTS TO WS-AUTO-GAS-AVAIL-QTY-OIL.
IF CDN-OIL-INITIAL-DOLLARS > ZERO
IF CDN-OIL-INITIAL-DOLLARS < WS-AVAIL-AMT-OIL
MOVE CDN-OIL-INITIAL-DOLLARS TO WS-AVAIL-AMT-OIL
END-IF
END-IF


IF CDN-OIL-BLOCK = 'Y'
OR COM-PUR-OPTIONS-OIL = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY-OIL
WS-AVAIL-AMT-OIL
END-IF.


SPR-COMPARE-SP14-PROD-LIMITS.

PERFORM VARYING WS-PAC-SUB FROM 1 BY 1
UNTIL WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = SPACES
OR WS-PAC-SUB > 10
IF WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = WS-PUR-CATEGORY
AND WS-SP14-PUR-CATEGORY (WS-PAC-SUB) =
COM-SP14-PUR-CATEGORY (WS-PAC-SUB)
AND WS-SP14-SUB-PROD-CD (WS-PAC-SUB) =
COM-SP14-SUB-PROD-CD (WS-PAC-SUB)
IF COM-SP14-MAX-PROD-QTY (WS-PAC-SUB) > ZEROS
AND COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
< WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
END-IF
END-IF
END-PERFORM.


SPR-COMPUTE-AG-AVAIL-QTY-CONV.


EVALUATE TRUE
WHEN COM-CN-COMP-US-SC
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO WS-LITERS
PERFORM LITERS-TO-GALLONS
IF WS-GALLONS > 263
MOVE 263 TO WS-GALLONS
END-IF
MOVE WS-GALLONS TO WS-AUTO-GAS-AVAIL-QTY-WRK
WHEN COM-US-COMP-CN-SC
MOVE WS-AUTO-GAS-AVAIL-QTY-WRK TO WS-GALLONS
PERFORM GALLONS-TO-LITERS
MOVE WS-LITERS  TO WS-AUTO-GAS-AVAIL-QTY-WRK
END-EVALUATE.


SPR-CONVERT-AUTO-GAS-AVAIL.


IF WS-AUTO-GAS-AVAIL NOT = 99999.99
IF (COM-US-COMP-CN-SC) OR
(COM-CO-IS-US AND THIS-BE-AN-IOL-PRE-AUTH)
MOVE WS-AUTO-GAS-AVAIL     TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS   TO WS-AUTO-GAS-AVAIL
END-IF
IF (COM-CN-COMP-US-SC) AND
(NOT THIS-BE-AN-IOL-PRE-AUTH)
MOVE WS-AUTO-GAS-AVAIL     TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS         TO WS-AUTO-GAS-AVAIL
END-IF
END-IF.


SPR-ADJUST-AUTO-GAS-AVAIL.


EVALUATE TRUE
WHEN SCM-UNATTENDED-RTN-QTY
MOVE WS-AUTO-GAS-AVAIL-QTY TO WS-AUTO-GAS-AVAIL
WHEN SCM-UNATTENDED-RTN-DOLLAR
MOVE WS-AUTO-GAS-AVAIL     TO WS-AUTO-GAS-AVAIL-QTY
END-EVALUATE.


SPR-CHECK-CASH.



IF WS-FL-CASH-ADV-FLAG = 'A'
PERFORM ACCUM-CASH-TOTALS.
IF CDN-FLEET-LIMIT-FLAG = 'Y'
AND WS-PROPRIETARY-CARD = 'Y'
AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
PERFORM GET-FLEET-CASH-LIMIT
END-IF
IF CSR-CARD-CASH-AVAILABLE
OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
PERFORM PREMIER-CARD-CASH-LIMIT.


MOVE 'Y' TO WS-CASH-AVAILABLE-FLAG.
IF WS-FL-CASH-ADV-FLAG NOT = 'U'
IF WS-FL-CASH-ADV-STATUS NOT > '0' OR
(UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD AND
CASH-ADV-DAILY-SET                             AND
WS-RFL-CASH-ADV-INIT-DLY     > ZERO            AND
WS-FL-CASH-ADV-USED-DLY NOT < WS-RFL-CASH-ADV-INIT-DLY)
MOVE 'N' TO WS-CASH-AVAILABLE-FLAG.


IF (WS-UIWA-CASH-AMT > ZEROES)       AND
(WS-CASH-AVAILABLE-FLAG = 'N')
MOVE CASH-ADVANCE-NOT-AVAIL   TO 3270-OUTPUT-DATA
MOVE CASH-ADVANCE-NOT-AVAIL-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-COMPUTE-AUTO-GAS-AVAIL-CSH.


MOVE ZEROES    TO WS-AUTO-GAS-AVAIL-AMT-CSH.
IF WS-CASH-AVAILABLE-FLAG = 'Y'
MOVE 999.99 TO WS-AUTO-GAS-AVAIL-AMT-CSH


IF WS-FL-CASH-ADV-FLAG NOT = 'U'
IF WS-USE-FLEET-LIMITS = 'Y'
AND WS-PROPRIETARY-CARD = 'Y'
IF THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-MAX-CASH-AVAIL
TO WS-AUTO-GAS-AVAIL-AMT-CSH
ELSE
MOVE FMLP-AVAIL-AMT-CSH
TO WS-AUTO-GAS-AVAIL-AMT-CSH
END-IF
ELSE
COMPUTE WS-AUTO-GAS-AVAIL-AMT-CSH =
WS-RFL-CASH-ADV-INIT    -
WS-RFL-CASH-ADV-USED
END-IF

IF WS-AUTO-GAS-AVAIL4 > ZEROES AND
WS-AUTO-GAS-AVAIL4 < WS-AUTO-GAS-AVAIL-AMT-CSH
MOVE WS-AUTO-GAS-AVAIL4 TO WS-AUTO-GAS-AVAIL-AMT-CSH.

IF COM-PUR-OPTIONS-CASH = 0
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-AMT-CSH.


SPR-CONVERT-AUTO-GAS-AVAIL-CSH.


IF (COM-US-COMP-CN-SC) OR
(COM-CO-IS-US AND THIS-BE-AN-IOL-PRE-AUTH)
MOVE WS-AUTO-GAS-AVAIL-AMT-CSH TO WS-US-DOLLARS
PERFORM US-DOLLARS-TO-CAN
MOVE WS-CANADIAN-DOLLARS     TO WS-AUTO-GAS-AVAIL-AMT-CSH
END-IF.

IF (COM-CN-COMP-US-SC) AND
(NOT THIS-BE-AN-IOL-PRE-AUTH)
MOVE WS-AUTO-GAS-AVAIL-AMT-CSH TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US
MOVE WS-US-DOLLARS           TO WS-AUTO-GAS-AVAIL-AMT-CSH
END-IF.



SPR-CHECK-UNIT-NUMBER.

IF WS-UIWA-UNIT-NR-10  > SPACES
MOVE WS-UIWA-UNIT-NR-10   TO WS-ADJUST-UNIT-NR
ELSE
MOVE WS-UIWA-UNIT-NR      TO WS-ADJUST-UNIT-NR
END-IF
PERFORM PIM-ADJUST-UNIT
MOVE WS-ADJUST-UNIT-NR-06     TO WS-UIWA-UNIT-NR
MOVE WS-ADJUST-UNIT-NR        TO WS-UIWA-UNIT-NR-10

IF CSR-VERIFY-UNIT NOT = 'N'
IF WS-UIWA-UNIT-NR-10 NOT = COM-UNIT-NR-EXPANDED
MOVE INVALID-UNIT-NR-N   TO POS-ERROR-NUMBER
MOVE INVALID-UNIT-NR-NBR TO CALL-COMPANY-NBR
MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
MOVE 'Y'                 TO VCWS-ERROR-IND
MOVE INVALID-UNIT-NR     TO 3270-OUTPUT-DATA
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-COMPUTE-PPG.

IF WS-UIWA-OTH-QTY  > ZERO AND
WS-UIWA-OTH-COST > ZERO
COMPUTE WS-UIWA-OTH-PPU ROUNDED =
WS-UIWA-OTH-COST / WS-UIWA-OTH-QTY.

IF WS-UIWA-NR1-QTY  > ZERO AND
WS-UIWA-NR1-COST > ZERO
COMPUTE WS-UIWA-NR1-PPU ROUNDED =
WS-UIWA-NR1-COST / WS-UIWA-NR1-QTY.

IF WS-UIWA-REF-QTY  > ZERO AND
WS-UIWA-REF-COST > ZERO AND
WS-UIWA-REF-PPU  = ZERO
COMPUTE WS-UIWA-REF-PPU ROUNDED =
WS-UIWA-REF-COST / WS-UIWA-REF-QTY.


SPR-CHECK-OIL-ALLOWED.

IF NO-OIL-PURCHASE-ALLOWED-THIS-U
IF WS-UIWA-OIL-COST > ZERO OR
WS-UIWA-OIL-QTY  > ZERO
IF CDN-PURCHASE-ORDER-POOL-LIMIT
MOVE '1' TO COM-PO-REQUIRED-FOR-OIL
ELSE
MOVE NO-OIL-THIS-UNIT   TO 3270-OUTPUT-DATA
MOVE NO-OIL-THIS-UNIT-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-GET-PREMIER-LEVEL.

IF SCM-PREMIER-LEVEL IS LESS THAN '1'
OR SCM-PREMIER-LEVEL IS GREATER THAN '5'
MOVE '1' TO COM-PREMIER-LEVEL
ELSE
MOVE SCM-PREMIER-LEVEL TO COM-PREMIER-LEVEL.


SPR-SEE-IF-TERM-FUEL-ALLOWED.


PERFORM DETERMINE-IF-BALANCE-BASED
IF COM-THIS-IS-A-TERM-FUEL-XTN AND
WS-BALANCE-BASED           AND
CDN-BILL-AT-LOAD
MOVE TERMINAL-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
MOVE TERMINAL-FUEL-NOT-ALLOWED   TO 3270-OUTPUT-DATA
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-SETUP-PO-INFO.



MOVE SPACES TO COM-PO-PUR-OPTIONS-AREA.
IF (CDN-PURCHASE-ORDER-POOL-LIMIT)             AND
(CDN-OVERRIDE-LIMITED-NETWORK = 'Y')        AND
(SCMSTR-KEY               NOT = 'TN333')    AND
WS-UIWA-PO-NR                 > SPACES
MOVE COM-PUR-OPTIONS-AREA  TO COM-PO-PUR-OPTIONS-AREA
MOVE COM-PROD-OPT-AREA TO COM-PO-PROD-OPT-AREA
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '0' BY '1'
INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '3' BY '1'
INSPECT COM-PROD-OPT-AREA REPLACING ALL 'E' BY 'I'.


SPR-SETUP-FUEL-CASH-INFO.


IF SCM-KEY-NUM = '000'
MOVE '0' TO COM-PUR-OPTIONS-FUEL,
COM-PUR-OPTIONS-OIL.


IF CDN-RESTRICT-CASH-LOCATIONS = 'Y'
IF SCM-KEY-NUM = '000'   OR
SCMSTR-KEY  > 'XT999' OR
SCMSTR-KEY  = 'TN333' OR
SCMSTR-KEY  = 'CN225' OR
SCMSTR-KEY  = 'US225' OR
SCMSTR-KEY  > 'XT999'
MOVE '0' TO COM-PUR-OPTIONS-CASH.


SPR-SETUP-PROD-INFO.

IF COM-PUR-OPTIONS-PROD NOT = '1'
IF WS-UIWA-PR1-CODE > SPACES OR
WS-UIWA-PR2-CODE > SPACES OR
WS-UIWA-PR3-CODE > SPACES
MOVE PROD-CODES-NOT-ALLOWED TO 3270-OUTPUT-DATA
MOVE PROD-CODES-NOT-ALLOWED-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
END-IF.

MOVE WS-UIWA-PR1-CODE  TO PRD1CDI
MOVE WS-UIWA-PR2-CODE  TO PRD2CDI
MOVE WS-UIWA-PR3-CODE  TO PRD3CDI
MOVE WS-UIWA-PR1-COST  TO PRD1AMTO
MOVE WS-UIWA-PR2-COST  TO PRD2AMTO
MOVE WS-UIWA-PR3-COST  TO PRD3AMTO.



SPR-CHECK-PROD-9-TYPES.

IF WS-UIWA-PR1-CODE NOT > SPACES OR
WS-UIWA-PR1-TYPE NOT > SPACES
MOVE SPACES TO WS-UIWA-PR1-TYPE
ELSE
MOVE WS-UIWA-PR1-TYPE TO OTHFUEL-UNIQUE-ID
PERFORM SPR-READ-OTHFUEL
IF EIBRESP = DFHRESP (NORMAL)
MOVE SPACES TO WS-UIWA-PROD9-DESC-1
ELSE
IF WS-UIWA-PROD9-DESC-1 > SPACES
CONTINUE
ELSE
MOVE INVALID-PROD-9-TYPE-MSG  TO 3270-OUTPUT-DATA
MOVE INVALID-PROD-9-TYPE      TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.

IF WS-UIWA-PR2-CODE NOT > SPACES OR
WS-UIWA-PR2-TYPE NOT > SPACES
MOVE SPACES TO WS-UIWA-PR2-TYPE
ELSE
MOVE WS-UIWA-PR2-TYPE TO OTHFUEL-UNIQUE-ID
PERFORM SPR-READ-OTHFUEL
IF EIBRESP = DFHRESP (NORMAL)
MOVE SPACES TO WS-UIWA-PROD9-DESC-2
ELSE
IF WS-UIWA-PROD9-DESC-2 > SPACES
CONTINUE
ELSE
MOVE INVALID-PROD-9-TYPE-MSG  TO 3270-OUTPUT-DATA
MOVE INVALID-PROD-9-TYPE      TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.

IF WS-UIWA-PR3-CODE NOT > SPACES OR
WS-UIWA-PR3-TYPE NOT > SPACES
MOVE SPACES TO WS-UIWA-PR3-TYPE
ELSE
MOVE WS-UIWA-PR3-TYPE TO OTHFUEL-UNIQUE-ID
PERFORM SPR-READ-OTHFUEL
IF EIBRESP = DFHRESP (NORMAL)
MOVE SPACES TO WS-UIWA-PROD9-DESC-3
ELSE
IF WS-UIWA-PROD9-DESC-3 > SPACES
CONTINUE
ELSE
MOVE INVALID-PROD-9-TYPE-MSG  TO 3270-OUTPUT-DATA
MOVE INVALID-PROD-9-TYPE      TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-SUB-PROD-CODES.

PERFORM SPR-CHECK-NR2-SUB-PROD.
PERFORM SPR-CHECK-NR1-SUB-PROD.
PERFORM SPR-CHECK-RFR-SUB-PROD.
PERFORM SPR-CHECK-OTHER-FUEL-TYPE.


SPR-CHECK-NR2-SUB-PROD.

IF WS-UIWA-NR2-QTY NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR2-QTY
END-IF.
IF WS-UIWA-NR2-COST NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR2-COST
END-IF.
IF EIBTRNID = 'FMMP'
MOVE 'B'                   TO WS-SUB-PROD-CODE-TYPE
ELSE
MOVE 'P'                   TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN NOT > SPACES AND
(WS-UIWA-NR2-QTY > 0 OR
WS-UIWA-NR2-COST > 0)
PERFORM 87100-GET-NR2-DEF-SUB-PROD
MOVE 'P'               TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN NOT > SPACES OR
WS-UIWA-NR2-QTY  NOT > 0                OR
WS-UIWA-NR2-COST NOT > 0
MOVE SPACES TO WS-HOLD-NR2-SUB-PROD-IN,
WS-UIWA-NR2-SUB-PROD
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN > SPACES
MOVE WS-HOLD-NR2-SUB-PROD-IN  TO WS-SUB-PROD-IN
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'D2'
MOVE INVALID-NR2-SUB-PROD-MSG  TO 3270-OUTPUT-DATA
MOVE INVALID-NR2-SUB-PROD      TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR2-SUB-PROD
END-IF.


SPR-CHECK-NR1-SUB-PROD.

IF WS-UIWA-NR1-QTY NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR1-QTY
END-IF.
IF WS-UIWA-NR1-COST NOT NUMERIC
MOVE ZEROS TO WS-UIWA-NR1-COST
END-IF.
IF EIBTRNID = 'FMMP'
MOVE 'B'                   TO WS-SUB-PROD-CODE-TYPE
ELSE
MOVE 'P'                   TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-NR1-SUB-PROD-IN NOT > SPACES AND
(WS-UIWA-NR1-QTY > 0 OR
WS-UIWA-NR1-COST > 0)
PERFORM 87200-GET-NR1-DEF-SUB-PROD
MOVE 'P'               TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-NR1-SUB-PROD-IN NOT > SPACES OR
WS-UIWA-NR1-QTY  NOT > 0                OR
WS-UIWA-NR1-COST NOT > 0
MOVE SPACES TO WS-HOLD-NR1-SUB-PROD-IN,
WS-UIWA-NR1-SUB-PROD
END-IF.
IF WS-HOLD-NR1-SUB-PROD-IN > SPACES
MOVE WS-HOLD-NR1-SUB-PROD-IN  TO WS-SUB-PROD-IN
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'D1'
MOVE INVALID-NR1-SUB-PROD-MSG  TO 3270-OUTPUT-DATA
MOVE INVALID-NR1-SUB-PROD      TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR1-SUB-PROD
END-IF.


SPR-CHECK-RFR-SUB-PROD.

IF WS-UIWA-REF-QTY NOT NUMERIC
MOVE ZEROS TO WS-UIWA-REF-QTY
END-IF.
IF WS-UIWA-REF-COST NOT NUMERIC
MOVE ZEROS TO WS-UIWA-REF-COST
END-IF.
IF EIBTRNID = 'FMMP'
MOVE 'B'                   TO WS-SUB-PROD-CODE-TYPE
ELSE
MOVE 'P'                   TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN NOT > SPACES AND
(WS-UIWA-REF-QTY > 0 OR
WS-UIWA-REF-COST > 0)
PERFORM 87300-GET-REF-DEF-SUB-PROD
MOVE 'P'               TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN NOT > SPACES OR
WS-UIWA-REF-QTY  NOT > 0                OR
WS-UIWA-REF-COST NOT > 0
MOVE SPACES TO WS-HOLD-REF-SUB-PROD-IN,
WS-UIWA-REF-SUB-PROD
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN > SPACES
MOVE WS-HOLD-REF-SUB-PROD-IN  TO WS-SUB-PROD-IN
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'RF'
MOVE INVALID-REEFER-SUB-PROD-MSG TO 3270-OUTPUT-DATA
MOVE INVALID-REEFER-SUB-PROD     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-REF-SUB-PROD
END-IF.


SPR-CHECK-OTHER-FUEL-TYPE.

IF EIBTRNID = 'FMMP' OR
(INP-PC-OTHER-FUEL-TYPE > SPACES AND EIBTRNID = 'FMBP')
MOVE 'B'                   TO WS-SUB-PROD-CODE-TYPE
ELSE
MOVE 'P'                   TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN NOT > SPACES AND
(WS-UIWA-OTH-QTY > 0 OR
WS-UIWA-OTH-COST > 0)
PERFORM 87400-GET-OTH-DEF-SUB-PROD
MOVE 'P'               TO WS-SUB-PROD-CODE-TYPE
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN NOT > SPACES OR
WS-UIWA-OTH-QTY  NOT NUMERIC            OR
WS-UIWA-OTH-COST NOT NUMERIC            OR
WS-UIWA-OTH-QTY  NOT > 0                OR
WS-UIWA-OTH-COST NOT > 0
MOVE SPACES TO WS-HOLD-OTH-SUB-PROD-IN,
WS-UIWA-OTH-SUB-PROD
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN > SPACES
MOVE WS-HOLD-OTH-SUB-PROD-IN  TO WS-SUB-PROD-IN
PERFORM 87000-CHECK-SUB-PROD-XLATE
IF WS-SUB-PROD-FOUND = 'N' OR
WS-SUB-PROD-FUEL-TYPE NOT = 'OT'
MOVE INVALID-OTHER-FUEL-TYPE-MSG TO 3270-OUTPUT-DATA
MOVE INVALID-OTHER-FUEL-TYPE     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC
END-IF
MOVE WS-SUB-PROD-OUT          TO WS-UIWA-OTH-SUB-PROD
END-IF.


SPR-READ-OTHFUEL.

EXEC CICS READ
DATASET ('OTHFUEL')
INTO    (OTHFUEL-RECORD)
RIDFLD  (OTHFUEL-KEY)
NOHANDLE
END-EXEC.


SPR-SETUP-TS-DISC-FLAG.

IF COM-TS-DISC-FLAG IS NOT GREATER THAN SPACES
MOVE 'N' TO COM-TS-DISC-FLAG
IF SCM-SC-IS-PREMIER-2
IF SCM-P2-DISC-IS-PERCENT
MOVE '%' TO COM-TS-DISC-FLAG
ELSE
IF SCM-P2-DISC-IS-CENTS
MOVE '' TO COM-TS-DISC-FLAG.


SPR-SETUP-MISC-DISC-INFO.

MOVE ZERO                   TO  INP-F-SRVC-DISC
INP-S-SRVC-DISC.
MOVE INP-DISC               TO COM-FP-PRCNTAGES.


SPR-SETUP-FUEL-PRICES.


EVALUATE TRUE
WHEN CDN-CREDIT-PRICED-FLAG = 'U' OR
CDN-CREDIT-PRICED-FLAG = 'T' OR
CDN-CREDIT-PRICED-FLAG = 'Y' OR
CDN-CREDIT-PRICED-FLAG = 'F'
PERFORM SPR-SETUP-CREDIT-PRICES
WHEN CDN-CREDIT-PRICED-FLAG = 'C' AND
COM-CREDIT-PRICED-FLAG = 'Y'
PERFORM SPR-SETUP-CREDIT-PRICES
WHEN OTHER
PERFORM SPR-SETUP-CASH-PRICES
END-EVALUATE.


SPR-SETUP-CREDIT-PRICES.

SET COM-FUEL-PRICE-CREDIT       TO TRUE.
MOVE SCM-CREDIT-FUEL-PRICE-FLAG TO  COM-FP-PRICE-FLAG
MOVE SCM-CREDIT-FUEL-PRICES     TO  COM-FP-FUEL-PRICES
IF SCM-USE-CREDIT-MARKUP-YES
MOVE SCM-CASH-FUEL-PRICES    TO  COM-FP-FUEL-PRICES
COMPUTE COM-FP-FULL-PRICE = COM-FP-FULL-PRICE +
SCM-CREDIT-MARKUP
COMPUTE COM-FP-MINI-PRICE = COM-FP-MINI-PRICE +
SCM-CREDIT-MARKUP
COMPUTE COM-FP-SELF-PRICE = COM-FP-SELF-PRICE +
SCM-CREDIT-MARKUP
END-IF.
IF SCM-CREDIT-FUEL-PRICES-SET
MOVE SCM-LAST-UPDATE-DATE    TO  COM-FP-PRICE-DATE
MOVE +0                      TO  COM-FP-PRICE-TIME
END-IF.


SPR-SETUP-CASH-PRICES.

SET COM-FUEL-PRICE-CASH         TO TRUE.
MOVE SCM-CASH-FUEL-PRICE-FLAG   TO  COM-FP-PRICE-FLAG
MOVE SCM-CASH-FUEL-PRICES       TO  COM-FP-FUEL-PRICES
IF SCM-CASH-FUEL-PRICES-SET
MOVE SCM-LAST-UPDATE-DATE    TO  COM-FP-PRICE-DATE
MOVE +0                      TO  COM-FP-PRICE-TIME
END-IF.


SPR-SETUP-AUTO-PRINT-FLAG.

EVALUATE TRUE
WHEN WS-UIWA-CHECK-NR1 NOT NUMERIC
MOVE 'Y' TO FPAUTOI
WHEN WS-UIWA-CHECK-NR1 = ZEROES
MOVE 'Y' TO FPAUTOI
WHEN OTHER
MOVE 'N' TO FPAUTOI
END-EVALUATE.


SPR-SETUP-COMM-PRINT-FLAG.

MOVE ' '       TO COM-FP-PRNT-FLAG.
IF SCM-ALL-OUTPUT-IS-ACTIVE OR SCM-OUTPUT-PARTIALLY-ACTIVE
MOVE 'P'   TO COM-FP-PRNT-FLAG.
IF COM-FP-PRNT-FLAG IS EQUAL TO 'T'
MOVE SPACES TO COM-FP-PRNT-FLAG.
MOVE SPACE     TO COM-FP-SCRAMBLER-FLAG.
MOVE SPACE     TO COM-TS-GOLD-FLAG.

IF SCM-LOCATION-IS-SETTLEMENT OR SCM-SC-HAS-ALLIANCES
MOVE 'G' TO COM-FP-PRNT-FLAG.
IF SCM-SC-HAS-ALLIANCES
MOVE 'A' TO COM-FP-PRNT-FLAG.

IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE 'T' TO COM-FP-PRNT-FLAG
MOVE SCM-OVER-RIDE-RATE   TO  WS-BINARY-FIELD
MOVE WS-BINARY-LOW        TO  COM-FP-SCRAMBLER-FLAG
MOVE WS-FP-ACCT-CODE      TO WS-ACCT-CODE
IF WS-ACCT-CODE-PRNT-FLAG-U
MOVE 'U' TO COM-FP-PRNT-FLAG.


SPR-SETUP-TRIP-INFO.


IF CSR-TRIP-NUMBER-REQ = 'C'
MOVE 'E' TO WS-FL-TRIP-FLAG
IF PRM-DRIVER-TRIP-NR NOT > SPACES
MOVE 'T' TO WS-FL-TRIP-FLAG.
IF TRIP-NR-ENTERED
MOVE UNITMST-TRIP-NR TO WS-UIWA-TRIP-NR.
IF CSR-TRIP-NUMBER-REQ = 'C'
IF PRM-DRIVER-TRIP-NR > SPACES
MOVE PRM-DRIVER-TRIP-NR TO WS-UIWA-TRIP-NR.


SPR-CHECK-TRIP-INFO.

IF TRIP-NR-REQ-THIS-UNIT AND
WS-UIWA-TRIP-NR NOT > SPACES
MOVE TRIP-NR-REQUIRED   TO 3270-OUTPUT-DATA
MOVE TRIP-NR-REQUIRED-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-SETUP-INPUT-FIELDS.

MOVE WS-UIWA-TRIP-NR           TO ADVTRIPI


MOVE WS-UIWA-TRAILER-NR        TO TRLRNRI.
MOVE WS-UIWA-TRAILER-HUB       TO TRLRHBO
MOVE WS-UIWA-TRAILER-HRS       TO TRLRHRO
IF WS-UIWA-TRAILER-HRS NOT > ZEROS
MOVE SPACES                TO TRLRHRI.

MOVE WS-UIWA-EMPLOYEE-NR      TO FP1DNRI.
IF WS-UIWA-CHECK-NR1 NOT NUMERIC
MOVE SPACES                TO WS-UIWA-CHECK-NRX.
MOVE ZEROES                   TO INP-AUTH-NR.
MOVE '+'                      TO WS-UIWA-USI-FLAG.
MOVE CUST-RGE-SMLNM           TO INP-CO-SMLNAME.
MOVE WS-UIWA-NR2-QTY          TO INP-NR-GALLONS.
MOVE WS-UIWA-NR2-COST         TO INP-TOTAL-COST.
MOVE ZERO                     TO INP-PRICE-GALLON.


SPR-GET-SERVICE-TYPE.

MOVE 'N' TO WS-EXIT-FLAG.
IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE
MOVE 'Y' TO WS-EXIT-FLAG
IF INP-TOTAL-COST > 0
IF INP-NR-GALLONS > 0 THEN
COMPUTE INP-PRICE-GALLON =
INP-TOTAL-COST / INP-NR-GALLONS
MOVE INP-PRICE-GALLON TO WS-HOLD-PPG.

IF COM-NET-PRICING-FLAG = 'P'
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.

IF WS-EXIT-FLAG = 'N'
PERFORM SPR-CHECK-AUTODIAL-DOWN
PERFORM SPR-CHECK-GALLONS-AND-COST
PERFORM SPR-GET-SCSTATE-INFO
PERFORM SPR-CHECK-GALLONS-FOR-ZERO
IF WS-EXIT-FLAG = 'N'
PERFORM SPR-SETUP-WORK-FIELDS
PERFORM SPR-SEE-IF-PRICE-IS-FULL
PERFORM SPR-SEE-IF-PRICE-IS-MINI
PERFORM SPR-SEE-IF-PRICE-IS-SELF
PERFORM SPR-SEE-IF-PRICE-IS-NEGOTIATED
PERFORM SPR-SETUP-SVC-TYPE-FOR-STANDIN
PERFORM SPR-CHECK-FOR-SVC-TYPE-ERROR.


SPR-CHECK-AUTODIAL-DOWN.

IF (WS-UIWA-CHECK-NR1 NOT NUMERIC)   AND
(NOT THIS-IS-A-SETTLEMENT-ITEM)
IF (SCM-HAS-NO-AUTOMATED-OUTPUT OR SCM-ALL-OUTPUT-IS-DOWN)
OR
(AUTO-DIAL-IS-DOWN)
MOVE AUTO-DIAL-DOWN TO 3270-OUTPUT-DATA
MOVE AUTO-DIAL-DOWN-N TO POS-ERROR-NUMBER
MOVE 'N'              TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-CHECK-GALLONS-AND-COST.

IF WS-UIWA-NR2-QTY  = ZERO AND
WS-UIWA-NR2-COST > ZERO
EVALUATE TRUE
WHEN COM-FUEL-PRICE-CREDIT
MOVE '(CREDIT)'              TO NEW-FUEL-PRICE-TYPE
MOVE FUEL-PRICE-ERR-CREDIT   TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-CREDIT-N TO POS-ERROR-NUMBER
MOVE NEW-FUEL-PRICE-ERR1     TO NEW-OUT-MSG1
MOVE NEW-FUEL-PRICE-ERR2     TO NEW-OUT-MSG2
MOVE 'Y'                     TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-FOR-PC
WHEN OTHER
MOVE '(CASH)  '              TO NEW-FUEL-PRICE-TYPE
MOVE FUEL-PRICE-ERR      TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-N    TO POS-ERROR-NUMBER
MOVE NEW-FUEL-PRICE-ERR1 TO NEW-OUT-MSG1
MOVE NEW-FUEL-PRICE-ERR2 TO NEW-OUT-MSG2
MOVE 'Y'                 TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-FOR-PC.


SPR-GET-SCSTATE-INFO.

MOVE 'SPR-GET-SCSTATE-INFO'      TO CXUTS0ML-PARAGRAPH.


MOVE SPACES TO SERVICE-CENTER-PRICE-MASTER
MOVE 'XX'       TO SCPM-KEY.
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-PRICE-MASTER)
RIDFLD  (SCPM-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCPM-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE .05 TO SCPM-LEVEL-1-VARIANCE
MOVE .05 TO SCPM-LEVEL-1-VARIANCE-CREDIT
END-IF.
PERFORM 60300-CHECK-SCSTATE-NUMERICS


IF COM-TS-STATE NOT > SPACES
MOVE SCM-KEY-ST TO COM-TS-STATE.
MOVE SPACES TO SERVICE-CENTER-STATE-RECORD
MOVE COM-TS-STATE TO SCSR-STATE.
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-STATE-RECORD)
RIDFLD  (SCSR-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCSR-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
MOVE 'Y' TO  WS-READ-SCSTATE-SW.
IF EIBRESP = DFHRESP(NOTFND)
MOVE '1'  TO SCSR-TAX-APPLICATION
MOVE .40  TO SCSR-MIN-FUEL-PRICE
MOVE 5.00 TO SCSR-MAX-FUEL-PRICE
END-IF.
PERFORM 60300-CHECK-SCSTATE-NUMERICS.


SPR-CHECK-GALLONS-FOR-ZERO.

MOVE SPACE TO FPFSI.
IF WS-UIWA-NR2-QTY = ZERO
MOVE 'S' TO FPFSI
MOVE 'Y' TO WS-EXIT-FLAG.


SPR-SETUP-WORK-FIELDS.

PERFORM 20731-DETERMINE-VARIANCE.
COMPUTE INP-PRICE-GALLON ROUNDED = WS-UIWA-NR2-COST /
WS-UIWA-NR2-QTY.
MOVE INP-PRICE-GALLON TO WS-HOLD-PPG.


MOVE ZEROES TO WS-PPG-TAX-VAR
IF SCSR-TAX-EITHER
IF COM-SCM-TAX-IN-POSTED
COMPUTE WS-PPG-TAX-VAR = SCSR-TAX-RATE * -1
ELSE
IF COM-SCM-TAX-NOT-IN-POSTED
COMPUTE WS-PPG-TAX-VAR = SCSR-TAX-RATE.


SPR-SEE-IF-PRICE-IS-FULL.


COMPUTE WRK-VARIANCE  = COM-FP-FULL-PRICE - INP-PRICE-GALLON.
COMPUTE WRK-VARIANCE2 = COM-FP-FULL-PRICE - INP-PRICE-GALLON
+ WS-PPG-TAX-VAR.
IF WRK-VARIANCE < ZEROES
COMPUTE WRK-VARIANCE = WRK-VARIANCE * -1.
IF WRK-VARIANCE2 < ZEROES
COMPUTE WRK-VARIANCE2 = WRK-VARIANCE2 * -1.
IF WRK-VARIANCE  > WS-SCPM-LEVEL-1-VARIANCE AND
WRK-VARIANCE2 > WS-SCPM-LEVEL-1-VARIANCE
NEXT SENTENCE
ELSE
MOVE 'F' TO FPFSI
WS-UIWA-SERVICE-TYPE.


SPR-SEE-IF-PRICE-IS-MINI.


COMPUTE WRK-VARIANCE  = COM-FP-MINI-PRICE - INP-PRICE-GALLON.
COMPUTE WRK-VARIANCE2 = COM-FP-MINI-PRICE - INP-PRICE-GALLON
+ WS-PPG-TAX-VAR.
IF WRK-VARIANCE < ZEROES
COMPUTE WRK-VARIANCE = WRK-VARIANCE * -1.
IF WRK-VARIANCE2 < ZEROES
COMPUTE WRK-VARIANCE2 = WRK-VARIANCE2 * -1.
IF WRK-VARIANCE  > WS-SCPM-LEVEL-1-VARIANCE AND
WRK-VARIANCE2 > WS-SCPM-LEVEL-1-VARIANCE
NEXT SENTENCE
ELSE
MOVE 'M' TO FPFSI
WS-UIWA-SERVICE-TYPE.


SPR-SEE-IF-PRICE-IS-SELF.


COMPUTE WRK-VARIANCE  = COM-FP-SELF-PRICE - INP-PRICE-GALLON.
COMPUTE WRK-VARIANCE2 = COM-FP-SELF-PRICE - INP-PRICE-GALLON
+ WS-PPG-TAX-VAR.
IF WRK-VARIANCE < ZEROES
COMPUTE WRK-VARIANCE = WRK-VARIANCE * -1.
IF WRK-VARIANCE2 < ZEROES
COMPUTE WRK-VARIANCE2 = WRK-VARIANCE2 * -1.
IF WRK-VARIANCE  > WS-SCPM-LEVEL-1-VARIANCE AND
WRK-VARIANCE2 > WS-SCPM-LEVEL-1-VARIANCE
NEXT SENTENCE
ELSE
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE.

IF SCM-IS-IN-CANADA       AND
SCM-AUTO-CALC-TAX-YES  AND
SCPM-AUTO-CALC-TAX-YES AND
FPFSI NOT > SPACE
MOVE 'S' TO FPFSI.


IF EIBTRNID = ('FMBP' OR 'FMMP')
IF WS-UIWA-SYSTEM-ID NUMERIC AND
WS-UIWA-SYSTEM-ID = 1
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE
ELSE
MOVE 'W' TO FPFSI
WS-UIWA-SERVICE-TYPE.


SPR-SEE-IF-PRICE-IS-NEGOTIATED.


IF (COM-PNET-NEGOTIATED-PRICING = 'Y') AND
(FPFSI = ' ')
MOVE 'S' TO FPFSI.


SPR-SETUP-SVC-TYPE-FOR-STANDIN.


IF EIBTRMID IS = '9999' AND
FPFSI    IS = ' '
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE.


SPR-CHECK-FOR-SVC-TYPE-ERROR.


IF FPFSI = SPACE
EVALUATE TRUE
WHEN COM-FUEL-PRICE-CREDIT
MOVE '(CREDIT)'              TO NEW-FUEL-PRICE-TYPE
MOVE FUEL-PRICE-ERR-CREDIT   TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-CREDIT-N TO POS-ERROR-NUMBER
MOVE NEW-FUEL-PRICE-ERR1     TO NEW-OUT-MSG1
MOVE NEW-FUEL-PRICE-ERR2     TO NEW-OUT-MSG2
MOVE 'Y'                     TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-FOR-PC
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE
WHEN OTHER
MOVE '(CASH)'                TO NEW-FUEL-PRICE-TYPE
MOVE FUEL-PRICE-ERR          TO 3270-OUTPUT-DATA
MOVE FUEL-PRICE-ERR-N        TO POS-ERROR-NUMBER
MOVE NEW-FUEL-PRICE-ERR1     TO NEW-OUT-MSG1
MOVE NEW-FUEL-PRICE-ERR2     TO NEW-OUT-MSG2
MOVE 'Y'                     TO VCWS-ERROR-IND
PERFORM CHECK-FOR-EXIT-FOR-PC
MOVE 'S' TO FPFSI
WS-UIWA-SERVICE-TYPE.


SPR-SETUP-FLEET-FIELDS.

MOVE WS-UIWA-FLEET-PROD TO WS-FLEET-PROD.


SPR-SETUP-REST-OF-INPUT-FIELDS.

MOVE WS-HOLD-PPG      TO INP-PRICE-GALLON.
MOVE INP-PRICE-GALLON TO WS-UIWA-NR2-PPU.
MOVE INP-TOTAL-COST   TO WS-UIWA-NR2-COST.
MOVE INP-NR-GALLONS   TO WS-UIWA-NR2-QTY.
MOVE WS-UIWA-OIL-QTY  TO OILQTSO.
MOVE WS-UIWA-CASH-AMT TO ADVAMTO.
MOVE WS-UIWA-UNIT-NR-10 TO PC-NAME-UNIT.
IF CO-INPUTS-DRIVER-NAME
MOVE UNITMST-DRVR-NAME TO PC-NAME-CONSTRUCT.
IF THERE-IS-A-MESSAGE-PENDING
MOVE 'Y' TO MSGSTSI
MOVE '*' TO PC-NAME-MESSAGE.
MOVE PC-NAME-CONSTRUCT TO WS-UIWA-DRV-NAME, FPNAMEI.
IF CO-INPUTS-DRIVER-NAME AND
PC-NAME-MESSAGE NOT = '*'
MOVE UNITMST-DRVR-NAME TO WS-UIWA-DRV-NAME, FPNAMEI.
IF PRM-LAST-NAME  > SPACES AND
PRM-FIRST-NAME > SPACES
MOVE 20 TO INDX
MOVE 15 TO INDX-1
MOVE 24 TO INDX-2
MOVE 'YYN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING INDX, PRM-LAST-NAME,
INDX-1, PRM-FIRST-NAME,
INDX-2, UNITMST-DRVR-NAME,
WS-CXUTSJON-OPTIONS
MOVE UNITMST-DRVR-NAME TO WS-UIWA-DRV-NAME, FPNAMEI.


SPR-SETUP-CHECK-NUMBER.

MOVE SPACES TO FPCHKI.
IF WS-UIWA-CHECK-NR1 IS NUMERIC
IF WS-UIWA-CHECK-NR1 > ZEROES
MOVE WS-UIWA-CHECK-NR1 TO 1ST-10-BYTES-N, 2ND-10-BYTES-N
MOVE CHECK-NR-AREA     TO FPCHKI,
WS-UIWA-CHECK-NRX.


SPR-CHECK-INVOICE-TOTAL.


IF WS-UIWA-DEVICE-TYPE (1:3) = 'TRT' OR
WS-UIWA-DEVICE-TYPE (1:3) = 'FJF'
IF WS-UIWA-INVOICE-AMT NOT = (WS-UIWA-NR2-COST     +
WS-UIWA-OTH-COST     +
WS-UIWA-REF-COST     +
WS-UIWA-NR1-COST     +
WS-UIWA-OIL-COST     +
WS-UIWA-PR1-COST-SC  +
WS-UIWA-PR2-COST-SC  +
WS-UIWA-PR3-COST-SC +
WS-UIWA-TAX-AMT     +
WS-UIWA-CASH-AMT)
MOVE INVOICE-TOTAL-ERROR       TO 3270-OUTPUT-DATA
MOVE INVOICE-TOTAL-ERROR-N     TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-FOR-PC.




TIME-LIMIT-CHECK.

MOVE 'N' TO WS-EXIT-FLAG.
MOVE ' ' TO ERROR-FLAG.
IF PGRM-FUNCTION-PRODUCT-ONLY
AND WS-UIWA-PR1-CODE = '16'
MOVE 1 TO GROCERY-PURCHASE
END-IF

MOVE UNITMST-LAST-XTN-NR   TO HOLD-FP-LAST-TRANSACTION-NR
MOVE UNITMST-DATE-LAST-XTN TO HOLD-FP-DATE-LAST-TRANS
MOVE UNITMST-TIME-LAST-XTN TO HOLD-FP-TIME-LAST-TRANS
IF GROCERY-PURCHASE = 1
MOVE PRM-LAST-PURCHASE-DATE  TO UNITMST-DATE-LAST-XTN
COMPUTE UNITMST-TIME-LAST-XTN = PRM-LAST-PURCHASE-TIME

ELSE
MOVE PRM-LAST-PURC-DATE-FUEL TO UNITMST-DATE-LAST-XTN
COMPUTE UNITMST-TIME-LAST-XTN = PRM-LAST-PURC-TIME-FUEL

END-IF
MOVE PRM-LAST-TRANS-NR          TO UNITMST-LAST-XTN-NR.




PERFORM TLC-SETUP-BYPASS-FLAG.
PERFORM TLC-0010

IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0015
END-IF
IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0020
END-IF
IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0030
END-IF


PERFORM TLC-0040



IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0045
END-IF

IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0050
END-IF



IF WS-EXIT-FLAG = 'N'
PERFORM TLC-0060
IF ERROR-FLAG = SPACE
PERFORM TLC-0070.



EVALUATE ERROR-FLAG
WHEN 'D'
PERFORM TLC-SEND-AUTH
WHEN '*'
PERFORM TLC-0110
END-EVALUATE.


MOVE HOLD-FP-LAST-TRANSACTION-NR TO UNITMST-LAST-XTN-NR
MOVE HOLD-FP-DATE-LAST-TRANS     TO UNITMST-DATE-LAST-XTN
MOVE HOLD-FP-TIME-LAST-TRANS     TO UNITMST-TIME-LAST-XTN.

MOVE 'N' TO WS-EXIT-FLAG.


TLC-SETUP-BYPASS-FLAG.



IF CSR-BYPASS-2HR-CHK > SPACES
MOVE CSR-BYPASS-2HR-CHK TO CDN-BYPASS-2HR-CHK.


TLC-0010.

IF UNITMST-LAST-XTN-NR    NOT > 0
MOVE 'Y' TO WS-EXIT-FLAG.
IF PRM-LAST-TRANS-WAS-VR AND
NOT CDN-DO-NOT-BYPASS-FOR-LAST-VRU
MOVE 'Y' TO WS-EXIT-FLAG.
IF COM-PNET-BRIDGE-FLAG = 'X'
MOVE 'Y' TO WS-EXIT-FLAG.
IF CDN-CUST-ACCT-CODE = 'BR000'
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-A-BATCHED-REQUEST
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-A-FLEET-XTN
MOVE 'Y' TO WS-EXIT-FLAG.


IF EIBTRNID = ('FMBP' OR 'FMMP')
IF WS-UIWA-SYSTEM-ID NOT NUMERIC
MOVE ZEROES TO WS-UIWA-SYSTEM-ID
END-IF
IF WS-UIWA-SYSTEM-ID NOT = 1
MOVE 'Y' TO WS-EXIT-FLAG.


TLC-0015.

IF WS-FP-ACCT-CODE = 'CD400'
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-A-VRU-XTN
MOVE 'Y' TO WS-EXIT-FLAG.
IF EIBAID IS EQUAL TO DFHPF3
MOVE 'Y' TO WS-EXIT-FLAG.
IF THIS-BE-A-NATS-AUTH
MOVE 'Y' TO WS-EXIT-FLAG.

IF TRACTOR-PURCHASE = 1
OR TRAILER-PURCHASE = 1
OR GROCERY-PURCHASE = 1
CONTINUE
ELSE
MOVE 'Y' TO WS-EXIT-FLAG
END-IF.


TLC-0020.

IF THIS-BE-AN-ATM-XTN
MOVE 'Y' TO WS-EXIT-FLAG.
IF (COM-FP-SC-CODE          NOT = PRM-LAST-LOCATION) AND
(SCM-MASTER-SVC-CTR-CODE NOT = PRM-LAST-LOCATION)
MOVE 'Y' TO WS-EXIT-FLAG.


TLC-0030.

IF CSR-VERIFY-UNIT = 'P' OR 'G'

IF PRM-UNIT-NUMBER-10 = COM-HOLD-UNIT-NUMBER-10 OR
CDN-DO-NOT-BYPASS-FOR-UNIT
NEXT SENTENCE
ELSE
MOVE 'Y' TO WS-EXIT-FLAG.


TLC-0040.

IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
CSR-VERIFY-UNIT = 'N'
IF THIS-BE-A-PC-REQUEST
MOVE 8 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-INVOICE-NR,
FILL-CHAR
INSPECT WS-UIWA-INVOICE-NR REPLACING LEADING ' ' BY '0'
IF WS-UIWA-INVOICE-NR NOT = PRM-LAST-FP-INV-NR
MOVE 'Y' TO WS-EXIT-FLAG
ELSE
NEXT SENTENCE
ELSE
MOVE 'Y' TO WS-EXIT-FLAG.

TLC-0045.

IF WS-UIWA-SC-CODE = PIR-LAST-PURC-LOC-FUEL
PERFORM TLC-0045-GET-PROD
IF WS-FUEL-PROD-PURCHASED = PIR-LAST-PURC-PRD-FUEL
CONTINUE
ELSE
MOVE 'Y' TO WS-EXIT-FLAG
END-IF
END-IF.

TLC-0045-GET-PROD.


EVALUATE TRUE
WHEN WS-UIWA-NR2-SUB-PROD > SPACES
MOVE WS-UIWA-NR2-SUB-PROD TO WS-FUEL-PROD-PURCHASED
WHEN WS-UIWA-NR1-SUB-PROD > SPACES
MOVE WS-UIWA-NR1-SUB-PROD TO WS-FUEL-PROD-PURCHASED
WHEN WS-UIWA-REF-SUB-PROD > SPACES
MOVE WS-UIWA-REF-SUB-PROD TO WS-FUEL-PROD-PURCHASED
WHEN WS-UIWA-OTH-SUB-PROD > SPACES
MOVE WS-UIWA-OTH-SUB-PROD TO WS-FUEL-PROD-PURCHASED
END-EVALUATE.

TLC-0050.

MOVE +223 TO CALENDAR-OPTIONS
MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-DAYS TO WS-CALC-DAYS.

MOVE EIBTIME TO SYS-TIME.
COMPUTE CURRENT-TIME-IN-SECONDS =
(SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS.
MOVE UNITMST-TIME-LAST-XTN TO SYS-TIME.
COMPUTE CURRENT-TIME-IN-SECONDS =
(CURRENT-TIME-IN-SECONDS +
((WS-CALC-DAYS)  * 86400)) -
((SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS).

IF CURRENT-TIME-IN-SECONDS > 3600
MOVE 'Y' TO WS-EXIT-FLAG.
IF (WS-FP-ACCT-CODE = 'CR950' OR
WS-FP-ACCT-CODE = 'SH985' OR
WS-FP-ACCT-CODE = 'SU960' OR
WS-FP-ACCT-CODE = 'HT002')   AND
(CURRENT-TIME-IN-SECONDS IS GREATER THAN 1800)
MOVE 'Y' TO WS-EXIT-FLAG.


TLC-0060.


IF NOT THIS-BE-A-PC-REQUEST
MOVE '*' TO ERROR-FLAG.
IF PRM-LAST-FP-INV-NR NOT > SPACES
MOVE '*' TO ERROR-FLAG.
IF PRM-LAST-FP-AMOUNT = ZEROES
MOVE '*' TO ERROR-FLAG.


TLC-0070.


COMPUTE WS-CURXMN = WS-UIWA-NR2-COST     +
WS-UIWA-REF-COST     +
WS-UIWA-OTH-COST     +
WS-UIWA-NR1-COST     +
WS-UIWA-OIL-COST     +
WS-UIWA-CASH-AMT     +
WS-UIWA-PR1-COST     +
WS-UIWA-PR2-COST     +
WS-UIWA-PR3-COST     +
WS-UIWA-TAX-AMT.



IF WS-CURXMN          = PRM-LAST-FP-AMOUNT AND
WS-UIWA-INVOICE-NR = PRM-LAST-FP-INV-NR
MOVE 'D' TO ERROR-FLAG
ELSE
MOVE '*' TO ERROR-FLAG.


TLC-SEND-AUTH.




IF PIR-LAST-MERCH-SURCHRG NUMERIC
AND PIR-LAST-MERCH-SURCHRG > ZEROS
MOVE ' SUR - '               TO OUT-GOLD-SURCH-HEAD
OUT-CAN-SURCH-HEAD
OUT-SURCH-HEAD
MOVE PIR-LAST-MERCH-SURCHRG  TO WS-MERCH-SURCHRG-TOTAL
OUT-SURCH
OUT-GOLD-SURCH
OUT-CAN-SURCH
ADD PIR-LAST-MERCH-SURCHRG      TO WS-CURXMN
END-IF.

IF COM-THIS-IS-A-TERM-FUEL-XTN OR
(THIS-BE-AN-UNATTENDED-AUTH AND
NOT THIS-BE-A-SMART-FUEL-AUTH)
MOVE +025               TO CALENDAR-OPTIONS
MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE MDY-DD            TO POS-OKT-CTL-DD
MOVE PRM-LAST-TRANS-NR TO POS-OKT-CTL
COMPUTE POS-OKT-GALLONS = PRM-LAST-FP-GALLONS
COMPUTE POS-OKT-AMOUNT  = WS-CURXMN
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE POS-OK-TERMINAL   TO POS-MESSAGE
ELSE
MOVE PRM-LAST-TRANS-NR  TO POS-OK-CTL

MOVE WS-CURXMN          TO POS-OK-AMT
ADD PRM-LAST-TRANS-NR, 2276 GIVING POS-OK-AUTH
MOVE ZEROES             TO POS-ERROR-NUMBER
MOVE POS-OK             TO POS-MESSAGE.

PERFORM EXIT-FUEL-PGM-FOR-PC.


TLC-0110.


IF THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH
MOVE 'Y' TO WS-EXIT-FLAG.


IF EIBTRNID = ('FMBP' OR 'FMMP')
MOVE SPACES TO ERROR-FLAG
MOVE 'Y'    TO WS-EXIT-FLAG.


IF CDN-CUST-ACCT-CODE = 'CC400'
MOVE 'Y' TO WS-EXIT-FLAG.


IF CDN-BYPASS-2HR-CHK = 'Y' OR
SCM-BYPASS-2HR-CHK = 'Y' OR
CDN-FLEET-LIMIT-FLAG = 'Y'
MOVE 'Y' TO WS-EXIT-FLAG.

IF WS-EXIT-FLAG = 'N'
PERFORM TLC-SEND-ERROR-MESSAGE.


TLC-SEND-ERROR-MESSAGE.



MOVE UNITMST-LAST-XTN-NR    TO DUPLICATE-TRANSACTION
NEW-DUPLICATE-TRANSACTION.
MOVE UNITMST-LAST-TS-CODE   TO NEW-DUPLICATE-TS.
IF COM-OPER-DELIMITER = '@'
MOVE NEW-DUPLICATE-MESSAGE1 TO NEW-OUT-MSG1
MOVE NEW-DUPLICATE-MESSAGE2 TO NEW-OUT-MSG2
MOVE NEW-OUT-MESSAGE        TO FP1MSG1O
ELSE
MOVE DUPLICATE-MESSAGE      TO FP1MSG1O
END-IF.
MOVE DUPLICATE-MESSAGE      TO OUT-COMENT.
MOVE DUPLICATE-MESSAGE-N    TO POS-ERROR-NUMBER.
MOVE 'Y'                    TO VCWS-ERROR-IND.
MOVE -1 TO FPFSL.
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.


ACCUM-CASH-TOTALS.






MOVE WS-CURRENT-DATE-WEEKDAY-MS TO CURRENT-DAY

MOVE +223               TO CALENDAR-OPTIONS
MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-DAYS      TO ELAPSED-DAYS.

PERFORM ACT-1000.


MOVE 0                  TO WS-RFL-CASH-ADV-INIT.
PERFORM ACT-2000.
IF WS-RFL-CASH-ADV-USED  < WS-RFL-CASH-ADV-INIT
MOVE '1'             TO WS-FL-CASH-ADV-STATUS
ELSE
MOVE '0'             TO WS-FL-CASH-ADV-STATUS.


ACT-1000.


MOVE +221 TO CALENDAR-OPTIONS
MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
COMPUTE WS-WEEKDAY = CALENDAR-WEEKDAY - 1.
IF WS-WEEKDAY = 0
MOVE 7 TO WS-WEEKDAY.


ACT-2000.


IF UNITMST-CASH-RENEW-DAY-A < '0'
MOVE '0' TO UNITMST-CASH-RENEW-DAY-A.
SUBTRACT UNITMST-CASH-RENEW-DAY FROM CURRENT-DAY
GIVING REL-CUR-DAY.

IF REL-CUR-DAY < 1
ADD 7 TO REL-CUR-DAY.
SUBTRACT UNITMST-CASH-RENEW-DAY FROM WS-WEEKDAY
GIVING REL-LAST-DAY.

IF REL-LAST-DAY < 1
ADD 7 TO REL-LAST-DAY.
IF REL-CUR-DAY < REL-LAST-DAY OR
ELAPSED-DAYS > 6
MOVE 0 TO WS-RFL-CASH-ADV-USED.

SET UNITMST-CASH-INDX TO CURRENT-DAY.
PERFORM ACT-2010
REL-CUR-DAY TIMES.


ACT-2010.


ADD UNITMST-CASH-TABLE (UNITMST-CASH-INDX) TO
WS-RFL-CASH-ADV-INIT.
IF UNITMST-CASH-INDX >   1
SET UNITMST-CASH-INDX DOWN BY 1
ELSE
SET UNITMST-CASH-INDX TO 7.


PREMIER-CARD-PURC-LIMIT.


MOVE 'P'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-PURC-INITIAL         TO L-INITIAL-AMOUNT
MOVE PRM-PURC-USED            TO L-USED-AMOUNT
MOVE PRM-PURC-RESET           TO L-RESET-FLAGS
MOVE PRM-PURC-LAST-DATE-USED  TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS.
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-PURC-USED.


PREMIER-CARD-CASH-LIMIT.


IF CSR-CARD-CASH-AVAILABLE
MOVE 'C'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-CASH-INITIAL         TO L-INITIAL-AMOUNT
MOVE PRM-CASH-USED            TO L-USED-AMOUNT
MOVE PRM-CASH-RESET           TO L-RESET-FLAGS
MOVE PRM-CASH-LAST-DATE-USED  TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS                 TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-CASH-USED
END-IF


MOVE SPACE                    TO WS-RFL-CASH-ADV-DAILY-FLAG.

EVALUATE TRUE
WHEN WS-FLEET-LIMIT-CSH-AVAIL = 'Y'
MOVE '1'                    TO WS-FL-CASH-ADV-STATUS
MOVE WS-FLEET-LIMIT-CSH-AMT TO WS-RFL-CASH-ADV-INIT
MOVE ZERO                   TO WS-RFL-CASH-ADV-USED
WHEN WS-FLEET-LIMIT-CSH-AVAIL = 'N'
MOVE '0'                    TO WS-FL-CASH-ADV-STATUS
MOVE ZERO                   TO WS-RFL-CASH-ADV-INIT
WS-RFL-CASH-ADV-USED
WHEN PRM-CASH-INITIAL > PRM-CASH-USED
MOVE '1'                    TO WS-FL-CASH-ADV-STATUS
MOVE PRM-CASH-INITIAL       TO WS-RFL-CASH-ADV-INIT
MOVE PRM-CASH-USED          TO WS-RFL-CASH-ADV-USED
WHEN OTHER
MOVE '0'                    TO WS-FL-CASH-ADV-STATUS
MOVE ZEROES                 TO WS-RFL-CASH-ADV-INIT
WS-RFL-CASH-ADV-USED
END-EVALUATE

MOVE 'N'                          TO WS-FL-CASH-ADV-FLAG.

PREMIER-CARD-OIL-LIMIT.


MOVE 'O'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-OIL-INITIAL-DOLLARS  TO L-INITIAL-AMOUNT
MOVE PRM-OIL-USED-DOLLARS     TO L-USED-AMOUNT
MOVE PRM-OIL-RESET            TO L-RESET-FLAGS
MOVE PRM-OIL-LAST-DATE-USED   TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS.
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-OIL-USED-DOLLARS.


MOVE 'O'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-OIL-INITIAL-QUARTS   TO L-INITIAL-AMOUNT
MOVE PRM-OIL-USED-QUARTS      TO L-USED-AMOUNT
MOVE PRM-OIL-RESET            TO L-RESET-FLAGS
MOVE PRM-OIL-LAST-DATE-USED   TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS.
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-OIL-USED-QUARTS.


CHECK-COMCHEK-MOB-FUEL-RESET.


IF PIR-CMCK-FUEL-LIMIT-USED NOT NUMERIC
MOVE ZEROS TO PIR-CMCK-FUEL-LIMIT-USED
END-IF
MOVE 'P'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE ZEROS                    TO L-INITIAL-AMOUNT
MOVE PIR-CMCK-FUEL-LIMIT-USED TO L-USED-AMOUNT
MOVE WS-RESET-DAILY           TO L-RESET-FLAGS
MOVE PRM-LAST-PURC-DATE-FUEL  TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS.
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PIR-CMCK-FUEL-LIMIT-USED.


ADJUST-CASH-AVAIL-BY-GALLONS.

COMPUTE WS-TOTAL-TRACTOR-GALLONS = WS-UIWA-NR2-QTY +
WS-UIWA-OTH-QTY + WS-UIWA-NR1-QTY.

COMPUTE WS-CASH-AMT-AVAIL = WS-TOTAL-TRACTOR-GALLONS *
PRM-CASH-PER-GALLON-LIMIT.

IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
(WS-UIWA-PO-NR > SPACES)
IF CSR-PROD-PO-OVERRIDE (1) > ZEROES
MOVE CSR-CASH-PO-OVERRIDE TO WS-CASH-AMT-AVAIL
END-IF
IF FMPO-MAX-AMOUNT > ZEROS
IF FMPO-PRODUCT-CODE = 'CA'
MOVE FMPO-MAX-AMOUNT TO WS-CASH-AMT-AVAIL
END-IF
END-IF
END-IF.

PERFORM PREMIER-CARD-CASH-LIMIT.

IF PRM-CASH-INITIAL - PRM-CASH-USED <
WS-CASH-AMT-AVAIL + HLD-CASH-1TIME
NEXT SENTENCE
ELSE
COMPUTE PRM-CASH-INITIAL = WS-CASH-AMT-AVAIL +
HLD-CASH-1TIME +
PRM-CASH-USED.


PREMIER-CARD-GALL-LIMIT.


MOVE CSR-DIESEL-LIMIT TO PRM-DIESEL-LIMIT.
MOVE CSR-REEFER-LIMIT TO PRM-REEFER-LIMIT.

IF CSR-DIESEL-LIMIT-FLAG = 'Y'
MOVE 'P'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-DIESEL-LIMIT         TO L-INITIAL-AMOUNT
MOVE PRM-DIESEL-USED          TO L-USED-AMOUNT
MOVE CSR-DIESEL-QTY-RESET     TO L-RESET-FLAGS
MOVE PRM-DIESEL-LAST-DATE     TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-DIESEL-USED
END-IF.

IF CSR-REEFER-LIMIT-FLAG = 'Y'
MOVE 'P'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE PRM-REEFER-LIMIT         TO L-INITIAL-AMOUNT
MOVE PRM-REEFER-USED          TO L-USED-AMOUNT
MOVE CSR-REEFER-QTY-RESET     TO L-RESET-FLAGS
MOVE PRM-REEFER-LAST-DATE     TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PRM-REEFER-USED
END-IF.

IF CSR-OTHER-LIMIT-FLAG = 'Y'
MOVE 'P'                      TO L-REQUEST-FLAG
MOVE WS-CURRENT-DATE-YYDDD    TO L-SYSTEM-DATE
MOVE EIBTIME                  TO L-SYSTEM-TIME
MOVE CSR-OTHER-QTY-LIMIT      TO L-INITIAL-AMOUNT
MOVE PIR-OTHER-USED           TO L-USED-AMOUNT
MOVE CSR-OTHER-QTY-RESET      TO L-RESET-FLAGS
MOVE PIR-OTHER-LAST-DATE      TO L-LAST-DATE-USED
MOVE CDN-CUST-ACCT-CODE       TO L-ACCOUNT-CODE
CALL 'TSFMS667' USING L-RESET-USED-PARMS
IF L-USED-AMOUNT NOT NUMERIC
MOVE ZEROS TO L-USED-AMOUNT
END-IF
MOVE L-USED-AMOUNT            TO PIR-OTHER-USED
END-IF.


READ-PURCHASE-ORDER.

MOVE 'READ-PURCHASE-ORDER'       TO CXUTS0ML-PARAGRAPH.
MOVE SPACES               TO FMPO-MASTER-RECORD.

MOVE COM-FP-CO-CODE       TO FMPO-CUSTOMER-ID
WS-HOLD-CUSTOMER-ID.
MOVE 'A'                  TO FMPO-PO-STATUS.
MOVE WS-UIWA-PO-NR        TO FMPO-PO-NUMBER.
MOVE ZEROS                TO FMPO-DUP-COUNTER.
EVALUATE TRUE
WHEN WS-UIWA-PO-NR = '$TERM$'
MOVE ZEROES    TO FMPO-MAX-AMOUNT
MOVE ZEROES    TO FMPO-DATE-ADDED
MOVE ZEROES    TO FMPO-EXPIRATION-DATE
MOVE ZEROES    TO FMPO-DATE-USED
MOVE ZEROES    TO FMPO-TIME-USED
MOVE ZEROES    TO FMPO-CONTROL-NR
MOVE ZEROES    TO FMPO-AMOUNT-USED
WHEN CDN-PURCHASE-ORDER-POOL
EXEC CICS READ
DATASET ('FMPOMST')
RIDFLD  (FMPO-KEY)
INTO    (FMPO-MASTER-RECORD)
GTEQ
RESP    (EIBRESP)
END-EXEC
MOVE FMPO-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE PURCHASE-ORDER-INVALID TO OUT-COMENT
MOVE PURCHASE-ORDER-INVALID-N TO POS-ERROR-NUMBER
MOVE -1 TO PONRL
PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
END-IF
END-EVALUATE.

IF FMPO-MAX-AMOUNT NOT NUMERIC
MOVE ZEROES TO FMPO-MAX-AMOUNT.


CHK-PO-TARGET-PRODUCT.


MOVE FMPO-PRODUCT-CODE TO WORK-PROD-CODE.
PERFORM PCE-FORMAT-PRODUCT-CODE.


EVALUATE TRUE
WHEN WORK-PROD-CODE = 'CA'
WHEN WORK-PROD-CODE = 'PU'
WHEN WORK-PROD-CODE = SPACES
WHEN WORK-PROD-CODE >= '00' AND <= '35'
CONTINUE
WHEN OTHER
MOVE SPACES TO WORK-PROD-CODE
END-EVALUATE.


PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
MOVE ZEROS TO CSR-PROD-PO-OVERRIDE (WORK-INDEX)
END-PERFORM
MOVE ZEROES TO CSR-CASH-PO-OVERRIDE
CSR-PURC-PO-OVERRIDE.

EVALUATE TRUE

WHEN WORK-PROD-CODE = 'PU'
WHEN WORK-PROD-CODE <= SPACES
PERFORM VARYING WORK-INDEX FROM 1 BY 1
UNTIL   WORK-INDEX > 36
MOVE FMPO-MAX-AMOUNT TO
CSR-PROD-PO-OVERRIDE (WORK-INDEX)
END-PERFORM
MOVE FMPO-MAX-AMOUNT TO CSR-CASH-PO-OVERRIDE
CSR-PURC-PO-OVERRIDE


WHEN WORK-PROD-CODE = 'CA'
MOVE FMPO-MAX-AMOUNT TO CSR-CASH-PO-OVERRIDE


WHEN WORK-PROD-CODE >= '00' AND <= '35'
MOVE FMPO-MAX-AMOUNT TO
CSR-PROD-PO-OVERRIDE (WORK-PROD-CODE-NUM + 1)
MOVE FMPO-MAX-AMOUNT TO CSR-PURC-PO-OVERRIDE
END-EVALUATE.


PHONE-VERIFY.

IF WS-UIWA-SC-PHONE NOT > SPACES
PERFORM PV-ERROR
END-IF.
MOVE SCM-PHONE-NUMBER       TO  WS-PHONE-WORK.
MOVE WS-PHONE-WORK          TO  COM-PHONE-1.
MOVE 10 TO NR-OF-BYTES.
MOVE 0 TO NR-OF-DECIMALS.
MOVE WS-UIWA-SC-PHONE TO WS-WORK-PHONE-NR.
MOVE 10 TO FIELD-LENGTH.
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-WORK-PHONE-NR,
FILL-CHAR.
EVALUATE TRUE
WHEN DPH-AREA > SPACES
IF WS-WORK-PHONE-NR NOT = COM-PHONE-1
PERFORM PV-ERROR
END-IF
WHEN DPH-EXCH > SPACES
IF DPH-EXCH NOT = COM-PHONE-EXCH-1 OR
DPH-NR   NOT = COM-PHONE-NR-1
PERFORM PV-ERROR
END-IF
WHEN OTHER
IF DPH-NR   NOT = COM-PHONE-NR-1
PERFORM PV-ERROR
END-IF
END-EVALUATE.


PV-ERROR.

MOVE ENTER-PROPER-TS-PHONE TO OUT-COMENT
MOVE ENTER-PROPER-TS-PHONE-N TO POS-ERROR-NUMBER
MOVE 'N'                     TO WS-NOTIFY-IRIS-FL
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


PHONE-VERIFY2.


MOVE 'PHONE-VERIFY2'             TO CXUTS0ML-PARAGRAPH.
MOVE SPACES            TO COMDATA-XLATE-RECORD.
MOVE +8                TO CXR-SYSTEM-ID.
MOVE FP1PHNI           TO TST-KEY.
EVALUATE TRUE
WHEN TST-PHONE-NUMBER NOT NUMERIC
PERFORM PV2-ERROR
WHEN TST-KEY-AREA-CODE < '100'
PERFORM PV2-ERROR
WHEN TST-KEY-PREFIX    < '001'
PERFORM PV2-ERROR
END-EVALUATE.

MOVE TST-KEY-AREA-CODE TO CXR-AREA-CODE.
MOVE TST-KEY-PREFIX    TO CXR-PREFIX.
MOVE 'UNKNOWN' TO CXR-CITY.
MOVE '??'      TO CXR-STATE.
EXEC CICS READ
DATASET ('CDXLATE')
INTO    (COMDATA-XLATE-RECORD)
RIDFLD  (CXR-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE CXR-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE '000'  TO CXR-AREA-CODE, CXR-PREFIX
END-IF.
IF CXR-AREA-CODE NOT = TST-KEY-AREA-CODE
MOVE '??'      TO CXR-STATE
END-IF.
IF CXR-PREFIX    NOT = TST-KEY-PREFIX
MOVE 'UNKNOWN' TO CXR-CITY
END-IF.

IF CXR-STATE NOT = '??'
IF CXR-STATE NOT = SCM-KEY-ST
MOVE ENTER-PROPER-TS-PHONE-N TO POS-ERROR-NUMBER
MOVE 'AREA CODE AND STATION CODE DO NOT MATCH' TO
OUT-COMENT
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

MOVE CXR-CITY  TO COM-TS-CITY.
MOVE CXR-STATE TO COM-TS-STATE.


PV2-ERROR.

MOVE ENTER-PROPER-TS-PHONE   TO OUT-COMENT.
MOVE ENTER-PROPER-TS-PHONE-N TO POS-ERROR-NUMBER.
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.


TN999-SETUP-INITIAL-MAP.

MOVE UNFORMATTED-AREA TO COM-SAVE-AREA.
MOVE WS-UIWA-SC-CODE  TO COM-FP-SC-CODE.
MOVE LOW-VALUES TO FP2MAPO.
MOVE 'PLEASE ENTER TRUCK STOP PHONE NUMBER' TO FP2HELPO.
MOVE -1 TO FP2PHONL.
MOVE '@' TO FP2ZIA,  FP2ZIPA.
MOVE 001 TO COM-STAGE-TN999.
PERFORM TN999-SEND-INITIAL-MAP.


TN999-UNKNOWN-STOP.

MOVE 'TN999-UNKNOWN-STOP'        TO CXUTS0ML-PARAGRAPH.
IF EIBAID = DFHCLEAR OR DFHPA2
PERFORM CLEAR-AND-EXIT-TO-CICS
END-IF.

EXEC CICS RECEIVE
MAP    ('FP2MAP')
MAPSET ('USISET')
FROM   (UNFORMATTED-AREA)
LENGTH (UNFORMATTED-LENG)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE SPACES TO UNFORMATTED-AREA.

IF COM-PHONE-1  NOT = FP2PHONI OR
COM-ZIP      NOT = FP2ZIPI
MOVE 1 TO COM-STAGE-TN999
END-IF.

EVALUATE COM-STAGE-TN999
WHEN 1
MOVE 'N' TO WS-EXIT-FLAG
PERFORM TN999-VALIDATE-PHONE
IF WS-EXIT-FLAG = 'N'
PERFORM TN999-VALIDATE-ZIP
PERFORM TN999-SETUP-ENTRY-SCREEN
END-IF
WHEN 2
PERFORM TN999-VALIDATE-DATA
PERFORM TN999-GET-NEXT-LOCATION
PERFORM TN999-ADD-SCMSTR
PERFORM TN999-SETUP-EXIT
WHEN OTHER
IF COM-TEMP-CODE-CURRENCY NOT = FP2CURI
PERFORM TN999-CURRENCY-CHANGED
PERFORM TN999-SETUP-EXIT
ELSE
MOVE FP2CODEI TO COM-FP-SC-CODE
PERFORM TN999-SETUP-EXIT
END-IF
END-EVALUATE.


TN999-VALIDATE-PHONE.

MOVE 'TN999-VALIDATE-PHONE'      TO CXUTS0ML-PARAGRAPH.
IF FP2ZIPI NOT > SPACES
MOVE '@' TO FP2ZIPA, FP2ZIA
END-IF.

IF FP2PHONI IS NOT NUMERIC
MOVE 'INVALID PHONE NUMBER' TO FP2ERRO
MOVE -1 TO FP2PHONL
PERFORM TN999-SEND-INITIAL-MAP
END-IF.

PERFORM TN999-CHECK-AREA-CODE.


MOVE LOW-VALUES TO SC-PHONE-NUMBER-RECORD.
MOVE '7'        TO SCPN-RECORD-ID.
MOVE FP2PHONI   TO WS-PHONENRX.
MOVE WS-PHONENR TO SCPN-PHONE-NUMBER.
EXEC CICS READ
DATASET ('SCLOCAT')
INTO    (SC-PHONE-NUMBER-RECORD)
RIDFLD  (SCPN-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE SCPN-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP
EVALUATE TRUE
WHEN EIBRESP NOT = DFHRESP(NORMAL)
PERFORM TN999-PHONE-NOT-FOUND
WHEN WS-PHONENR NOT = SCPN-PHONE-NUMBER
PERFORM TN999-PHONE-NOT-FOUND
WHEN OTHER
PERFORM TN999-PHONE-FOUND
END-EVALUATE.


TN999-PHONE-FOUND.

MOVE 'TN999-PHONE-FOUND'         TO CXUTS0ML-PARAGRAPH.
MOVE SCPN-SERVICE-CENTER-CODE TO SCMSTR-KEY-TEMP.
EXEC CICS READ
DATASET ('SCMSTR ')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY-TEMP)
RESP    (EIBRESP)
END-EXEC
MOVE SCMSTR-KEY-TEMP   TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
EXEC CICS DELETE
DATASET ('SCLOCAT')
RIDFLD  (SCPN-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SCPN-KEY          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
PERFORM TN999-PHONE-NOT-FOUND
ELSE

INITIALIZE COMDATA-ADDRESS-RECORD
MOVE 'SC'            TO CAR-CUSTOMER-TYPE
MOVE SCMSTR-KEY-TEMP TO CAR-CUSTOMER-CODE
MOVE 'A'             TO CAR-ADDRESS-TYPE
EXEC CICS READ
DATASET ('CDADDR ')
INTO    (COMDATA-ADDRESS-RECORD)
RIDFLD  (CAR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE CAR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
MOVE CAR-TAX-ID      TO WS-HLD-CAR-TAX-ID
PERFORM TN999-PHONE-AND-SC-FOUND.


TN999-PHONE-NOT-FOUND.

MOVE 'TN999-PHONE-NOT-FOUND'     TO CXUTS0ML-PARAGRAPH.

MOVE '@' TO FP2ZIA,  FP2ZIPA.


MOVE SPACES     TO SERVICE-CENTER-PRICE-MASTER
MOVE 'XX'       TO SCPM-KEY
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-PRICE-MASTER)
RIDFLD  (SCPM-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCPM-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM 60300-CHECK-SCSTATE-NUMERICS




IF SCPM-REQ-YCODE-OVER = '2'
IF EIBAID             = DFHPF3
MOVE 'P'  TO COM-FP-STATUS-FLAG
ELSE
MOVE 'PHONE # NOT FOUND - OVERRIDE ALLOWED' TO FP2ERRO
MOVE -1 TO FP2PHONL
PERFORM TN999-SEND-INITIAL-MAP
END-IF
END-IF.
IF SCPM-REQ-YCODE-OVER = '3'
MOVE 'PHONE # NOT FOUND - OVERRIDE NOT ALLOWED' TO FP2ERRO
MOVE -1 TO FP2PHONL
PERFORM TN999-SEND-INITIAL-MAP
END-IF.


TN999-PHONE-AND-SC-FOUND.

MOVE SCMSTR-KEY-TEMP TO WS-LAST-SCMM-READ
PERFORM 60200-CHECK-SCMSTR-NUMERICS

MOVE SCPN-SERVICE-CENTER-CODE TO COM-FP-SC-CODE

MOVE SCM-LOCATION-NAME        TO FP2NAMEO
MOVE SCM-LOCATION-ADDRESS     TO FP2ADDRO
MOVE SCM-LOCATION-CITY        TO FP2CITYO
MOVE SCM-LOCATION-STATE       TO FP2STO
MOVE SCM-LOCATION-ZIP         TO FP2ZIPO
MOVE SCM-COUNTRY-CODE         TO FP2CURO
MOVE WS-HLD-CAR-TAX-ID        TO FP2TAXO.
MOVE SCPN-SERVICE-CENTER-CODE TO FP2CODEO

MOVE '8' TO FP2ZIA
MOVE 'A' TO FP2ZIPA
MOVE 998 TO COM-STAGE-TN999
MOVE 'Y' TO WS-EXIT-FLAG


IF SCPN-SERVICE-CENTER-CODE > 'XT999'
MOVE -1                       TO FP2CURL
MOVE SCPN-SERVICE-CENTER-CODE TO FP2CODEO
MOVE '@'                      TO FP2CODA
MOVE QUOTE                    TO FP2CODEA
MOVE 'VERIFY THE ABOVE INFO.  PRESS ENTER TO CONTINUE'
TO FP2HELPO
ELSE
MOVE -1                        TO FP2PHONL
MOVE '8'                       TO FP2CODA
MOVE 'A'                       TO FP2CODEA
MOVE 'VERIFY INFO. IF CORRECT NOTIFY ATTENDANT OF TS CODE'
TO FP2HELPO
END-IF.
PERFORM TN999-SEND-FULL-MAP.


TN999-VALIDATE-ZIP.


MOVE '8' TO FP2ZIA.
MOVE 'A' TO FP2ZIPA.


IF COM-FP-SC-CODE = 'US225' OR
COM-FP-SC-CODE = 'CN225' OR
WS-CANADIAN-AREA-CODE = 'Y'
MOVE '00000' TO FP2ZIPI
MOVE '@'     TO FP2ZIA
MOVE QUOTE   TO FP2ZIPA.
IF FP2ZIPI NOT > SPACES AND
EIBAID  NOT = DFHPF4
MOVE -1 TO FP2ZIPL
MOVE 'PLEASE ENTER ZIP CODE' TO FP2HELPO
PERFORM TN999-SEND-INITIAL-MAP.
IF FP2ZIPI > SPACES
MOVE ZEROES TO WS-TALLY
INSPECT FP2ZIPI TALLYING WS-TALLY
FOR ALL ' '
IF WS-TALLY > ZEROES
MOVE -1 TO FP2ZIPL
MOVE 'INVALID ZIP CODE' TO FP2ERRO
PERFORM TN999-SEND-INITIAL-MAP.


TN999-SETUP-ENTRY-SCREEN.

MOVE 'TN999-SETUP-ENTRY-SCREEN'  TO CXUTS0ML-PARAGRAPH.
MOVE '@' TO FP2CODA, FP2CODEA.
MOVE SPACES TO FP2CODEO.
MOVE -1 TO FP2NAMEL.
MOVE SPACES TO FP2NAMEO,
FP2ADDRO,
FP2CITYO,
FP2STO,
FP2CODEO,
FP2TAXO,
FP2CURO.
MOVE 'PLEASE ENTER ALL TRUCK STOP INFORMATION' TO FP2HELPO.

IF COM-FP-SC-CODE        = 'US225' OR
COM-FP-SC-CODE        = 'CN225' OR
WS-CANADIAN-AREA-CODE = 'Y'
PERFORM TN999-CHECK-AREA-CODE
MOVE WS-AREA-STATE-ST (WS-INDEX) TO FP2STO
END-IF.

MOVE 'U' TO FP2CURO.
IF WS-CANADIAN-AREA-CODE = 'Y' OR
COM-FP-SC-CODE        = 'CN225'
MOVE 'C' TO FP2CURO.


MOVE SPACES TO ZIP-CITY-STATE-XREF-RECORD.
MOVE FP2ZIPI TO ZX-ZIP-CODE.
MOVE +1      TO ZX-OCCURRENCE-NR.
EXEC CICS READ
DATASET ('ZIPXREF')
INTO    (ZIP-CITY-STATE-XREF-RECORD)
RIDFLD  (ZX-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE ZX-KEY            TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
MOVE ZX-USPS-CITY-PLACE TO FP2CITYO
MOVE ZX-STATE           TO FP2STO
END-IF.
MOVE 2 TO COM-STAGE-TN999
PERFORM TN999-SEND-FULL-MAP.




TN999-VALIDATE-DATA.

PERFORM TN999-CHECK-AREA-CODE
PERFORM TN999-VALIDATE-DATA-ENTERED
PERFORM TN999-VALIDATE-CURR-ENTERED
PERFORM TN999-VALIDATE-STATE.


TN999-VALIDATE-DATA-ENTERED.

IF FP2NAMEI NOT > SPACES
MOVE 'NAME MUST BE ENTERED' TO FP2ERRO
MOVE -1 TO FP2NAMEL
PERFORM TN999-SEND-FULL-MAP.

IF FP2ADDRI NOT > SPACES
MOVE 'ADDRESS MUST BE ENTERED' TO FP2ERRO
MOVE -1 TO FP2ADDRL
PERFORM TN999-SEND-FULL-MAP.

IF FP2CITYI NOT > SPACES
MOVE 'CITY MUST BE ENTERED' TO FP2ERRO
MOVE -1 TO FP2CITYL
PERFORM TN999-SEND-FULL-MAP.

IF FP2STI NOT > SPACES
MOVE 'STATE MUST BE ENTERED' TO FP2ERRO
MOVE -1 TO FP2STL
PERFORM TN999-SEND-FULL-MAP.


TN999-VALIDATE-CURR-ENTERED.

IF FP2CURI = 'U' OR 'C'
CONTINUE
ELSE
MOVE 'CURRENCY TYPE MUST BE (U)S OR (C)ANADIAN' TO FP2ERRO
MOVE -1 TO FP2CURL
PERFORM TN999-SEND-FULL-MAP.

IF COM-FP-SC-CODE = 'US225' AND
FP2CURI = 'C'
MOVE 'CURRENCY TYPE MUST BE (U)S' TO FP2ERRO
MOVE -1 TO FP2CURL
PERFORM TN999-SEND-FULL-MAP.

IF COM-FP-SC-CODE = 'CN225' AND
FP2CURI = 'U'
MOVE 'CURRENCY TYPE MUST BE (C)ANADIAN' TO FP2ERRO
MOVE -1 TO FP2CURL
PERFORM TN999-SEND-FULL-MAP.

IF COM-FP-SC-CODE = 'CN225' OR
FP2CURI = 'C'
IF FP2TAXI NOT > SPACES AND EIBAID NOT = DFHPF4
MOVE 'TAX ID MUST BE ENTERED' TO FP2ERRO
MOVE -1 TO FP2TAXL
PERFORM TN999-SEND-FULL-MAP.


TN999-VALIDATE-STATE.

MOVE 'TN999-VALIDATE-STATE'      TO CXUTS0ML-PARAGRAPH.

INITIALIZE      ZIP-CITY-STATE-XREF-RECORD.
MOVE FP2ZIPI TO ZX-ZIP-CODE.
MOVE +1      TO ZX-OCCURRENCE-NR.
EXEC CICS READ
DATASET ('ZIPXREF')
INTO    (ZIP-CITY-STATE-XREF-RECORD)
RIDFLD  (ZX-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE ZX-KEY            TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


INITIALIZE                COMDATA-XLATE-RECORD.
MOVE +8                TO CXR-SYSTEM-ID.
MOVE FP2PHONI          TO TST-KEY.
MOVE TST-KEY-AREA-CODE TO CXR-AREA-CODE.
MOVE ZEROES            TO CXR-PREFIX.
EXEC CICS READ
DATASET ('CDXLATE')
INTO    (COMDATA-XLATE-RECORD)
RIDFLD  (CXR-KEY)
GTEQ
RESP    (EIBRESP)
END-EXEC.
MOVE CXR-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL)
IF CXR-AREA-CODE NOT = TST-KEY-AREA-CODE
MOVE SPACES TO CXR-CITY, CXR-STATE
END-IF
END-IF.

IF COM-FP-SC-CODE        = 'US225' OR
COM-FP-SC-CODE        = 'CN225' OR
WS-CANADIAN-AREA-CODE = 'Y'
MOVE SPACES TO ZX-STATE, CXR-STATE.

IF CXR-STATE NOT > SPACES
MOVE FP2STI TO CXR-STATE.
IF ZX-STATE NOT > SPACES
MOVE FP2STI TO ZX-STATE.

IF ZX-STATE NOT = FP2STI
MOVE 'ZIP CODE IS NOT WITHIN THIS STATE' TO FP2ERRO
MOVE -1 TO FP2STL
PERFORM TN999-SEND-FULL-MAP.
IF CXR-STATE NOT = FP2STI
MOVE 'AREA CODE IS NOT WITHIN THIS STATE' TO FP2ERRO
MOVE -1 TO FP2STL
PERFORM TN999-SEND-FULL-MAP.


TN999-GET-NEXT-LOCATION.

MOVE 'TN999-GET-NEXT-LOCATION'   TO CXUTS0ML-PARAGRAPH.

MOVE SPACES     TO SERVICE-CENTER-PRICE-MASTER
MOVE 'XX'       TO SCPM-KEY
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-PRICE-MASTER)
RIDFLD  (SCPM-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE SCPM-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM 60300-CHECK-SCSTATE-NUMERICS

IF SCPM-LAST-YCODE NOT > SPACES
MOVE 'YJ000' TO SCPM-LAST-YCODE
END-IF.
IF SCPM-LAST-YCODE-NR > 997
SEARCH ALL ALPHA-CONSTANTS-TABLE
AT END
MOVE 'YJ'                 TO SCPM-LAST-YCODE-ST
MOVE '001'                TO SCPM-LAST-YCODE-NR
WHEN ISBN-TABLE  (ALPHA-IND) =  SCPM-LAST-YCODE-ST
MOVE TABLE-ST (ALPHA-IND) TO SCPM-LAST-YCODE-ST
MOVE TABLE-NR (ALPHA-IND) TO SCPM-LAST-YCODE-NR
END-IF.
ADD 1 TO SCPM-LAST-YCODE-NR
MOVE SCPM-LAST-YCODE TO COM-FP-SC-CODE, SCMSTR-KEY

EXEC CICS REWRITE
DATASET ('SCSTATE')
FROM    (SERVICE-CENTER-PRICE-MASTER)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


TN999-ADD-SCMSTR.

MOVE 'TN999-ADD-SCMSTR'          TO CXUTS0ML-PARAGRAPH.

EXEC CICS DELETE
DATASET ('SCMSTR')
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
MOVE SPACES TO WS-LAST-SCMM-READ

PERFORM INIT-NEW-SCMSTR THRU INS-9999.
MOVE FP2NAMEI TO SCM-LOCATION-NAME.
MOVE FP2ADDRI TO SCM-LOCATION-ADDRESS.
MOVE FP2CITYI TO SCM-LOCATION-CITY.
MOVE FP2STI   TO SCM-LOCATION-STATE.
MOVE FP2ZIPI  TO SCM-LOCATION-ZIP.
MOVE FP2PHONI TO SCM-PHONE-NUMBER.
MOVE WS-CURRENT-DATE-YYDDD  TO SCM-LAST-UPDATE-DATE.
MOVE FP2CURI  TO SCM-COUNTRY-CODE.
EXEC CICS WRITE
DATASET ('SCMSTR ')
FROM    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCMSTR-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ


INITIALIZE              COMDATA-ADDRESS-RECORD.
MOVE 'SC'            TO CAR-CUSTOMER-TYPE.
MOVE SCM-KEY         TO CAR-CUSTOMER-CODE.
MOVE 'A'             TO CAR-ADDRESS-TYPE.
MOVE FP2NAMEI        TO CAR-LOCATION-NAME.
MOVE FP2ADDRI        TO CAR-ADDRESS.
MOVE FP2CITYI        TO CAR-CITY.
MOVE FP2STI          TO CAR-STATE.
MOVE FP2ZIPI         TO CAR-ZIP.
MOVE FP2PHONI        TO CAR-PHONE-NUMBER.
MOVE FP2TAXI         TO CAR-TAX-ID,
WS-HLD-CAR-TAX-ID.
EXEC CICS DELETE
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
RESP    (EIBRESP)
END-EXEC.
EXEC CICS WRITE
DATASET ('CDADDR ')
FROM    (COMDATA-ADDRESS-RECORD)
RIDFLD  (CAR-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE CAR-KEY           TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


MOVE LOW-VALUES TO SC-PHONE-NUMBER-RECORD.
MOVE '7'                   TO SCPN-RECORD-ID
MOVE FP2PHONI              TO SCPN-PHONE-NUMBER.
MOVE SCM-KEY               TO SCPN-SERVICE-CENTER-CODE.
MOVE SPACES                TO SCPN-MASTER-CENTER-CODE.
EXEC CICS WRITE
DATASET ('SCLOCAT')
FROM    (SC-PHONE-NUMBER-RECORD)
RIDFLD  (SCPN-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCPN-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-DUPREC-EIBRESP.


TN999-CURRENCY-CHANGED.

MOVE 'TN999-CURRENCY-CHANGED'    TO CXUTS0ML-PARAGRAPH.

MOVE LOW-VALUES TO SC-PHONE-NUMBER-RECORD.
MOVE '7'                   TO SCPN-RECORD-ID
MOVE FP2PHONI              TO SCPN-PHONE-NUMBER.
EXEC CICS DELETE
DATASET   ('SCLOCAT')
RIDFLD    (SCPN-KEY (1:7))
GENERIC
KEYLENGTH (7)
RESP      (EIBRESP)
END-EXEC.
MOVE SCPN-KEY          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.

MOVE 2   TO COM-STAGE-TN999.
MOVE 'N' TO WS-EXIT-FLAG.
PERFORM TN999-VALIDATE-DATA.
PERFORM TN999-GET-NEXT-LOCATION.
PERFORM TN999-ADD-SCMSTR.


TN999-SETUP-EXIT.


MOVE 999                TO COM-STAGE.
MOVE FP2PHONI           TO COM-PHONE-1.
MOVE FP2ZIPI            TO COM-ZIP.
MOVE FP2CURI            TO COM-TEMP-CODE-CURRENCY
MOVE SCM-LOCATION-STATE TO COM-TS-STATE.
MOVE COM-SAVE-AREA      TO UNFORMATTED-AREA.
MOVE 'N'                TO WS-CANADIAN-CHK-FLAG.
PERFORM FORMAT-INPUT-AREA.


TN999-SEND-INITIAL-MAP.

MOVE 'TN999-SEND-INITIAL-MAP'    TO CXUTS0ML-PARAGRAPH.
MOVE 3   TO COM-STAGE.
MOVE '@' TO FP2NAMA, FP2NAMEA,
FP2ADDA, FP2ADDRA,
FP2CITA, FP2CITYA,
FP2SA,   FP2STA,
FP2TAXA, FP2TAXHA,
FP2CODA, FP2CODEA,
FP2CURA, FP2CURHA.
MOVE -1  TO FP2PHONL.
EXEC CICS SEND
MAP    ('FP2MAP')
MAPSET ('USISET')
CURSOR
ERASE
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM TN999-RETURN.


TN999-SEND-FULL-MAP.

MOVE 'TN999-SEND-FULL-MAP'       TO CXUTS0ML-PARAGRAPH.
MOVE 3   TO COM-STAGE.
MOVE '8' TO FP2NAMA,  FP2ADDA,  FP2CITA,  FP2SA,  FP2CURHA.
MOVE 'A' TO FP2NAMEA, FP2ADDRA, FP2CITYA, FP2STA, FP2CURA.
IF COM-FP-SC-CODE        = 'CN225' OR
COM-FP-SC-CODE        = 'US225' OR
WS-CANADIAN-AREA-CODE = 'Y'
MOVE '@'   TO FP2ZIA
MOVE QUOTE TO FP2ZIPA
MOVE 'PR' TO FP2SO.
IF COM-FP-SC-CODE = 'CN225' OR
WS-CANADIAN-AREA-CODE  = 'Y' OR
FP2CURI                = 'C'
MOVE '8' TO FP2TAXHA
MOVE 'A' TO FP2TAXA.
IF FP2CODEI NOT > SPACES
MOVE '@' TO FP2CODA, FP2CODEA.
IF FP2CODEI > 'XT999'
MOVE '@'   TO FP2CODA
MOVE QUOTE TO FP2CODEA.
EXEC CICS SEND
MAP    ('FP2MAP')
MAPSET ('USISET')
CURSOR
ERASE
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM TN999-RETURN.


TN999-CHECK-AREA-CODE.


PERFORM
VARYING WS-INDEX FROM 1 BY 1
UNTIL FP2PHONI (1:3) = WS-AREA-STATE-AREA (WS-INDEX) OR
HIGH-VALUES    = WS-AREA-STATE-AREA (WS-INDEX)
END-PERFORM
MOVE 'N' TO WS-CANADIAN-AREA-CODE.
IF FP2PHONI (1:3)     = WS-AREA-STATE-AREA (WS-INDEX) AND
COM-FP-SC-CODE NOT = 'US225'
MOVE 'Y' TO WS-CANADIAN-AREA-CODE
END-IF.


TN999-RETURN.

MOVE FP2PHONI TO COM-PHONE-1.
MOVE FP2ZIPI  TO COM-ZIP.
MOVE FP2CURI  TO COM-TEMP-CODE-CURRENCY.
PERFORM EXIT-FUEL-PGM-RETURN.


MOVE-OUTPUT-OK-OUT.

EVALUATE TRUE
WHEN WS-BILLABLE = ZEROES
MOVE WS-DB-MSG TO OUT-GOLD-BRIDGE,
POS-OKGL-BRIDGE
WHEN WS-NON-BILLABLE > ZEROES
MOVE WS-DBF-MSG TO OUT-GOLD-BRIDGE,
POS-OKGL-BRIDGE
WHEN OTHER
MOVE '   ' TO OUT-GOLD-BRIDGE,
POS-OKGL-BRIDGE
END-EVALUATE.

MOVE WS-CONTROL-NR    TO OUT-CTL-NR,
OUT-GOLD-CTL,
NEW-OUTPUT-TRAN,
POS-OK-CTL
MOVE '         '      TO OUTPUT-GOLD-HD-1
MOVE WS2-CURXMN       TO OUT-NETXMN,
OUT-GOLD-AMT,
POS-OKGL-AMT,
POS-OK-AMT.

IF WS-UIWA-TAX-AMT-SC > ZEROES
MOVE ' TAX - '          TO POS-OK-TAX-HEAD
POS-OKGL-TAX-HEAD
POS-OKX-TAX-HEAD
POS-OKD-TAX-HEAD
POS-OKF-TAX-HEAD
OUT-GOLD-TAX-HEAD
OUT-TAX-HEAD
OUT-CAN-TAX-HEAD
MOVE WS-UIWA-TAX-AMT-SC TO POS-OK-TAX
POS-OKGL-TAX
POS-OKX-TAX
POS-OKD-TAX
POS-OKF-TAX
OUT-GOLD-TAX
OUT-CAN-TAX
OUT-TAX
ELSE
IF COM-CUSTOM-FEE-FLAG NOT = 'Y' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y' AND
(CDN-CREDIT-PRICED-FLAG = 'N' OR ' ' OR LOW-VALUES) AND
SCM-MERCH-SUR-CHG-PCT NUMERIC AND
SCM-MERCH-SUR-CHG-PCT > ZEROS
MOVE ' SUR - '               TO OUT-GOLD-SURCH-HEAD
OUT-CAN-SURCH-HEAD
OUT-SURCH-HEAD
MOVE WS-MERCH-SURCHRG-AMT-SC TO OUT-SURCH
OUT-GOLD-SURCH
OUT-CAN-SURCH
MOVE SPACES                  TO POS-OK-TAX-HEAD
POS-OKGL-TAX-HEAD
POS-OKX-TAX-HEAD
POS-OKD-TAX-HEAD
POS-OKF-TAX-HEAD
MOVE ZEROES                  TO POS-OK-TAX
POS-OKGL-TAX
POS-OKX-TAX
POS-OKD-TAX
POS-OKF-TAX
ELSE
MOVE SPACES              TO POS-OK-TAX-HEAD
POS-OKGL-TAX-HEAD
POS-OKX-TAX-HEAD
POS-OKD-TAX-HEAD
POS-OKF-TAX-HEAD
OUT-GOLD-TAX-HEAD
OUT-TAX-HEAD
OUT-CAN-TAX-HEAD
MOVE ZEROES              TO POS-OK-TAX
POS-OKGL-TAX
POS-OKX-TAX
POS-OKD-TAX
POS-OKF-TAX
OUT-GOLD-TAX
OUT-CAN-TAX
OUT-TAX
END-IF
END-IF.

IF WS-NATS-PRE-AUTH-FLAG NOT = 'Y'
MOVE PD-DD TO OUT-GOLD-DAY, NEW-OUTPUT-DAY
END-IF

MOVE PD-DD            TO OUT-GOLD-DAY, NEW-OUTPUT-DAY
ADD WS-CONTROL-NR, 2276 GIVING OUT-CK-AUTH-NR.
ADD WS-CONTROL-NR, 2276 GIVING POS-OK-AUTH.

IF COM-COMP-SC-CURR-SAME
MOVE OUTPUT-DATA-OK      TO OUT-COMENT-1
MOVE OUTPUT-2ND-LINE     TO OUT-COMENT-2
ELSE
MOVE 'US'                TO OUTPUT-CAN-2ND-LINE-COUNTRY
IF COM-CO-IS-CANADIAN
MOVE 'CN'             TO OUTPUT-CAN-2ND-LINE-COUNTRY
END-IF
MOVE WS-CURXMN           TO OUT-US-NETXMN
MOVE OUTPUT-DATA-OK      TO OUT-COMENT-1
MOVE OUTPUT-CAN-2ND-LINE TO OUT-COMENT-2.


VALIDATE-CHECK-NR.

MOVE WS-UIWA-CHECK-NRX TO CHECK-NR-AREA.
PERFORM VCNR-FORMAT-CHECK-NR.
PERFORM VCNR-DETERMINE-COUNTRY
PERFORM VCNR-VALIDATE-COUNTRY
IF CHECK-WORK > 999999999
PERFORM VCNR-VALIDATE-CHECK-DIGIT.


VCNR-FORMAT-CHECK-NR.

EVALUATE TRUE ALSO TRUE
WHEN 1ST-10-BYTES-N NUMERIC ALSO
1ST-10-BYTES = 2ND-10-BYTES
MOVE 1ST-10-BYTES-N  TO CHECK-WORK
WHEN 1ST-9-BYTES-N  NUMERIC ALSO
1ST-9-BYTES  = 2ND-9-BYTES
MOVE 1ST-9-BYTES-N   TO CHECK-WORK
MOVE CHECK-WORK      TO 1ST-10-BYTES-N, 2ND-10-BYTES-N
WHEN 1ST-8-BYTES-N  NUMERIC ALSO
1ST-8-BYTES  = 2ND-8-BYTES
MOVE 1ST-8-BYTES-N   TO CHECK-WORK
MOVE CHECK-WORK      TO 1ST-10-BYTES-N, 2ND-10-BYTES-N
WHEN 1ST-7-BYTES-N  NUMERIC ALSO
1ST-7-BYTES  = 2ND-8-BYTES
MOVE 1ST-7-BYTES-N   TO CHECK-WORK
MOVE CHECK-WORK      TO 1ST-10-BYTES-N, 2ND-10-BYTES-N
WHEN OTHER
MOVE INVALID-CHECK-NR TO OUT-COMENT-1
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE SPACES TO OUT-COMENT-2
MOVE -1 TO FPCHKL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-EVALUATE.


VCNR-DETERMINE-COUNTRY.

MOVE 'N' TO WS-CANADIAN-CHK-FLAG.
IF (CHECK-WORK     > 7939999990  AND < 8000000000) OR
(CHECK-WORK     > 0793999999  AND < 0800000000)
MOVE 'Y' TO WS-CANADIAN-CHK-FLAG
ELSE
MOVE 'N' TO WS-CANADIAN-CHK-FLAG.


VCNR-VALIDATE-COUNTRY.

EVALUATE TRUE ALSO TRUE
WHEN WS-CANADIAN-CHK-FLAG = 'Y' ALSO
NOT COM-SC-IS-CANADIAN
MOVE INVALID-US-CHECK-NR TO OUT-COMENT-1
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE SPACES TO OUT-COMENT-2
MOVE -1 TO FPCHKL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
WHEN WS-CANADIAN-CHK-FLAG = 'N' ALSO
(NOT COM-SC-IS-US)
MOVE INVALID-CAN-CHECK-NR TO OUT-COMENT-1
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE SPACES TO OUT-COMENT-2
MOVE -1 TO FPCHKL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-EVALUATE.


VCNR-VALIDATE-CHECK-DIGIT.

DIVIDE HI-CHECK-DIGITS BY 7 GIVING WS-CHECK-WORK
REMAINDER WS-CALC-CHECK-DIGIT
IF WS-CANADIAN-CHK-FLAG = 'Y'
ADD 1 TO WS-CALC-CHECK-DIGIT.

IF WS-CALC-CHECK-DIGIT NOT = LOW-CHECK-DIGIT
IF WS-CANADIAN-CHK-FLAG = 'Y'
MOVE INVALID-CAN-CHECK-NR TO OUT-COMENT-1
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE SPACES TO OUT-COMENT-2
MOVE -1 TO FPCHKL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
ELSE
MOVE INVALID-CHECK-NR TO OUT-COMENT-1
MOVE INVALID-CHECK-NR-N TO POS-ERROR-NUMBER
MOVE SPACES TO OUT-COMENT-2
MOVE -1 TO FPCHKL
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


ZERO-DRAFT.

MOVE 'Y' TO WS-LOOP-FLAG
MOVE ' ' TO ERROR-FLAG
PERFORM GET-DRAFT-TO-ZERO
UNTIL ERROR-FLAG = '*' OR
WS-LOOP-FLAG = 'N'.
IF ERROR-FLAG = '*'
MOVE SPACE TO ERROR-FLAG
GO TO ZERO-DRAFT-EXIT
END-IF.
PERFORM UPDATE-DRAFT-TO-ZERO.


PERFORM UPDATE-DRAFT2-TO-ZERO

PERFORM UPDATE-DRFTLG1-TO-ZERO.
IF ERROR-FLAG = '*'
MOVE SPACE TO ERROR-FLAG
GO TO ZERO-DRAFT-EXIT.


IF NOT DUPLICATE-WRITES-INHIBITED
PERFORM UPDATE-DRFTLG2-TO-ZERO
END-IF.

MOVE SPACE TO ERROR-FLAG.

ZERO-DRAFT-EXIT.
EXIT.


GET-DRAFT-TO-ZERO.

MOVE 'GET-DRAFT-TO-ZERO'         TO CXUTS0ML-PARAGRAPH.

EXEC CICS READ
DATASET ('DRAFTS1')
INTO    (DRAFT-RECORD-SET)
RIDFLD  (DRAFT-CHECK-NR)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE DRAFT-CHECK-NR    TO WS-NUM-9.
MOVE WS-NUM-9          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE 'N' TO WS-LOOP-FLAG
MOVE '*' TO ERROR-FLAG
END-IF


IF ERROR-FLAG NOT = '*'
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC AND
DRAFT-CTL-NR IS NUMERIC AND
ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD = DRAFT-CTL-NR
MOVE 'N' TO WS-LOOP-FLAG
ELSE
EXEC CICS UNLOCK
DATASET ('DRAFTS1')
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM ZERO-DRAFT-ERROR
END-IF
END-IF.


UPDATE-DRAFT-TO-ZERO.

MOVE 'UPDATE-DRAFT-TO-ZERO'      TO CXUTS0ML-PARAGRAPH.

MOVE 'A'               TO DRAFT-ADJ-FLAG.
MOVE WS-CURRENT-DATE-YYDDD  TO DRAFT-ADJ-DATE.
MOVE EIBTIME           TO DRAFT-ADJ-TIME.
IF DRAFT-CTL-NR IS NUMERIC
MOVE DRAFT-CTL-NR TO DRAFT-ADJ-CTL-NR
ELSE
MOVE +0           TO DRAFT-ADJ-CTL-NR
END-IF
IF DRAFT-CURRENT-AMT IS NUMERIC
MOVE DRAFT-CURRENT-AMT TO DRAFT-TOTAL-ADJ-AMT
ELSE
MOVE +0                TO DRAFT-TOTAL-ADJ-AMT
END-IF
MOVE +0 TO DRAFT-CURRENT-AMT.
MOVE +0 TO DRAFT-CANADIAN-AMT.
EXEC CICS REWRITE
DATASET ('DRAFTS1')
FROM    (DRAFT-RECORD-SET)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


UPDATE-DRAFT2-TO-ZERO.

MOVE 'UPDATE-DRAFT2-TO-ZERO'     TO CXUTS0ML-PARAGRAPH.
IF NOT DUPLICATE-WRITES-INHIBITED
EXEC CICS READ
DATASET ('DRAFTS2')
INTO    (DRNEW-RECORD-SET)
RIDFLD  (DRAFT-CHECK-NR)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE DRAFT-CHECK-NR    TO WS-NUM-9
MOVE WS-NUM-9          TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
EXEC CICS REWRITE
DATASET ('DRAFTS2')
FROM    (DRAFT-RECORD-SET)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


UPDATE-DRFTLG1-TO-ZERO.

MOVE 'UPDATE-DRFTLG1-TO-ZERO'    TO CXUTS0ML-PARAGRAPH.

MOVE +1 TO DRFTLG1-RRN.
EXEC CICS READ
DATASET ('DRFTLG1')
INTO    (DRFTLG-CONTROL-RECORD)
RIDFLD  (DRFTLG1-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE DRFTLG1-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE '*' TO ERROR-FLAG
END-IF
IF ERROR-FLAG NOT = '*'
IF DRFTLG-LAST-LOCATION IS NOT NUMERIC
MOVE +1 TO DRFTLG-LAST-LOCATION
ELSE
ADD +1  TO DRFTLG-LAST-LOCATION
END-IF
EXEC CICS REWRITE
DATASET ('DRFTLG1')
FROM    (DRFTLG-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE DRFTLG-LAST-LOCATION TO DRFTLG1-RRN
PERFORM WRITE-NEW-DRFTLG1-TO-ZERO
END-IF.


WRITE-NEW-DRFTLG1-TO-ZERO.

MOVE 'WRITE-NEW-DRFTLG1-TO-ZERO' TO CXUTS0ML-PARAGRAPH.
MOVE DRAFT-TOTAL-ADJ-AMT TO DRAFT-CURRENT-AMT.
COMPUTE DRAFT-CURRENT-AMT = (DRAFT-CURRENT-AMT * -1).
MOVE DRAFT-RECORD-SET    TO DRFTLG-RECORD.
MOVE 'A'                 TO DRFTLG-NA-CLEAR-FLAG.
MOVE 'A'                 TO DRFTLG-PROCESS-INDICATOR.
MOVE DRFTLG-ACCT-CODE    TO DRFTLG-PREV-ACCT-CODE.
MOVE +0                  TO DRFTLG-ASSOC-DRAFT.
IF DRFTLG-ORIGINAL-AMT IS NUMERIC
MOVE DRFTLG-ORIGINAL-AMT TO DRFTLG-PREV-AMOUNT
ELSE
MOVE +0                  TO DRFTLG-PREV-AMOUNT.
IF DRFTLG-DATE IS NUMERIC
MOVE DRFTLG-DATE TO DRFTLG-PREV-DATE
ELSE
MOVE +0          TO DRFTLG-PREV-DATE.
EXEC CICS WRITE
DATASET ('DRFTLG1')
FROM    (DRFTLG-RECORD)
RIDFLD  (DRFTLG1-RRN) RRN
RESP    (EIBRESP)
END-EXEC.
MOVE DRFTLG1-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-DUPREC-EIBRESP.
IF EIBRESP = DFHRESP(DUPREC)
MOVE '*' TO ERROR-FLAG.


UPDATE-DRFTLG2-TO-ZERO.

MOVE 'UPDATE-DRFTLG2-TO-ZERO'    TO CXUTS0ML-PARAGRAPH.
MOVE +1 TO DRFTLG1-RRN.
EXEC CICS READ
DATASET ('DRFTLG2')
INTO    (DRFTLG-CONTROL-RECORD)
RIDFLD  (DRFTLG1-RRN) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE DRFTLG1-RRN       TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
MOVE '*' TO ERROR-FLAG
END-IF
IF ERROR-FLAG NOT = '*'
IF DRFTLG-LAST-LOCATION IS NOT NUMERIC
MOVE +1 TO DRFTLG-LAST-LOCATION
ELSE
ADD +1  TO DRFTLG-LAST-LOCATION
END-IF
EXEC CICS REWRITE
DATASET ('DRFTLG2')
FROM    (DRFTLG-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE DRFTLG-LAST-LOCATION TO DRFTLG1-RRN
EXEC CICS WRITE
DATASET ('DRFTLG2')
FROM    (DRFTLG-RECORD)
RIDFLD  (DRFTLG1-RRN) RRN
RESP    (EIBRESP)
END-EXEC
MOVE DRFTLG1-RRN        TO WS-NUM-7
MOVE WS-NUM-7           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
IF EIBRESP = DFHRESP(DUPREC)
MOVE '*' TO ERROR-FLAG.

ZERO-DRAFT-ERROR.


IF DRAFT-CHECK-NR IS NOT NUMERIC
MOVE '*' TO ERROR-FLAG
END-IF
MOVE DRAFT-CHECK-NR TO WS-CHECK-NR.
IF WS-CHECK-NR-1 IS = '8'
MOVE '*' TO ERROR-FLAG
ELSE
IF WS-CHECK-NR-1 IS = '9'
MOVE '8' TO WS-CHECK-NR-1
ELSE
MOVE '9' TO WS-CHECK-NR-1.
MOVE WS-CHECK-NR TO DRAFT-CHECK-NR.


LOG-SECURITY-TO-CDAUDIT.

MOVE 'LOG-SECURITY-TO-CDAUDIT'   TO CXUTS0ML-PARAGRAPH.
MOVE 'FP  '                 TO OLF-TRAN-OR-FILE-ID.
MOVE FMDL-SC-SRVC-CNTR-CODE TO OLF-CUST-OR-CARD-ID.
COMPUTE OLF-LOG-DATE = 0199999  - EIBDATE.
COMPUTE OLF-LOG-TIME = 999999 - EIBTIME.
MOVE EIBTRMID               TO OLF-TERMINAL-ID.
MOVE WS-OPERID              TO OLF-OP-ID.
MOVE ZEROES                 TO OLF-DUP-KEY-NR.

MOVE 'RECOURSE  '              TO OLF-FUNCTION-OR-FIELD
MOVE WS-WORK-NW-DATE           TO WS-DATE-MDY.
MOVE WS-DATE-DD                TO WS-CC-CONTROL-DD.
MOVE FMDL-RK-CONTROL-NUMBER    TO WS-CC-CONTROL-NR.
MOVE WS-CC-CONTROL-NR-DISP     TO OLF-NEW-DESCRIPTION
MOVE WS-UIWA-SC-SECURITY-CARD  TO OLF-OLD-DESCRIPTION

PERFORM WITH TEST AFTER
VARYING OLF-DUP-KEY-NR FROM 0 BY 1
UNTIL   OLF-DUP-KEY-NR = 10 OR
EIBRESP = DFHRESP (NORMAL)
EXEC CICS WRITE
DATASET ('CDAUDIT')
FROM    (OLF-ONLINE-LOGING-RECORD)
RIDFLD  (OLF-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE OLF-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
END-PERFORM.


VALIDATE-DRIVER-NUMBER.

MOVE SPACES TO ERROR-FLAG.
IF (WS-UIWA-EMPLOYEE-NR NOT > SPACES)
MOVE INVALID-DRIVER-NR TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

IF WS-UIWA-EMPLOYEE-NR = PRM-CARD-EMPLOYEE-ID
GO TO VDN-EXIT.

IF CDN-CUST-MC-CUSTID = 'Y'
MOVE 6 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
PRM-CARD-EMPLOYEE-ID,
WS-ZERO
MOVE 6 TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-EMPLOYEE-NR,
WS-ZERO
END-IF

IF WS-UIWA-EMPLOYEE-NR = PRM-CARD-EMPLOYEE-ID
GO TO VDN-EXIT.


IF NOT THIS-BE-AN-UNATTENDED-XTN
MOVE INVALID-DRIVER-NR   TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.


MOVE WS-UIWA-EMPLOYEE-NR  TO WS-DRIVER-NR-KEYED-INFO.
MOVE PRM-CARD-EMPLOYEE-ID TO WS-DRIVER-NR-CARD-INFO.
PERFORM VALIDATE-NUMBER-TO-LETTER-LOOP THRU VNTLL-EXIT
VARYING WORK-INDEX FROM 1 BY 1
UNTIL WORK-INDEX > 16   OR
ERROR-FLAG = '*'.

IF ERROR-FLAG = '*'
MOVE INVALID-DRIVER-NR   TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

VDN-EXIT.
EXIT.


VALIDATE-NUMBER-TO-LETTER-LOOP.









IF WS-DRIVER-NR-KEYED (WORK-INDEX) < ' '
MOVE ' ' TO WS-DRIVER-NR-KEYED (WORK-INDEX).
IF WS-DRIVER-NR-CARD (WORK-INDEX) < ' '
MOVE ' ' TO WS-DRIVER-NR-CARD (WORK-INDEX).


IF WS-DRIVER-NR-KEYED (WORK-INDEX) =
WS-DRIVER-NR-CARD  (WORK-INDEX)
GO TO VNTLL-EXIT.


IF WS-DRIVER-NR-KEYED-N (WORK-INDEX) NOT NUMERIC
MOVE '*' TO ERROR-FLAG
GO TO VNTLL-EXIT.


MOVE WS-DRIVER-NR-KEYED-N (WORK-INDEX) TO WS-INDEX
MOVE ZEROES TO WS-TALLY
INSPECT WS-DRIVER-NR-VALIDATE (WS-INDEX)
TALLYING WS-TALLY
FOR ALL WS-DRIVER-NR-CARD (WORK-INDEX)
IF WS-TALLY = ZEROES
MOVE '*' TO ERROR-FLAG.

VNTLL-EXIT.
EXIT.


VALIDATE-VEHICLE-CARD.

IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
IF ON-HIERARCHY
PERFORM 51027-HIER-VALIDATE-VEH-CARD
ELSE
PERFORM 51026-CUST-VALIDATE-VEH-CARD
END-IF.


51026-CUST-VALIDATE-VEH-CARD.


IF CDN-CARDHOLDER-ID-MASTER > SPACES
MOVE CDN-CARDHOLDER-ID-MASTER   TO DRGR-CUST-ID
ELSE
MOVE CDN-CUST-NUMBER            TO DRGR-CUST-ID
END-IF.
MOVE PRM-DRIVER-GROUP-ID           TO DRGR-GRP-ID.
IF WS-UIWA-PROMPTED-DRIVER-ID > SPACES
MOVE WS-UIWA-PROMPTED-DRIVER-ID TO DRGR-DRVR-ID
ELSE
MOVE WS-UIWA-EMPLOYEE-NR        TO DRGR-DRVR-ID
END-IF
PERFORM VALIDATE-VEHICLE-CARD-READ.


IF SQLCODE = +100  AND  CDN-CUST-MC-CUSTID = 'Y'
IF WS-UIWA-PROMPTED-DRIVER-ID > SPACES
MOVE 6       TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-PROMPTED-DRIVER-ID,
WS-ZERO
MOVE WS-UIWA-PROMPTED-DRIVER-ID TO DRGR-DRVR-ID
ELSE
MOVE 6       TO FIELD-LENGTH
CALL 'CXUTSSPR' USING FIELD-LENGTH,
WS-UIWA-EMPLOYEE-NR,
WS-ZERO
MOVE WS-UIWA-EMPLOYEE-NR        TO DRGR-DRVR-ID
END-IF
PERFORM VALIDATE-VEHICLE-CARD-READ
END-IF.

IF DRVR-ID-ON-HOLD-FLG OF DCUSDRVR = SPACES OR 'N'
NEXT SENTENCE
ELSE
MOVE EIBTIME                    TO
WS-CURR-DRVR-ID-HOLD-REL-TM
MOVE DRVR-ID-HOLD-REL-DT OF DCUSDRVR (1:4)
TO WS-DRVR-ID-HOLD-REL-DT
(1:4)
MOVE DRVR-ID-HOLD-REL-DT OF DCUSDRVR (6:2)
TO WS-DRVR-ID-HOLD-REL-DT
(5:2)
MOVE DRVR-ID-HOLD-REL-DT OF DCUSDRVR (9:2)
TO WS-DRVR-ID-HOLD-REL-DT
(7:2)
IF (WS-DRVR-ID-HOLD-REL-DT > WS-CURRENT-DATE-YYYYMMDD)
OR (WS-DRVR-ID-HOLD-REL-DT = WS-CURRENT-DATE-YYYYMMDD
AND DRVR-ID-HOLD-REL-TM OF DCUSDRVR >
WS-CURR-DRVR-ID-HOLD-REL-HR-MI)
MOVE +100                    TO SQLCODE
ELSE
IF DRVR-ID-HOLD-REL-DT OF DCUSDRVR = '0001-01-01'
MOVE +100                 TO SQLCODE
ELSE
PERFORM UPDATE-CUST-DRIVER
END-IF
END-IF
END-IF.

IF SQLCODE = +100
MOVE 'FLEET'                    TO DRVR-LAST-NM
MOVE 'UNKNOWN'                  TO DRVR-FIRST-NM
MOVE ' '                        TO DRVR-LIC-NBR
MOVE ' '                        TO DRVR-STATE-CD
MOVE INVALID-DRIVER-NR-VEHICLE  TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N        TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF.


VALIDATE-VEHICLE-CARD-READ.

MOVE 'VALIDATE-VEHICLE-CARD      ' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT   '                   TO CXUTS0ML-COMMAND.

MOVE SPACES               TO DRVR-ID-ON-HOLD-FLG OF DCUSDRVR.

EXEC SQL
SELECT DRGR_CUST_ID,
DRGR_GRP_ID,
DRGR_DRVR_ID,
DRVR_LAST_NM,
DRVR_FIRST_NM,
DRVR_LIC_NBR,
DRVR_STATE_CD,
DRVR_ID_ON_HOLD_FLG,
DRVR_ID_HOLD_REL_DT,
DRVR_ID_HOLD_REL_TM
INTO   :DRGR-CUST-ID,
:DRGR-GRP-ID,
:DRGR-DRVR-ID,
:DRVR-LAST-NM,
:DRVR-FIRST-NM,
:DRVR-LIC-NBR,
:DRVR-STATE-CD,
:DCUSDRVR.DRVR-ID-ON-HOLD-FLG,
:DCUSDRVR.DRVR-ID-HOLD-REL-DT,
:DCUSDRVR.DRVR-ID-HOLD-REL-TM
FROM CXXCOW.CUST_DRVR_GRPS INNER JOIN
CXXCOW.CUST_DRIVER ON
DRGR_CUST_ID  = DRVR_CUST_ID  AND
DRGR_DRVR_ID  = DRVR_ID
WHERE DRGR_CUST_ID = :DRGR-CUST-ID  AND
DRGR_GRP_ID  = :DRGR-GRP-ID   AND
DRGR_DRVR_ID = :DRGR-DRVR-ID
END-EXEC.
PERFORM CHECK-NOTFND-SQL.


UPDATE-CUST-DRIVER.

MOVE 'UPDATE-CUST-DRIVER         ' TO CXUTS0ML-PARAGRAPH
MOVE 'UPDATE   '                   TO CXUTS0ML-COMMAND.

MOVE DRGR-CUST-ID OF DRVRGRP     TO DRVR-CUST-ID OF DCUSDRVR.
MOVE DRGR-DRVR-ID OF DRVRGRP       TO DRVR-ID OF DCUSDRVR.

PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
UPDATE CXXCOW.CUST_DRIVER
SET   DRVR_ID_ON_HOLD_FLG = 'N',
DRVR_ID_HOLD_REL_DT = '0001-01-01',
DRVR_ID_HOLD_REL_TM = 0,
DRVR_UPDATE_TS      = CURRENT TIMESTAMP
WHERE DRVR_CUST_ID = :DCUSDRVR.DRVR-CUST-ID
AND DRVR_ID      = :DCUSDRVR.DRVR-ID
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM.

PERFORM CHECK-NORMAL-SQL.


51027-HIER-VALIDATE-VEH-CARD.


MOVE PIR-HIERARCHY-ID    TO HIER-ID    OF DHDRVNOD
MOVE PIR-NODE-ID         TO TSXCW050-NODE-ID
IF WS-UIWA-PROMPTED-DRIVER-ID > SPACES
MOVE WS-UIWA-PROMPTED-DRIVER-ID TO DRV-ID OF DHDRV
ELSE
MOVE WS-UIWA-EMPLOYEE-NR        TO DRV-ID OF DHDRV
END-IF
MOVE REPEAT              TO 51028-LOOP-STATUS
PERFORM 51028-FIND-NODE
UNTIL 51028-LOOP-STATUS = DONE
PERFORM 51029-FIND-DRV-ID.


51028-FIND-NODE.

MOVE '51028-FIND-NODE'    TO CXUTS0ML-PARAGRAPH
MOVE 'OPEN CURSOR'        TO CXUTS0ML-COMMAND
CALL 'CXUTS124' USING
TSXCW050-NODE-ID,
NODE-ID OF DHDRVNOD,
BY CONTENT LENGTH OF TSXCW050-NODE-ID,
BY CONTENT LENGTH OF NODE-ID OF DHDRVNOD
END-CALL
EXEC SQL
OPEN CUR_HIER_DRV_NODE
END-EXEC
PERFORM CHECK-NORMAL-SQL
MOVE 'FETCH CURSOR'       TO CXUTS0ML-COMMAND
EXEC SQL
FETCH CUR_HIER_DRV_NODE
INTO  :DHDRVNOD.NODE-ID,
:DHDRVNOD.DRV-GRP-ID
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = 0
MOVE DONE    TO 51028-LOOP-STATUS
ELSE
PERFORM 83050-FIND-PARENT
IF TSXCW050-NO-MORE-PARENTS
MOVE DONE TO 51028-LOOP-STATUS
MOVE 'FLEET'                   TO DRVR-LAST-NM
MOVE 'UNKNOWN'                 TO DRVR-FIRST-NM
MOVE ' '                       TO DRVR-LIC-NBR
MOVE ' '                       TO DRVR-STATE-CD
MOVE INVALID-DRIVER-NR-VEHICLE TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N       TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
END-IF
END-IF
MOVE 'CLOSE CURSOR'       TO CXUTS0ML-COMMAND
EXEC SQL
CLOSE CUR_HIER_DRV_NODE
END-EXEC
PERFORM CHECK-NORMAL-SQL.


51029-FIND-DRV-ID.

MOVE '51029-FIND-DRV-ID'  TO CXUTS0ML-PARAGRAPH
MOVE 'OPEN CURSOR'        TO CXUTS0ML-COMMAND
EXEC SQL
OPEN CUR_HIER_DRV
END-EXEC
PERFORM CHECK-NORMAL-SQL
MOVE 'FETCH CURSOR'       TO CXUTS0ML-COMMAND
EXEC SQL
FETCH CUR_HIER_DRV
INTO :DHDRV.DRV-ID,
:DHDRV.DRV-GRP-ID,
:DHDRV.DRV-LST-NM,
:DHDRV.DRV-FST-NM,
:DHDRV.DRV-LIC-NBR,
:DHDRV.DRV-LIC-ST
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE NOT = 0
MOVE 'FLEET'                   TO DRVR-LAST-NM
MOVE 'UNKNOWN'                 TO DRVR-FIRST-NM
MOVE ' '                       TO DRVR-LIC-NBR
MOVE ' '                       TO DRVR-STATE-CD
MOVE INVALID-DRIVER-NR-VEHICLE TO OUT-COMENT
MOVE INVALID-DRIVER-NR-N       TO POS-ERROR-NUMBER
PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
ELSE
MOVE DRV-LST-NM  TO DRVR-LAST-NM
MOVE DRV-FST-NM  TO DRVR-FIRST-NM
MOVE DRV-LIC-NBR TO DRVR-LIC-NBR
MOVE DRV-LIC-ST  TO DRVR-STATE-CD
END-IF
MOVE 'CLOSE CURSOR'       TO CXUTS0ML-COMMAND
EXEC SQL
CLOSE CUR_HIER_DRV
END-EXEC
PERFORM CHECK-NORMAL-SQL.


52000-VALIDATE-CUST-UNIT.


IF CDN-UNIT-ID-MASTER > SPACES
MOVE CDN-UNIT-ID-MASTER         TO CUST-ID OF DCUUGRP
ELSE
MOVE CDN-CUST-NUMBER            TO CUST-ID OF DCUUGRP
END-IF.

MOVE COM-UNIT-NR-EXPANDED          TO UNIT-ID OF DCUUGRP
MOVE PIR-UNIT-GROUP-ID             TO GRP-ID  OF DCUUGRP

MOVE '52000-VALIDATE-CUST-UNIT   ' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT   '                   TO CXUTS0ML-COMMAND.

EXEC SQL
SELECT T1.CUST_ID,
T1.GRP_ID,
T1.UNIT_ID
INTO   :DCUUGRP.CUST-ID,
:DCUUGRP.GRP-ID,
:DCUUGRP.UNIT-ID
FROM DBO.CUST_UNIT_GRPS T1 INNER JOIN
DBO.CUST_UNIT T2 ON
T1.CUST_ID  = T2.CUST_ID  AND
T1.UNIT_ID  = T2.UNIT_ID
WHERE T1.CUST_ID = :DCUUGRP.CUST-ID AND
T1.GRP_ID  = :DCUUGRP.GRP-ID AND
T1.UNIT_ID = :DCUUGRP.UNIT-ID
END-EXEC.

PERFORM CHECK-NOTFND-SQL.


CONVERT-FOR-US-ACCOUNT.


MOVE WS-UIWA-CASH-AMT    TO WS-UIWA-CASH-AMT-SC,
WS-CANADIAN-DOLLARS.
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-CASH-AMT.


MOVE WS-UIWA-NR2-QTY     TO WS-UIWA-NR2-QTY-SC, WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS          TO WS-UIWA-NR2-QTY.

MOVE WS-UIWA-NR2-PPU     TO WS-UIWA-NR2-PPU-SC, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR2-PPU.

MOVE WS-UIWA-NR2-COST    TO WS-UIWA-NR2-COST-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST.


MOVE WS-UIWA-OTH-QTY     TO WS-UIWA-OTH-QTY-SC, WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS          TO WS-UIWA-OTH-QTY.

MOVE WS-UIWA-OTH-PPU     TO WS-UIWA-OTH-PPU-SC, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-OTH-PPU.

MOVE WS-UIWA-OTH-COST    TO WS-UIWA-OTH-COST-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST.


MOVE WS-UIWA-REF-QTY     TO WS-UIWA-REF-QTY-SC, WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS          TO WS-UIWA-REF-QTY.

MOVE WS-UIWA-REF-PPU     TO WS-UIWA-REF-PPU-SC, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-REF-PPU.

MOVE WS-UIWA-REF-COST    TO WS-UIWA-REF-COST-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST.


MOVE WS-UIWA-NR1-QTY     TO WS-UIWA-NR1-QTY-SC, WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS          TO WS-UIWA-NR1-QTY.

MOVE WS-UIWA-NR1-PPU     TO WS-UIWA-NR1-PPU-SC,
WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-UIWA-NR1-PPU.

MOVE WS-UIWA-NR1-COST    TO WS-UIWA-NR1-COST-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST.


MOVE WS-UIWA-OIL-QTY     TO WS-UIWA-OIL-QTY-SC, WS-LITERS.
PERFORM LITERS-TO-QTS.
MOVE WS-QTS              TO WS-UIWA-OIL-QTY.

MOVE WS-UIWA-OIL-COST    TO WS-UIWA-OIL-COST-SC,
WS-CANADIAN-DOLLARS.
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-OIL-COST.


MOVE WS-UIWA-INVOICE-AMT TO WS-UIWA-INVOICE-AMT-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-INVOICE-AMT.

MOVE WS-UIWA-TAX-AMT     TO WS-UIWA-TAX-AMT-SC,
WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS       TO WS-UIWA-TAX-AMT.

MOVE WS-RETAIL-PPG-NR2   TO WS2-RETAIL-PPG-NR2, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-RETAIL-PPG-NR2.

MOVE WS-RETAIL-PPG-NR1   TO WS2-RETAIL-PPG-NR1, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG              TO WS-RETAIL-PPG-NR1.

MOVE WS-RETAIL-PPG-TRAILER TO WS2-RETAIL-PPG-TRAILER, WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG                TO WS-RETAIL-PPG-TRAILER.


CONVERT-FOR-CN-ACCOUNT.


MOVE WS-UIWA-CASH-AMT TO WS-UIWA-CASH-AMT-SC, WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-CASH-AMT.


MOVE WS-UIWA-NR2-QTY TO WS-UIWA-NR2-QTY-SC, WS-GALLONS.
PERFORM GALLONS-TO-LITERS.
MOVE WS-LITERS TO WS-UIWA-NR2-QTY.

MOVE WS-UIWA-NR2-PPU TO WS-UIWA-NR2-PPU-SC, WS-PPG.
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-UIWA-NR2-PPU.

MOVE WS-UIWA-NR2-COST TO WS-UIWA-NR2-COST-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST.


MOVE WS-UIWA-OTH-QTY TO WS-UIWA-OTH-QTY-SC, WS-GALLONS.
PERFORM GALLONS-TO-LITERS.
MOVE WS-LITERS TO WS-UIWA-OTH-QTY.

MOVE WS-UIWA-OTH-PPU TO WS-UIWA-OTH-PPU-SC, WS-PPG.
PERFORM PPG-TO-PPL.
MOVE WS-PPL TO WS-UIWA-OTH-PPU.

MOVE WS-UIWA-OTH-COST TO WS-UIWA-OTH-COST-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST.


MOVE WS-UIWA-REF-QTY TO WS-UIWA-REF-QTY-SC, WS-GALLONS.
PERFORM GALLONS-TO-LITERS.
MOVE WS-LITERS TO WS-UIWA-REF-QTY.

MOVE WS-UIWA-REF-PPU TO WS-UIWA-REF-PPU-SC, WS-PPG.
PERFORM PPG-TO-PPL.
MOVE WS-PPL TO WS-UIWA-REF-PPU.

MOVE WS-UIWA-REF-COST TO WS-UIWA-REF-COST-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST.


MOVE WS-UIWA-NR1-QTY TO WS-UIWA-NR1-QTY-SC, WS-GALLONS.
PERFORM GALLONS-TO-LITERS.
MOVE WS-LITERS TO WS-UIWA-NR1-QTY.

MOVE WS-UIWA-NR1-PPU TO WS-UIWA-NR1-PPU-SC
WS-PPG.
PERFORM PPG-TO-PPL.
MOVE WS-PPL TO WS-UIWA-NR1-PPU.

MOVE WS-UIWA-NR1-COST TO WS-UIWA-NR1-COST-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST.


MOVE WS-UIWA-OIL-QTY TO WS-UIWA-OIL-QTY-SC, WS-QTS.
PERFORM QTS-TO-LITERS.
MOVE WS-LITERS TO WS-UIWA-OIL-QTY.

MOVE WS-UIWA-OIL-COST TO WS-UIWA-OIL-COST-SC, WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OIL-COST.


MOVE WS-UIWA-INVOICE-AMT TO WS-UIWA-INVOICE-AMT-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-INVOICE-AMT.

MOVE WS-UIWA-TAX-AMT TO WS-UIWA-TAX-AMT-SC,
WS-US-DOLLARS.
PERFORM US-DOLLARS-TO-CAN.
MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-TAX-AMT.

MOVE WS-RETAIL-PPG-NR2 TO WS2-RETAIL-PPG-NR2, WS-PPG.
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-RETAIL-PPG-NR2.

MOVE WS-RETAIL-PPG-NR1 TO WS2-RETAIL-PPG-NR1, WS-PPG.
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-RETAIL-PPG-NR1.

MOVE WS-RETAIL-PPG-TRAILER TO WS2-RETAIL-PPG-TRAILER, WS-PPG.
PERFORM PPG-TO-PPL
MOVE WS-PPL TO WS-RETAIL-PPG-TRAILER.


CONVERT-FOR-NO-ACCOUNT.

MOVE WS-UIWA-CASH-AMT      TO WS-UIWA-CASH-AMT-SC.
MOVE WS-UIWA-NR2-QTY       TO WS-UIWA-NR2-QTY-SC.
MOVE WS-UIWA-OTH-QTY       TO WS-UIWA-OTH-QTY-SC.
MOVE WS-UIWA-REF-QTY       TO WS-UIWA-REF-QTY-SC.
MOVE WS-UIWA-NR1-QTY       TO WS-UIWA-NR1-QTY-SC.
MOVE WS-UIWA-NR2-PPU       TO WS-UIWA-NR2-PPU-SC.
MOVE WS-UIWA-OTH-PPU       TO WS-UIWA-OTH-PPU-SC.
MOVE WS-UIWA-REF-PPU       TO WS-UIWA-REF-PPU-SC.
MOVE WS-UIWA-NR1-PPU       TO WS-UIWA-NR1-PPU-SC.
MOVE WS-UIWA-NR2-COST      TO WS-UIWA-NR2-COST-SC.
MOVE WS-UIWA-OTH-COST      TO WS-UIWA-OTH-COST-SC.
MOVE WS-UIWA-REF-COST      TO WS-UIWA-REF-COST-SC.
MOVE WS-UIWA-NR1-COST      TO WS-UIWA-NR1-COST-SC.
MOVE WS-UIWA-OIL-QTY       TO WS-UIWA-OIL-QTY-SC.
MOVE WS-UIWA-OIL-COST      TO WS-UIWA-OIL-COST-SC.
MOVE WS-UIWA-TAX-AMT       TO WS-UIWA-TAX-AMT-SC.
MOVE WS-UIWA-INVOICE-AMT   TO WS-UIWA-INVOICE-AMT-SC.
MOVE WS-RETAIL-PPG-NR2     TO WS2-RETAIL-PPG-NR2
MOVE WS-RETAIL-PPG-NR1     TO WS2-RETAIL-PPG-NR1
MOVE WS-RETAIL-PPG-TRAILER TO WS2-RETAIL-PPG-TRAILER.


CONVERT-FOR-US-AMOUNTS.

EVALUATE TRUE
WHEN COM-CO-IS-US
MOVE WS-UIWA-CASH-AMT      TO WS-UIWA-CASH-AMT-US
MOVE WS-UIWA-NR2-QTY       TO WS-UIWA-NR2-QTY-US
MOVE WS-UIWA-OTH-QTY       TO WS-UIWA-OTH-QTY-US
MOVE WS-UIWA-REF-QTY       TO WS-UIWA-REF-QTY-US
MOVE WS-UIWA-NR1-QTY       TO WS-UIWA-NR1-QTY-US
MOVE WS-UIWA-NR2-PPU       TO WS-UIWA-NR2-PPU-US
MOVE WS-UIWA-OTH-PPU       TO WS-UIWA-OTH-PPU-US
MOVE WS-UIWA-REF-PPU       TO WS-UIWA-REF-PPU-US
MOVE WS-UIWA-NR1-PPU       TO WS-UIWA-NR1-PPU-US
MOVE WS-UIWA-NR2-COST      TO WS-UIWA-NR2-COST-US
MOVE WS-UIWA-OTH-COST      TO WS-UIWA-OTH-COST-US
MOVE WS-UIWA-REF-COST      TO WS-UIWA-REF-COST-US
MOVE WS-UIWA-NR1-COST      TO WS-UIWA-NR1-COST-US
MOVE WS-UIWA-OIL-QTY       TO WS-UIWA-OIL-QTY-US
MOVE WS-UIWA-OIL-COST      TO WS-UIWA-OIL-COST-US
MOVE WS-UIWA-TAX-AMT       TO WS-UIWA-TAX-AMT-US
MOVE WS-UIWA-INVOICE-AMT   TO WS-UIWA-INVOICE-AMT-US
MOVE WS-RETAIL-PPG-NR2     TO WS3-RETAIL-PPG-NR2
MOVE WS-RETAIL-PPG-NR1     TO WS3-RETAIL-PPG-NR1
MOVE WS-RETAIL-PPG-TRAILER TO WS3-RETAIL-PPG-TRAILER
WHEN COM-SC-IS-US
MOVE WS-UIWA-CASH-AMT-SC    TO WS-UIWA-CASH-AMT-US
MOVE WS-UIWA-NR2-QTY-SC     TO WS-UIWA-NR2-QTY-US
MOVE WS-UIWA-OTH-QTY-SC     TO WS-UIWA-OTH-QTY-US
MOVE WS-UIWA-REF-QTY-SC     TO WS-UIWA-REF-QTY-US
MOVE WS-UIWA-NR1-QTY-SC     TO WS-UIWA-NR1-QTY-US
MOVE WS-UIWA-NR2-PPU-SC     TO WS-UIWA-NR2-PPU-US
MOVE WS-UIWA-OTH-PPU-SC     TO WS-UIWA-OTH-PPU-US
MOVE WS-UIWA-REF-PPU-SC     TO WS-UIWA-REF-PPU-US
MOVE WS-UIWA-NR1-PPU-SC     TO WS-UIWA-NR1-PPU-US
MOVE WS-UIWA-NR2-COST-SC    TO WS-UIWA-NR2-COST-US
MOVE WS-UIWA-OTH-COST-SC    TO WS-UIWA-OTH-COST-US
MOVE WS-UIWA-REF-COST-SC    TO WS-UIWA-REF-COST-US
MOVE WS-UIWA-NR1-COST-SC    TO WS-UIWA-NR1-COST-US
MOVE WS-UIWA-OIL-QTY-SC     TO WS-UIWA-OIL-QTY-US
MOVE WS-UIWA-OIL-COST-SC    TO WS-UIWA-OIL-COST-US
MOVE WS-UIWA-TAX-AMT-SC     TO WS-UIWA-TAX-AMT-US
MOVE WS-UIWA-INVOICE-AMT-SC TO WS-UIWA-INVOICE-AMT-US
MOVE WS2-RETAIL-PPG-NR2     TO WS3-RETAIL-PPG-NR2
MOVE WS2-RETAIL-PPG-NR1     TO WS3-RETAIL-PPG-NR1
MOVE WS2-RETAIL-PPG-TRAILER TO WS3-RETAIL-PPG-TRAILER
WHEN OTHER

PERFORM CONVERT-FOR-US-AMOUNTS-CN
END-EVALUATE.


CONVERT-FOR-US-AMOUNTS-CN.


MOVE WS-UIWA-CASH-AMT TO WS-CANADIAN-DOLLARS.
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-CASH-AMT-US.


MOVE WS-UIWA-NR2-QTY TO WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS TO WS-UIWA-NR2-QTY-US.

MOVE WS-UIWA-NR2-PPU TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-UIWA-NR2-PPU-US.

MOVE WS-UIWA-NR2-COST TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-NR2-COST-US.


MOVE WS-UIWA-OTH-QTY TO WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS TO WS-UIWA-OTH-QTY-US.

MOVE WS-UIWA-OTH-PPU TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-UIWA-OTH-PPU-US.

MOVE WS-UIWA-OTH-COST TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-OTH-COST-US.


MOVE WS-UIWA-REF-QTY TO WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS TO WS-UIWA-REF-QTY-US.

MOVE WS-UIWA-REF-PPU TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-UIWA-REF-PPU-US.

MOVE WS-UIWA-REF-COST TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-REF-COST-US.


MOVE WS-UIWA-NR1-QTY TO WS-LITERS.
PERFORM LITERS-TO-GALLONS.
MOVE WS-GALLONS TO WS-UIWA-NR1-QTY-US.

MOVE WS-UIWA-NR1-PPU TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS-UIWA-NR1-PPU-US.

MOVE WS-UIWA-NR1-COST TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-NR1-COST-US.


MOVE WS-UIWA-OIL-QTY TO WS-LITERS.
PERFORM LITERS-TO-QTS.
MOVE WS-QTS TO WS-UIWA-OIL-QTY-US.

MOVE WS-UIWA-OIL-COST TO WS-CANADIAN-DOLLARS.
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-OIL-COST-US.


MOVE WS-UIWA-INVOICE-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-INVOICE-AMT-US.

MOVE WS-UIWA-TAX-AMT TO WS-CANADIAN-DOLLARS
PERFORM CAN-DOLLARS-TO-US.
MOVE WS-US-DOLLARS TO WS-UIWA-TAX-AMT-US.

MOVE WS-RETAIL-PPG-NR2   TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS3-RETAIL-PPG-NR2.

MOVE WS-RETAIL-PPG-NR1   TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS3-RETAIL-PPG-NR1.

MOVE WS-RETAIL-PPG-TRAILER TO WS-PPL.
PERFORM PPL-TO-PPG
MOVE WS-PPG TO WS3-RETAIL-PPG-TRAILER.


ADJUST-AMOUNTS-FOR-COUNTRY.





IF (FMDL-CN-ACCOUNT-US-SC) OR
(FMDL-CN-ACCOUNT-CN-SC)
MOVE VR-EXPRESS-BALANCE       TO
VR-EXPRESS-BALANCE-CAN
MOVE VR-EXPRESS-BALANCE-AVAIL TO
VR-EXPRESS-BALANCE-AVAIL-CAN
MOVE VR-CASH-LIMIT-US TO
VR-CASH-LIMIT-CN
COMPUTE VR-EXPRESS-BALANCE ROUNDED =
(VR-EXPRESS-BALANCE * CAN-TO-US-RATE)
COMPUTE VR-EXPRESS-BALANCE-AVAIL ROUNDED =
(VR-EXPRESS-BALANCE-AVAIL *  CAN-TO-US-RATE)
COMPUTE VR-CASH-LIMIT-US ROUNDED =
(VR-CASH-LIMIT-US * CAN-TO-US-RATE)
ELSE
COMPUTE VR-EXPRESS-BALANCE-CAN       ROUNDED =
(VR-EXPRESS-BALANCE * US-TO-CAN-RATE)
COMPUTE VR-EXPRESS-BALANCE-AVAIL-CAN ROUNDED =
(VR-EXPRESS-BALANCE-AVAIL *  US-TO-CAN-RATE)
COMPUTE VR-CASH-LIMIT-CN ROUNDED =
(VR-CASH-LIMIT-US * US-TO-CAN-RATE).

MOVE CDN-VRU-CANADIAN-DRAFT   TO VR-VRU-CAN-DRAFT.






SETUP-SEND-MAIN-ENTRY-SCREEN.

PERFORM SSMES-SETUP-COUNTRY-CODE.
PERFORM SSMES-SETUP-SETTLEMENT-MSG.
PERFORM SSMES-SETUP-TERM-FUEL-MSG.
PERFORM SSMES-SETUP-DB-MSG.
PERFORM SSMES-SETUP-BRIDGE-MSG.
PERFORM SSMES-SETUP-PRINTER-CHK-INFO.
PERFORM SSMES-SETUP-TRAILER-NUMBER.
PERFORM SSMES-SETUP-TRAILER-HOURS.
PERFORM SSMES-SETUP-HUB-READING.
PERFORM SSMES-SETUP-TRI-STATE.
PERFORM SSMES-SETUP-TRAILER-HUB.
PERFORM SSMES-SETUP-TRIP-NUMBER.
PERFORM SSMES-SETUP-CAROLINA-MOTORS.
PERFORM SSMES-SETUP-MESSAGE-INFO.
PERFORM SSMES-SETUP-DISPLAY-INFO.
PERFORM SSMES-SETUP-FUEL-INFO.
PERFORM SSMES-SETUP-PO-INFO.
PERFORM SSMES-SETUP-TAX-INFO.
PERFORM SSMES-SETUP-OIL-INFO.
PERFORM SSMES-SETUP-CASH-INFO.
PERFORM SSMES-SETUP-PRODUCT-INFO.
PERFORM SSMES-SETUP-IOL-INFO.
PERFORM SSMES-SEND-MAP.


SSMES-SETUP-COUNTRY-CODE.

MOVE CDN-ACCOUNT-CURR-TYPE TO COM-ACCOUNT-CURR-TYPE.
IF WS-COUNTRY-CODE = 'US'
EVALUATE SCM-COUNTRY-CODE
WHEN 'U'
MOVE '1' TO COM-COUNTRY-FLAG
WHEN 'C'
MOVE '2' TO COM-COUNTRY-FLAG
END-EVALUATE
END-IF.
IF WS-COUNTRY-CODE = 'CD'
EVALUATE SCM-COUNTRY-CODE
WHEN 'U'
MOVE '3' TO COM-COUNTRY-FLAG
WHEN 'C'
MOVE '4' TO COM-COUNTRY-FLAG
END-EVALUATE
END-IF.


SSMES-SETUP-SETTLEMENT-MSG.

IF SCM-LOCATION-IS-SETTLEMENT OR
SCM-SC-HAS-ALLIANCES
MOVE 'G' TO COM-FP-PRNT-FLAG
MOVE 'SETTLEMENT TRANSACTION ' TO FPCHKHDO
MOVE '@' TO FPCHKA
MOVE '8' TO FPCHKHDA
EVALUATE TRUE
WHEN COM-PAC-PRIDE-FLAG = 'Y'
MOVE 'A' TO COM-FP-PRNT-FLAG
MOVE 'PACIFIC PRIDE XTN    ' TO FPCHKHDO
WHEN COM-MANUAL-IOL-XTN-YES
MOVE 'A' TO COM-FP-PRNT-FLAG
MOVE 'IOL TRNASACTION' TO FPCHKHDO
WHEN COM-RMR-NATS-FLAG = 'Y'
MOVE 'A' TO COM-FP-PRNT-FLAG
MOVE 'NATS PRE AUTH XTN    ' TO FPCHKHDO
WHEN COM-PREFERRED-CUSTOMER
MOVE 'A' TO COM-FP-PRNT-FLAG
MOVE 'PREFERRED TRANSACTION ' TO FPCHKHDO
WHEN SCM-SC-HAS-ALLIANCES
MOVE 'A' TO COM-FP-PRNT-FLAG
MOVE 'ALLIANCE TRANSACTION ' TO FPCHKHDO
END-EVALUATE
END-IF.


SSMES-SETUP-TERM-FUEL-MSG.

IF COM-THIS-IS-A-TERM-FUEL-XTN
MOVE 'T' TO COM-FP-PRNT-FLAG
MOVE SCM-OVER-RIDE-RATE   TO  WS-BINARY-FIELD
MOVE WS-BINARY-LOW        TO  COM-FP-SCRAMBLER-FLAG
MOVE 'TERMINAL FUEL..NO CHECK' TO FPCHKHDO
MOVE '8' TO FPCHKHDA
MOVE '@' TO FPCHKA
IF WS-FP-ACCT-CODE = 'WA050' OR 'WA084' OR 'WA146' OR
'WA154' OR 'WA155' OR 'WA159'
MOVE '1' TO COM-DIRECT-BILLING-OIL,
COM-DIRECT-BILLING-FUEL
MOVE 'U' TO COM-FP-PRNT-FLAG
END-IF
END-IF.


SSMES-SETUP-DB-MSG.

IF MNX-TRANSACTION OR COM-PRM-NETWORKING = 'D'
MOVE 'DIRECT BILL TRANSACTION ' TO FPCHKHDO
MOVE '@' TO FPCHKA, FPAUTHDA, FPAUTOA
MOVE '8' TO FPCHKHDA
IF COM-PREFERRED-CUSTOMER
MOVE 'PREFERRED DB TRANSACTION' TO FPCHKHDO
END-IF
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE 'COMDATA COMPLETE (??)   '       TO FPCHKHDO
EVALUATE TRUE
WHEN COM-CC-FUNDED
MOVE 'COMDATA COMPLETE (FN)   ' TO FPCHKHDO
WHEN COM-CC-FUNDED-OVERRIDE
MOVE 'COMDATA COMPLETE (FN)   ' TO FPCHKHDO
WHEN COM-CC-RECOURSE
MOVE 'COMDATA COMPLETE (RC)   ' TO FPCHKHDO
WHEN COM-CC-NON-FUNDED
MOVE 'COMDATA COMPLETE (NF)   ' TO FPCHKHDO
END-EVALUATE
END-IF
END-IF.


SSMES-SETUP-BRIDGE-MSG.

IF CDN-RELATIONSHIP-FLAG = 'Y'
IF COM-PNET-BRIDGE-FLAG-YES
MOVE 'BRIDGE TRANSACTION' TO FPCHKHDO
END-IF
END-IF.


SSMES-SETUP-PRINTER-CHK-INFO.

IF THIS-IS-A-POSSIBLE-PRINT
IF AUTO-DIAL-IS-DOWN
MOVE SPACES TO COM-FP-PRNT-FLAG, COM-FP-SCRAMBLER-FLAG
MOVE '8' TO FPAUTHDA
MOVE 'UNABLE TO PRINT NOW' TO FPAUTHDO
ELSE
MOVE '8' TO FPAUTHDA
MOVE 'I' TO FPAUTOA
END-IF
END-IF.


SSMES-SETUP-TRAILER-NUMBER.

IF CDN-TRAILER-NR-FLAG = 'C' OR 'V' OR 'P'
NEXT SENTENCE
ELSE
MOVE '@' TO TRLRHDA, TRLRNRA
END-IF.


SSMES-SETUP-TRAILER-HOURS.

IF CDN-VERIFY-TRAILER-HOURS = 'C' OR 'V'
NEXT SENTENCE
ELSE
MOVE '@' TO TRLRHRA, TRHRHDA
END-IF.


SSMES-SETUP-HUB-READING.


IF NOT HUB-READING-REQUIRED AND
COM-FP-CO-CODE   NOT = '00109'   AND
COM-FP-CO-CODE   NOT = '00115'   AND
COM-FP-CO-CODE   NOT = '00238'   AND
WS-FP-ACCT-CODE NOT = 'TR440' AND
WS-FP-ACCT-CODE NOT = 'TR355' AND
WS-FP-ACCT-CODE NOT = 'SC071' AND
WS-FP-ACCT-CODE NOT = 'LE041'
MOVE '@' TO FPHUBHDA, FPHUBA
END-IF.


SSMES-SETUP-TRI-STATE.

IF (COM-FP-CO-CODE   = '00109' OR '00115' OR '00238') OR
(WS-FP-ACCT-CODE = 'TR440' OR 'TR355' OR
'SC071' OR 'LE041')
MOVE TRI-STATE-MESSAGE-1 TO FPUNTHDO
MOVE TRI-STATE-MESSAGE-2 TO FPHUBHDO
END-IF.


SSMES-SETUP-TRAILER-HUB.

IF CDN-TRAILER-HUB = 'Y'
NEXT SENTENCE
ELSE
MOVE '@' TO TRHBHDA, TRLRHBA
END-IF.


SSMES-SETUP-TRIP-NUMBER.

IF CSR-TRIP-NUMBER-REQ = 'C'
IF PRM-DRIVER-TRIP-NR NOT > SPACES
MOVE 'T' TO WS-FL-TRIP-FLAG
ELSE
MOVE 'E' TO WS-FL-TRIP-FLAG
END-IF
END-IF.
IF TRIP-NR-REQ-THIS-UNIT
MOVE LOW-VALUES TO ADVHD3A, ADVTRIPA
ELSE
MOVE '@' TO  ADVHD3A, ADVTRIPA
END-IF.


SSMES-SETUP-CAROLINA-MOTORS.


IF WS-FP-ACCT-CODE = 'CA130' OR 'CA237'
MOVE LOW-VALUES TO ADVHD3A, ADVTRIPA
MOVE TRI-STATE-MESSAGE-1 TO FPUNTHDO
MOVE 'ENTER THE DRIVERS UNIT NR' TO ADVHD3O
END-IF.
IF TRIP-NR-ENTERED
MOVE '@' TO ADVHD3A, ADVTRIPA
END-IF.


SSMES-SETUP-MESSAGE-INFO.

IF THERE-IS-A-MESSAGE-PENDING
MOVE DFHBMASK TO MSGQRYA
MOVE 'A' TO MSGSTSA
MOVE UNITMST-MESSAGE-LINE TO FPMSG1O, POS-DRV-MESSAGE
END-IF.


SSMES-SETUP-DISPLAY-INFO.

MOVE OUT-COMENT-1 TO FPCMT1O.
MOVE OUT-COMENT-2 TO FPCMT2O.
IF COM-FP-SC-CODE-ST > 'XT'
STRING COM-PREVIOUS-CARD, COM-TS-STATE, '999'
DELIMITED BY SPACE
INTO FPINPUTO
ELSE
STRING COM-PREVIOUS-CARD, COM-FP-SC-CODE
DELIMITED BY SPACE
INTO FPINPUTO
END-IF.


SSMES-SETUP-FUEL-INFO.

IF CDN-BLENDED-FUEL-BLOCK = 'Y'
MOVE '@' TO OTHHD1A, OTHHD2A, FPGLNSBA, FPCOSTBA, FPTTLBA
FPSPRDA.
IF REFER-IS-BLOCKED
MOVE '@' TO TRGLNA, TRCOSTA, TRTOTALA, TRHD1A, TRHD2A
TRSPRDA.
IF CDN-NR-2-FLAG-IS-BLOCKED
MOVE '@' TO HEAD4A, HEAD5A, FPGLNSA, FPCOSTA, FPTTLA,
N2SPRDA.
IF CDN-NR-1-FLAG-IS-BLOCKED
MOVE '@' TO NR1HD1A, NR1HD2A, NR1GLNSA, NR1COSTA, NR1TTLA,
N1SPRDA.


IF COM-PUR-OPTIONS-FUEL = '0' THEN
MOVE SPACES TO FPCMT1O.


IF COM-SC-IS-CANADIAN
MOVE 'NR LITERS '             TO GLNSHDO
MOVE 'PRICE/LIT  TOTAL COST SUB PROD*'
TO PPGHDO
MOVE 'OIL LITERS..:'          TO OILHD1O.

IF COM-PUR-OPTIONS-FUEL NOT = '1' THEN
MOVE '@' TO HEAD1A, HEAD2A, HEAD3A, HEAD4A, HEAD5A,
HEAD6A, HEAD7A, HEAD8A, HEAD9A, HEAD10A,
HEAD11A, HEAD12A, HEAD13A,
GLNSHDA, PPGHDA, FPGLNSA, FPCOSTA, FPTTLA,
NR1HD1A, NR1HD2A, NR1GLNSA, NR1COSTA,
NR1TTLA, TRHD1A, TRHD2A, TRGLNA, TRCOSTA,
TRTOTALA, OTHHD1A, OTHHD2A, FPGLNSBA,
FPCOSTBA, FPTTLBA, FPSPRDA,
N2SPRDA, N1SPRDA, TRSPRDA.

IF COM-FUEL-PRICE-CREDIT
MOVE 'CRED' TO HEAD2O.


SSMES-SETUP-PO-INFO.

IF CDN-PURCHASE-ORDER-VALID
NEXT SENTENCE
ELSE
MOVE '@' TO POHDA, PONRA
END-IF.


SSMES-SETUP-TAX-INFO.

MOVE 'SSMES-SETUP-TAX-INFO'      TO CXUTS0ML-PARAGRAPH.

MOVE SPACES TO COMDATA-ADDRESS-RECORD.

IF SCM-COUNTRY-CODE = 'C'
MOVE 'SC' TO CAR-CUSTOMER-TYPE
MOVE WS-UIWA-SC-CODE TO CAR-CUSTOMER-CODE
MOVE 'A' TO CAR-ADDRESS-TYPE
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE CAR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
MOVE CAR-TAX-ID          TO WS-HLD-CAR-TAX-ID
IF COM-PNET-BRIDGE-FLAG-YES AND
COM-PNET-CHAIN-CODE > SPACES
MOVE 'CH' TO CAR-CUSTOMER-TYPE
MOVE COM-PNET-CHAIN-CODE TO CAR-CUSTOMER-CODE
MOVE 'A' TO CAR-ADDRESS-TYPE
EXEC CICS READ
DATASET ('CDADDR')
RIDFLD  (CAR-KEY)
INTO    (COMDATA-ADDRESS-RECORD)
RESP    (EIBRESP)
END-EXEC
MOVE CAR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
END-IF
END-IF.

MOVE 'N'       TO COM-CAPTURE-TAX.
IF SCM-COUNTRY-CODE  = 'C' AND
WS-HLD-CAR-TAX-ID > SPACES
PERFORM 20630-GET-PRICE-CONTROL-INFO
IF SCM-AUTO-CALC-TAX-NO   OR
SCPM-AUTO-CALC-TAX-NO
MOVE 'Y' TO COM-CAPTURE-TAX.
IF COM-CAPTURE-TAX NOT = 'Y'
MOVE 'N' TO COM-CAPTURE-TAX
MOVE '@' TO CTAXHA, CTAXA.

MOVE SCM-TAX-APPLICATION TO COM-SCM-TAX-APPLICATION.
IF NOT COM-SCM-TAX-APP-VALID
MOVE '1' TO COM-SCM-TAX-APPLICATION
END-IF.


SSMES-SETUP-OIL-INFO.

IF COM-PUR-OPTIONS-OIL = '0'
MOVE '@' TO OILHD1A, OILQTSA, OILHD3A, OILCSTA
END-IF.


SSMES-SETUP-CASH-INFO.

IF COM-PUR-OPTIONS-CASH = '0'
MOVE '@' TO ADVHD1A, ADVQRYA, ADVHD2A, ADVAMTA
END-IF.


SSMES-SETUP-PRODUCT-INFO.

IF COM-PUR-OPTIONS-PROD = '0'
MOVE '@' TO
PRD1CDA, PRD1AMTA, PRD1DSCA, PRD1HD1A, PRD1HD2A,
PRD2CDA, PRD2AMTA, PRD2DSCA, PRD2HD1A, PRD2HD2A,
PRD3CDA, PRD3AMTA, PRD3DSCA, PRD3HD1A, PRD3HD2A
ELSE
IF COM-CUSTOM-FEE-FLAG NOT = 'Y' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y' AND
(CDN-CREDIT-PRICED-FLAG = 'N' OR ' ' OR LOW-VALUES) AND
SCM-MERCH-SUR-CHG-PCT NUMERIC AND
SCM-MERCH-SUR-CHG-PCT > ZEROS
MOVE '@' TO PRD3CDA, PRD3AMTA, PRD3DSCA, PRD3HD1A,
PRD3HD2A
END-IF
END-IF.



SSMES-SETUP-IOL-INFO.


IF COM-MANUAL-IOL-XTN-YES
MOVE ATTR-ASKIP-FSET     TO FPXPAMTA, FPCOSTA, FPTTLA,
CTAXA
MOVE ATTR-ASKIP-DRK      TO OILHD1A, OILQTSA,
OILHD3A, OILCSTA
MOVE ATTR-ASKIP-DRK      TO ADVHD1A, ADVQRYA,
ADVHD2A, ADVAMTA
MOVE ATTR-ASKIP-DRK      TO
PRD1CDA, PRD1AMTA, PRD1DSCA, PRD1HD1A, PRD1HD2A,
PRD2CDA, PRD2AMTA, PRD2DSCA, PRD2HD1A, PRD2HD2A,
PRD3CDA, PRD3AMTA, PRD3DSCA, PRD3HD1A, PRD3HD2A
MOVE ATTR-ASKIP-DRK      TO
OTHHD1A, OTHHD2A, FPGLNSBA, FPCOSTBA, FPTTLBA
TRGLNA, TRCOSTA, TRTOTALA, TRHD1A, TRHD2A
NR1HD1A, NR1HD2A, NR1GLNSA, NR1COSTA, NR1TTLA
FPSPRDA, N2SPRDA, N1SPRDA, TRSPRDA
IF OUT-COMENT NOT > LOW-VALUES
MOVE '**** (THIS IS AN IOL XTN - INVOICE AMT, PPL & COS
-               'T WILL BE COMPUTED) ****' TO FPCMT1O
MOVE '**** (ONLY REQUIRE THE INVOICE# AND LITERS) ****'
TO FPCMT2O.


SSMES-SEND-MAP.

MOVE 'SSMES-SEND-MAP'            TO CXUTS0ML-PARAGRAPH.
EXEC CICS SEND
MAP    ('FPMAPB')
MAPSET ('USISET')
ERASE
CURSOR
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE 2 TO COM-STAGE.
PERFORM EXIT-FUEL-PGM-RETURN.





CHECK-FOR-EXIT-INITIAL-SCREEN.

EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN AND
(TSXCO0AT-TRAN-TYPE-PURC-SI-F OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F)
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN
PERFORM ATM-ERROR-CHECK
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
IF TSXCO0AT-TRAN-TYPE-WITHDRAW AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'ATM DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
IF TSXCO0AT-TRAN-TYPE-PURCHASE AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'POS DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
WHEN THIS-BE-A-NO-VERIFY-XTN
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH

IF (WS-UIWA-AUTH-1-PROD-CODE = '13' OR '14')
AND WS-UIWA-AUTH-2-PROD-CODE = '  '
AND WS-UIWA-AUTH-3-PROD-CODE = '  '
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
ELSE
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF
WHEN OTHER
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-EVALUATE.


EXIT-FUEL-PGM-INITIAL-SCREEN.

MOVE 'EXIT-FUEL-PGM-INITIAL-SCREEN' TO CXUTS0ML-PARAGRAPH.

IF POS-ERROR-NUMBER NOT NUMERIC
MOVE ZEROES TO POS-ERROR-NUMBER
END-IF
IF POS-ERROR-NUMBER > ZERO
OR WS-HOLD-POS-ERROR-NUMBER > ZERO
MOVE 'N'    TO WS-CIX-RESP-REQUESTED
MOVE '0210' TO WS-CIX-MESSAGE-TYPE
PERFORM IRIS-CHECK-AND-NOTIFY
END-IF
IF COM-OPER-DELIMITER = '@' AND
VCWS-ERROR
MOVE NEW-OUT-MSG1 TO FP1MSG1O
MOVE NEW-OUT-MSG2 TO FP1MSG2O
ELSE
MOVE OUT-COMENT-1 TO FP1MSG1O
MOVE OUT-COMENT-2 TO FP1MSG2O.

IF THIS-BE-A-PC-REQUEST OR
NON-PRODUCTION-REQUEST
MOVE OUT-COMENT TO 3270-OUTPUT-DATA
PERFORM EXIT-FUEL-PGM-FOR-PC.

PERFORM EXIT-INITIAL-SCREEN-ATTR1.
PERFORM EXIT-INITIAL-SCREEN-ATTR2.
PERFORM EXIT-INITIAL-SCREEN-MSG.

IF FP1TSCDI > 'XT999'
MOVE ATTR-ASKIP-DRK-FSET TO FP1TSCDA.
MOVE +1 TO COM-STAGE
EXEC CICS SEND
MAP    ('FPMAP1')
MAPSET ('USISET')
ERASE
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM EXIT-FUEL-PGM-RETURN.


CHECK-FOR-NO-VERIFY-EXIT.

MOVE POS-ERROR-NUMBER     TO WS-NV-ERROR-NR
IF WS-NV-ERROR-IGNORE
MOVE 'N'               TO WS-NV-EXIT-FLAG
ELSE
MOVE 'Y'               TO WS-NV-EXIT-FLAG
END-IF.



EXIT-INITIAL-SCREEN-ATTR1.

IF PRM-IN-STATION-CARD OR PRM-IN-STATION-PROGRAM OR
CDN-LICENSE-CAPTURE    OR
COM-DL-OPTION = 'Y'
NEXT SENTENCE
ELSE
IF NOT CDN-CUST-LICENSE-YES
MOVE '@' TO FP1DLNRA, FP1DLSTA, FP1HD2A, FP1HD3A.


EXIT-INITIAL-SCREEN-ATTR2.

IF NOT PRM-LOST-CARD         AND
NOT PRM-CARD-LOST         AND
NOT CSR-DRIVER-NR-VERIFY  AND
NOT CSR-DRIVER-NR-CAPTURE AND
NOT CSR-DRIVER-NR-VEHICLE
MOVE '@' TO FP1DNRA, FP1LCDA, FP1HD4A
ELSE
IF PRM-CARD-LOST OR
PRM-LOST-CARD
MOVE 'REPLACEMENT CARD...DRIVER WILL NOT HAVE CARD' TO
FP1LCDO
ELSE
MOVE SPACES TO FP1LCDO.


EXIT-INITIAL-SCREEN-MSG.

IF POS-ERROR-NUMBER > ZEROES
IF THERE-IS-A-MESSAGE-PENDING
MOVE '8'               TO FP1DMHA
MOVE '0'               TO FP1DMDA
MOVE UNITMST-MESSAGE-LINE TO FP1DMDO
ELSE
MOVE '@' TO FP1DMHA, FP1DMDA
ELSE
MOVE '@' TO FP1DMHA, FP1DMDA.



CHECK-FOR-EXIT-MAIN-SCREEN.

EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN AND
(TSXCO0AT-TRAN-TYPE-PURC-SI-F OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F)
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN
MOVE OUT-COMENT        TO POS-MESSAGE
PERFORM ATM-ERROR-CHECK
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
IF TSXCO0AT-TRAN-TYPE-WITHDRAW AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'ATM DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
IF TSXCO0AT-TRAN-TYPE-PURCHASE AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'POS DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
WHEN THIS-BE-A-NO-VERIFY-XTN
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH

IF (WS-UIWA-AUTH-1-PROD-CODE = '13' OR '14')
AND WS-UIWA-AUTH-2-PROD-CODE = '  '
AND WS-UIWA-AUTH-3-PROD-CODE = '  '
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
ELSE
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-IF
WHEN OTHER
PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
END-EVALUATE.


ATM-ERROR-CHECK.

IF WS-SAVE-ATM-ERROR-NUMBER = ZERO OR
(WS-SAVE-ATM-ERROR-NUMBER = ATM-BLOCKED-CARD-N AND
(POS-ERROR-NUMBER = SECURITY-PIN-IS-INVALID-N   OR
SECURITY-PIN-EXCESSIVE-N    OR
INVALID-ATM-NETWORK-N))
MOVE POS-ERROR-NUMBER    TO WS-SAVE-ATM-ERROR-NUMBER
MOVE POS-MESSAGE         TO WS-SAVE-ATM-ERROR-MESSAGE
ELSE
MOVE WS-SAVE-ATM-ERROR-NUMBER TO POS-ERROR-NUMBER
MOVE WS-SAVE-ATM-ERROR-MESSAGE TO POS-MESSAGE
END-IF.



EXIT-FUEL-PGM-MAIN-SCREEN.

MOVE 'EXIT-FUEL-PGM-MAIN-SCREEN' TO CXUTS0ML-PARAGRAPH.

IF POS-ERROR-NUMBER NOT NUMERIC
MOVE ZEROES TO POS-ERROR-NUMBER
END-IF
IF POS-ERROR-NUMBER > ZERO
OR WS-HOLD-POS-ERROR-NUMBER > ZERO
MOVE 'N'    TO WS-CIX-RESP-REQUESTED
MOVE '0210' TO WS-CIX-MESSAGE-TYPE
PERFORM IRIS-CHECK-AND-NOTIFY
END-IF
IF THIS-BE-A-PC-REQUEST         OR
THIS-BE-A-SETTLEMENT-REQUEST OR
NON-PRODUCTION-REQUEST
MOVE OUT-COMENT TO 3270-OUTPUT-DATA
PERFORM EXIT-FUEL-PGM-FOR-PC.

PERFORM EXIT-MAIN-SCREEN-BUILD-MSG.
PERFORM EXIT-MAIN-SCREEN-ATTR
PERFORM SSMES-SETUP-IOL-INFO.


IF WS-THIS-BE-A-RESTORE = 'Y'
PERFORM SETUP-SEND-MAIN-ENTRY-SCREEN.

MOVE +2 TO COM-STAGE.
IF WS-EXIT-PROGRAM-FLAG = 'Y'
PERFORM AUTH-LOG
MOVE SPACES             TO FP-COMMON-AREA
MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
MOVE 500 TO COM-STAGE.

EXEC CICS SEND
MAP    ('FPMAPB')
MAPSET ('USISET')
DATAONLY
CURSOR
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM EXIT-FUEL-PGM-RETURN.


EXIT-MAIN-SCREEN-ATTR.

IF GOLD-OK
IF WS-EXPAND-DISCOUNT-MSG = 'Y' OR
WS-EXPAND-FEE-MSG = 'Y'
MOVE POS-MESSAGE   TO FPCMT1O
ELSE
MOVE OUTPUT-GOLD-OK-1 TO FPCMT1O
END-IF
MOVE OUTPUT-GOLD-OK-2 TO FPCMT2O
IF COM-OPER-DELIMITER = '@'
MOVE NEW-OUTPUT-GOLD-OK-2 TO FPCMT2O
END-IF
END-IF.
IF REFER-IS-BLOCKED
MOVE '@' TO TRHD1A, TRHD2A, TRGLNA, TRCOSTA, TRTOTALA,
TRSPRDA.

IF COM-PUR-OPTIONS-PROD = '0'
MOVE '@' TO
PRD1CDA, PRD1AMTA, PRD1DSCA, PRD1HD1A, PRD1HD2A,
PRD2CDA, PRD2AMTA, PRD2DSCA, PRD2HD1A, PRD2HD2A,
PRD3CDA, PRD3AMTA, PRD3DSCA, PRD3HD1A, PRD3HD2A
ELSE
IF COM-CUSTOM-FEE-FLAG NOT = 'Y' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y' AND
(CDN-CREDIT-PRICED-FLAG = 'N' OR ' ' OR LOW-VALUES) AND
SCM-MERCH-SUR-CHG-PCT NUMERIC AND
SCM-MERCH-SUR-CHG-PCT > ZEROS
MOVE '@' TO PRD3CDA, PRD3AMTA, PRD3DSCA, PRD3HD1A,
PRD3HD2A
END-IF
END-IF.


EXIT-MAIN-SCREEN-BUILD-MSG.

IF POS-ERROR-NUMBER   > ZEROES AND
WS-UIWA-PO-NR NOT  > SPACES AND
CDN-PURCHASE-ORDER > SPACES
IF OUT-COMENT-2 > SPACES
MOVE +80 TO WS-FIELD-LEN-1
MOVE +25 TO WS-FIELD-LEN-2
MOVE +80 TO WS-FIELD-LEN-3
MOVE 'YNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1, OUT-COMENT-2
WS-FIELD-LEN-2, WS-TRY-PO-MSG
WS-FIELD-LEN-3, WS-FIELD-83
WS-CXUTSJON-OPTIONS
MOVE WS-FIELD-83   TO OUT-COMENT-2
ELSE
MOVE WS-TRY-PO-MSG TO OUT-COMENT-2.

MOVE OUT-COMENT-1 TO FPCMT1O
MOVE OUT-COMENT-2 TO FPCMT2O.
IF COM-OPER-DELIMITER = '@' AND
VCWS-ERROR
MOVE NEW-OUT-MSG1 TO FPCMT1O
MOVE NEW-OUT-MSG2 TO FPCMT2O.



CHECK-FOR-EXIT-FOR-PC.

EVALUATE TRUE
WHEN THIS-BE-AN-UNATTENDED-AUTH
WHEN FORCE-POST-FROM-PRE-AUTH
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN AND
(TSXCO0AT-TRAN-TYPE-PURC-SI-F OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F)
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
WHEN THIS-BE-AN-ATM-XTN
PERFORM ATM-ERROR-CHECK
MOVE POS-ERROR-NUMBER  TO WS-HOLD-POS-ERROR-NUMBER
MOVE POS-MESSAGE       TO WS-HOLD-POS-ERROR-MSG
MOVE ZEROES            TO POS-ERROR-NUMBER
MOVE SPACE             TO ERROR-FLAG
MOVE SPACE             TO COM-CREDIT-VERIFY
IF TSXCO0AT-TRAN-TYPE-WITHDRAW AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'ATM DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
IF TSXCO0AT-TRAN-TYPE-PURCHASE AND
WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE 'POS DEC'      TO WS-UIWA-INVOICE-NR
WS-UIWA-INVOICE-NR
END-IF
WHEN THIS-BE-A-NO-VERIFY-XTN
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH

IF (WS-UIWA-AUTH-1-PROD-CODE = '13' OR '14')
AND WS-UIWA-AUTH-2-PROD-CODE = '  '
AND WS-UIWA-AUTH-3-PROD-CODE = '  '
PERFORM CHECK-FOR-NO-VERIFY-EXIT
IF WS-NV-EXIT-YES
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF
ELSE
PERFORM EXIT-FUEL-PGM-FOR-PC
END-IF
WHEN OTHER
PERFORM EXIT-FUEL-PGM-FOR-PC
END-EVALUATE.


EXIT-FUEL-PGM-FOR-PC.

MOVE 'EXIT-FUEL-PGM-FOR-PC'      TO CXUTS0ML-PARAGRAPH.

IF POS-ERROR-NUMBER NOT NUMERIC
MOVE ZEROES TO POS-ERROR-NUMBER
END-IF
IF POS-ERROR-NUMBER > ZERO
OR WS-HOLD-POS-ERROR-NUMBER > ZERO
MOVE 'N'    TO WS-CIX-RESP-REQUESTED
MOVE '0210' TO WS-CIX-MESSAGE-TYPE
PERFORM IRIS-CHECK-AND-NOTIFY
END-IF
IF THIS-BE-A-VRU-CASH-ON-CARD
IF POS-ERROR-NUMBER NOT > ZERO
OR WS-HOLD-POS-ERROR-NUMBER NOT > ZERO
MOVE 'N' TO WS-CIX-RESP-REQUESTED
PERFORM IRIS-CHECK-AND-NOTIFY
END-IF
END-IF
IF COM-OPER-DELIMITER = '@' AND
VCWS-ERROR
MOVE NEW-OUT-MESSAGE TO 3270-OUTPUT-DATA.
IF POS-MESSAGE NOT > SPACES
MOVE 3270-OUTPUT-DATA TO POS-MESSAGE.


IF POS-ERROR-NUMBER > ZEROES AND
CDN-INTRA-DAY-FLAG = 'Y'
PERFORM INTRA-DAY-DOWNLOAD
PERFORM INTRA-DAY-DOWNLOAD-BF3
END-IF.

MOVE POS-MESSAGE TO OUT-COMENT.
PERFORM AUTH-LOG.

PERFORM EXIT-PC-CHECK-COMSITE.
PERFORM EXIT-PC-ATM-VRU-CHECK.
PERFORM EXIT-PC-MSG-BUILD.
PERFORM EXIT-PC-UNATTENDED-MSG-BUILD.


IF NOT THIS-BE-A-DIAL-PROD-PRE-AUTH
PERFORM EXIT-PC-ADDR-BUILD.

PERFORM EXIT-PC-SURCHARGE-BUILD.

IF THIS-BE-A-FLEET-XTN
PERFORM EXIT-PC-FLEET-XTN.

PERFORM EXIT-PC-UNATTENDED-EXIT.

IF EIBTRNID = ('FMBP' OR 'FMMP')
PERFORM EXIT-PC-BATCH-FUEL.

IF THIS-IS-A-POS-TRANS OR THIS-BE-A-NATS-AUTH
MOVE POS-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.

IF 3270-OUTPUT-DATA NOT > SPACES
MOVE POS-MESSAGE TO 3270-OUTPUT-DATA.
EXEC CICS SEND
FROM   (TERMINAL-OUTPUT-AREA)
LENGTH (208)
RESP   (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM EXEC-CICS-RETURN.


EXIT-PC-CHECK-COMSITE.

MOVE 'EXIT-PC-CHECK-COMSITE'     TO CXUTS0ML-PARAGRAPH.

IF POS-ERROR-NUMBER      > ZEROES AND
WS-SAVE-COM-SITE-ACCT > SPACES AND
(THIS-BE-AN-UNATTENDED-AUTH
OR FORCE-POST-FROM-PRE-AUTH)
MOVE SPACES                   TO COM-SITE-ERROR-LOG
INITIALIZE                       COM-SITE-ERROR-LOG

MOVE WS-SAVE-COM-SITE-ACCT    TO CSELK-COM-SITE-ACCT-CODE
MOVE WS-BUSINESS-DATE-CYYMMDD TO CSELK-DATE
MOVE EIBTIME                  TO CSELK-TIME
MOVE ZEROES                   TO CSELK-SEQ-NR
MOVE UNFORMATTED-AREA (1:4)   TO CSEL-TRANID-AREA
MOVE WS-PRM-CARD              TO CSEL-CARD-AREA


IF WS-COMSITE-OLD-FORMAT = 'Y'
MOVE WS-AUTOMATED-INPUT-AREA(18:)
TO CSEL-DETAIL-AREA
ELSE
PERFORM BUILD-COMSITE-LOG-DETAIL
END-IF
MOVE POS-ERROR-NUMBER         TO CSEL-FP-ERROR-NR
MOVE POS-MESSAGE              TO CSEL-FP-ERROR-MESSAGE
MOVE CDN-CUST-ACCT-CODE       TO CSEL-FP-ACCOUNT-CODE

MOVE CDN-CUST-NUMBER          TO CSEL-FP-CUSTOMER-ID
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL EIBRESP = DFHRESP(NORMAL) OR
TALLY > 10
EXEC CICS WRITE
DATASET ('CSITELG')
FROM    (COM-SITE-ERROR-LOG)
RIDFLD  (COM-SITE-ERROR-LOG-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE COM-SITE-ERROR-LOG-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
COMPUTE CSELK-SEQ-NR = CSELK-SEQ-NR + 1
END-PERFORM.


BUILD-COMSITE-LOG-DETAIL.

MOVE WS-AXIA-UNIT-NR          TO CSEL-UNIT-NR
MOVE WS-AXIA-SC-CODE          TO CSEL-LOC-CODE
MOVE WS-AXIA-NR2-QTY          TO CSEL-TRACTOR-GALS
MOVE WS-AXIA-NR2-COST         TO CSEL-TRACTOR-COST
MOVE WS-AXIA-INVOICE-NR       TO CSEL-INV-NR
MOVE WS-AXIA-TRIP-NR          TO CSEL-TRIP-NR
MOVE WS-AXIA-REF-QTY          TO CSEL-REEFER-GALS
IF WS-AXIA-REF-QTY  > ZERO AND
WS-AXIA-REF-COST > ZERO
IF WS-UIWA-REF-PPU > ZERO
MOVE WS-UIWA-REF-PPU    TO CSEL-REEFER-PPG
ELSE
COMPUTE CSEL-REEFER-PPG ROUNDED =
WS-AXIA-REF-COST / WS-AXIA-REF-QTY
END-COMPUTE
END-IF
END-IF
MOVE WS-AXIA-REF-COST         TO CSEL-REEFER-COST
MOVE WS-AXIA-OIL-QTY          TO CSEL-QT-OIL
MOVE WS-AXIA-OIL-COST         TO CSEL-OIL-COST
MOVE WS-AXIA-HUB              TO CSEL-HUB-NUMERIC
MOVE WS-AXIA-CASH-AMT         TO CSEL-CASH-ADV
MOVE WS-UIWA-PRINT-REQ        TO CSEL-FP-OLD-PRINTER-FLAG
IF WS-UIWA-CHECK-NR1 NUMERIC
AND WS-UIWA-CHECK-NR1 > ZERO
MOVE WS-UIWA-CHECK-NR1     TO CSEL-CHK-NR
END-IF
MOVE WS-AXIA-OTH-QTY          TO CSEL-OTHER-GALS
MOVE WS-AXIA-OTH-COST         TO CSEL-OTHER-COST
MOVE WS-AXIA-PR1-CODE         TO CSEL-PROD-CODE1
MOVE WS-AXIA-PR1-COST         TO CSEL-PROD-CODE1-AMT
MOVE WS-AXIA-PR2-CODE         TO CSEL-PROD-CODE2
MOVE WS-AXIA-PR2-COST         TO CSEL-PROD-CODE2-AMT
MOVE WS-AXIA-PR3-CODE         TO CSEL-PROD-CODE3
MOVE WS-AXIA-PR3-COST         TO CSEL-PROD-CODE3-AMT
MOVE WS-AXIA-DL-NR            TO CSEL-DL-NR
MOVE WS-AXIA-DL-ST            TO CSEL-DL-STATE
MOVE WS-AXIA-INVOICE-AMT      TO CSEL-FP-INV-TOTAL
MOVE WS-AXIA-SC-SUB-ID        TO CSEL-FP-SUB-ID
MOVE WS-AXIA-PRINTER-FLAG     TO CSEL-FP-PRINTER-FLAG
MOVE WS-AXIA-TRAILER-NR       TO CSEL-FP-TRAILER-NR
MOVE WS-AXIA-TRAILER-HUB      TO CSEL-FP-TRAILER-HUB
MOVE WS-AXIA-PO-NR            TO CSEL-FP-PO-NR
MOVE WS-AXIA-EMPLOYEE-NR      TO CSEL-FP-EMP-NR
MOVE WS-AXIA-NR1-QTY          TO CSEL-FP-DIESEL-1-GALS
MOVE WS-AXIA-NR1-COST         TO CSEL-FP-DIESEL-1-COST
MOVE WS-AXIA-SWIPED-KEYED     TO CSEL-FP-SWIPED-OR-KEYED-FLAG
MOVE WS-AXIA-SC-SECURITY-CARD TO CSEL-FP-SC-SECURITY-CARD
MOVE WS-AXIA-SC-SECURITY-PIN  TO CSEL-FP-SC-SECURITY-PEN
MOVE WS-AXIA-TAX-AMT          TO CSEL-FP-CANADIAN-TAX
MOVE WS-AXIA-BATCH-PROCESS-DATE TO CSEL-FP-BATCH-PROCESS-DATE
MOVE WS-UIWA-NATS-INFO        TO CSEL-FP-NATS-INFO
MOVE WS-AXIA-TRAILER-HRS      TO CSEL-FP-TRAILER-HOURS
MOVE WS-UIWA-IOL-RCP          TO CSEL-FP-IOL-RCP
MOVE WS-AXIA-DEVICE-TYPE      TO CSEL-FP-POS-DEVICE-TYPE
CONTINUE.


EXIT-PC-ATM-VRU-CHECK.

IF THIS-BE-AN-ATM-XTN
PERFORM EXIT-FUEL-PGM-FOR-ATM.
IF THIS-IS-A-ATM-CANCEL
PERFORM EXIT-FUEL-PGM-FOR-ATM-CANCEL.
IF THIS-BE-A-EMAIL-XTN
PERFORM EXIT-FUEL-PGM-FOR-EMAIL.
IF THIS-BE-A-VRU-XTN
PERFORM EXIT-FUEL-PGM-FOR-VRU.


EXIT-PC-MSG-BUILD.

IF POS-MESSAGE NOT > SPACES
MOVE 3270-OUTPUT-DATA TO POS-MESSAGE.
IF POS-DRV-MESSAGE > SPACES
MOVE POS-MESSAGE             TO POS-NRM-MESSAGE
MOVE POS-DRIVER-MESSAGE-AREA TO POS-MESSAGE.
IF FMDL-RK-CONTROL-NUMBER NOT NUMERIC
MOVE ZEROES TO FMDL-RK-CONTROL-NUMBER.
IF THIS-BE-A-BATCHED-REQUEST
MOVE POS-MESSAGE              TO BR-MESSAGE
MOVE FMDL-RK-CONTROL-NUMBER   TO BR-CONTROL-NR
MOVE BATCH-RECORD-OUTPUT-AREA TO POS-MESSAGE.


EXIT-PC-UNATTENDED-MSG-BUILD.

IF WS-AUTO-GAS-AVAIL NOT NUMERIC
MOVE ZEROES TO WS-AUTO-GAS-AVAIL.

IF WS-AUTO-GAS-AVAIL-QTY NOT NUMERIC
MOVE ZEROES TO WS-AUTO-GAS-AVAIL-QTY.

IF THIS-BE-A-SMART-FUEL-PRE-AUTH
IF WS-AUTO-GAS-AVAIL-AMT1 > WS-AUTO-GAS-AVAIL-PURC
MOVE WS-AUTO-GAS-AVAIL-PURC TO WS-AUTO-GAS-AVAIL-AMT1
END-IF
IF WS-AUTO-GAS-AVAIL-AMT2 > WS-AUTO-GAS-AVAIL-PURC
MOVE WS-AUTO-GAS-AVAIL-PURC TO WS-AUTO-GAS-AVAIL-AMT2
END-IF
IF WS-AUTO-GAS-AVAIL-AMT3 > WS-AUTO-GAS-AVAIL-PURC
MOVE WS-AUTO-GAS-AVAIL-PURC TO WS-AUTO-GAS-AVAIL-AMT3
END-IF
END-IF.

IF POS-ERROR-NUMBER = ZEROES
EVALUATE TRUE
WHEN THIS-BE-AN-AUTO-GAS-PRE-AUTH
MOVE WS-AUTO-GAS-AVAILX     TO POS-MESSAGE
MOVE WS-AUTO-GAS-AVAIL-QTYX TO POS-MESSAGE (8:)
WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH
MOVE WS-AUTO-GAS-AVAILX     TO POS-MESSAGE
MOVE WS-AUTO-GAS-AVAIL-ALL  TO POS-MESSAGE (8:)
WHEN THIS-BE-A-PRODUCT-PRE-AUTH
MOVE WS-SP14-REPLY          TO POS-MESSAGE
END-EVALUATE.

IF THIS-BE-AN-IOL-XTN
PERFORM EXIT-PC-UNATTENDED-IOL-BUILD.


EXIT-PC-UNATTENDED-IOL-BUILD.

INITIALIZE WS-IOL-PRE-AUTH-RESP
MOVE POS-ERROR-NUMBER      TO WS-IOL-RETURN-CODE
MOVE POS-MESSAGE           TO WS-IOL-RETURN-MESSAGE
MOVE 'F'                   TO WS-IOL-FUNDED-FLAG
IF COM-DIRECT-BILLING-IN-PROCESS OR
WS-NON-BILLABLE > ZEROES
MOVE 'D'                TO WS-IOL-FUNDED-FLAG.
EVALUATE TRUE
WHEN WS-IOL-FUNDED-FLAG = 'D'
MOVE CDN-CUST-ACCT-CODE  TO WS-IOL-ACCOUNT-CODE
WHEN CDN-IOL-ACCT-NUMBER > SPACES
MOVE CDN-IOL-ACCT-NUMBER TO WS-IOL-ACCOUNT-CODE
WHEN WS-IOL-FUNDED-FLAG = 'F'
MOVE '51725'             TO WS-IOL-ACCOUNT-CODE
END-EVALUATE.

IF POS-ERROR-NUMBER = ZEROES
IF THIS-BE-AN-IOL-AUTH
MOVE FMDL-RK-CONTROL-NUMBER TO WS-IOL-AUTH-NUMBER-01
END-IF
IF THIS-BE-AN-IOL-PRE-AUTH
COMPUTE WS-WORK-IOL-MAX-LITERS = WS-AUTO-GAS-AVAIL /
WS-IOL-PPL
IF WS-WORK-IOL-MAX-LITERS > 999.99
MOVE 999.99 TO WS-WORK-IOL-MAX-LITERS
END-IF
MOVE WS-IOL-MAX-LITERS-IN      TO WS-IOL-MAX-LITERS
IF WS-WORK-IOL-MAX-LITERS < WS-IOL-MAX-LITERS-IN
MOVE WS-WORK-IOL-MAX-LITERS TO WS-IOL-MAX-LITERS.


PERFORM IOL-UPDATE-RCP.


IOL-UPDATE-RCP.

MOVE 'IOL-UPDATE-RCP'            TO CXUTS0ML-PARAGRAPH.
IF THIS-BE-AN-IOL-PRE-AUTH AND
WS-UIWA-IOL-RCP > ZEROES
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (SERVICE-CENTER-MASTER-RECORD)
RIDFLD  (SCM-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SCM-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NORMAL)
MOVE WS-UIWA-IOL-RCP TO SCM-IOL-RCP
EXEC CICS REWRITE
DATASET ('SCMSTR')
FROM    (SERVICE-CENTER-MASTER-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


EXIT-PC-ADDR-BUILD.


IF SCM-WANTS-POS-ADDRESS     AND
POS-ERROR-NUMBER = ZEROES AND
THIS-BE-A-PC-REQUEST
IF NOT THIS-BE-AN-UNATTENDED-AUTH
MOVE POS-MESSAGE    TO POS-CUSTOMER-NRM-MSG
MOVE CDN-CUST-NAME  TO POS-CUSTOMER-NAME
MOVE CDN-CUST-CITY  TO POS-CUSTOMER-CITY
MOVE CDN-CUST-STATE TO POS-CUSTOMER-STATE
MOVE SPACES         TO POS-CUSTOMER-ID-X
INSPECT POS-CUSTOMER-INFO REPLACING ALL LOW-VALUE BY ' '
INSPECT POS-CUSTOMER-INFO REPLACING ALL ' '       BY '~'

MOVE 325            TO WS-FIELD-LEN-1
MOVE 048            TO WS-FIELD-LEN-2
MOVE 373            TO WS-FIELD-LEN-3
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
POS-CUSTOMER-NRM-MSG,
WS-FIELD-LEN-2,
POS-CUSTOMER-INFO,
WS-FIELD-LEN-3,
POS-MESSAGE,
WS-CXUTSJON-OPTIONS.

IF SCM-WANTS-POS-ADDRESS-CUST AND
POS-ERROR-NUMBER = ZEROES  AND
THIS-BE-A-PC-REQUEST
IF THIS-BE-A-SMART-FUEL-AUTH
OR NOT THIS-BE-AN-UNATTENDED-AUTH
MOVE POS-MESSAGE           TO POS-CUSTOMER-NRM-MSG
MOVE CDN-CUST-NAME         TO POS-CUSTOMER-NAME
MOVE CDN-CUST-CITY         TO POS-CUSTOMER-CITY
MOVE CDN-CUST-STATE        TO POS-CUSTOMER-STATE

MOVE CDN-CUST-NUMBER       TO POS-CUSTOMER-ID-X
INSPECT POS-CUSTOMER-INFO REPLACING ALL LOW-VALUE BY ' '
INSPECT POS-CUSTOMER-INFO REPLACING ALL ' '       BY '~'
MOVE 325            TO WS-FIELD-LEN-1
MOVE 058            TO WS-FIELD-LEN-2
MOVE 383            TO WS-FIELD-LEN-3
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
POS-CUSTOMER-NRM-MSG,
WS-FIELD-LEN-2,
POS-CUSTOMER-INFO,
WS-FIELD-LEN-3,
POS-MESSAGE,
WS-CXUTSJON-OPTIONS.

IF SCM-CHAIN-CODE = WS-PETRO-CANADA-CHAIN
MOVE POS-MESSAGE       TO POS-CUSTOMER-NRM-MSG
MOVE 325               TO WS-FIELD-LEN-1
MOVE 16                TO WS-FIELD-LEN-2
MOVE 399               TO WS-FIELD-LEN-3
MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT
TO WS-PETRO-CANADA-DATE
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
POS-CUSTOMER-NRM-MSG,
WS-FIELD-LEN-2,
WS-PETRO-CANADA-RESP
WS-FIELD-LEN-3,
POS-MESSAGE,
WS-CXUTSJON-OPTIONS
END-IF.

IF THIS-BE-A-SMART-FUEL-PRE-AUTH
IF WS-AUTO-GAS-AVAIL-PROD1 > SPACES OR
WS-AUTO-GAS-AVAIL-PROD2 > SPACES OR
WS-AUTO-GAS-AVAIL-PROD3 > SPACES
MOVE POS-MESSAGE   TO POS-CUSTOMER-NRM-MSG
MOVE 325           TO WS-FIELD-LEN-1
MOVE 028           TO WS-FIELD-LEN-2
MOVE 228           TO WS-FIELD-LEN-3
MOVE 'NNN'          TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
POS-CUSTOMER-NRM-MSG,
WS-FIELD-LEN-2,
WS-AUTO-GAS-PRODUCT-INFO
WS-FIELD-LEN-3,
POS-MESSAGE,
WS-CXUTSJON-OPTIONS.


EXIT-PC-SURCHARGE-BUILD.

IF WS-MERCH-SURCHRG-TOTAL > ZERO
MOVE POS-MESSAGE TO POS-CUSTOMER-NRM-MSG
MOVE 214         TO WS-FIELD-LEN-1
MOVE 14          TO WS-FIELD-LEN-2
MOVE 339         TO WS-FIELD-LEN-3
MOVE 'NNN'       TO WS-CXUTSJON-OPTIONS
CALL 'CXUTSJON' USING WS-FIELD-LEN-1,
POS-CUSTOMER-NRM-MSG,
WS-FIELD-LEN-2, OUT-SURCH-HEAD-B,
WS-FIELD-LEN-3, POS-MESSAGE,
WS-CXUTSJON-OPTIONS
END-IF.


EXIT-PC-FLEET-XTN.

INITIALIZE WS-FLEET-RESPONSE.
MOVE POS-ERROR-NUMBER         TO WS-FR-CODE
MOVE POS-MESSAGE              TO WS-FR-MESSAGE

MOVE CDN-CUST-NUMBER          TO WS-CDN-CUST-NUMBER
IF CDN-CUST-ACCT-CODE > SPACES AND
WS-CDN-CUST-NUMBER > SPACES
MOVE CDN-CUST-ACCT-CODE    TO WS-FR-ACCT
MOVE WS-CDN-CUST-NUMBER    TO WS-FR-CUST
ELSE
MOVE 'XXXXX'               TO WS-FR-ACCT
MOVE 'XXXXX'               TO WS-FR-CUST
END-IF
IF POS-ERROR-NUMBER = ZERO
COMPUTE WS-FR-AMT       = FMDL-SC-TR-TRACTOR-COST        +
FMDL-SC-TR-TRAILER-COST        +
FMDL-SC-TR-OTHER-COST          +
FMDL-SC-NR1-COST               +
FMDL-SC-TR-OIL-COST            +
FMDL-SC-TR-CASH-ADVANCE-AMOUNT +
FMDL-SC-TR-PRODUCT-AMOUNT-1    +
FMDL-SC-TR-PRODUCT-AMOUNT-2    +
FMDL-SC-TR-PRODUCT-AMOUNT-3    +
FMDL-SC-TAX-AMT
MOVE WS-CONTROL-NR   TO WS-FR-CONTROL-NR
END-IF.
MOVE CDN-CARD-EXPIRATION-DATE TO WS-EXP-DATE
MOVE WS-EXP-DATE (1:2)        TO WS-FR-EXP-DATE (3:2)
MOVE WS-EXP-DATE (3:2)        TO WS-FR-EXP-DATE (1:2)
MOVE WS-CARD-BLOCKED-FLAG     TO WS-FR-CARD-BLOCKED
MOVE WS-FLEET-RESPONSE        TO POS-MESSAGE.


EXIT-PC-BATCH-FUEL.

INITIALIZE WS-BATCH-FUEL-RESPONSE.
MOVE POS-MESSAGE               TO WS-BF-MESSAGE
MOVE WS-CONTROL-NR             TO WS-BF-CONTROL-NR.
MOVE FMDL-RK-TRANSACTION-DATE  TO WS-BF-FMLOG-RK-DATE.
MOVE WS-BATCH-FUEL-RESPONSE    TO POS-MESSAGE.


EXIT-PC-UNATTENDED-EXIT.

MOVE 'EXIT-PC-UNATTENDED-EXIT'   TO CXUTS0ML-PARAGRAPH.
IF THIS-BE-AN-AUTO-GAS-XTN
MOVE POS-ERROR-NUMBER TO AG-ERROR-NUMBER,
AG-ERROR-NUMBER-2
MOVE POS-MESSAGE      TO AG-MESSAGE
MOVE AUTO-GAS-OUTPUT-AREA TO POS-OUTPUT-AREA
IF NOT THIS-IS-A-POS-TRANS
EXEC CICS SEND
FROM   (AUTO-GAS-OUTPUT-AREA)
LENGTH (+101)
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN.

IF THIS-BE-AN-IOL-XTN
IF EIBTRNID = 'FP'
EXEC CICS SEND
FROM   (WS-IOL-PRE-AUTH-RESP)
LENGTH (+108)
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN
END-IF
MOVE WS-IOL-PRE-AUTH-RESP TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA       TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.



EXIT-FUEL-PGM-FOR-EMAIL.

MOVE CDN-CUST-ACCT-CODE   TO EOR-ACCT-CODE.

MOVE CDN-CUST-NUMBER      TO EOR-CUST-ID.
MOVE WS-CONTROL-NR        TO EOR-CTL-NR.
MOVE EMAIL-OK-RESP        TO POS-MESSAGE.
MOVE POS-OUTPUT-AREA      TO WS-DFHCOMMAREA.
MOVE WS-DFHCOMMAREA       TO DFHCOMMAREA.
PERFORM EXEC-CICS-RETURN.


EXIT-FUEL-PGM-FOR-VRU.

MOVE 'EXIT-FUEL-PGM-FOR-VRU'     TO CXUTS0ML-PARAGRAPH.
PERFORM 60000-CHECK-PRMCARD
PERFORM 60100-CHECK-CDNCUST-DATA
MOVE 'FP'               TO VR-TRANS-ID.
MOVE '#'                TO VR-REQUEST-ID.
MOVE SAVE-ZON-VER-FLAG  TO VR-REQUEST-VERSION.
MOVE WS-PRM-CARD-BASE-A TO VR-CARD-NUMBER-10.
IF VR-TRANS-FLAG = ' '
MOVE 'X' TO VR-TRANS-FLAG
IF EIBTRNID = 'ITTF'
OR EIBTRNID (1:3) = 'RSV'
OR EIBTRNID (1:2) = 'WS'
EVALUATE POS-ERROR-NUMBER
WHEN 70  MOVE '3' TO VR-TRANS-FLAG
WHEN 58  MOVE '8' TO VR-TRANS-FLAG
END-EVALUATE
END-IF
END-IF.
MOVE PRM-EXPENSE-BALANCE TO VR-EXPRESS-BALANCE,
WS-EXPRESS-AVAILABLE.
PERFORM PII-LINK-CXXCO0CS
PERFORM PII-ADJUST-CSTAND.
PERFORM PII-ADJUST-LIMITS
COMPUTE VR-CASH-LIMIT-US = TSXCO0LM-CASH-ON-CARD-AVAIL.

MOVE CDN-PICKUP-RATE TO WS-PICKUP-RATE.
IF (THIS-IS-AN-ALLIANCE-CUST) OR
(COM-PREFERRED-CUSTOMER)
MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-PICKUP-RATE
END-IF
IF PRM-FREE-XTN-COUNT < CDN-FREE-XTN-COUNT
MOVE ZEROES TO WS-PICKUP-RATE.
IF CDN-LESS-PICKUP
SUBTRACT WS-PICKUP-RATE FROM PRM-EXPENSE-BALANCE GIVING
WS-EXPRESS-AVAILABLE.
IF (WS-EXPRESS-AVAILABLE - 5.00) < .01
MOVE 'M' TO VR-PHONE-LIMIT-FLAG.
IF WS-EXPRESS-AVAILABLE < ZEROES
MOVE ZEROES TO WS-EXPRESS-AVAILABLE.
MOVE WS-EXPRESS-AVAILABLE TO VR-EXPRESS-BALANCE-AVAIL.
MOVE 3270-OUTPUT-DATA TO USUAL-FP-MESSAGE.
PERFORM ADJUST-AMOUNTS-FOR-COUNTRY.
MOVE VOICE-RESPONSE-OUTPUT-AREA TO 3270-OUTPUT-DATA.


IF EIBTRNID = 'ITTF'
OR EIBTRNID (1:3) = 'RSV'
OR EIBTRNID (1:2) = 'WS'
MOVE VOICE-RESPONSE-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.


IF THIS-IS-A-POS-TRANS
MOVE USUAL-FP-MESSAGE TO POS-MESSAGE
MOVE POS-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.


IF WS-PT-MESSAGE-FLAG = 'X'
EXEC CICS SEND
FROM   (TERMINAL-OUTPUT-AREA)
LENGTH (84)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN
END-IF.


EXEC CICS SEND
FROM   (TERMINAL-OUTPUT-AREA)
LENGTH (239)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM EXEC-CICS-RETURN.


EXIT-FUEL-PGM-FOR-ATM.

MOVE 'EXIT-FUEL-PGM-FOR-ATM'     TO CXUTS0ML-PARAGRAPH.
IF WS-HOLD-POS-ERROR-NUMBER > ZEROES
MOVE WS-HOLD-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
MOVE WS-HOLD-POS-ERROR-MSG    TO POS-MESSAGE.
IF TSXCO0AT-TRAN-TYPE-INQUIRY OR
TSXCO0AT-TRAN-TYPE-ASI OR
TSXCO0AT-TRAN-TYPE-WITHDRAW OR
TSXCO0AT-TRAN-TYPE-PURCHASE
PERFORM LOG-ATM-XTN-TO-ATMSTAN.
IF TSXCO0AT-TRAN-TYPE-INQUIRY OR
TSXCO0AT-TRAN-TYPE-ASI
MOVE ZEROES TO TSXCO0AT-AMOUNT
IF POS-ERROR-NUMBER = ZEROES
PERFORM PII-LINK-CXXCO0CS
PERFORM PII-ADJUST-CSTAND
PERFORM PII-ADJUST-LIMITS
IF NOT TSXCO0AT-IN-NETW-CARD-VAL
IF PRM-CASH-INITIAL > PRM-CASH-USED
COMPUTE TSXCO0AT-AMOUNT = PRM-CASH-INITIAL -
PRM-CASH-USED
END-COMPUTE
END-IF

IF WS-ONE-TIME-CASH-LIMIT-AVAIL
COMPUTE TSXCO0AT-AMOUNT = TSXCO0AT-AMOUNT +
PRM-CASH-ONE-TIME
END-COMPUTE
END-IF
END-IF
END-IF
END-IF.



IF TSXCO0AT-IN-NETW-CASH-OUT
SET TSXCO0AT-INVALID-REQUEST
TO TRUE
ELSE
SET TSXCO0AT-APPROVED TO TRUE
IF POS-ERROR-NUMBER > ZEROES
SET TSXCO0AT-APP-DECLINED TO TRUE
END-IF.
MOVE POS-ERROR-NUMBER      TO TSXCO0AT-APP-RETURN-CODE.
MOVE POS-MESSAGE           TO TSXCO0AT-APP-RETURN-MSG.


MOVE 3270-OUTPUT-DATA   TO USUAL-FP-MESSAGE.
MOVE TSXCO0AT-COMM-AREA TO 3270-OUTPUT-DATA.


IF EIBTRNID = 'FP'
EXEC CICS SEND
FROM   (TERMINAL-OUTPUT-AREA)
LENGTH (160)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN
END-IF.
MOVE TSXCO0AT-COMM-AREA    TO WS-TSXCO0AT-COMMAREA
MOVE WS-TSXCO0AT-COMM-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA        TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.


EXIT-FUEL-PGM-FOR-ATM-CANCEL.

MOVE 'EXIT-FUEL-PGM-FOR-ATM-CANCEL' TO CXUTS0ML-PARAGRAPH.
IF POS-ERROR-NUMBER > ZEROES
SET TSXCO0AT-APP-DECLINED    TO TRUE.
MOVE POS-ERROR-NUMBER           TO TSXCO0AT-APP-RETURN-CODE.
MOVE POS-MESSAGE                TO TSXCO0AT-APP-RETURN-MSG.


MOVE 3270-OUTPUT-DATA   TO USUAL-FP-MESSAGE.
MOVE TSXCO0AT-COMM-AREA TO 3270-OUTPUT-DATA.


IF EIBTRNID = 'FP'
EXEC CICS SEND
FROM   (TERMINAL-OUTPUT-AREA)
LENGTH (160)
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN
END-IF.
MOVE TSXCO0AT-COMM-AREA    TO WS-TSXCO0AT-COMMAREA
MOVE WS-TSXCO0AT-COMM-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA        TO DFHCOMMAREA
PERFORM EXEC-CICS-RETURN.


LOG-ATM-XTN-TO-ATMSTAN.

MOVE 'LOG-ATM-XTN-TO-ATMSTAN'    TO CXUTS0ML-PARAGRAPH.
MOVE SPACES                     TO ATM-STAN-XREF-RECORD.
INITIALIZE ATM-STAN-XREF-RECORD.
MOVE TSXCO0AT-ATM-DATE       TO ATM-STAN-ATM-DATE.
MOVE TSXCO0AT-ATM-TIME       TO ATM-STAN-ATM-TIME.
MOVE TSXCO0AT-CARD-NUMBER    TO ATM-STAN-CARD-NR.
MOVE TSXCO0AT-ATM-STAN       TO ATM-STAN-TRACE-NR.
EXEC CICS READ
DATASET ('ATMSTAN')
INTO    (ATM-STAN-XREF-RECORD)
RIDFLD  (ATM-STAN-KEY)
UPDATE
NOHANDLE
END-EXEC.
MOVE ATM-STAN-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NOTFND)
PERFORM LOG-ATM-XTN-TO-ATMSTAN-NEW
ELSE
PERFORM LOG-ATM-XTN-TO-ATMSTAN-REV.


LOG-ATM-XTN-TO-ATMSTAN-NEW.

MOVE 'LOG-ATM-XTN-TO-ATMSTAN-NEW' TO CXUTS0ML-PARAGRAPH.
MOVE TSXCO0AT-ATM-DATE          TO ATM-STAN-ATM-DATE.
MOVE TSXCO0AT-ATM-TIME          TO ATM-STAN-ATM-TIME.
MOVE TSXCO0AT-CARD-NUMBER       TO ATM-STAN-CARD-NR.
MOVE TSXCO0AT-ATM-STAN          TO ATM-STAN-TRACE-NR.

MOVE TSXCO0AT-ATM-LOCATION      TO ATM-STAN-LOCATION-ID.
MOVE TSXCO0AT-SERIAL-NR         TO ATM-STAN-SERIAL-NR.

MOVE CDN-CUST-NUMBER            TO ATM-STAN-CUSTOMER-ID.
MOVE ZEROES                     TO ATM-STAN-CONTROL-NR
ATM-STAN-SI-CONTROL-NR.
IF TSXCO0AT-TRAN-TYPE-WITH-SI   OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F OR
TSXCO0AT-TRAN-TYPE-PURC-SI   OR
TSXCO0AT-TRAN-TYPE-PURC-SI-F
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ATM-STAN-SI-CONTROL-NR
END-IF
ELSE
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ATM-STAN-CONTROL-NR
END-IF
END-IF.
MOVE TSXCO0AT-TRAN-TYPE         TO ATM-STAN-ORIGINAL-REQUEST
IF POS-ERROR-NUMBER = ZEROES
SET ATM-STAN-STATUS-APPROVED TO TRUE
ELSE
SET ATM-STAN-STATUS-DECLINED TO TRUE.
MOVE POS-ERROR-NUMBER           TO ATM-STAN-RETURN-CODE.
MOVE POS-MESSAGE                TO ATM-STAN-RETURN-MSG.
MOVE TSXCO0AT-AMOUNT            TO ATM-STAN-ORIGINAL-AMOUNT
MOVE WS-BUSINESS-DATE-CYYMMDD   TO ATM-STAN-CDN-DATE.
SET ATM-STAN-REVERSED-NO        TO TRUE
SET ATM-STAN-SI-REVERSED-NO     TO TRUE
MOVE 'C'                        TO ATM-STAN-ORIG-ACCESS.

EXEC CICS WRITE
DATASET ('ATMSTAN')
FROM    (ATM-STAN-XREF-RECORD)
RIDFLD  (ATM-STAN-KEY)
NOHANDLE
END-EXEC.
MOVE ATM-STAN-KEY      TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


LOG-ATM-XTN-TO-ATMSTAN-REV.

MOVE 'LOG-ATM-XTN-TO-ATMSTAN-REV' TO CXUTS0ML-PARAGRAPH.
EVALUATE TRUE
WHEN TSXCO0AT-TRAN-TYPE-WITH-SI   OR
TSXCO0AT-TRAN-TYPE-WITH-SI-F OR
TSXCO0AT-TRAN-TYPE-PURC-SI   OR
TSXCO0AT-TRAN-TYPE-PURC-SI-F
MOVE ZEROES TO ATM-STAN-SI-CONTROL-NR
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ATM-STAN-SI-CONTROL-NR
END-IF
WHEN WS-STANDIN-REVERSE
WHEN ATM-STAN-CONTROL-NR > ZEROES
MOVE ZEROES TO ATM-STAN-REVERSED-CONTROL-NR
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ATM-STAN-REVERSED-CONTROL-NR
END-IF
WHEN OTHER
MOVE ZEROES TO ATM-STAN-CONTROL-NR
IF ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD NUMERIC
MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
TO ATM-STAN-CONTROL-NR
END-IF
END-EVALUATE.

EXEC CICS REWRITE
DATASET ('ATMSTAN')
FROM    (ATM-STAN-XREF-RECORD)
NOHANDLE
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.



EXIT-FUEL-PGM-RETURN.

IF WS-ENQ-CARD-NR > ZEROES
PERFORM DEQ-CARD-NUMBER.
IF POS-ERROR-NUMBER > ZEROES AND
CDN-INTRA-DAY-FLAG = 'Y'
PERFORM INTRA-DAY-DOWNLOAD
PERFORM INTRA-DAY-DOWNLOAD-BF3
END-IF.

EXEC CICS RETURN
TRANSID  ('FP  ')
COMMAREA (FP-COMMON-AREA)
LENGTH   (LENGTH OF FP-COMMON-AREA)
RESP     (EIBRESP)
END-EXEC.
MOVE 'EXIT-FUEL-PGM-RETURN' TO CXUTS0ML-PARAGRAPH
MOVE 'RETURN FP'            TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP.


CLEAR-AND-EXIT-TO-CICS.

MOVE 'CLEAR-AND-EXIT-TO-CICS'    TO CXUTS0ML-PARAGRAPH.
EXEC CICS SEND
FROM   (OUT-COMENT)
LENGTH (0)
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
PERFORM EXEC-CICS-RETURN.


EXEC-CICS-RETURN.

IF WS-ENQ-CARD-NR > ZEROES
PERFORM DEQ-CARD-NUMBER.

EXEC CICS RETURN END-EXEC.


DEQ-CARD-NUMBER.

MOVE 'D'               TO WS-TSFMU020-REQUEST
MOVE 'RESCARD '        TO WS-TSFMU020-CALLING-FILE
MOVE WS-ENQ-CARD-NR    TO WS-TSFMU020-CARD-RESOURCE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL.





COPY-CXISP001.








MOVE ZEROS       TO  WS-TCAFCI.
MOVE LOW-VALUES  TO  WS-STARTCODE,  WS-USERID.
EXEC CICS ASSIGN
STARTCODE  (WS-STARTCODE)
END-EXEC.
IF NOT INITIATED-VIA-DPL
EXEC CICS ASSIGN
FCI        (WS-TCAFCI-BYTE)
END-EXEC.
IF TERMINAL-INITIATED  OR  TERMINAL-ATTACHED
EXEC CICS ASSIGN
USERID (WS-USERID)
END-EXEC.











TIM-0000.

MOVE 'TIM-0000'                  TO CXUTS0ML-PARAGRAPH.


MOVE LOW-VALUES TO WS-CICS-CONTROL-RECORD.
EXEC CICS LINK
PROGRAM  ('ONLCTRL')
COMMAREA (WS-CICS-CONTROL-RECORD)
LENGTH   (256)
RESP     (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE CICS-DATE-RECORD TO PD-MDY.

MOVE '19'                TO WS-BUSINESS-DATE-YYYYMMDD (1:2)
MOVE PD-MDY (1:2)        TO WS-BUSINESS-DATE-YYYYMMDD (5:2)
MOVE PD-MDY (3:2)        TO WS-BUSINESS-DATE-YYYYMMDD (7:2)
MOVE PD-MDY (5:2)        TO WS-BUSINESS-DATE-YYYYMMDD (3:2)
IF WS-BUSINESS-DATE-YYYYMMDD (3:2) < '70'
MOVE '20'             TO WS-BUSINESS-DATE-YYYYMMDD (1:2)
END-IF.


TIM-0010.


MOVE WS-CURRENT-DATE-MMDDYY TO SYS-DATE.
MOVE EIBTIME TO SYS-TIME.



TIM-0020.



MOVE SYS-HH TO EDT-HH.
MOVE SYS-MN TO EDT-MN.
MOVE SYS-SS TO EDT-SS.


DAT-0000.



MOVE SYS-DD TO EDT-DD.
MOVE SYS-MM TO EDT-MM.
MOVE SYS-YY TO EDT-YY.


90010-GET-SYSTEM-DATE.

MOVE '90010-GET-SYSTEM-DATE'     TO CXUTS0ML-PARAGRAPH.
MOVE LOW-VALUES TO WS-CICS-CONTROL-RECORD.
EXEC CICS LINK
PROGRAM  ('ONLCTRL')
COMMAREA (WS-CICS-CONTROL-RECORD)
LENGTH   (256)
RESP     (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.

MOVE CROSS-BORDER-FIELDS TO WS-ONL-CROSS-BORDER-FIELDS
MOVE CICS-DATE-RECORD TO PD-MDY.

MOVE '19'                 TO WS-BUSINESS-DATE-YYYYMMDD (1:2)
MOVE PD-MDY (1:2)         TO WS-BUSINESS-DATE-YYYYMMDD (5:2)
MOVE PD-MDY (3:2)         TO WS-BUSINESS-DATE-YYYYMMDD (7:2)
MOVE PD-MDY (5:2)         TO WS-BUSINESS-DATE-YYYYMMDD (3:2)
IF WS-BUSINESS-DATE-YYYYMMDD (3:2) < '70'
MOVE '20'              TO WS-BUSINESS-DATE-YYYYMMDD (1:2).

MOVE '0'                         TO WS-BUSINESS-DATE-CENT.
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO WS-BUSINESS-DATE-YYMMDD.
IF WS-BUSINESS-DATE-YYYYMMDD (1:2) = '20'
MOVE '1'                      TO WS-BUSINESS-DATE-CENT.

MOVE +021                TO CALENDAR-OPTIONS.
MOVE PD-MDY              TO CALENDAR-DATE-NUM.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-JULIAN-DATE TO PD-YYDDD.

MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO
WS-BUSINESS-DATE-YYYYMMDD-FMT.
INSPECT WS-BUSINESS-DATE-YYYYMMDD-FMT
REPLACING ALL ' ' BY '-'.
MOVE EIBTIME             TO WS-BUSINESS-TIME-FMT
WS-POSTING-TIME.
INSPECT WS-BUSINESS-TIME-FMT REPLACING ALL ' ' BY ':'.
INSPECT WS-POSTING-TIME      REPLACING ALL ' ' BY '.'.
MOVE WS-BUSINESS-DATE-YYYYMMDD (1:6) TO
WS-BUSINESS-DATE-YYYYMM.


90015-GET-CURRENT-DATE.

MOVE +020 TO CALENDAR-OPTIONS.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
MOVE CALENDAR-JULIAN-DATE  TO WS-CURRENT-DATE-CYYDDD.
MOVE CALENDAR-DATE-NUM     TO WS-CURRENT-DATE-CMMDDYY.
IF CENTURY-2000
MOVE '20'               TO WS-CURRENT-DATE-YYYYMMDD-CENT
ELSE
MOVE '19'               TO WS-CURRENT-DATE-YYYYMMDD-CENT
END-IF
MOVE MDY-MM                TO WS-CURRENT-DATE-YYYYMMDD-MM.
MOVE MDY-DD                TO WS-CURRENT-DATE-YYYYMMDD-DD.
MOVE MDY-YY                TO WS-CURRENT-DATE-YYYYMMDD-YY.

MOVE WS-CURRENT-DATE-YYDDD TO WS-CURRENT-DATE-YYYYDDD.
MOVE WS-CURRENT-DATE-YYYYMMDD-CENT TO
WS-CURRENT-DATE-YYYYDDD (1:2).
MOVE CALENDAR-WEEKDAY      TO WS-CURRENT-DATE-WEEKDAY-SS.

MOVE WS-CURRENT-DATE-YYYYMMDD TO WS-CURRENT-YYYYMMDD-FMT
INSPECT WS-CURRENT-YYYYMMDD-FMT REPLACING ALL ' ' BY '-'


COMPUTE WS-CURRENT-DATE-WEEKDAY-MS = CALENDAR-WEEKDAY - 1.
IF WS-CURRENT-DATE-WEEKDAY-MS = 0
MOVE 7 TO WS-CURRENT-DATE-WEEKDAY-MS.




COPY-CREDLNK.

MOVE 'COPY-CREDLNK'              TO CXUTS0ML-PARAGRAPH.
INITIALIZE                     CREDIT-CHECK-LINK-AREA
MOVE CL-CO-CD OF DCREDITL   TO CCL-CREDITL (1:5)
MOVE WS-CICS-CONTROL-RECORD TO CCL-ONLNDF.
MOVE WS3-BILLABLE           TO CCL-AMT.
MOVE 1                      TO CCL-FUNC-RTC.
EXEC CICS LINK
PROGRAM  ('CXACO0LD')
COMMAREA (CREDIT-CHECK-LINK-AREA)
LENGTH   (LENGTH OF CREDIT-CHECK-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.


































LOG-TO-DSET.

MOVE 'LOG-TO-DSET                ' TO CXUTS0ML-PARAGRAPH













MOVE SPACES              TO FPDLG-RECD.
MOVE COM-FP-CO-CODE      TO UR-CO.
MOVE COM-UNIT-NR-EXPANDED TO UR-UNIT
MOVE +0                  TO UR-SEQ.
MOVE FPFSI               TO UR-SRVC-TYPE.
MOVE CL-CO-FULL-NM OF DCREDITL TO UR-NAME.
MOVE CUST-RGE-SMLNM      TO UR-CO-SMALNAME.
MOVE WS-WORK-NW-DATE     TO UR-DATE.
MOVE EIBTIME             TO UR-TIME.
PERFORM TIM-0000.
COMPUTE UR-TRANS-NR =
(PD-DD * 10000000) + ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD.
MOVE WS-UIWA-SC-CODE     TO UR-TSCODE.
MOVE 0                   TO UR-INVOICE-NR.
MOVE WS-UIWA-NR2-QTY     TO UR-NR-OF-GALLONS.
ADD WS-UIWA-OTH-QTY      TO UR-NR-OF-GALLONS.
ADD WS-UIWA-NR1-QTY      TO UR-NR-OF-GALLONS.
IF WS-UIWA-NR2-PPU > ZEROES
MOVE WS-UIWA-NR2-PPU TO UR-PRICE-GALLON
ELSE
MOVE WS-WORK-PRICE-PER-GLLN
TO UR-PRICE-GALLON.
MOVE WS-UIWA-NR2-COST    TO UR-TOTAL-COST.
ADD WS-UIWA-OTH-COST     TO UR-TOTAL-COST.
ADD WS-UIWA-NR1-COST     TO UR-TOTAL-COST.
IF UR-NR-OF-GALLONS > ZEROES
DIVIDE UR-TOTAL-COST BY UR-NR-OF-GALLONS
GIVING UR-PRICE-GALLON ROUNDED.
MOVE ':' TO UR-DELETE-CD.
MOVE WS-UIWA-OIL-COST    TO UR-OIL-COST.
MOVE WS-UIWA-OIL-QTY     TO UR-OIL-QTS.
IF NOT COM-THIS-IS-A-TERM-FUEL-XTN
MOVE WS-UIWA-REF-COST  TO UR-REFER-COST.
MOVE WS-UIWA-REF-QTY     TO UR-REFER-GALS.
MOVE WS-ID-NR-NUM        TO UR-ID-NR.
MOVE 0                   TO UR-PERCENTAGES.
MOVE 0                   TO UR-TOTAL-AR.
MOVE WS-UIWA-CASH-AMT    TO UR-ADVANCE-AMOUNT.
MOVE WS-UIWA-TRIP-NR     TO UR-TRIP-NR.
MOVE FMDL-RECORD-TYPE    TO UR-RECD-ID.
MOVE 0                   TO UR-PRICE-GALLON-TR.
IF NOT COM-THIS-IS-A-TERM-FUEL-XTN
IF WS-UIWA-REF-PPU IS NUMERIC
MOVE WS-UIWA-REF-PPU TO UR-PRICE-GALLON-TR
ELSE
MOVE ZEROES          TO UR-PRICE-GALLON-TR.
MOVE WS-FUEL-RATE        TO UR-CHRGS.
MOVE WS-UIWA-HUB         TO UR-HUB.
MOVE WS-DISC-AMT-SAVE    TO UR-DISC.
MOVE COM-COUNTRY-FLAG      TO UR-COUNTRY-FLAG.
MOVE COM-ACCOUNT-CURR-TYPE TO UR-ACCOUNT-CURR.
MOVE LOW-VALUES TO OPCKEY-OPID.

MOVE COM-FP-CO-CODE                 TO OPCKEY-SECURITY-DATA.
MOVE FPDLG-RECD                     TO WS-FPLG-CA-USILOG.
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-FPLG-CA-FMLOG.
MOVE 'LOG-TO-DSET                '  TO CXUTS0ML-PARAGRAPH
PERFORM PUT-TO-FPLG-QUEUE.




PUT-TO-FPLG-QUEUE.

IF THIS-BE-A-BATCHED-REQUEST OR
FMDL-BATCH-XTN-TYPE-FLAG > SPACES
MOVE WS-BATCH-QUEUE-NAME  TO MQOD-OBJECTNAME
STRING 'PUT QUEUE: ' WS-BATCH-QUEUE-NAME
DELIMITED BY SIZE INTO CXUTS0ML-PARAGRAPH
ELSE
MOVE WS-ONLINE-QUEUE-NAME TO MQOD-OBJECTNAME
STRING 'PUT QUEUE: ' WS-ONLINE-QUEUE-NAME
DELIMITED BY SIZE INTO CXUTS0ML-PARAGRAPH
END-IF.
MOVE MQMT-DATAGRAM          TO MQMD-MSGTYPE
MOVE SPACES                 TO MQMD-REPLYTOQ
MOVE SPACES                 TO MQMD-REPLYTOQMGR
COMPUTE MQPMO-OPTIONS = MQPMO-SYNCPOINT
MOVE WS-FPLG-COMMAREA       TO W00-MSGBUFFER
MOVE WS-QLENGTH-FPLG        TO W03-BUFFLEN

CALL 'MQPUT1' USING W03-HCONN
MQOD
MQMD
MQPMO
W03-BUFFLEN
W00-MSGBUFFER
W03-COMPCODE
W03-REASON.

IF W03-COMPCODE = MQCC-OK OR
W03-REASON = MQRC-PUT-INHIBITED
CONTINUE
ELSE
MOVE W03-COMPCODE     TO  W03-COMPCODE-CHAR
MOVE W03-REASON       TO  W03-REASON-CHAR
STRING 'COMP: ' W03-COMPCODE-CHAR
' RSN:' W03-REASON-CHAR
DELIMITED BY SIZE INTO CXUTS0ML-COMMAND

MOVE 'E'           TO CXUTS0ML-SEVERITY-ID
CXUTS0ML-LOG-ID
MOVE 'C'           TO CXUTS0ML-FUNCTION-ID
MOVE 'Y'           TO CXUTS0ML-RETURN-SW
MOVE EIBRESP       TO WRK-EIBRESP
MOVE WRK-EIBRESP   TO CXUTS0ML-MESSAGE-ID
MOVE SPACES        TO CXUTS0ML-PRODUCT-AREA
PERFORM Z999-LINK-TO-CXUTS0ML
END-IF.




COPY-TSFMP002.












MOVE 'COPY-TSFMP002              ' TO CXUTS0ML-PARAGRAPH
MOVE SPACES             TO FPDLG-RECD.
MOVE COM-FP-CO-CODE     TO UR-CO.
MOVE COM-UNIT-NR        TO UR-UNIT.
PERFORM TIM-0000.
COMPUTE UR-TRANS-NR =
(PD-DD * 10000000) + WS-FP-CANCEL-CTL.
MOVE 'D'                            TO UR-DELETE-CD.
MOVE FPDLG-RECD                     TO WS-FPLG-CA-USILOG.
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-FPLG-CA-FMLOG.
PERFORM PUT-TO-FPLG-QUEUE.













































LOAD-TO-SENDING-QUEUES.

MOVE 'LOAD-TO-SENDING-QUEUES'    TO CXUTS0ML-PARAGRAPH.
MOVE ODR-SRVC-CNTR-SUB-ID  OF ORDRFIL-DETAIL-RECD
TO  WS-ORWA-SUB-ID.
MOVE ODR-SRVC-CENTER       OF ORDRFIL-DETAIL-RECD
TO  WS-ORWA-SRVC-CENTER.
EXEC CICS LINK
PROGRAM  ('ORDQPGM')
COMMAREA (WS-ORDER-ROUTING-WORK-AREA)
LENGTH   (35)
RESP     (EIBRESP)
END-EXEC.
IF EIBRESP = DFHRESP(PGMIDERR)
MOVE 99                     TO  WS-ORWA-FUNCTION
ELSE
PERFORM CHECK-FOR-NORMAL-EIBRESP
MOVE WS-ORWA-SUB-ID-OUT
TO  ODR-SRVC-CNTR-SUB-ID-OUT  OF ORDRFIL-DETAIL-RECD
MOVE WS-ORWA-PRINTER-FLAG
TO  ODR-PRINTER-FLAG          OF ORDRFIL-DETAIL-RECD.
























FIX-DRIVERS-LICENSE.
MOVE ZEROS TO WS-DL-INP-INDEX, WS-DL-PRM-INDEX.
MOVE SPACES TO WS-DL-TABLE-FIXED-R.
PERFORM FDL-0010
UNTIL WS-DL-INP-INDEX = 20.
MOVE WS-DL-TABLE-FIXED-R TO WS-DL-AREA.
MOVE ZEROS TO WS-DL-INP-INDEX, WS-DL-PRM-INDEX.

FDL-0010.
ADD 1 TO WS-DL-INP-INDEX.
IF WS-DL-TABLE (WS-DL-INP-INDEX) ALPHABETIC OR
WS-DL-TABLE (WS-DL-INP-INDEX) NUMERIC
IF WS-DL-TABLE (WS-DL-INP-INDEX) > SPACE
ADD 1 TO WS-DL-PRM-INDEX
MOVE WS-DL-TABLE (WS-DL-INP-INDEX) TO
WS-DL-TABLE-FIXED (WS-DL-PRM-INDEX)
END-IF
END-IF.


















TERMINAL-ACCESS-CHECK.

MOVE 'TERMINAL-ACCESS-CHECK'     TO CXUTS0ML-PARAGRAPH.

IF (TERMINAL-TO-BE-CHECKED) AND
(EIBTRMID IS NOT NUMERIC)
CONTINUE
ELSE
MOVE OPACSFL-SUFFIX TO OPACSFL-SFX
MOVE EIBTRMID       TO OPCKEY-OPID
EXEC CICS READ
DATASET  (OPACSFL)
INTO     (OPC-DETAIL-RECD)
RIDFLD   (OPACSFL-KEY)
RESP     (EIBRESP)
END-EXEC
MOVE OPACSFL-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
MOVE WS-OPERID        TO OPCKEY-OPID
EXEC CICS READ
DATASET  (OPACSFL)
INTO     (OPC-DETAIL-RECD)
RIDFLD   (OPACSFL-KEY)
RESP     (EIBRESP)
END-EXEC
MOVE OPACSFL-KEY      TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP(NOTFND)
PERFORM INVALID-ACCESS.


INVALID-ACCESS.

MOVE 'INVALID-ACCESS'            TO CXUTS0ML-PARAGRAPH.
MOVE 'ACCESS DENIED' TO OPC-DETAIL-RECD.
EXEC CICS SEND
FROM   (OPC-DETAIL-RECD)
LENGTH (18)
ERASE
RESP   (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.
PERFORM EXEC-CICS-RETURN.
























ORDRFIL-RECD-INIT.
MOVE SPACES TO ORDRFIL-DETAIL-RECD.
MOVE 0 TO
ODR-NAME-LINK             IN ORDRFIL-DETAIL-RECD,
ODR-BUSINESS-DATE         IN ORDRFIL-DETAIL-RECD,
ODR-CONTROL-NR            IN ORDRFIL-DETAIL-RECD,
ODR-ORDER-AMT             IN ORDRFIL-DETAIL-RECD,
ODR-XMIT-RATE             IN ORDRFIL-DETAIL-RECD,
ODR-DISC-AMT              IN ORDRFIL-DETAIL-RECD,
ODR-TIME-IN               IN ORDRFIL-DETAIL-RECD,
ODR-TIME-OUT              IN ORDRFIL-DETAIL-RECD,
ODR-LAST-CHECK            IN ORDRFIL-DETAIL-RECD,
ODR-CHECK-TOTAL           IN ORDRFIL-DETAIL-RECD,
ODR-DATE                  IN ORDRFIL-DETAIL-RECD,
ODR-TIME                  IN ORDRFIL-DETAIL-RECD,
ODR-NBR-RESENDS           IN ORDRFIL-DETAIL-RECD,
ODR-ORIG-CTL-NR           IN ORDRFIL-DETAIL-RECD,
ODR-AUTO-ATTEMPTS         IN ORDRFIL-DETAIL-RECD.
MOVE CICS-PRIOR-DAY-JULIAN-DATE-OL TO
ODR-BUSINESS-DATE  IN ORDRFIL-DETAIL-RECD,
ODR-DATE           IN ORDRFIL-DETAIL-RECD.
DIVIDE EIBTIME BY 100 GIVING
ODR-TIME IN ORDRFIL-DETAIL-RECD.
MOVE ODR-TIME IN ORDRFIL-DETAIL-RECD TO
ODR-TIME-IN IN ORDRFIL-DETAIL-RECD.
MOVE EIBTRMID TO ODR-FULL-TERM IN ORDRFIL-DETAIL-RECD.

MOVE EIBTRNID TO ODR-TRANS-ID IN ORDRFIL-DETAIL-RECD.

ORINIT-9999.
EXIT.




CHECK-FOR-STANDIN.

MOVE 1 TO WS-SIRX-PROD-CODE.
PERFORM CHECK-STANDIN THRU CHECK-STANDIN-EXIT.
IF STAND-IN-ACTIVE
EXEC CICS XCTL
PROGRAM ('TSSIO0FP')
RESP    (EIBRESP)
END-EXEC
MOVE 'CHECK FOR STANDIN' TO CXUTS0ML-PARAGRAPH
MOVE 'XCTL TSSIO0FP 1'   TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP.


MOVE 2 TO WS-SIRX-PROD-CODE.
PERFORM CHECK-STANDIN THRU CHECK-STANDIN-EXIT.
IF STAND-IN-ACTIVE
EXEC CICS XCTL
PROGRAM ('TSSIO0FP')
RESP    (EIBRESP)
END-EXEC
MOVE 'CHECK FOR STANDIN' TO CXUTS0ML-PARAGRAPH
MOVE 'XCTL TSSIO0FP 2'   TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP.









































CHECK-STANDIN.


MOVE 'R' TO WS-SIRX-FUNCTION.
EXEC CICS LINK
PROGRAM  ('TSSIO0RX')
COMMAREA (WS-SIRX-COMMAREA)
LENGTH   (WS-SIRX-COMMAREA-LENGTH)
RESP     (EIBRESP)
END-EXEC.


IF EIBRESP IS = 0 AND
WS-SIRX-FUNCTION IS = 'R'
MOVE WS-SIRX-SILIMIT-RECORD TO SILIMIT-RECORD
ELSE
MOVE SPACES TO SILIMIT-RECORD.

CHECK-STANDIN-EXIT.
EXIT.


SETTLEMENT-REQUEST.

IF WS-UIWA-SC-CODE = 'DN' OR 'UP' OR '?'
PERFORM SR-8000
ELSE
MOVE '*' TO ERROR-FLAG.


SR-8000.


IF WS-UIWA-SC-CODE = 'UP' OR 'DN'
PERFORM SR-UPDATE-SETTLEMENT-STATUS.

IF NOT INHIBIT-SETTLEMENT-REQUESTS
MOVE 'SETTLEMENT POSSIBLE NOW    ' TO OUT-COMENT-1
ELSE
MOVE 'SETTLEMENT NOT POSSIBLE NOW' TO OUT-COMENT-1.

PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.


SR-UPDATE-SETTLEMENT-STATUS.

MOVE 'SR-UPDATE-SETTLEMENT-STATUS' TO CXUTS0ML-PARAGRAPH.

IF INITIATED-VIA-START
NEXT SENTENCE
ELSE
MOVE SPACES    TO OPAC-TERMINAL-CHECK-FLAG
MOVE 'FPMASTR' TO OPCKEY-SECURITY-DATA
PERFORM TERMINAL-ACCESS-CHECK
MOVE 'T'       TO OPAC-TERMINAL-CHECK-FLAG.

MOVE 1 TO DT-KEY.
EXEC CICS READ
DATASET ('ONLNDF')
INTO    (WS-CICS-CONTROL-RECORD)
RIDFLD  (DT-KEY) RRN
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE DT-KEY            TO WS-NUM-7.
MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
EVALUATE WS-UIWA-SC-CODE
WHEN 'UP'
MOVE SPACES TO SETTLEMENT-PROCESSING-FLAG
WHEN 'DN'
MOVE 'X' TO SETTLEMENT-PROCESSING-FLAG
END-EVALUATE.
EXEC CICS REWRITE
DATASET (EIBDS)
FROM    (WS-CICS-CONTROL-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
EXEC CICS LINK
PROGRAM ('ONLCTRL')
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


80000-DISCOUNT-COMPUTATION.


MOVE 'D' TO FMCD-REQ-TYPE
PERFORM TSFMO0CD-ROUTINE.

TSFMO0CD-ROUTINE.

PERFORM BUILD-FMCD-COMMAREA
PERFORM LINK-TO-TSFMO0CD
PERFORM SAVE-TSFMO0CD-VALUES.

BUILD-FMCD-COMMAREA.

PERFORM BUILD-FMCD-GROUP-COMMAREA
PERFORM BUILD-FMCD-INDIV-COMMAREA.

BUILD-FMCD-GROUP-COMMAREA.

MOVE FP-COMMON-AREA          TO FMCD-FP-COMMON-AREA
MOVE CDN-CUSTOMER-RECORD     TO FMCD-CDN-CUSTOMER-RECORD
MOVE SERVICE-CENTER-MASTER-RECORD
TO FMCD-SC-MASTER-RECORD
MOVE WS-PRICING-FILE-AREA    TO FMCD-PRICING-FILE-AREA
MOVE WS-USER-INPUT-WORK-AREA TO FMCD-USER-INPUT-WORK-AREA
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
TO FMCD-FMLOG-RECORD
MOVE WS-FMCD-COMMAREA-CHG    TO FMCD-COMMAREA-CHG.

MOVE SPACES TO WS-MERCH-SURCHRG-FLAG
IF FMCD-REQ-TYPE = 'D'
MOVE ZEROS TO  WS-MERCH-SURCHRG-TOTAL
END-IF

IF COM-CUSTOM-FEE-FLAG NOT = 'Y' AND
COM-COMDATA-COMPLETE-FLAG NOT = 'Y' AND
(CDN-CREDIT-PRICED-FLAG = 'N' OR ' ' OR LOW-VALUES) AND
SCM-MERCH-SUR-CHG-PCT NUMERIC AND
SCM-MERCH-SUR-CHG-PCT > ZEROS
MOVE 'Y' TO WS-MERCH-SURCHRG-FLAG
END-IF.

MOVE SPACES TO WS-MINIMUM-FEE-FLAG
WS-GALUP-FEE-FLAG.

IF SCM-IS-IN-CANADA
OR SCM-IS-A-TERMINAL-FUEL-LOC
OR COM-COMDATA-COMPLETE-FLAG = 'Y'
OR COM-CUSTOM-FEE-FLAG = 'Y'
NEXT SENTENCE
ELSE
IF SCM-MIN-FEE-FLAG = 'Y'    AND
SCM-MIN-FEE-CPG NUMERIC   AND
SCM-MIN-FEE-CPG > ZEROS
MOVE 'Y' TO WS-MINIMUM-FEE-FLAG.

IF SCM-IS-IN-CANADA
OR SCM-IS-A-TERMINAL-FUEL-LOC
NEXT SENTENCE
ELSE
IF SCM-GALUP-FEE-FLAG = 'Y'  AND
SCM-GALUP-FEE-CPG NUMERIC AND
SCM-GALUP-FEE-CPG > ZEROS
MOVE 'Y' TO WS-GALUP-FEE-FLAG.

MOVE WS-FMCD-MISC-AREA       TO FMCD-MISC-AREA.


BUILD-FMCD-INDIV-COMMAREA.

INITIALIZE FMCD-COMMAREA-INPUT
IF THIS-IS-A-POS-TRANS
MOVE 'Y' TO CD-POS-FLAG
END-IF
IF WS-BILLABLE-IS-ALL-CASH
MOVE 'Y' TO CD-BILLABLE-IS-ALL-CASH
END-IF
IF PGRM-FUNCTION-CASH-ONLY
MOVE 'Y' TO CD-FUNCTION-CASH-ONLY
END-IF
IF THIS-BE-A-NATS-AUTH
MOVE 'Y' TO CD-THIS-BE-A-NATS-AUTH
END-IF
IF THIS-BE-A-FLEET-XTN
MOVE 'Y' TO CD-THIS-BE-A-FLEET-XTN
END-IF
IF CAR-CHAIN-TO-BE-INVOICED
MOVE 'Y' TO CD-CHAIN-TO-BE-INVOICED
END-IF
MOVE FPFSI                   TO CD-FPFSI
MOVE CSR-FLEET-BAL-LIM-FLAG  TO CD-FLEET-BAL-LIM-FLAG
MOVE WS-CDN-GUAR-YN          TO CD-CDN-GUAR-YN
MOVE PRDCST-CUSTOMER-TYPE    TO CD-PRDCST-CUSTOMER-TYPE
MOVE WS-SCM-CORP-REBATE-FLAG TO CD-SCM-CORP-REBATE-FLAG
MOVE WS-SCM-CORP-REBATE-LOCATION
TO CD-SCM-CORP-REBATE-LOCATION
MOVE WS-CURRENT-DATE-YYDDD   TO CD-CURRENT-DATE-YYDDD
MOVE WS-REF-RACK-PPG         TO CD-REF-RACK-PPG
MOVE WS-BILLABLE             TO CD-BILLABLE
MOVE WS-NON-BILLABLE         TO CD-NON-BILLABLE
MOVE WS-TOTAL-OTHER          TO CD-TOTAL-OTHER

IF FMCD-BLD-FMLOG
MOVE PD-YYDDD                TO CD-YYDDD
MOVE US-TO-CAN-RATE          TO CD-US-TO-CAN-RATE
MOVE CAN-TO-US-RATE          TO CD-CAN-TO-US-RATE
MOVE WS-COST-PLUS-CPG-FEE1   TO CD-COST-PLUS-CPG-FEE1
MOVE WS-COST-PLUS-CPG-FEE2   TO CD-COST-PLUS-CPG-FEE2
MOVE WS-CDN-COST-PLUS-ADD-ON TO CD-CDN-COST-PLUS-ADD-ON
MOVE WS-CDN-COST-PLUS-ADD-ON-AC
TO CD-CDN-COST-PLUS-ADD-ON-AC
END-IF.

LINK-TO-TSFMO0CD.

MOVE 'LINK-TO-TSFMO0CD'          TO CXUTS0ML-PARAGRAPH.
EXEC CICS LINK
PROGRAM  ('TSFMO0CD')
COMMAREA (FMCD-DISCOUNTS-LINK-AREA)
LENGTH   (LENGTH OF FMCD-DISCOUNTS-LINK-AREA)
RESP     (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP.

SAVE-TSFMO0CD-VALUES.

MOVE FMCD-FP-COMMON-AREA       TO FP-COMMON-AREA
MOVE FMCD-PRICING-FILE-AREA    TO WS-PRICING-FILE-AREA
MOVE FMCD-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA
MOVE FMCD-COMMAREA-CHG         TO WS-FMCD-COMMAREA-CHG
MOVE FMCD-MISC-AREA            TO WS-FMCD-MISC-AREA.
IF FMCD-REQ-TYPE = 'F'
MOVE FMCD-FMLOG-RECORD
TO FUEL-MANAGEMENT-DAILY-LOG-RECD
END-IF.


81040-COMPUTE-PROD-FEES.

IF WS-UIWA-PR-CODE(01) NUMERIC OR
WS-UIWA-PR-CODE(02) NUMERIC OR
WS-UIWA-PR-CODE(03) NUMERIC
IF WS-PRDSCMM-HAS-BEEN-READ NOT = 'Y'
PERFORM 10345-READ-PRDSCMM.

INITIALIZE WS-PRD-FEE-WORK-AREA
MOVE 'SCMM'               TO WS-PRD-CALC-TYPE
IF WS-UIWA-PR-CODE (01) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR1-CODE-NUM + 1
MOVE PRDSCM-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (01)
MOVE PRDSCM-MANUAL-RATE (WS-INDEX)            TO
WS-PRD-SCM-MANUAL-RATE (01)
MOVE PRDSCM-AUTO-RATE   (WS-INDEX)            TO
WS-PRD-SCM-AUTO-RATE   (01)
MOVE PRDSCM-FLAT-OR-POF      (WS-INDEX)       TO
WS-PRD-SCM-FLAT-OR-POF (01)
END-IF.
IF WS-UIWA-PR-CODE (02) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR2-CODE-NUM + 1
MOVE PRDSCM-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (02)
MOVE PRDSCM-MANUAL-RATE (WS-INDEX)            TO
WS-PRD-SCM-MANUAL-RATE (02)
MOVE PRDSCM-AUTO-RATE   (WS-INDEX)            TO
WS-PRD-SCM-AUTO-RATE   (02)
MOVE PRDSCM-FLAT-OR-POF      (WS-INDEX)       TO
WS-PRD-SCM-FLAT-OR-POF (02)
END-IF.
IF WS-UIWA-PR-CODE (03) NUMERIC
COMPUTE WS-INDEX = WS-UIWA-PR3-CODE-NUM + 1
MOVE PRDSCM-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (03)
MOVE PRDSCM-MANUAL-RATE (WS-INDEX)            TO
WS-PRD-SCM-MANUAL-RATE (03)
MOVE PRDSCM-AUTO-RATE   (WS-INDEX)            TO
WS-PRD-SCM-AUTO-RATE   (03)
MOVE PRDSCM-FLAT-OR-POF      (WS-INDEX)       TO
WS-PRD-SCM-FLAT-OR-POF (03)
END-IF.
PERFORM 20896-CHECK-FOR-PRODUCT-FEES.


83000-GET-UNITMST.

IF WS-PRMINFO-READ-SW NOT = 'Y'
PERFORM 83300-READ-PRMINFO
END-IF
PERFORM 83020-SETUP-UNITMST-KEY
PERFORM 83060-READ-UNITMST.


83020-SETUP-UNITMST-KEY.

INITIALIZE UNITMST-KEY
IF ON-HIERARCHY
MOVE PIR-HIERARCHY-ID  TO HIER-ID   OF DUNITNOD
MOVE PIR-NODE-ID       TO TSXCW050-NODE-ID
MOVE REPEAT            TO WS-LOOP-STATUS
PERFORM 83040-FIND-HIER-GROUP
UNTIL WS-LOOP-STATUS = DONE
MOVE '2'               TO UNITMST-UBN-RECD-ID
MOVE PIR-HIERARCHY-ID  TO UNITMST-UBN-HIERARCHY-ID
MOVE UNIT-GRP-ID OF DUNITNOD
TO UNITMST-UBN-GROUP-ID
MOVE SPACES            TO UNITMST-UBN-UNIT-NR
ELSE
MOVE '1'               TO UNITMST-UBC-RECD-ID
MOVE COM-UNIT-POOL-CUST-ID
TO UNITMST-UBC-CUST-ID
MOVE 'DEFAULT'         TO UNITMST-UBC-GROUP-ID
MOVE SPACES            TO UNITMST-UBC-UNIT-NR
END-IF


EVALUATE WS-UNITMST-UNIT
WHEN 'C'
MOVE COM-UNIT-NR-EXPANDED
TO UNITMST-UBC-UNIT-NR
WHEN 'F'
MOVE FMDL-DT-UNIT-NUMBER-EXPANDED
TO UNITMST-UBC-UNIT-NR
WHEN 'W'
MOVE WS-UNIT-NR-10  TO UNITMST-UBC-UNIT-NR
END-EVALUATE.


83040-FIND-HIER-GROUP.

MOVE '83040-FIND-HIER-GROUP'         TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT DBO.HIER_UNIT_GRP_NODE' TO CXUTS0ML-COMMAND
CALL 'CXUTS124' USING
TSXCW050-NODE-ID,
NODE-ID OF DUNITNOD,
BY CONTENT LENGTH OF TSXCW050-NODE-ID,
BY CONTENT LENGTH OF NODE-ID OF DUNITNOD
END-CALL
EXEC SQL
SELECT  UNIT_GRP_ID
INTO :DUNITNOD.UNIT-GRP-ID
FROM DBO.HIER_UNIT_GRP_NODE
WHERE HIER_ID    = :DUNITNOD.HIER-ID
AND NODE_ID    = :DUNITNOD.NODE-ID
END-EXEC
PERFORM CHECK-NOTFND-SQL
IF SQLCODE = +100
PERFORM 83050-FIND-PARENT
IF TSXCW050-NO-MORE-PARENTS
MOVE DONE           TO WS-LOOP-STATUS
MOVE 'DEFAULT'      TO UNIT-GRP-ID OF DUNITNOD
END-IF
ELSE
MOVE DONE              TO WS-LOOP-STATUS
END-IF.


83050-FIND-PARENT.

MOVE 'N'           TO TSXCW050-PARENT-FLAG
CALL 'TSXCS050' USING TSXCW050-AREA
END-CALL.


83060-READ-UNITMST.

MOVE '83060-READ-UNITMST'        TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('UNITMST')
INTO    (UNITMST-UNIT-MASTER-RECORD)
RIDFLD  (UNITMST-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE UNITMST-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.


83100-READ-UNITMST-UPD.

MOVE '83100-READ-UNITMST-UPD'    TO CXUTS0ML-PARAGRAPH.
EXEC CICS READ
DATASET ('UNITMST')
INTO    (UNITMST-UNIT-MASTER-RECORD)
RIDFLD  (UNITMST-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC.
MOVE UNITMST-KEY       TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
INITIALIZE UNITMST-CHANGE-RECORD.
PERFORM 60500-CHECK-UNITMST-NUMERICS
MOVE UNITMST-UNIT-MASTER-RECORD TO
UCR-UNITMST-BEFORE-RECORD.


83200-REWRITE-UNITMST.

MOVE '83200-REWRITE-UNITMST'     TO CXUTS0ML-PARAGRAPH.
EXEC CICS REWRITE
DATASET ('UNITMST')
FROM    (UNITMST-UNIT-MASTER-RECORD)
RESP    (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.
MOVE UNITMST-UNIT-MASTER-RECORD TO UCR-UNITMST-AFTER-RECORD
MOVE WS-USERID                   TO UCR-USERID
MOVE UNITMST-CHANGE-RECORD       TO XCOH-MSG-DATA
MOVE 20                          TO XCOH-MSG-CODE
PERFORM 21121C-LINK-TO-MSG-HANDLER.


83300-READ-PRMINFO.

MOVE '83300-READ-PRMINFO'        TO CXUTS0ML-PARAGRAPH.
INITIALIZE PRM-INFO-RECORD
MOVE COM-PREMIER-CARD TO PIR-CARD-NUMBER
EXEC CICS READ
DATASET ('PRMINFO')
INTO    (PRM-INFO-RECORD)
RIDFLD  (PIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE PIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP

MOVE 'Y' TO WS-PRMINFO-READ-SW

IF PIR-HIERARCHY-ID > SPACES
MOVE 'Y' TO WS-HIER-SW
END-IF.

IF PIR-OTHER-USED NOT NUMERIC
MOVE ZEROS TO PIR-OTHER-USED
END-IF
IF PIR-OTHER-LAST-DATE NOT NUMERIC
MOVE ZEROS TO PIR-OTHER-LAST-DATE
END-IF.

IF PIR-CMCK-FUEL-LIMIT-USED NOT NUMERIC
MOVE ZEROS TO PIR-CMCK-FUEL-LIMIT-USED
END-IF.


85000-READ-CODES.

MOVE '85000-READ-CODES'          TO CXUTS0ML-PARAGRAPH.

MOVE 'US'                 TO CODES-PGM.
MOVE '005'                TO CODES-SEQ.
EXEC CICS READ
DATASET  ('CODES')
RIDFLD   (CODES-KEY)
INTO     (PROGRAM-CODES)
RESP     (EIBRESP)
END-EXEC.
MOVE CODES-KEY         TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.

EVALUATE EIBRESP
WHEN DFHRESP(NORMAL)
MOVE CODES-DATA(1:9) TO WS-CODES-AMOUNT
WHEN OTHER
MOVE '000000100'     TO WS-CODES-AMOUNT
END-EVALUATE.


84000-LOG-TO-BTCHSET.

MOVE '84000-LOG-TO-BTCHSET' TO CXUTS0ML-PARAGRAPH.
MOVE '         '            TO CXUTS0ML-COMMAND.
INITIALIZE SETTLEMENT-INFORMATION-RECORD.
INITIALIZE SIR-DETAIL-INFORMATION
MOVE WS-SETTLE-TS-CODE      TO SIR-SERVICE-CENTER-CODE
SIR-BALT-SC-CODE
SIR-CALT-SC-CODE
SIR-PALT-SC-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES                 TO SIR-DUP-COUNTER
MOVE 'T'                    TO SIR-RECORD-TYPE
MOVE 'B'                    TO SIR-BALT-GROUP-TYPE
MOVE 'C'                    TO SIR-CALT-GROUP-TYPE
MOVE 'P'                    TO SIR-PALT-GROUP-TYPE
MOVE ZEROS                  TO SIR-BALT-GROUP-ID
SIR-BALT-ITEM-NUMBER
SIR-CALT-GROUP-ID
SIR-CALT-ITEM-NUMBER
SIR-PALT-GROUP-ID
SIR-PALT-ITEM-NUMBER.

PERFORM 85055-BUILD-DETAIL-1.
PERFORM 85055-BUILD-DETAIL-2.
PERFORM 85055-BUILD-DETAIL-COUNTRY.
PERFORM 85055-BUILD-DETAIL-DISCOUNT.
PERFORM 85055-BUILD-PASSAGE-PLUS.
PERFORM 85055-BUILD-DETAIL-AMTS-DUE.
PERFORM 85055-BUILD-DETAIL-2X.
PERFORM 85055-BUILD-DETAIL-TAX.
PERFORM 85055-BUILD-DETAIL-3.
PERFORM 85055-BUILD-DETAIL-4.
PERFORM 85055-BUILD-DETAIL-5.
PERFORM 84010-BUILD-BTCHSET-RECORD.
PERFORM 84020-PUT-TO-BTCHSET.


84010-BUILD-BTCHSET-RECORD.

MOVE WS-SETTLE-TS-CODE         TO BSR-LOCATION-CODE.
MOVE SCM-SETTLE-PAYMENT-METHOD TO BSR-SETTLE-PAYMENT-METHOD
MOVE SETTLEMENT-INFORMATION-RECORD TO
BSR-SETTLEMENT-INFO-RECORD.


84020-PUT-TO-BTCHSET.

MOVE WS-BTCHSET-QUEUE  TO MQOD-OBJECTNAME
STRING 'PUT QUEUE: ' WS-BTCHSET-QUEUE
DELIMITED BY SIZE INTO CXUTS0ML-PARAGRAPH.
MOVE MQMT-DATAGRAM          TO MQMD-MSGTYPE
MOVE SPACES                 TO MQMD-REPLYTOQ
MOVE SPACES                 TO MQMD-REPLYTOQMGR
COMPUTE MQPMO-OPTIONS = MQPMO-SYNCPOINT
MOVE BATCH-SETTLEMENT-RECORD TO W00-MSGBUFFER
MOVE WS-QLENGTH-BTCHSET      TO W03-BUFFLEN

CALL 'MQPUT1' USING W03-HCONN
MQOD
MQMD
MQPMO
W03-BUFFLEN
W00-MSGBUFFER
W03-COMPCODE
W03-REASON.

IF W03-COMPCODE = MQCC-OK OR
W03-REASON = MQRC-PUT-INHIBITED
CONTINUE
ELSE
MOVE W03-COMPCODE     TO  W03-COMPCODE-CHAR
MOVE W03-REASON       TO  W03-REASON-CHAR
STRING 'COMP: ' W03-COMPCODE-CHAR
' RSN:' W03-REASON-CHAR
DELIMITED BY SIZE INTO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.


85000-LOG-TO-SETINFO.

MOVE '85000-LOG-TO-SETINFO' TO CXUTS0ML-PARAGRAPH.
MOVE '         '                   TO CXUTS0ML-COMMAND.
PERFORM 85001-CHECK-FOR-SPLIT-SETTLE.
PERFORM 85005-ENQ-LOCATION.
PERFORM VARYING WS-INDEX3 FROM 1 BY 1
UNTIL   WS-INDEX3 > WS-SPLIT-SETTLE-COUNT
PERFORM 85007-ADJUST-FOR-PASSAGEPLUS
PERFORM 85010-GET-CONTROL-RECORD
PERFORM 85020-UPDATE-BALANCE-GROUP
PERFORM 85030-UPDATE-CLOSING-GROUP
PERFORM 85040-UPDATE-PAYMENT-GROUP
PERFORM 85050-WRITE-DETAIL
PERFORM 85060-READJUST-FOR-PASSAGEPLUS
END-PERFORM.
PERFORM 85065-DEQ-LOCATION.


IF WS-MANUAL-FEE > ZEROES
AND NOT WS-LARGE-TRANS-SPLITS
PERFORM 85070-CHECK-FOR-TEMP-LOCATION
END-IF
PERFORM 85080-CHECK-FOR-CORP-REBATE.


85001-CHECK-FOR-SPLIT-SETTLE.



MOVE 'N' TO WS-SPLIT-SETTLE-FLAG.
MOVE 1   TO WS-SPLIT-SETTLE-COUNT.
IF COM-SETTLE-PAYTO       > SPACES
IF (TRACTOR-PURCHASE > ZERO)
MOVE 'Y' TO WS-SPLIT-SETTLE-FLAG
MOVE 2   TO WS-SPLIT-SETTLE-COUNT
ELSE
MOVE 'N' TO WS-SPLIT-SETTLE-FLAG
MOVE 1   TO WS-SPLIT-SETTLE-COUNT.


85005-ENQ-LOCATION.

MOVE 'E'               TO WS-TSFMU020-REQUEST
MOVE 'RESLOCA '        TO WS-TSFMU020-CALLING-FILE
MOVE COM-FP-SC-CODE    TO WS-TSFMU020-LOCATION-RESOURCE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL.
IF WS-TSFMU020-RET-CODE = 0
CONTINUE
ELSE
MOVE SC-IN-USE   TO OUT-COMENT
MOVE SC-IN-USE-N TO POS-ERROR-NUMBER
MOVE '*'           TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


85007-ADJUST-FOR-PASSAGEPLUS.





IF WS-SPLIT-SETTLE-FLAG = 'Y'

MOVE WS-DISCOUNT-AND-FEE-AREA       TO
WS-HOLD-DISC-AND-FEE-AREA
MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO
WS-FPLG-CA-FMLOG
MOVE WS-TOTAL-AMOUNT-FLDS           TO
WS-HOLD-TOTAL-AMOUNT-FLDS
MOVE COM-SPECIAL-SETTLEMENT         TO
WS-HOLD-COM-SPECIAL-SETTLE



EVALUATE WS-INDEX3
WHEN 1
MOVE WS2-BILLABLE-FUEL TO WS2-BILLABLE
MOVE WS2-NON-BILLABLE-FUEL TO WS2-NON-BILLABLE
MOVE ZEROES  TO WS-DC-FEE-AMT
WS-DC-FEE-AMT-FUEL
WS-DC-FEE-AMT-CUSTOM
WS-DC-FEE-AMT-RETAIN
WS-DC-FEE-AMT-MANUAL
FMDL-TF-OIL
FMDL-TF-CASH
FMDL-TF-PRODUCT-1
FMDL-TF-PRODUCT-2
FMDL-TF-PRODUCT-3
FMDL-SC-TR-CASH-ADVANCE-AMOUNT
FMDL-SC-TR-OIL-QUARTS
FMDL-SC-TR-OIL-COST
FMDL-SC-TR-PRODUCT-AMOUNT-1
FMDL-SC-TR-PRODUCT-AMOUNT-2
FMDL-SC-TR-PRODUCT-AMOUNT-3
MOVE SPACES  TO FMDL-TR-PRODUCT-CODE-1
FMDL-TR-PRODUCT-CODE-2
FMDL-TR-PRODUCT-CODE-3
MOVE 'D'     TO COM-SPECIAL-SETTLEMENT
WHEN 2
COMPUTE WS2-BILLABLE = WS2-BILLABLE -
WS2-BILLABLE-FUEL
COMPUTE WS2-NON-BILLABLE = WS2-NON-BILLABLE -
WS2-NON-BILLABLE-FUEL
MOVE ZEROES TO WS-DC-DISCOUNT-AMT
WS-DC-SC-DISCOUNT-AMT
WS-DC-SC-REBATE-AMT
MOVE SPACES TO WS-DC-DISCOUNT-FOCUS-SELECT
WS-DC-DISCOUNT-METHOD
WS-DISCOUNT-TYPE-FLAG
MOVE ZEROES TO FMDL-BC-RD-SC-SELECT-DISCOUNT
FMDL-BC-REBATE-DISCOUNT-AMT
FMDL-SC-RD-SC-SELECT-DISCOUNT
FMDL-SC-REBATE-DISCOUNT-AMT
FMDL-TR-TRACTOR-GALLONS
FMDL-TF-TRACTOR-FUEL
FMDL-TF-TRAILER-FUEL
FMDL-TF-OTHER-FUEL
FMDL-NR1-COST
FMDL-SC-TR-TRACTOR-GALLONS
FMDL-SC-TR-TRACTOR-COST
FMDL-SC-TR-TRAILER-GALLONS
FMDL-SC-TR-TRAILER-COST
FMDL-SC-TR-OTHER-GALLONS
FMDL-SC-TR-OTHER-COST
FMDL-SC-NR1-GALLONS
FMDL-SC-NR1-COST
FMDL-SC-TAX-AMT
END-EVALUATE.


85010-GET-CONTROL-RECORD.

MOVE '85010-GET-CONTROL-RECORD' TO CXUTS0ML-PARAGRAPH.
INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE WS-SETTLE-TS-CODE TO SIR-SERVICE-CENTER-CODE
MOVE 'A'          TO SIR-RECORD-TYPE
EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP = DFHRESP (NOTFND)
INITIALIZE SIR-CONTROL-INFORMATION
MOVE WS-SETTLE-TS-CODE TO SIR-SERVICE-CENTER-CODE
MOVE 'A'          TO SIR-RECORD-TYPE
MOVE WS-SETTLE-TS-CODE TO SIR-BALT-SC-CODE,
SIR-CALT-SC-CODE,
SIR-PALT-SC-CODE
MOVE +1           TO SIR-CI-BALANCE-GROUP-ID,
SIR-CI-CLOSING-GROUP-ID,
SIR-CI-PAYMENT-GROUP-ID
MOVE ZEROES       TO SIR-CI-BALANCE-ITEM-NUMBER
SIR-CI-CLOSING-ITEM-NUMBER
SIR-CI-PAYMENT-ITEM-NUMBER
SIR-CI-PAYMENT-LST-CLOSING-ID
END-IF
IF SIR-CI-CYCLE-STATUS-PENDING
MOVE 'Y'               TO WS-UPDT-FLAG
PERFORM 85011-CYCLE-SETTLEMENT
END-IF.


MOVE 'N' TO WS-CREATE-BALANCE-GROUP,
WS-CREATE-CLOSING-GROUP,
WS-CREATE-PAYMENT-GROUP
IF SIR-CI-BALANCE-ITEM-NUMBER = ZEROES
MOVE 'Y' TO WS-CREATE-BALANCE-GROUP
END-IF
IF SIR-CI-CLOSING-ITEM-NUMBER = ZEROES
MOVE 'Y' TO WS-CREATE-CLOSING-GROUP
END-IF
IF SIR-CI-PAYMENT-ITEM-NUMBER = ZEROES
MOVE 'Y' TO WS-CREATE-PAYMENT-GROUP
END-IF


IF SIR-CI-PAYMENT-ITEM-NUMBER   = ZEROES AND
SIR-CI-PAYMENT-OPEN-ITEM-NUM > ZEROES
MOVE SIR-CI-PAYMENT-OPEN-ITEM-NUM TO
SIR-CI-PAYMENT-ITEM-NUMBER
MOVE ZEROES TO SIR-CI-PAYMENT-OPEN-ITEM-NUM
END-IF


ADD 1 TO SIR-CI-BALANCE-ITEM-NUMBER
ADD 1 TO SIR-CI-CLOSING-ITEM-NUMBER
ADD 1 TO SIR-CI-PAYMENT-ITEM-NUMBER


MOVE SIR-CI-BALANCE-GROUP-ID    TO WS-BALANCE-GROUP-ID
MOVE SIR-CI-CLOSING-GROUP-ID    TO WS-CLOSING-GROUP-ID
MOVE SIR-CI-PAYMENT-GROUP-ID    TO WS-PAYMENT-GROUP-ID
MOVE SIR-CI-BALANCE-ITEM-NUMBER TO WS-BALANCE-ITEM-NUMBER
MOVE SIR-CI-CLOSING-ITEM-NUMBER TO WS-CLOSING-ITEM-NUMBER
MOVE SIR-CI-PAYMENT-ITEM-NUMBER TO WS-PAYMENT-ITEM-NUMBER

IF EIBRESP = DFHRESP (NOTFND)
EXEC CICS WRITE
DATASET ('SETINFO')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY           TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
EXEC CICS REWRITE
DATASET ('SETINFO')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


85011-CYCLE-SETTLEMENT.

MOVE '85011-CYCLE-SETTLEMENT'    TO CXUTS0ML-PARAGRAPH.
MOVE EIBDATE              TO CALENDAR-JULIAN-DATE
MOVE 225                  TO CALENDAR-OPTIONS.
CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED.
MOVE 20                   TO WS-DATE-S-CC.
MOVE YMD-YY               TO WS-DATE-S-YY.
MOVE YMD-MM               TO WS-DATE-S-MM.
MOVE YMD-DD               TO WS-DATE-S-DD.
IF WS-DATE-S = SIR-CI-CYCLE-DATE
IF WS-UPDT-FLAG = 'Y'
EXEC CICS UNLOCK
DATASET ('SETINFO')
RESP    (EIBRESP)
END-EXEC
END-IF
MOVE SIR-SERVICE-CENTER-CODE
TO TSFMW0SO-LOCATION
MOVE 'Y'               TO TSFMW0SO-ENQ-STATUS
EXEC CICS LINK
PROGRAM  ('TSFMO0SO')
COMMAREA (TSFMW0SO-WORKAREA)
LENGTH   (LENGTH OF TSFMW0SO-WORKAREA)
RESP     (EIBRESP)
END-EXEC

IF WS-UPDT-FLAG = 'Y'
EXEC CICS READ
UPDATE
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
ELSE
EXEC CICS READ
DATASET ('SETINFO')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
END-IF
MOVE SIR-KEY           TO CXUTS0ML-COMMAND
END-IF.


85020-UPDATE-BALANCE-GROUP.

MOVE '85020-UPDATE-BALANCE-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'B'                 TO SIR-BALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-BALT-SC-CODE
MOVE WS-BALANCE-GROUP-ID TO SIR-BALT-GROUP-ID
MOVE ZEROES              TO SIR-BALT-ITEM-NUMBER


IF WS-CREATE-BALANCE-GROUP = 'N'
EXEC CICS READ
DATASET ('SETBAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-BALANCE-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-BALANCE-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-GROUP-INFORMATION
MOVE WS-SETTLE-TS-CODE   TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES              TO SIR-DUP-COUNTER
MOVE 'B'                 TO SIR-RECORD-TYPE
SIR-BALT-GROUP-TYPE
SIR-CALT-GROUP-TYPE
SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-BALT-SC-CODE
SIR-CALT-SC-CODE
SIR-PALT-SC-CODE
MOVE WS-BALANCE-GROUP-ID TO SIR-BALT-GROUP-ID
SIR-CALT-GROUP-ID
SIR-PALT-GROUP-ID
MOVE ZEROES              TO SIR-BALT-ITEM-NUMBER
SIR-CALT-ITEM-NUMBER
SIR-PALT-ITEM-NUMBER
END-IF

MOVE WS-BALANCE-ITEM-NUMBER TO SIR-GI-NUMBER-IN-GROUP

IF WS-ADJ-FOR-CORP-REB = 'Y'
PERFORM 85083-UPD-ADJ-GROUP-INFO
ELSE
PERFORM 85900-UPDATE-GROUP-INFO
END-IF

IF WS-CREATE-BALANCE-GROUP = 'N'
EXEC CICS REWRITE
DATASET ('SETBAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
PERFORM
WITH TEST AFTER
UNTIL EIBRESP = DFHRESP (NORMAL)
OR SIR-DUP-COUNTER > WS-DUP-COUNTER-MAX
EXEC CICS WRITE
DATASET ('SETBAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-BALANCE-ALT-INDEX-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-BALANCE-ALT-INDEX-KEY
TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
IF EIBRESP = DFHRESP(DUPREC)
ADD 1 TO SIR-DUP-COUNTER
END-IF
END-PERFORM
IF EIBRESP NOT = DFHRESP (NORMAL)
MOVE SIR-BALANCE-ALT-INDEX-KEY
TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF
END-IF.


85030-UPDATE-CLOSING-GROUP.

MOVE '85030-UPDATE-CLOSING-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'C'                 TO SIR-CALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-CALT-SC-CODE
MOVE WS-CLOSING-GROUP-ID TO SIR-CALT-GROUP-ID
MOVE ZEROES              TO SIR-CALT-ITEM-NUMBER


IF WS-CREATE-CLOSING-GROUP = 'N'
EXEC CICS READ
DATASET ('SETCAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-CLOSING-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
MOVE SIR-CLOSING-ALT-INDEX-KEY  TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-GROUP-INFORMATION
MOVE WS-SETTLE-TS-CODE   TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES              TO SIR-DUP-COUNTER
MOVE 'C'                 TO SIR-RECORD-TYPE
SIR-BALT-GROUP-TYPE
SIR-CALT-GROUP-TYPE
SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-BALT-SC-CODE
SIR-CALT-SC-CODE
SIR-PALT-SC-CODE
MOVE WS-CLOSING-GROUP-ID TO SIR-BALT-GROUP-ID
SIR-CALT-GROUP-ID
SIR-PALT-GROUP-ID
MOVE ZEROES              TO SIR-BALT-ITEM-NUMBER
SIR-CALT-ITEM-NUMBER
SIR-PALT-ITEM-NUMBER
END-IF

MOVE WS-CLOSING-ITEM-NUMBER TO SIR-GI-NUMBER-IN-GROUP

IF WS-ADJ-FOR-CORP-REB = 'Y'
PERFORM 85083-UPD-ADJ-GROUP-INFO
ELSE
PERFORM 85900-UPDATE-GROUP-INFO
END-IF

MOVE SIR-CLOSING-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
IF WS-CREATE-CLOSING-GROUP = 'N'
EXEC CICS REWRITE
DATASET ('SETCAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
EXEC CICS WRITE
DATASET ('SETCAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-CLOSING-ALT-INDEX-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-CLOSING-ALT-INDEX-KEY  TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF.


85040-UPDATE-PAYMENT-GROUP.

MOVE '85040-UPDATE-PAYMENT-GROUP' TO CXUTS0ML-PARAGRAPH.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
MOVE 'P'                 TO SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID TO SIR-PALT-GROUP-ID
MOVE ZEROES              TO SIR-PALT-ITEM-NUMBER

MOVE SIR-PAYMENT-ALT-INDEX-KEY   TO CXUTS0ML-COMMAND.


IF WS-CREATE-PAYMENT-GROUP = 'N'
EXEC CICS READ
DATASET ('SETPAIX')
INTO    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-PAYMENT-ALT-INDEX-KEY)
UPDATE
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-GROUP-INFORMATION
MOVE WS-SETTLE-TS-CODE   TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES              TO SIR-DUP-COUNTER
MOVE 'P'                 TO SIR-RECORD-TYPE
SIR-BALT-GROUP-TYPE
SIR-CALT-GROUP-TYPE
SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE   TO SIR-BALT-SC-CODE
SIR-CALT-SC-CODE
SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID TO SIR-BALT-GROUP-ID
SIR-CALT-GROUP-ID
SIR-PALT-GROUP-ID
MOVE ZEROES              TO SIR-BALT-ITEM-NUMBER
SIR-CALT-ITEM-NUMBER
SIR-PALT-ITEM-NUMBER
END-IF

MOVE WS-PAYMENT-ITEM-NUMBER TO SIR-GI-NUMBER-IN-GROUP

IF WS-ADJ-FOR-CORP-REB = 'Y'
PERFORM 85083-UPD-ADJ-GROUP-INFO
ELSE
PERFORM 85900-UPDATE-GROUP-INFO
END-IF
MOVE SIR-PAYMENT-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
IF WS-CREATE-PAYMENT-GROUP = 'N'
EXEC CICS REWRITE
DATASET ('SETPAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RESP    (EIBRESP)
END-EXEC
PERFORM CHECK-FOR-NORMAL-EIBRESP
ELSE
EXEC CICS WRITE
DATASET ('SETPAIX')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-PAYMENT-ALT-INDEX-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-PAYMENT-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NORMAL-EIBRESP
END-IF


IF WS-MANUAL-FEE > ZEROES AND
WS-ADJ-FOR-CORP-REB NOT = 'Y'
COMPUTE SAVE-AMOUNT = SIR-GI-TOTAL-AMOUNT -
SIR-GI-TOTAL-SPECIAL-AMOUNT -
SIR-GI-TOTAL-DB-AMOUNT -
SIR-GI-TOTAL-CC-AMOUNT -
SIR-GI-TOTAL-DISCOUNT -
SIR-GI-TOTAL-CHARGES +
SIR-GI-TOTAL-SPECIAL-DISCOUNT +
SIR-GI-TOTAL-SPECIAL-CHARGES
END-IF.


85050-WRITE-DETAIL.

MOVE '85050-WRITE-DETAIL        ' TO CXUTS0ML-PARAGRAPH.
PERFORM 85055-CREATE-ALT-INDEX-KEYS.
PERFORM 85055-BUILD-DETAIL-1.
PERFORM 85055-BUILD-DETAIL-2.
PERFORM 85055-BUILD-DETAIL-COUNTRY.
PERFORM 85055-BUILD-DETAIL-DISCOUNT.
PERFORM 85055-BUILD-PASSAGE-PLUS.
PERFORM 85055-BUILD-DETAIL-AMTS-DUE.
PERFORM 85055-BUILD-DETAIL-2X.
PERFORM 85055-BUILD-DETAIL-TAX.
PERFORM 85055-BUILD-DETAIL-3.
PERFORM 85055-BUILD-DETAIL-4.
PERFORM 85055-BUILD-DETAIL-5.
PERFORM 85055-WRITE-SETINFO-RECORD.


85055-CREATE-ALT-INDEX-KEYS.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-DETAIL-INFORMATION
MOVE WS-SETTLE-TS-CODE      TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES                 TO SIR-DUP-COUNTER
MOVE 'T'                    TO SIR-RECORD-TYPE

MOVE 'B'                    TO SIR-BALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-BALT-SC-CODE
MOVE WS-BALANCE-GROUP-ID    TO SIR-BALT-GROUP-ID
MOVE WS-BALANCE-ITEM-NUMBER TO SIR-BALT-ITEM-NUMBER

MOVE 'C'                    TO SIR-CALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-CALT-SC-CODE
MOVE WS-CLOSING-GROUP-ID    TO SIR-CALT-GROUP-ID
MOVE WS-CLOSING-ITEM-NUMBER TO SIR-CALT-ITEM-NUMBER

MOVE 'P'                    TO SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID    TO SIR-PALT-GROUP-ID
MOVE WS-PAYMENT-ITEM-NUMBER TO SIR-PALT-ITEM-NUMBER.


85055-BUILD-DETAIL-1.

INITIALIZE SIR-DETAIL-INFORMATION
MOVE 'A'                    TO SIR-DI-TRANSACTION-STATUS

MOVE 'F'                    TO SIR-DI-TRANSACTION-TYPE
IF WS-NON-BILLABLE > ZEROES
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
MOVE 'CC '            TO SIR-DI-TRANSACTION-TYPE
IF COM-CC-RECOURSE
MOVE 'CCR'         TO SIR-DI-TRANSACTION-TYPE
END-IF
ELSE
MOVE 'DB'             TO SIR-DI-TRANSACTION-TYPE
IF WS-BILLABLE > ZEROES
MOVE 'DBF'         TO SIR-DI-TRANSACTION-TYPE
END-IF
END-IF
END-IF.


85055-BUILD-DETAIL-2.

MOVE 'C'                    TO SIR-DI-PAYMENT-TYPE
IF SCM-SETTLE-PAYMENT-CYCLE = 'R'
MOVE 'R'                 TO SIR-DI-PAYMENT-TYPE
END-IF.
MOVE SCM-SETTLE-PAYMENT-CYCLE  TO SIR-DI-PAYMENT-CYCLE
IF COM-SPECIAL-SETTLEMENT > SPACES
MOVE 'S'                    TO SIR-DI-PAYMENT-TYPE
MOVE COM-SPECIAL-SETTLEMENT TO SIR-DI-PAYMENT-CYCLE.
IF WS-SPLIT-SETTLE-FLAG = 'Y'
MOVE 'Y'                   TO SIR-DI-PART-OF-SPLIT-FLAG
MOVE WS-INDEX3             TO SIR-DI-PART-OF-SPLIT-PART
IF WS-INDEX3 = 1
MOVE COM-SETTLE-PAYTO   TO SIR-DI-SPECIAL-PAYTO.
MOVE FMDL-CUST-ACCOUNT-CODE   TO SIR-DI-ACCOUNT-CODE
MOVE FMDL-CUST-CUSTOMER-ID    TO SIR-DI-CUSTOMER-ID

MOVE COM-PREMIER-CARD         TO WS-PRM-CARD-NR
MOVE PRM-CHECK-DIGIT          TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-NUM          TO SIR-DI-CARD-NUMBER
MOVE WS-PRM-CARD-NR           TO SIR-DI-ATM-CARD-NR
MOVE FMDL-TR-SC-INVOICE-NUMBER TO SIR-DI-INVOICE-NUMBER
MULTIPLY PD-DD BY 10000000 GIVING SIR-DI-TRANSACTION-NUMBER
ADD FMDL-RK-CONTROL-NUMBER    TO SIR-DI-TRANSACTION-NUMBER.


85055-BUILD-DETAIL-COUNTRY.

IF COM-ACCOUNT-CURR-TYPE = 'B'
MOVE 'U'                   TO SIR-DI-ACCOUNT-COUNTRY
IF FMDL-CN-ACCOUNT
MOVE 'C'                TO SIR-DI-ACCOUNT-COUNTRY.
IF COM-ACCOUNT-CURR-TYPE NOT = 'B'
MOVE 'U'                   TO SIR-DI-ACCOUNT-COUNTRY
IF FMDL-CN-SC
MOVE 'C'                TO SIR-DI-ACCOUNT-COUNTRY.

MOVE 'U'                      TO SIR-DI-SC-COUNTRY
IF FMDL-CN-SC
MOVE 'C'                   TO SIR-DI-SC-COUNTRY
END-IF.


85055-BUILD-DETAIL-DISCOUNT.

MOVE WS-DC-SC-DISCOUNT-AMT    TO SIR-DI-DISCOUNT-AMOUNT.
MOVE WS-DC-SC-REBATE-AMT      TO
SIR-DI-DISCOUNT-AMOUNT-REBATE.
IF WS-DC-DISCOUNT-METHOD = 'R'
MOVE SIR-DI-DISCOUNT-AMOUNT TO
SIR-DI-DISCOUNT-AMOUNT-REBATE.


85055-BUILD-PASSAGE-PLUS.

MOVE 'N' TO SIR-DI-PASSAGE-PLUS-FLAG.
IF COM-FOCUS-CPG-REBATE > +0 OR
COM-FOCUS-POF-REBATE > +0 OR
COM-FOCUS-FLT-REBATE > +0 OR
COM-DISCOUNT-METHOD  = 'R'
MOVE COM-PASSAGE-PLUS-FLAG TO SIR-DI-PASSAGE-PLUS-FLAG.


85055-BUILD-DETAIL-AMTS-DUE.


IF  TSXCO0AT-XBORDER-XTN = 'Y'
COMPUTE SIR-DI-AMOUNT-DUE = (WS2-NON-BILLABLE +
WS2-BILLABLE) - WS-XBORDER-ASSMT-AMT
COMPUTE SIR-DI-AMOUNT-DUE-CDN =
WS2-BILLABLE - WS-XBORDER-ASSMT-AMT
ELSE
COMPUTE SIR-DI-AMOUNT-DUE = WS2-NON-BILLABLE +
WS2-BILLABLE
COMPUTE SIR-DI-AMOUNT-DUE-CDN = WS2-BILLABLE
END-IF
MOVE ZEROES TO SIR-DI-ACCT-AMOUNT-DUE
WS-SUBTRACT-DISCOUNT
IF FMDL-CUST-DISCOUNT-METHOD = 'N'
EVALUATE TRUE
WHEN COM-ACCOUNT-CURR-TYPE = 'B'
COMPUTE WS-SUBTRACT-DISCOUNT =
FMDL-BC-RD-SC-SELECT-DISCOUNT -
FMDL-BC-REBATE-DISCOUNT-AMT
WHEN OTHER
COMPUTE WS-SUBTRACT-DISCOUNT =
FMDL-SC-RD-SC-SELECT-DISCOUNT -
FMDL-SC-REBATE-DISCOUNT-AMT
END-EVALUATE.

IF WS-BILLABLE > ZEROES
EVALUATE TRUE
WHEN COM-ACCOUNT-CURR-TYPE = 'B'
COMPUTE SIR-DI-ACCT-AMOUNT-DUE = WS-BILLABLE -
WS-SUBTRACT-DISCOUNT
WHEN OTHER
COMPUTE SIR-DI-ACCT-AMOUNT-DUE = WS2-BILLABLE -
WS-SUBTRACT-DISCOUNT
END-EVALUATE.


85055-BUILD-DETAIL-2X.


MOVE '0'                      TO SIR-DI-TRACTOR-FUEL-FLAG
IF FMDL-TR-TRACTOR-GALLONS > ZEROES
MOVE FMDL-TF-TRACTOR-FUEL  TO SIR-DI-TRACTOR-FUEL-FLAG-N
END-IF
MOVE FMDL-TF-TRAILER-FUEL     TO SIR-DI-TRAILER-FUEL-FLAG-N
MOVE FMDL-TF-OTHER-FUEL       TO SIR-DI-OTHER-FUEL-FLAG-N
MOVE ZERO                     TO SIR-DI-NR1-FUEL-FLAG-N
IF FMDL-NR1-COST > ZEROES
MOVE FMDL-TF-TRACTOR-FUEL  TO SIR-DI-NR1-FUEL-FLAG-N
END-IF
MOVE FMDL-TF-OIL              TO SIR-DI-OIL-FLAG-N
MOVE FMDL-TF-CASH             TO SIR-DI-CASH-FLAG-N
MOVE FMDL-TF-PRODUCT-1        TO SIR-DI-PRODUCT1-FLAG-N
MOVE FMDL-TF-PRODUCT-2        TO SIR-DI-PRODUCT2-FLAG-N
MOVE FMDL-TF-PRODUCT-3        TO SIR-DI-PRODUCT3-FLAG-N
IF FMDL-PAID-AT-LOAD
INSPECT  SIR-DI-PRODUCT-PURCHASE-FLAGS REPLACING ALL
'1' BY '2'
END-IF

MOVE FMDL-SC-TR-TRACTOR-GALLONS   TO SIR-DI-TRACTOR-GALLONS

IF FUELUP-YES
MOVE FMDL-FUEL-UP-AMOUNT       TO SIR-FUEL-UP-AMOUNT
MOVE FUELUP-SC-TR-TRACTOR-COST TO SIR-DI-TRACTOR-COST
ELSE
MOVE ZEROS                     TO SIR-FUEL-UP-AMOUNT
MOVE FMDL-SC-TR-TRACTOR-COST   TO SIR-DI-TRACTOR-COST
END-IF

MOVE FMDL-SC-TR-TRAILER-GALLONS   TO SIR-DI-TRAILER-GALLONS
MOVE FMDL-SC-TR-TRAILER-COST      TO SIR-DI-TRAILER-COST
MOVE FMDL-SC-TR-OTHER-GALLONS     TO SIR-DI-OTHER-GALLONS
MOVE FMDL-SC-TR-OTHER-COST        TO SIR-DI-OTHER-COST
MOVE FMDL-SC-NR1-GALLONS          TO SIR-DI-NR1-GALLONS
MOVE FMDL-SC-NR1-COST             TO SIR-DI-NR1-COST
MOVE FMDL-SC-TR-CASH-ADVANCE-AMOUNT TO SIR-DI-CASH-AMOUNT
IF  TSXCO0AT-XBORDER-XTN = 'Y'
COMPUTE SIR-DI-CASH-AMOUNT = SIR-DI-CASH-AMOUNT -
WS-XBORDER-ASSMT-AMT
END-IF.
MOVE FMDL-SC-TR-OIL-QUARTS        TO SIR-DI-OIL-QUARTS
MOVE FMDL-SC-TR-OIL-COST          TO SIR-DI-OIL-COST
MOVE FMDL-TR-PRODUCT-CODE-1       TO SIR-DI-PRODUCT1-CODE
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-1  TO SIR-DI-PRODUCT1-AMOUNT
MOVE FMDL-TR-PRODUCT-CODE-2       TO SIR-DI-PRODUCT2-CODE
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-2  TO SIR-DI-PRODUCT2-AMOUNT
MOVE FMDL-TR-PRODUCT-CODE-3       TO SIR-DI-PRODUCT3-CODE
MOVE FMDL-SC-TR-PRODUCT-AMOUNT-3  TO SIR-DI-PRODUCT3-AMOUNT.

MOVE FMDL-TEXACO-CREDIT-XTN-FL   TO SIR-DI-TEXACO-CR-XTN-FL.
MOVE FMDL-CO-CREDIT-FL           TO SIR-DI-CO-CREDIT-FL.
MOVE FMDL-CO-TEXACO-CO-BRAND-FL  TO
SIR-DI-CO-TEXACO-CO-BRAND-FL.
MOVE FMDL-SC-CREDIT-FL           TO SIR-DI-SC-CREDIT-FL.
MOVE FMDL-SC-TEXACO-FL           TO SIR-DI-SC-TEXACO-FL.


85055-BUILD-DETAIL-TAX.

MOVE FMDL-SC-TAX-AMT             TO SIR-DI-TAX-AMOUNT.
MOVE '0'                         TO SIR-DI-TAX-AMOUNT-FLAG.
IF SIR-DI-TAX-AMOUNT > ZEROES
EVALUATE TRUE
WHEN SIR-DI-TRACTOR-FUEL-FLAG > '0'
MOVE SIR-DI-TRACTOR-FUEL-FLAG TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-TRAILER-FUEL-FLAG > '0'
MOVE SIR-DI-TRAILER-FUEL-FLAG TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-OTHER-FUEL-FLAG   > '0'
MOVE SIR-DI-OTHER-FUEL-FLAG   TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-NR1-FUEL-FLAG     > '0'
MOVE SIR-DI-NR1-FUEL-FLAG     TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-OIL-FLAG          > '0'
MOVE SIR-DI-OIL-FLAG          TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-PRODUCT1-FLAG     > '0'
MOVE SIR-DI-PRODUCT1-FLAG     TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-PRODUCT2-FLAG     > '0'
MOVE SIR-DI-PRODUCT2-FLAG     TO SIR-DI-TAX-AMOUNT-FLAG
WHEN SIR-DI-PRODUCT3-FLAG     > '0'
MOVE SIR-DI-PRODUCT3-FLAG     TO SIR-DI-TAX-AMOUNT-FLAG
END-EVALUATE.


85055-BUILD-DETAIL-3.

MOVE WS-DC-DISCOUNT-FOCUS-SELECT TO SIR-DI-DISCOUNT-TYPE
IF WS-DISCOUNT-TYPE-FLAG = 'C'
OR COM-NET-PRICING-FLAG = 'C'
MOVE 'C'                      TO SIR-DI-DISCOUNT-TYPE
END-IF.

IF   WS-UIWA-RFID-NBR > SPACES AND
WS-DC-FEE-AMT-FUEL NUMERIC AND
WS-DC-FEE-AMT-FUEL > 0 AND
SCM-AUTO-FUEL-FEE-TYPE NOT = 'P' AND
SCM-RFID-ENABLED-FL-YES AND
((CDN-CUST-USES-UNIT-RFID-TAGS AND
WS-UIWA-RFID-TAG-TYP (1:1) = 'U') OR
(CDN-CUST-USES-TRLR-RFID-TAGS AND
WS-UIWA-RFID-TAG-TYP (1:1) = 'T'))
PERFORM CHK-RFID-LAST-USE-FLDS
IF WS-USE-RFID-XREF = 'Y'
MOVE +0 TO WS-DC-FEE-AMT-FUEL
IF WS-UIWA-CASH-AMT-SC > 0
MOVE WS-SC-AUTO-CASH-ADD-ON TO WS-DC-FEE-AMT-FUEL
END-IF
END-IF
END-IF.

MOVE ZEROES TO WS-INDEX
IF WS-DC-FEE-AMT-FUEL > ZEROES
ADD 1 TO WS-INDEX
MOVE WS-DC-FEE-AMT-FUEL    TO SIR-DI-FEE-AMOUNT (WS-INDEX)
MOVE 'S'                   TO SIR-DI-FEE-TYPE (WS-INDEX)
IF FMDL-DT-EXPRESS-CASH-FLAG = 'Y'
MOVE 'E'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
IF WS-SC-CORP-REB-AMT > ZEROS
MOVE 'M'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
IF PRM-CARD-TYPE-FIELD = 'AV'
MOVE 'V'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
END-IF.
IF WS-DC-FEE-AMT-MANUAL > ZEROES
ADD 1 TO WS-INDEX
MOVE 'C'                   TO SIR-DI-FEE-TYPE (WS-INDEX)
MOVE WS-DC-FEE-AMT-MANUAL  TO SIR-DI-FEE-AMOUNT (WS-INDEX)
IF WS-SC-CORP-REB-AMT > ZEROS
MOVE 'M'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
END-IF
IF WS-DC-FEE-AMT-RETAIN > ZEROES
ADD 1 TO WS-INDEX
MOVE WS-DC-FEE-AMT-RETAIN  TO SIR-DI-FEE-AMOUNT (WS-INDEX)
MOVE 'R'                   TO SIR-DI-FEE-TYPE (WS-INDEX)
IF COM-PREFERRED-CUSTOMER
MOVE 'P'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
IF COM-PAC-PRIDE-FLAG = 'Y'
MOVE 'M'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
IF PRM-CARD-TYPE-FIELD = 'AV'
MOVE 'V'                TO SIR-DI-FEE-TYPE (WS-INDEX)
END-IF
END-IF.
IF WS-DC-FEE-AMT-CUSTOM > ZEROES
ADD 1 TO WS-INDEX
MOVE 'B'                   TO SIR-DI-FEE-TYPE (WS-INDEX)
MOVE WS-DC-FEE-AMT-CUSTOM  TO SIR-DI-FEE-AMOUNT (WS-INDEX)
END-IF.

IF WS-INDEX = ZEROES AND
FMDL-DT-EXPRESS-CASH-FLAG = 'Y'
MOVE 'E'                   TO SIR-DI-FEE-TYPE (1)
MOVE ZEROES                TO SIR-DI-FEE-AMOUNT (1)
END-IF.


85055-BUILD-DETAIL-4.

SET SIR-DI-PREFERRED-NO TO TRUE
IF COM-PREFERRED-CUSTOMER
SET SIR-DI-PREFERRED-YES TO TRUE
END-IF.




MOVE 'N'                         TO SIR-DI-NATS-FLAG
IF SCM-NATS-FLAG-YES OR
SCM-NATS-FLAG-CHECK-FMRM
MOVE 'L'                      TO SIR-DI-NATS-FLAG
END-IF
IF THIS-BE-A-NATS-AUTH
MOVE 'Y'                      TO SIR-DI-NATS-FLAG
END-IF

IF THIS-BE-AN-ATM-XTN
MOVE TSXCO0AT-ATM-DATE        TO SIR-DI-ATM-DATE
MOVE TSXCO0AT-ATM-TIME        TO SIR-DI-ATM-TIME
MOVE TSXCO0AT-CARD-NUMBER     TO SIR-DI-ATM-CARD-NR
MOVE TSXCO0AT-ATM-STAN        TO SIR-DI-ATM-TRACE-NR
MOVE TSXCO0AT-SERIAL-NR       TO SIR-DI-ATM-SWITCH-SERIAL
MOVE TSXCO0AT-XBORDER-XTN     TO SIR-DI-XBORDER-XTN
MOVE TSXCO0AT-XBORDER-CUR     TO SIR-DI-XBORDER-CUR
MOVE TSXCO0AT-CURR-CONV-ASS   TO SIR-DI-CURR-CONV-ASS
IF TSXCO0AT-TRAN-TYPE-AUTH
MOVE 'Y'                   TO SIR-DI-MAESTRO-PRE-AUTH
END-IF
MOVE TSXCO0AT-TRAN-TYPE       TO SIR-DI-ATM-TRAN-TYPE
END-IF

MOVE EIBTRMID                    TO SIR-DI-TERM-ID
MOVE WS-OPERID                   TO SIR-DI-OPID
MOVE WS-POS-FLAG                 TO SIR-DI-POS-FLAG.
MOVE WS-SETTLE-ORIG-TS           TO SIR-DI-ORIG-SC-CODE.
MOVE SCM-ACCOR-STORE             TO SIR-DI-ACCOR-STORE.
MOVE SCM-ACCOR-TERM              TO SIR-DI-ACCOR-TERM.
MOVE FMDL-MERCH-REF-NMBR         TO SIR-DI-MERCH-REF-NMBR.
IF WS-LARGE-TRANS-SPLITS
MOVE WS-LTIH-CONTROL-NR       TO SIR-DI-CONTROL-NUMBER
MOVE WS-LTI-SPLIT-COUNT       TO SIR-DI-NO-OF-RECORDS
END-IF.


85055-BUILD-DETAIL-5.

MOVE WS-UIWA-SWIPED-KEYED        TO SIR-DI-SWIPED-KEYED.
MOVE WS-UIWA-CRD-TOKEN           TO SIR-DI-CARD-TOKEN.
MOVE WS-UIWA-UNIT-NR             TO SIR-DI-UNIT.
MOVE WS-UIWA-NR2-SUB-PROD        TO SIR-DI-NR2-SUB-PROD-CODE.
MOVE WS-UIWA-NR1-SUB-PROD        TO SIR-DI-NR1-SUB-PROD-CODE.
MOVE WS-UIWA-REF-SUB-PROD        TO SIR-DI-REF-SUB-PROD-CODE.
MOVE WS-UIWA-OTH-SUB-PROD        TO SIR-DI-OTH-SUB-PROD-CODE.

IF WS-LARGE-TRANS-SPLITS
AND WS-LTI-SUB1 > 1
NEXT SENTENCE
ELSE
IF WS-MIN-FUEL-FEE-DIFF > ZERO
MOVE WS-MIN-FUEL-FEE-DIFF TO SIR-DI-MINFEE
END-IF
IF WS-GALUP-FUEL-FEE > ZERO
MOVE WS-GALUP-FUEL-FEE    TO SIR-DI-GALUP
END-IF
END-IF.


85055-WRITE-SETINFO-RECORD.

MOVE '85055-WRITE-SETINFO-RECORD' TO CXUTS0ML-PARAGRAPH.
PERFORM
WITH TEST AFTER
VARYING SIR-DUP-COUNTER FROM 0 BY 1
UNTIL EIBRESP = DFHRESP(NORMAL)
OR SIR-DUP-COUNTER > WS-DUP-COUNTER-MAX
EXEC CICS WRITE
DATASET ('SETINFO')
FROM    (SETTLEMENT-INFORMATION-RECORD)
RIDFLD  (SIR-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE SIR-KEY                 TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-DUPREC-EIBRESP
END-PERFORM.

IF EIBRESP NOT = DFHRESP (NORMAL)
MOVE SIR-KEY                 TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF.


85060-READJUST-FOR-PASSAGEPLUS.


IF WS-SPLIT-SETTLE-FLAG = 'Y'
MOVE WS-HOLD-DISC-AND-FEE-AREA       TO
WS-DISCOUNT-AND-FEE-AREA
MOVE WS-FPLG-CA-FMLOG                TO
FUEL-MANAGEMENT-DAILY-LOG-RECD
MOVE WS-HOLD-TOTAL-AMOUNT-FLDS       TO
WS-TOTAL-AMOUNT-FLDS
MOVE WS-HOLD-COM-SPECIAL-SETTLE      TO
COM-SPECIAL-SETTLEMENT.


85065-DEQ-LOCATION.

MOVE 'D'               TO WS-TSFMU020-REQUEST
MOVE 'RESLOCA '        TO WS-TSFMU020-CALLING-FILE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL.


85070-CHECK-FOR-TEMP-LOCATION.

MOVE SIR-SERVICE-CENTER-CODE TO SETL-LOC-O
MOVE WS-HOLD-CHECK-NR        TO SETL-CHK-NR-O
MOVE '0'                     TO SETL-PRINTER-FLAG
IF WS-HOLD-CHECK-NR = ZEROES
MOVE '1'                  TO SETL-PRINTER-FLAG
END-IF
MOVE WS-SAVE-POS-SUB-ID      TO SETL-SUB-ID
MOVE '0'                     TO SETL-BALANCE-PARAM-FLAG
SETL-CLOSING-PARAM-FLAG
SETL-PAYMENT-PARAM-FLAG
MOVE '1'                     TO SETL-BALANCE-REQ-FLAG
SETL-CLOSING-REQ-FLAG
SETL-PAYMENT-REQ-FLAG
EXEC CICS LINK
PROGRAM  ('TSFMO0SS')
COMMAREA (SETTLEMENT-COMMAREA)
LENGTH   (223)
NOHANDLE
END-EXEC
IF SETL-RETURN-ERROR-NUMBER NOT NUMERIC
MOVE +88888 TO SETL-RETURN-ERROR-NUMBER
END-IF
IF SETL-RETURN-ERROR-NUMBER > ZEROES
PERFORM 85075-UPDATE-FMLOG
END-IF
MOVE SETL-RETURN-MESSAGE TO SETL-DISPLAY-MESSAGE
IF SETL-RETURN-CNTL-NR NUMERIC
MOVE SETL-RETURN-CNTL-NR TO WS-CONTROL-NR-SETTLE
END-IF.


85075-UPDATE-FMLOG.

MOVE SETL-RETURN-ERROR-NUMBER TO FMDL-SETTLE-ERROR-NUMBER.
MOVE SPACES            TO FMDL-SETL-SPECIAL-PAYTO.
IF WS-SPLIT-SETTLE-FLAG = 'Y'
MOVE COM-SETTLE-PAYTO  TO FMDL-SETL-SPECIAL-PAYTO.


85080-CHECK-FOR-CORP-REBATE.

IF WS-SC-CORP-REB-AMT > ZEROS
PERFORM 85081-ADJUST-FOR-CORP-REB
END-IF.


85081-ADJUST-FOR-CORP-REB.

MOVE SCM-CORP-REBATE-LOCATION TO WS-SETTLE-TS-CODE.
PERFORM 85082-ENQ-LOCATION.
MOVE 'Y' TO WS-ADJ-FOR-CORP-REB.
PERFORM 85090-READ-CORP-SCMSTR.
PERFORM 85010-GET-CONTROL-RECORD.
PERFORM 85020-UPDATE-BALANCE-GROUP
PERFORM 85030-UPDATE-CLOSING-GROUP
PERFORM 85040-UPDATE-PAYMENT-GROUP
PERFORM 85084-WRITE-ADJ-DETAIL.
PERFORM 85085-DEQ-LOCATION.
MOVE 'N' TO WS-ADJ-FOR-CORP-REB.


85082-ENQ-LOCATION.

MOVE 'E'               TO WS-TSFMU020-REQUEST
MOVE 'RESLOCA '        TO WS-TSFMU020-CALLING-FILE
MOVE WS-SETTLE-TS-CODE TO WS-TSFMU020-LOCATION-RESOURCE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL.
IF WS-TSFMU020-RET-CODE = 0
CONTINUE
ELSE
MOVE SC-IN-USE   TO OUT-COMENT
MOVE SC-IN-USE-N TO POS-ERROR-NUMBER
MOVE '*'           TO VR-TRANS-FLAG
PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
END-IF.


85083-UPD-ADJ-GROUP-INFO.

MOVE 'A'                        TO SIR-GI-STATUS.
COMPUTE SIR-GI-TOTAL-AMOUNT =      SIR-GI-TOTAL-AMOUNT +
WS-SC-CORP-REB-AMT.
MOVE 'N'                        TO SIR-GI-BATCH-FLAG
MOVE WS-HOLD-SC-SETTLE-PMT-METH TO
SIR-GI-LAST-PAYMENT-METHOD.


85084-WRITE-ADJ-DETAIL.

INITIALIZE SETTLEMENT-INFORMATION-RECORD
INITIALIZE SIR-DETAIL-INFORMATION
MOVE WS-SETTLE-TS-CODE      TO SIR-SERVICE-CENTER-CODE
MOVE WS-BUSINESS-DATE-YYYYMMDD-N TO SIR-DATE
MOVE FMDL-TR-TRANSACTION-TIME TO SIR-TIME
MOVE ZEROES                 TO SIR-DUP-COUNTER
MOVE 'T'                    TO SIR-RECORD-TYPE
MOVE 'B'                    TO SIR-BALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-BALT-SC-CODE
MOVE WS-BALANCE-GROUP-ID    TO SIR-BALT-GROUP-ID
MOVE WS-BALANCE-ITEM-NUMBER TO SIR-BALT-ITEM-NUMBER

MOVE 'C'                    TO SIR-CALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-CALT-SC-CODE
MOVE WS-CLOSING-GROUP-ID    TO SIR-CALT-GROUP-ID
MOVE WS-CLOSING-ITEM-NUMBER TO SIR-CALT-ITEM-NUMBER

MOVE 'P'                    TO SIR-PALT-GROUP-TYPE
MOVE WS-SETTLE-TS-CODE      TO SIR-PALT-SC-CODE
MOVE WS-PAYMENT-GROUP-ID    TO SIR-PALT-GROUP-ID
MOVE WS-PAYMENT-ITEM-NUMBER TO SIR-PALT-ITEM-NUMBER.

INITIALIZE SIR-DETAIL-INFORMATION
MOVE 'A'                    TO SIR-DI-TRANSACTION-STATUS
MOVE 'ADJ'                  TO SIR-DI-TRANSACTION-TYPE
MOVE 'C'                    TO SIR-DI-PAYMENT-TYPE
IF WS-HOLD-SC-SETTLE-PMT-CYC = 'R'
MOVE 'R'                 TO SIR-DI-PAYMENT-TYPE
END-IF.
MOVE WS-HOLD-SC-SETTLE-PMT-CYC TO SIR-DI-PAYMENT-CYCLE
MOVE SPACES                   TO SIR-DI-ACCOUNT-CODE
MOVE FMDL-CUST-CUSTOMER-ID    TO SIR-DI-CUSTOMER-ID

MOVE COM-PREMIER-CARD         TO WS-PRM-CARD-NR
MOVE PRM-CHECK-DIGIT          TO WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-NUM          TO SIR-DI-CARD-NUMBER
MOVE WS-PRM-CARD-NR           TO SIR-DI-ATM-CARD-NR
MOVE 'PACPRIDE'               TO SIR-DI-INVOICE-NUMBER
MULTIPLY PD-DD BY 10000000 GIVING SIR-DI-TRANSACTION-NUMBER
ADD FMDL-RK-CONTROL-NUMBER    TO SIR-DI-TRANSACTION-NUMBER.
PERFORM 85055-BUILD-DETAIL-COUNTRY.
MOVE WS-SC-CORP-REB-AMT       TO SIR-DI-AMOUNT-DUE
SIR-DI-AMOUNT-DUE-CDN
MOVE 'N'                      TO SIR-DI-NATS-FLAG
MOVE EIBTRMID                 TO SIR-DI-TERM-ID.
MOVE WS-OPERID                TO SIR-DI-OPID
MOVE WS-POS-FLAG              TO SIR-DI-POS-FLAG.
MOVE WS-SETTLE-ORIG-TS        TO SIR-DI-ORIG-SC-CODE.
PERFORM 85055-WRITE-SETINFO-RECORD.


85085-DEQ-LOCATION.

MOVE 'D'               TO WS-TSFMU020-REQUEST
MOVE 'RESLOCA '        TO WS-TSFMU020-CALLING-FILE
CALL WS-TSFMU020-PROG USING DFHEIBLK,
DFHCOMMAREA,
WS-TSFMU020-AREA
END-CALL.


85090-READ-CORP-SCMSTR.

MOVE '85090-READ-CORP-SCMSTR'    TO CXUTS0ML-PARAGRAPH.
MOVE SPACES                   TO WS-HOLD-SC-RECORD
MOVE SCM-CORP-REBATE-LOCATION TO WS-HOLD-SC-RECORD-KEY
EXEC CICS READ
DATASET ('SCMSTR')
INTO    (WS-HOLD-SC-RECORD)
RIDFLD  (WS-HOLD-SC-RECORD-KEY)
RESP    (EIBRESP)
END-EXEC
MOVE WS-HOLD-SC-RECORD-KEY TO CXUTS0ML-COMMAND
PERFORM CHECK-FOR-NOTFND-EIBRESP
IF EIBRESP NOT = DFHRESP(NORMAL)
MOVE SPACES TO WS-HOLD-SC-SETTLE-PMT-METH
WS-HOLD-SC-SETTLE-PMT-CYC
END-IF.


85900-UPDATE-GROUP-INFO.

PERFORM 85910-CHECK-GROUP-NUM

MOVE 'A'                    TO SIR-GI-STATUS
COMPUTE SIR-GI-TOTAL-AMOUNT = SIR-GI-TOTAL-AMOUNT +
WS2-BILLABLE         +
WS2-NON-BILLABLE

IF  TSXCO0AT-XBORDER-XTN = 'Y'
COMPUTE SIR-GI-TOTAL-AMOUNT =
SIR-GI-TOTAL-AMOUNT - WS-XBORDER-ASSMT-AMT
END-COMPUTE
END-IF

IF COM-SPECIAL-SETTLEMENT > SPACES
COMPUTE SIR-GI-TOTAL-SPECIAL-AMOUNT =
SIR-GI-TOTAL-SPECIAL-AMOUNT +
WS2-NON-BILLABLE + WS2-BILLABLE
COMPUTE SIR-GI-TOTAL-SPECIAL-DISCOUNT =
SIR-GI-TOTAL-SPECIAL-DISCOUNT +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-TOTAL-SPECIAL-CHARGES  =
SIR-GI-TOTAL-SPECIAL-CHARGES  +
WS-DC-FEE-AMT
COMPUTE SIR-GI-NUMBER-OF-SPECIAL-XTNS =
SIR-GI-NUMBER-OF-SPECIAL-XTNS + 1
ELSE
IF COM-COMDATA-COMPLETE-FLAG = 'Y'
COMPUTE SIR-GI-TOTAL-CC-AMOUNT =
SIR-GI-TOTAL-CC-AMOUNT +
WS2-NON-BILLABLE
ELSE
COMPUTE SIR-GI-TOTAL-DB-AMOUNT =
SIR-GI-TOTAL-DB-AMOUNT +
WS2-NON-BILLABLE.

IF WS-SPLIT-SETTLE-FLAG = 'Y' AND
WS-INDEX3 = 1
COMPUTE SIR-GI-TOTAL-PAYTO-XTNS =
SIR-GI-TOTAL-PAYTO-XTNS + 1
COMPUTE SIR-GI-TOTAL-PAYTO-AMT  =
SIR-GI-TOTAL-PAYTO-AMT + WS2-NON-BILLABLE +
WS2-BILLABLE
COMPUTE SIR-GI-TOTAL-PAYTO-DISC =
SIR-GI-TOTAL-PAYTO-DISC + WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-TOTAL-PAYTO-CHGS =
SIR-GI-TOTAL-PAYTO-CHGS + WS-DC-FEE-AMT.

COMPUTE SIR-GI-TOTAL-DISCOUNT = SIR-GI-TOTAL-DISCOUNT +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-TOTAL-CHARGES  = SIR-GI-TOTAL-CHARGES  +
WS-DC-FEE-AMT

IF COM-PREFERRED-CUSTOMER
IF WS2-BILLABLE > ZEROES
COMPUTE SIR-GI-PREFERRED-FUNDED-XTNS =
SIR-GI-PREFERRED-FUNDED-XTNS + 1
COMPUTE SIR-GI-PREFERRED-FUNDED-AMT =
SIR-GI-PREFERRED-FUNDED-AMT +
WS2-BILLABLE
COMPUTE SIR-GI-PREFERRED-FUNDED-DISC =
SIR-GI-PREFERRED-FUNDED-DISC +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-PREFERRED-FUNDED-CHGS =
SIR-GI-PREFERRED-FUNDED-CHGS +
WS-DC-FEE-AMT
COMPUTE SIR-GI-PREFERRED-DB-AMT =
SIR-GI-PREFERRED-DB-AMT +
WS2-NON-BILLABLE
ELSE
COMPUTE SIR-GI-PREFERRED-DB-XTNS =
SIR-GI-PREFERRED-DB-XTNS + 1
COMPUTE SIR-GI-PREFERRED-DB-AMT =
SIR-GI-PREFERRED-DB-AMT +
WS2-NON-BILLABLE
COMPUTE SIR-GI-PREFERRED-DB-DISC =
SIR-GI-PREFERRED-DB-DISC +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-PREFERRED-DB-CHGS =
SIR-GI-PREFERRED-DB-CHGS +
WS-DC-FEE-AMT
END-IF
END-IF

IF FMDL-TEXACO-CREDIT-XTN
PERFORM 85905-SETINFO-GI-NUM-CHECK
PERFORM 85905-SETINFO-GI-NUM-CHECK2
COMPUTE SIR-GI-TEXACO-CREDIT-XTNS =
SIR-GI-TEXACO-CREDIT-XTNS + 1
COMPUTE SIR-GI-TEXACO-CREDIT-AMT =
SIR-GI-TEXACO-CREDIT-AMT +
WS2-NON-BILLABLE + WS2-BILLABLE
COMPUTE SIR-GI-TEXACO-CREDIT-DISC =
SIR-GI-TEXACO-CREDIT-DISC +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-TEXACO-CREDIT-CHGS =
SIR-GI-TEXACO-CREDIT-CHGS +
WS-DC-FEE-AMT
END-IF

IF FMDL-NORMAL-CREDIT-XTN OR
FMDL-GENERIC-CREDIT-XTN
PERFORM 85905-SETINFO-GI-NUM-CHECK
PERFORM 85905-SETINFO-GI-NUM-CHECK2
COMPUTE SIR-GI-OTHER-CREDIT-XTNS =
SIR-GI-OTHER-CREDIT-XTNS + 1
COMPUTE SIR-GI-OTHER-CREDIT-AMT =
SIR-GI-OTHER-CREDIT-AMT +
WS2-NON-BILLABLE + WS2-BILLABLE
COMPUTE SIR-GI-OTHER-CREDIT-DISC =
SIR-GI-OTHER-CREDIT-DISC +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-OTHER-CREDIT-CHGS =
SIR-GI-OTHER-CREDIT-CHGS +
WS-DC-FEE-AMT
END-IF.

IF FMDL-TEXACO-STAR-PLUS-XTN
PERFORM 85905-SETINFO-GI-NUM-CHECK
PERFORM 85905-SETINFO-GI-NUM-CHECK2
COMPUTE SIR-GI-TEXACO-STAR-XTNS =
SIR-GI-TEXACO-STAR-XTNS + 1
COMPUTE SIR-GI-TEXACO-STAR-AMT =
SIR-GI-TEXACO-STAR-AMT +
WS2-NON-BILLABLE + WS2-BILLABLE
COMPUTE SIR-GI-TEXACO-STAR-DISC =
SIR-GI-TEXACO-STAR-DISC +
WS-DC-SC-DISCOUNT-AMT
COMPUTE SIR-GI-TEXACO-STAR-CHGS =
SIR-GI-TEXACO-STAR-CHGS +
WS-DC-FEE-AMT
END-IF

MOVE 'N' TO SIR-GI-BATCH-FLAG
MOVE SCM-SETTLE-PAYMENT-METHOD TO SIR-GI-LAST-PAYMENT-METHOD

MOVE 'U'                      TO SIR-GI-SC-COUNTRY
IF FMDL-CN-SC
MOVE 'C'                   TO SIR-GI-SC-COUNTRY
END-IF.


85905-SETINFO-GI-NUM-CHECK.

IF SIR-GI-TEXACO-CREDIT-XTNS NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-CREDIT-XTNS.
IF SIR-GI-TEXACO-CREDIT-AMT  NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-CREDIT-AMT.
IF SIR-GI-TEXACO-CREDIT-DISC NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-CREDIT-DISC.
IF SIR-GI-TEXACO-CREDIT-CHGS NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-CREDIT-CHGS.
IF SIR-GI-TEXACO-STAR-XTNS   NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-STAR-XTNS.
IF SIR-GI-TEXACO-STAR-AMT    NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-STAR-AMT.
IF SIR-GI-TEXACO-STAR-DISC   NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-STAR-DISC.
IF SIR-GI-TEXACO-STAR-CHGS   NOT NUMERIC
MOVE ZEROS TO SIR-GI-TEXACO-STAR-CHGS.


85905-SETINFO-GI-NUM-CHECK2.

IF SIR-GI-OTHER-CREDIT-XTNS NOT NUMERIC
MOVE ZEROS TO SIR-GI-OTHER-CREDIT-XTNS.
IF SIR-GI-OTHER-CREDIT-AMT  NOT NUMERIC
MOVE ZEROS TO SIR-GI-OTHER-CREDIT-AMT.
IF SIR-GI-OTHER-CREDIT-DISC NOT NUMERIC
MOVE ZEROS TO SIR-GI-OTHER-CREDIT-DISC.
IF SIR-GI-OTHER-CREDIT-CHGS NOT NUMERIC
MOVE ZEROS TO SIR-GI-OTHER-CREDIT-CHGS.


85910-CHECK-GROUP-NUM.

IF SIR-GI-PREFERRED-FUNDED-XTNS NOT NUMERIC
INITIALIZE SIR-GI-PREFERRED-TOTALS.


86000-GET-TS-CODE-FOR-SETTLE.

MOVE SCM-SERVICE-CENTER-CODE  TO WS-SETTLE-TS-CODE.
MOVE SPACES                   TO WS-SETTLE-ORIG-TS.
IF SCM-SETTLEMENT-MASTER > SPACES
MOVE SCM-SERVICE-CENTER-CODE  TO WS-SETTLE-ORIG-TS
MOVE SCM-SETTLEMENT-MASTER    TO WS-SETTLE-TS-CODE.


86001-GET-SETTLE-TS-4-CANCEL.

IF FMDL-SETTLEMENT-SC-CODE > SPACES
MOVE FMDL-SETTLEMENT-SC-CODE  TO WS-SETTLE-TS-CODE
ELSE
MOVE ODR-SRVC-CENTER IN ORDRFIL-DETAIL-RECD
TO WS-SETTLE-TS-CODE.


87000-CHECK-SUB-PROD-XLATE.

MOVE '87000-CHECK-SUB-PROD-XLATE' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT'                     TO CXUTS0ML-COMMAND
MOVE 'Y' TO WS-SUB-PROD-FOUND
EXEC SQL
SELECT CDN_SUB_PROD_CD,
FL_TYP
INTO :WS-SUB-PROD-OUT,
:WS-SUB-PROD-FUEL-TYPE
FROM  DBO.SUB_PROD_XLATE
WHERE CD_TYP          = :WS-SUB-PROD-CODE-TYPE
AND IN_SUB_PROD_CD  = :WS-SUB-PROD-IN
END-EXEC.
IF SQLCODE = +100
MOVE 'N' TO WS-SUB-PROD-FOUND
END-IF.
PERFORM CHECK-NOTFND-SQL.


87100-GET-NR2-DEF-SUB-PROD.

IF SCM-NR2-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR2-DEF-SUB-PROD-CODE TO WS-HOLD-NR2-SUB-PROD-IN
ELSE
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
MOVE SCSPM-NR2-DEF-SUB-PROD    TO WS-HOLD-NR2-SUB-PROD-IN
END-IF.
MOVE WS-HOLD-NR2-SUB-PROD-IN      TO N2SPRDI.


87200-GET-NR1-DEF-SUB-PROD.

IF SCM-NR1-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR1-DEF-SUB-PROD-CODE TO WS-HOLD-NR1-SUB-PROD-IN
ELSE
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
MOVE SCSPM-NR1-DEF-SUB-PROD    TO WS-HOLD-NR1-SUB-PROD-IN
END-IF.
MOVE WS-HOLD-NR1-SUB-PROD-IN      TO N1SPRDI.


87300-GET-REF-DEF-SUB-PROD.

IF SCM-RFR-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-RFR-DEF-SUB-PROD-CODE TO WS-HOLD-REF-SUB-PROD-IN
ELSE
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
MOVE SCSPM-REF-DEF-SUB-PROD TO WS-HOLD-REF-SUB-PROD-IN
END-IF.
MOVE WS-HOLD-REF-SUB-PROD-IN      TO TRSPRDI.


87400-GET-OTH-DEF-SUB-PROD.

IF SCM-OTH-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-OTH-DEF-SUB-PROD-CODE TO WS-HOLD-OTH-SUB-PROD-IN
ELSE
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
MOVE SCSPM-OTH-DEF-SUB-PROD    TO WS-HOLD-OTH-SUB-PROD-IN
END-IF.
MOVE WS-HOLD-OTH-SUB-PROD-IN      TO FPSPRDI.


87500-GET-ALL-DEF-SUB-PROD.

MOVE SPACES TO WS-HOLD-NR2-SUB-PROD-IN
WS-HOLD-NR1-SUB-PROD-IN
WS-HOLD-OTH-SUB-PROD-IN
WS-HOLD-REF-SUB-PROD-IN.
IF SCM-NR2-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR2-DEF-SUB-PROD-CODE TO WS-HOLD-NR2-SUB-PROD-IN
END-IF.
IF SCM-NR1-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR1-DEF-SUB-PROD-CODE TO WS-HOLD-NR1-SUB-PROD-IN
END-IF.
IF SCM-RFR-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-RFR-DEF-SUB-PROD-CODE TO WS-HOLD-REF-SUB-PROD-IN
END-IF.
IF SCM-OTH-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-OTH-DEF-SUB-PROD-CODE TO WS-HOLD-OTH-SUB-PROD-IN
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN = SPACES OR
WS-HOLD-NR1-SUB-PROD-IN = SPACES OR
WS-HOLD-OTH-SUB-PROD-IN = SPACES OR
WS-HOLD-REF-SUB-PROD-IN = SPACES
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
END-IF.
IF WS-HOLD-NR2-SUB-PROD-IN = SPACES
MOVE SCSPM-NR2-DEF-SUB-PROD    TO WS-HOLD-NR2-SUB-PROD-IN
END-IF.
IF WS-HOLD-NR1-SUB-PROD-IN = SPACES
MOVE SCSPM-NR1-DEF-SUB-PROD    TO WS-HOLD-NR1-SUB-PROD-IN
END-IF.
IF WS-HOLD-OTH-SUB-PROD-IN = SPACES
MOVE SCSPM-OTH-DEF-SUB-PROD    TO WS-HOLD-OTH-SUB-PROD-IN
END-IF.
IF WS-HOLD-REF-SUB-PROD-IN = SPACES
MOVE SCSPM-REF-DEF-SUB-PROD    TO WS-HOLD-REF-SUB-PROD-IN
END-IF.
MOVE WS-HOLD-NR2-SUB-PROD-IN      TO N2SPRDI.
MOVE WS-HOLD-NR1-SUB-PROD-IN      TO N1SPRDI.
MOVE WS-HOLD-REF-SUB-PROD-IN      TO TRSPRDI.
MOVE WS-HOLD-OTH-SUB-PROD-IN      TO FPSPRDI.


87520-GET-ALL-DFLT-SUB-PROD.




IF SCM-NR2-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR2-DEF-SUB-PROD-CODE TO WS-DFLT-NR2-SUB-PROD-IN
END-IF
IF SCM-NR1-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-NR1-DEF-SUB-PROD-CODE TO WS-DFLT-NR1-SUB-PROD-IN
END-IF
IF SCM-RFR-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-RFR-DEF-SUB-PROD-CODE TO WS-DFLT-REF-SUB-PROD-IN
END-IF
IF SCM-OTH-DEF-SUB-PROD-CODE > SPACES
MOVE SCM-OTH-DEF-SUB-PROD-CODE TO WS-DFLT-OTH-SUB-PROD-IN
END-IF
IF WS-DFLT-NR2-SUB-PROD-IN = SPACES OR
WS-DFLT-NR1-SUB-PROD-IN = SPACES OR
WS-DFLT-REF-SUB-PROD-IN = SPACES OR
WS-DFLT-OTH-SUB-PROD-IN = SPACES
IF WS-READ-SCSTATE-XY-SW = 'N'
PERFORM 88000-READ-SCSTATE-XY
END-IF
IF WS-DFLT-NR2-SUB-PROD-IN = SPACES
MOVE SCSPM-NR2-DEF-SUB-PROD TO WS-DFLT-NR2-SUB-PROD-IN
END-IF
IF WS-DFLT-NR1-SUB-PROD-IN = SPACES
MOVE SCSPM-NR1-DEF-SUB-PROD TO WS-DFLT-NR1-SUB-PROD-IN
END-IF
IF WS-DFLT-REF-SUB-PROD-IN = SPACES
MOVE SCSPM-REF-DEF-SUB-PROD TO WS-DFLT-REF-SUB-PROD-IN
END-IF
IF WS-DFLT-OTH-SUB-PROD-IN = SPACES
MOVE SCSPM-OTH-DEF-SUB-PROD TO WS-DFLT-OTH-SUB-PROD-IN
END-IF
END-IF.


87600-GET-NATS-SUB-PROD-XLATE.

MOVE '87600-GET-NATS-SUB-PROD-XLATE' TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT'                          TO CXUTS0ML-COMMAND
MOVE 'Y' TO WS-SUB-PROD-FOUND
EXEC SQL
SELECT IN_SUB_PROD_CD
INTO :WS-NATS-PROD-OUT
FROM  DBO.SUB_PROD_XLATE
WHERE CD_TYP          = 'N'
AND CDN_SUB_PROD_CD  = :WS-NATS-PROD-IN
END-EXEC.
IF SQLCODE = +100
MOVE 'N'                 TO WS-SUB-PROD-FOUND
MOVE '999'               TO WS-NATS-PROD-OUT
END-IF.
PERFORM CHECK-NOTFND-SQL.


88000-READ-SCSTATE-XY.

MOVE '88000-READ-SCSTATE-XY'     TO CXUTS0ML-PARAGRAPH.
MOVE SPACES TO SERVICE-CENTER-SUB-PROD-MASTER.
MOVE 'XY'       TO SCSPM-KEY.
EXEC CICS READ
DATASET ('SCSTATE')
INTO    (SERVICE-CENTER-SUB-PROD-MASTER)
RIDFLD  (SCSPM-KEY)
RESP    (EIBRESP)
END-EXEC.
MOVE SCSPM-KEY         TO CXUTS0ML-COMMAND.
PERFORM CHECK-FOR-NOTFND-EIBRESP.
MOVE 'Y' TO WS-READ-SCSTATE-XY-SW.


89000-READ-CDN-SUB-PROD.

MOVE '89000-READ-CDN-SUB-PROD'    TO CXUTS0ML-PARAGRAPH
MOVE 'SELECT'                     TO CXUTS0ML-COMMAND
EXEC SQL
SELECT CST_PLUS_SUFFIX,
DSC_APPLY_FLG
INTO :CST-PLUS-SUFFIX,
:DSC-APPLY-FLG
FROM  DBO.CDN_SUB_PROD_DESC
WHERE CDN_SUB_PROD_CD = :WS-SUB-PROD-OUT
END-EXEC.
PERFORM CHECK-NORMAL-SQL.


IF DSC-APPLY-FLG NOT = 'N'
MOVE 'Y' TO DSC-APPLY-FLG
END-IF.


DETERMINE-PREFIX.

INITIALIZE             TSXCS001-COMMAREA
MOVE WS-PRM-CARD-BASE-A
TO SUB-INPUT-CARD-NUMBER
PERFORM LINK-TO-TSXCO0FC
IF SUB-ERROR-CODE NOT = 0
MOVE 'DETERMINE PREFIX' TO CXUTS0ML-PARAGRAPH
MOVE 'LINK TSXCO0FC'    TO CXUTS0ML-COMMAND
PERFORM 9900-HANDLE-ABNORMAL-RESP
END-IF
IF SUB-CARD-NUMBER-VALID
MOVE SUB-INPUT-BIN       TO WS-PRM-CARD-PREFIX
END-IF.


DETERMINE-IF-BALANCE-BASED.

MOVE 'N' TO WS-BALANCE-BASED-FLAG.
EVALUATE TRUE
WHEN THIS-BE-A-FLEET-XTN
IF CSR-FLEET-BAL-LIM-FLAG = 'B'
MOVE 'Y' TO WS-BALANCE-BASED-FLAG
END-IF
WHEN OTHER
IF CDN-BALANCE-BASED
MOVE 'Y' TO WS-BALANCE-BASED-FLAG
END-IF
END-EVALUATE.


LINK-TO-TSXCO0FC.

MOVE 'LINK-TO-TSXCO0FC'          TO CXUTS0ML-PARAGRAPH.
EXEC CICS LINK
PROGRAM   ('TSXCO0FC')
COMMAREA  (TSXCS001-COMMAREA)
LENGTH    (LENGTH OF TSXCS001-COMMAREA)
RESP      (EIBRESP)
END-EXEC.
PERFORM CHECK-FOR-NORMAL-EIBRESP.


LOG-TRNS-HIST.

PERFORM BUILD-TRNS-HIST.
PERFORM INSERT-TRNS-HIST.


BUILD-TRNS-HIST.

MOVE WS-BUSINESS-DATE-YYYYMMDD-FMT
TO XTN-DT.

MOVE ODR-CONTROL-NR      OF ORDRFIL-DETAIL-RECD
TO CTL-NBR.
MOVE ODR-ORDER-AMT       OF ORDRFIL-DETAIL-RECD
TO XTN-AMT.
MOVE ODR-SRVC-CENTER     OF ORDRFIL-DETAIL-RECD
TO LOC-CD OF DXTNHIST.
MOVE WS-UIWA-INVOICE-NR  TO LOC-INVOICE-NBR.
MOVE ODR-ACCT-CODE       OF ORDRFIL-DETAIL-RECD
TO ACCT-CD.
MOVE COM-PREMIER-CARD    TO WS-PRM-CARD-NR
MOVE 15                  TO MOD10-SL
MOVE HIGH-VALUE          TO WS-PRM-CARD-CKD
CALL 'CXUTSM10' USING MOD10-SL,
WS-PRM-CARD,
WS-PRM-CARD-CKD
MOVE WS-PRM-CARD-N       TO CRD-NBR OF DXTNHIST.
MOVE ODR-LAST-CHECK      OF ORDRFIL-DETAIL-RECD
TO DRAFT-NBR OF DXTNHIST.
MOVE ODR-CHECK-TOTAL     OF ORDRFIL-DETAIL-RECD
TO DRAFT-AMT.
MOVE ODR-NAME            OF ORDRFIL-DETAIL-RECD
TO PAYEE-NM.
MOVE ODR-SMALL-NAME      OF ORDRFIL-DETAIL-RECD
TO SMALL-NM.
IF WS-LINK-TO-I-SW = 'Y'
ADD WS-CONTROL-NR, 2276 GIVING WS-CALC-AUTH-NR
ELSE
MOVE ZEROS            TO WS-CALC-AUTH-NR
END-IF.
MOVE WS-CALC-AUTH-NR     TO AUTH-NBR OF DXTNHIST.
MOVE PRM-SUB-ACCT-NUMB   TO CUST-ID OF DXTNHIST.
MOVE ODR-TIME-IN         OF ORDRFIL-DETAIL-RECD
TO TIME-IN.
MOVE ODR-TIME-OUT        OF ORDRFIL-DETAIL-RECD
TO TIME-OUT.
IF WS-CURRENT-TIMESTAMP NOT > SPACES
PERFORM GET-CURRENT-TIMESTAMP
END-IF
MOVE WS-CURRENT-TIMESTAMP
TO CRT-TS OF DXTNHIST,
MDY-TS OF DXTNHIST.

MOVE +8                  TO CRT-USR-LEN OF DXTNHIST,
MDY-USR-LEN OF DXTNHIST.
IF WS-USERID > SPACES
MOVE WS-USERID        TO CRT-USR-TEXT OF DXTNHIST,
MDY-USR-TEXT OF DXTNHIST
ELSE
MOVE 'US'             TO CRT-USR-TEXT OF DXTNHIST,
MDY-USR-TEXT OF DXTNHIST
END-IF.


INSERT-TRNS-HIST.

MOVE 'INSERT-TRNS-HIST'       TO CXUTS0ML-PARAGRAPH.
MOVE 'INSERT'                 TO CXUTS0ML-COMMAND.
INITIALIZE WS-FMT-PRODUCT-AREA
MOVE 'DBO.TRNS_HIST'          TO WS-FMT-TABLENAME.
PERFORM WITH TEST AFTER
VARYING TALLY FROM 1 BY 1
UNTIL (NOT WS-SQLCODE-WAIT) OR
(TALLY = 2)
EXEC SQL
INSERT INTO DBO.TRNS_HIST
(XTN_DT,
CTL_NBR,
XTN_AMT,
LOC_CD,
LOC_INVOICE_NBR,
ACCT_CD,
CRD_NBR,
DRAFT_NBR,
DRAFT_AMT,
PAYEE_NM,
SMALL_NM,
AUTH_NBR,
CUST_ID,
TIME_IN,
TIME_OUT,
CRT_TS,
CRT_USR,
MDY_TS,
MDY_USR)
VALUES (:XTN-DT,
:CTL-NBR,
:XTN-AMT,
:DXTNHIST.LOC-CD,
:LOC-INVOICE-NBR,
:ACCT-CD,
:DXTNHIST.CRD-NBR,
:DRAFT-NBR,
:DRAFT-AMT,
:PAYEE-NM,
:SMALL-NM,
:AUTH-NBR,
:DXTNHIST.CUST-ID,
:TIME-IN,
:TIME-OUT,
:DXTNHIST.CRT-TS,
:DXTNHIST.CRT-USR,
:DXTNHIST.MDY-TS,
:DXTNHIST.MDY-USR)
END-EXEC
MOVE SQLCODE TO WS-SQLCODE
IF WS-SQLCODE-WAIT
EXEC CICS DELAY INTERVAL(5) END-EXEC
END-IF
END-PERFORM.
PERFORM CHECK-NORMAL-SQL.







CHECK-NORMAL-SQL.

EVALUATE SQLCODE
WHEN ZERO
CONTINUE
WHEN OTHER
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.


CHECK-NOTFND-SQL.

EVALUATE SQLCODE
WHEN ZERO
WHEN +100
CONTINUE
WHEN OTHER
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.

CHECK-MULT-REC-SQL.

EVALUATE SQLCODE
WHEN ZERO
WHEN +100
WHEN -811
CONTINUE
WHEN OTHER
PERFORM 90000-HANDLE-ABNORMAL-SQL
END-EVALUATE.




CHECK-FOR-NORMAL-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL) OR
EIBRESP = DFHRESP(EOC)
NEXT SENTENCE
ELSE








PERFORM 9900-HANDLE-ABNORMAL-RESP.

CHECK-FOR-NOTFND-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL) OR
EIBRESP = DFHRESP(NOTFND) OR
EIBRESP = DFHRESP(ENDFILE)
NEXT SENTENCE
ELSE







PERFORM 9900-HANDLE-ABNORMAL-RESP.

CHECK-FOR-DUPREC-EIBRESP.
IF EIBRESP = DFHRESP(NORMAL) OR
EIBRESP = DFHRESP(DUPREC)
NEXT SENTENCE
ELSE







PERFORM 9900-HANDLE-ABNORMAL-RESP.


9900-HANDLE-ABNORMAL-RESP.



MOVE 'E'           TO CXUTS0ML-SEVERITY-ID
CXUTS0ML-LOG-ID
MOVE 'C'           TO CXUTS0ML-FUNCTION-ID
MOVE 'Y'           TO CXUTS0ML-RETURN-SW
MOVE EIBRESP       TO WRK-EIBRESP
MOVE WRK-EIBRESP   TO CXUTS0ML-MESSAGE-ID
MOVE SPACES        TO CXUTS0ML-PRODUCT-AREA
PERFORM Z999-LINK-TO-CXUTS0ML.

EVALUATE TRUE
WHEN THIS-BE-AN-ATM-XTN
WHEN THIS-BE-AN-ATM-CANCEL
MOVE 'FILE PROBLEM'        TO TSXCO0AT-APP-RETURN-MSG
MOVE 11                    TO TSXCO0AT-RETURN-CODE
MOVE TSXCO0AT-COMM-AREA    TO WS-TSXCO0AT-COMMAREA
MOVE WS-TSXCO0AT-COMM-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA        TO DFHCOMMAREA
WHEN EIBTRNID = 'ITP2' OR 'FMED' OR 'PSA1' OR 'PSD1'
WHEN EIBTRNID (1:2) = 'RS' OR 'WS'
MOVE 99999           TO POS-ERROR-NUMBER
MOVE 'SYSTEM IS UNAVAILABLE, REQUEST NOT PROCESSED'
TO POS-MESSAGE
MOVE POS-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
END-EVALUATE


PERFORM EXEC-CICS-RETURN.
GOBACK.


Z999-LINK-TO-CXUTS0ML.

MOVE DFHEIBLK      TO CXUTS0ML-DFHEIBLK
MOVE 'US'          TO CXUTS0ML-PROGRAM-NAME
MOVE 'Y'           TO CXUTS0ML-RETURN-SW.
IF EIBTRNID = 'FP' AND CXUTS0ML-LOG-ID = 'E'
MOVE 'Y'        TO CXUTS0ML-MAP-FLAG
ELSE
MOVE 'N'        TO CXUTS0ML-MAP-FLAG
END-IF
CALL 'CXUTS0ML' USING DFHEIBLK
DFHCOMMAREA
CXUTS0ML-DFHEIBLK
CXUTS0ML-PROGRAM-NAME
CXUTS0ML-PARAGRAPH
CXUTS0ML-COMMAND
CXUTS0ML-SEVERITY-ID
CXUTS0ML-MESSAGE-ID
CXUTS0ML-FUNCTION-ID
CXUTS0ML-MAP-FLAG
CXUTS0ML-LOG-ID
CXUTS0ML-RETURN-SW
CXUTS0ML-PRODUCT-AREA
SQLCA
END-CALL.


90000-HANDLE-ABNORMAL-SQL.

MOVE 'E'                 TO CXUTS0ML-SEVERITY-ID.
MOVE SQLCODE             TO WS-SQLCODE.
MOVE WS-SQLCODE          TO CXUTS0ML-MESSAGE-ID.
MOVE 'D'                 TO CXUTS0ML-FUNCTION-ID.
MOVE 'E'                 TO CXUTS0ML-LOG-ID.
MOVE WS-FMT-SQL-AREA     TO CXUTS0ML-PRODUCT-AREA.
PERFORM Z999-LINK-TO-CXUTS0ML.


EVALUATE TRUE
WHEN THIS-BE-AN-ATM-XTN
WHEN THIS-BE-AN-ATM-CANCEL
MOVE 'FILE PROBLEM'        TO TSXCO0AT-APP-RETURN-MSG
MOVE 11                    TO TSXCO0AT-RETURN-CODE
MOVE TSXCO0AT-COMM-AREA    TO WS-TSXCO0AT-COMMAREA
MOVE WS-TSXCO0AT-COMM-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA        TO DFHCOMMAREA
WHEN EIBTRNID = 'ITP2' OR 'FMED' OR 'PSA1' OR 'PSD1'
WHEN EIBTRNID (1:2) = 'RS' OR 'WS'
MOVE 99999           TO POS-ERROR-NUMBER
MOVE 'SYSTEM IS UNAVAILABLE, REQUEST NOT PROCESSED'
TO POS-MESSAGE
MOVE POS-OUTPUT-AREA TO WS-DFHCOMMAREA
MOVE WS-DFHCOMMAREA  TO DFHCOMMAREA
END-EVALUATE


PERFORM EXEC-CICS-RETURN.
GOBACK.


LOG-TO-CXML.

MOVE EIBDATE                 TO WS-CXML-DATE.
MOVE EIBTIME                 TO WS-CXML-TIME.


MOVE 'I'           TO CXUTS0ML-SEVERITY-ID
CXUTS0ML-FUNCTION-ID
MOVE 'M'           TO CXUTS0ML-LOG-ID
MOVE 'Y'           TO CXUTS0ML-RETURN-SW
MOVE ZERO          TO CXUTS0ML-MESSAGE-ID
MOVE WS-CXML-DATA  TO CXUTS0ML-PRODUCT-AREA
PERFORM Z999-LINK-TO-CXUTS0ML.
